Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ARRAY
    COMA
    CORDER
    CORIZQ
    FUNCTION
    INTERFACE
    NULL

Grammar

Rule 0     S' -> instrucciones
Rule 1     instrucciones -> instrucciones instruccion
Rule 2     instrucciones -> instruccion
Rule 3     instruccion -> instruccion2 PTOYCOMA
Rule 4     instruccion -> instruccion2
Rule 5     instruccion3 -> instruccion3 instruccion2
Rule 6     instruccion3 -> instruccion3 instruccion2 PTOYCOMA
Rule 7     instruccion3 -> instruccion2
Rule 8     instruccion3 -> instruccion2 PTOYCOMA
Rule 9     bloque -> LLAIZQ instruccion3 LLADER
Rule 10    bloque -> LLAIZQ LLADER
Rule 11    instruccion2 -> declaracion
Rule 12    instruccion2 -> asignacion
Rule 13    instruccion2 -> impresion
Rule 14    instruccion2 -> return
Rule 15    instruccion2 -> break
Rule 16    instruccion2 -> continue
Rule 17    instruccion2 -> condicional_if
Rule 18    instruccion2 -> ciclo_while
Rule 19    instruccion2 -> ciclo_for
Rule 20    instruccion2 -> ciclo_for_of
Rule 21    declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion
Rule 22    declaracion -> LET ID IGUAL expresion
Rule 23    declaracion -> LET ID DOSPUNTOS tipo
Rule 24    declaracion -> LET ID
Rule 25    asignacion -> ID IGUAL expresion
Rule 26    impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER
Rule 27    expresion -> expresion MAS expresion
Rule 28    expresion -> expresion MENOS expresion
Rule 29    expresion -> expresion POR expresion
Rule 30    expresion -> expresion DIVIDIDO expresion
Rule 31    expresion -> expresion POTENCIA expresion
Rule 32    expresion -> expresion MODULO expresion
Rule 33    expresion -> MENOS expresion
Rule 34    expresion -> PARIZQ expresion PARDER
Rule 35    expresion -> expresion MAYOR expresion
Rule 36    expresion -> expresion MENOR expresion
Rule 37    expresion -> expresion MAYORIGUAL expresion
Rule 38    expresion -> expresion MENORIGUAL expresion
Rule 39    expresion -> expresion IGUALACION expresion
Rule 40    expresion -> expresion DISTINTO expresion
Rule 41    expresion -> expresion AND expresion
Rule 42    expresion -> expresion OR expresion
Rule 43    expresion -> NOT expresion
Rule 44    expresion -> ENTERO
Rule 45    expresion -> DECIMAL
Rule 46    expresion -> CADENA
Rule 47    expresion -> ID
Rule 48    expresion -> TRUE
Rule 49    expresion -> FALSE
Rule 50    expresion -> ID INCREMENTO
Rule 51    expresion -> ID DECREMENTO
Rule 52    expresion -> INCREMENTO ID
Rule 53    expresion -> DECREMENTO ID
Rule 54    expresion -> aproximacion
Rule 55    expresion -> exponencial
Rule 56    expresion -> to_string
Rule 57    expresion -> to_minusculas
Rule 58    expresion -> to_mayusculas
Rule 59    expresion -> separador
Rule 60    expresion -> concatenacion
Rule 61    expresion -> casteo_string
Rule 62    aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER
Rule 63    exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
Rule 64    to_string -> expresion PUNTO TOSTRING PARIZQ PARDER
Rule 65    to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER
Rule 66    to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER
Rule 67    separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER
Rule 68    concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER
Rule 69    casteo_string -> CAST_STRING PARIZQ expresion PARDER
Rule 70    tipo -> NUMBER
Rule 71    tipo -> STRING
Rule 72    tipo -> BOOLEAN
Rule 73    tipo -> ANY
Rule 74    return -> RETURN
Rule 75    return -> RETURN expresion
Rule 76    continue -> CONTINUE
Rule 77    break -> BREAK
Rule 78    condicional_if -> IF PARIZQ expresion PARDER bloque
Rule 79    condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque
Rule 80    condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif
Rule 81    condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque
Rule 82    lista_elif -> lista_elif elif
Rule 83    lista_elif -> elif
Rule 84    elif -> ELSE IF PARIZQ expresion PARDER bloque
Rule 85    ciclo_while -> WHILE PARIZQ expresion PARDER bloque
Rule 86    ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
Rule 87    ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
Rule 88    ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
Rule 89    ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
Rule 90    ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque
Rule 91    instruccion -> error PTOYCOMA

Terminals, with rules where they appear

AND                  : 41
ANY                  : 73
ARRAY                : 
BOOLEAN              : 72
BREAK                : 77
CADENA               : 46
CAST_STRING          : 69
COMA                 : 
CONCAT               : 68
CONSOLE              : 26
CONTINUE             : 76
CORDER               : 
CORIZQ               : 
DECIMAL              : 45
DECREMENTO           : 51 53
DISTINTO             : 40
DIVIDIDO             : 30
DOSPUNTOS            : 21 23
ELSE                 : 79 81 84
ENTERO               : 44
FALSE                : 49
FOR                  : 86 87 88 89 90
FUNCTION             : 
ID                   : 21 22 23 24 25 47 50 51 52 53 90
IF                   : 78 79 80 81 84
IGUAL                : 21 22 25
IGUALACION           : 39
INCREMENTO           : 50 52
INTERFACE            : 
LET                  : 21 22 23 24 90
LLADER               : 9 10
LLAIZQ               : 9 10
LOG                  : 26
MAS                  : 27
MAYOR                : 35
MAYORIGUAL           : 37
MENOR                : 36
MENORIGUAL           : 38
MENOS                : 28 33
MODULO               : 32
NOT                  : 43
NULL                 : 
NUMBER               : 70
OF                   : 90
OR                   : 42
PARDER               : 26 34 62 63 64 65 66 67 68 69 78 79 80 81 84 85 86 87 88 89 90
PARIZQ               : 26 34 62 63 64 65 66 67 68 69 78 79 80 81 84 85 86 87 88 89 90
POR                  : 29
POTENCIA             : 31
PTOYCOMA             : 3 6 8 86 86 87 87 88 88 89 89 91
PUNTO                : 26 62 63 64 65 66 67 68
RETURN               : 74 75
SPLIT                : 67
STRING               : 71
TOEXPONENTIAL        : 63
TOFIXED              : 62
TOLOWERCASE          : 65
TOSTRING             : 64
TOUPPERCASE          : 66
TRUE                 : 48
WHILE                : 85
error                : 91

Nonterminals, with rules where they appear

aproximacion         : 54
asignacion           : 12 86 87 87 89
bloque               : 78 79 79 80 81 81 84 85 86 87 88 89 90
break                : 15
casteo_string        : 61
ciclo_for            : 19
ciclo_for_of         : 20
ciclo_while          : 18
concatenacion        : 60
condicional_if       : 17
continue             : 16
declaracion          : 11 86 88
elif                 : 82 83
exponencial          : 55
expresion            : 21 22 25 26 27 27 28 28 29 29 30 30 31 31 32 32 33 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 62 62 63 63 64 65 66 67 67 68 68 69 75 78 79 80 81 84 85 86 87 88 88 89 89 90
impresion            : 13
instruccion          : 1 2
instruccion2         : 3 4 5 6 7 8
instruccion3         : 5 6 9
instrucciones        : 1 0
lista_elif           : 80 81 82
return               : 14
separador            : 59
tipo                 : 21 23
to_mayusculas        : 58
to_minusculas        : 57
to_string            : 56

Parsing method: LALR

state 0

    (0) S' -> . instrucciones
    (1) instrucciones -> . instrucciones instruccion
    (2) instrucciones -> . instruccion
    (3) instruccion -> . instruccion2 PTOYCOMA
    (4) instruccion -> . instruccion2
    (91) instruccion -> . error PTOYCOMA
    (11) instruccion2 -> . declaracion
    (12) instruccion2 -> . asignacion
    (13) instruccion2 -> . impresion
    (14) instruccion2 -> . return
    (15) instruccion2 -> . break
    (16) instruccion2 -> . continue
    (17) instruccion2 -> . condicional_if
    (18) instruccion2 -> . ciclo_while
    (19) instruccion2 -> . ciclo_for
    (20) instruccion2 -> . ciclo_for_of
    (21) declaracion -> . LET ID DOSPUNTOS tipo IGUAL expresion
    (22) declaracion -> . LET ID IGUAL expresion
    (23) declaracion -> . LET ID DOSPUNTOS tipo
    (24) declaracion -> . LET ID
    (25) asignacion -> . ID IGUAL expresion
    (26) impresion -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER
    (74) return -> . RETURN
    (75) return -> . RETURN expresion
    (77) break -> . BREAK
    (76) continue -> . CONTINUE
    (78) condicional_if -> . IF PARIZQ expresion PARDER bloque
    (79) condicional_if -> . IF PARIZQ expresion PARDER bloque ELSE bloque
    (80) condicional_if -> . IF PARIZQ expresion PARDER bloque lista_elif
    (81) condicional_if -> . IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque
    (85) ciclo_while -> . WHILE PARIZQ expresion PARDER bloque
    (86) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (87) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (88) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (89) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (90) ciclo_for_of -> . FOR PARIZQ LET ID OF expresion PARDER bloque

    error           shift and go to state 4
    LET             shift and go to state 15
    ID              shift and go to state 16
    CONSOLE         shift and go to state 17
    RETURN          shift and go to state 18
    BREAK           shift and go to state 19
    CONTINUE        shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    FOR             shift and go to state 23

    instrucciones                  shift and go to state 1
    instruccion                    shift and go to state 2
    instruccion2                   shift and go to state 3
    declaracion                    shift and go to state 5
    asignacion                     shift and go to state 6
    impresion                      shift and go to state 7
    return                         shift and go to state 8
    break                          shift and go to state 9
    continue                       shift and go to state 10
    condicional_if                 shift and go to state 11
    ciclo_while                    shift and go to state 12
    ciclo_for                      shift and go to state 13
    ciclo_for_of                   shift and go to state 14

state 1

    (0) S' -> instrucciones .
    (1) instrucciones -> instrucciones . instruccion
    (3) instruccion -> . instruccion2 PTOYCOMA
    (4) instruccion -> . instruccion2
    (91) instruccion -> . error PTOYCOMA
    (11) instruccion2 -> . declaracion
    (12) instruccion2 -> . asignacion
    (13) instruccion2 -> . impresion
    (14) instruccion2 -> . return
    (15) instruccion2 -> . break
    (16) instruccion2 -> . continue
    (17) instruccion2 -> . condicional_if
    (18) instruccion2 -> . ciclo_while
    (19) instruccion2 -> . ciclo_for
    (20) instruccion2 -> . ciclo_for_of
    (21) declaracion -> . LET ID DOSPUNTOS tipo IGUAL expresion
    (22) declaracion -> . LET ID IGUAL expresion
    (23) declaracion -> . LET ID DOSPUNTOS tipo
    (24) declaracion -> . LET ID
    (25) asignacion -> . ID IGUAL expresion
    (26) impresion -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER
    (74) return -> . RETURN
    (75) return -> . RETURN expresion
    (77) break -> . BREAK
    (76) continue -> . CONTINUE
    (78) condicional_if -> . IF PARIZQ expresion PARDER bloque
    (79) condicional_if -> . IF PARIZQ expresion PARDER bloque ELSE bloque
    (80) condicional_if -> . IF PARIZQ expresion PARDER bloque lista_elif
    (81) condicional_if -> . IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque
    (85) ciclo_while -> . WHILE PARIZQ expresion PARDER bloque
    (86) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (87) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (88) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (89) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (90) ciclo_for_of -> . FOR PARIZQ LET ID OF expresion PARDER bloque

    error           shift and go to state 4
    LET             shift and go to state 15
    ID              shift and go to state 16
    CONSOLE         shift and go to state 17
    RETURN          shift and go to state 18
    BREAK           shift and go to state 19
    CONTINUE        shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    FOR             shift and go to state 23

    instruccion                    shift and go to state 24
    instruccion2                   shift and go to state 3
    declaracion                    shift and go to state 5
    asignacion                     shift and go to state 6
    impresion                      shift and go to state 7
    return                         shift and go to state 8
    break                          shift and go to state 9
    continue                       shift and go to state 10
    condicional_if                 shift and go to state 11
    ciclo_while                    shift and go to state 12
    ciclo_for                      shift and go to state 13
    ciclo_for_of                   shift and go to state 14

state 2

    (2) instrucciones -> instruccion .

    error           reduce using rule 2 (instrucciones -> instruccion .)
    LET             reduce using rule 2 (instrucciones -> instruccion .)
    ID              reduce using rule 2 (instrucciones -> instruccion .)
    CONSOLE         reduce using rule 2 (instrucciones -> instruccion .)
    RETURN          reduce using rule 2 (instrucciones -> instruccion .)
    BREAK           reduce using rule 2 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 2 (instrucciones -> instruccion .)
    IF              reduce using rule 2 (instrucciones -> instruccion .)
    WHILE           reduce using rule 2 (instrucciones -> instruccion .)
    FOR             reduce using rule 2 (instrucciones -> instruccion .)
    $end            reduce using rule 2 (instrucciones -> instruccion .)


state 3

    (3) instruccion -> instruccion2 . PTOYCOMA
    (4) instruccion -> instruccion2 .

    PTOYCOMA        shift and go to state 25
    error           reduce using rule 4 (instruccion -> instruccion2 .)
    LET             reduce using rule 4 (instruccion -> instruccion2 .)
    ID              reduce using rule 4 (instruccion -> instruccion2 .)
    CONSOLE         reduce using rule 4 (instruccion -> instruccion2 .)
    RETURN          reduce using rule 4 (instruccion -> instruccion2 .)
    BREAK           reduce using rule 4 (instruccion -> instruccion2 .)
    CONTINUE        reduce using rule 4 (instruccion -> instruccion2 .)
    IF              reduce using rule 4 (instruccion -> instruccion2 .)
    WHILE           reduce using rule 4 (instruccion -> instruccion2 .)
    FOR             reduce using rule 4 (instruccion -> instruccion2 .)
    $end            reduce using rule 4 (instruccion -> instruccion2 .)


state 4

    (91) instruccion -> error . PTOYCOMA

    PTOYCOMA        shift and go to state 26


state 5

    (11) instruccion2 -> declaracion .

    PTOYCOMA        reduce using rule 11 (instruccion2 -> declaracion .)
    error           reduce using rule 11 (instruccion2 -> declaracion .)
    LET             reduce using rule 11 (instruccion2 -> declaracion .)
    ID              reduce using rule 11 (instruccion2 -> declaracion .)
    CONSOLE         reduce using rule 11 (instruccion2 -> declaracion .)
    RETURN          reduce using rule 11 (instruccion2 -> declaracion .)
    BREAK           reduce using rule 11 (instruccion2 -> declaracion .)
    CONTINUE        reduce using rule 11 (instruccion2 -> declaracion .)
    IF              reduce using rule 11 (instruccion2 -> declaracion .)
    WHILE           reduce using rule 11 (instruccion2 -> declaracion .)
    FOR             reduce using rule 11 (instruccion2 -> declaracion .)
    $end            reduce using rule 11 (instruccion2 -> declaracion .)
    LLADER          reduce using rule 11 (instruccion2 -> declaracion .)


state 6

    (12) instruccion2 -> asignacion .

    PTOYCOMA        reduce using rule 12 (instruccion2 -> asignacion .)
    error           reduce using rule 12 (instruccion2 -> asignacion .)
    LET             reduce using rule 12 (instruccion2 -> asignacion .)
    ID              reduce using rule 12 (instruccion2 -> asignacion .)
    CONSOLE         reduce using rule 12 (instruccion2 -> asignacion .)
    RETURN          reduce using rule 12 (instruccion2 -> asignacion .)
    BREAK           reduce using rule 12 (instruccion2 -> asignacion .)
    CONTINUE        reduce using rule 12 (instruccion2 -> asignacion .)
    IF              reduce using rule 12 (instruccion2 -> asignacion .)
    WHILE           reduce using rule 12 (instruccion2 -> asignacion .)
    FOR             reduce using rule 12 (instruccion2 -> asignacion .)
    $end            reduce using rule 12 (instruccion2 -> asignacion .)
    LLADER          reduce using rule 12 (instruccion2 -> asignacion .)


state 7

    (13) instruccion2 -> impresion .

    PTOYCOMA        reduce using rule 13 (instruccion2 -> impresion .)
    error           reduce using rule 13 (instruccion2 -> impresion .)
    LET             reduce using rule 13 (instruccion2 -> impresion .)
    ID              reduce using rule 13 (instruccion2 -> impresion .)
    CONSOLE         reduce using rule 13 (instruccion2 -> impresion .)
    RETURN          reduce using rule 13 (instruccion2 -> impresion .)
    BREAK           reduce using rule 13 (instruccion2 -> impresion .)
    CONTINUE        reduce using rule 13 (instruccion2 -> impresion .)
    IF              reduce using rule 13 (instruccion2 -> impresion .)
    WHILE           reduce using rule 13 (instruccion2 -> impresion .)
    FOR             reduce using rule 13 (instruccion2 -> impresion .)
    $end            reduce using rule 13 (instruccion2 -> impresion .)
    LLADER          reduce using rule 13 (instruccion2 -> impresion .)


state 8

    (14) instruccion2 -> return .

    PTOYCOMA        reduce using rule 14 (instruccion2 -> return .)
    error           reduce using rule 14 (instruccion2 -> return .)
    LET             reduce using rule 14 (instruccion2 -> return .)
    ID              reduce using rule 14 (instruccion2 -> return .)
    CONSOLE         reduce using rule 14 (instruccion2 -> return .)
    RETURN          reduce using rule 14 (instruccion2 -> return .)
    BREAK           reduce using rule 14 (instruccion2 -> return .)
    CONTINUE        reduce using rule 14 (instruccion2 -> return .)
    IF              reduce using rule 14 (instruccion2 -> return .)
    WHILE           reduce using rule 14 (instruccion2 -> return .)
    FOR             reduce using rule 14 (instruccion2 -> return .)
    $end            reduce using rule 14 (instruccion2 -> return .)
    LLADER          reduce using rule 14 (instruccion2 -> return .)


state 9

    (15) instruccion2 -> break .

    PTOYCOMA        reduce using rule 15 (instruccion2 -> break .)
    error           reduce using rule 15 (instruccion2 -> break .)
    LET             reduce using rule 15 (instruccion2 -> break .)
    ID              reduce using rule 15 (instruccion2 -> break .)
    CONSOLE         reduce using rule 15 (instruccion2 -> break .)
    RETURN          reduce using rule 15 (instruccion2 -> break .)
    BREAK           reduce using rule 15 (instruccion2 -> break .)
    CONTINUE        reduce using rule 15 (instruccion2 -> break .)
    IF              reduce using rule 15 (instruccion2 -> break .)
    WHILE           reduce using rule 15 (instruccion2 -> break .)
    FOR             reduce using rule 15 (instruccion2 -> break .)
    $end            reduce using rule 15 (instruccion2 -> break .)
    LLADER          reduce using rule 15 (instruccion2 -> break .)


state 10

    (16) instruccion2 -> continue .

    PTOYCOMA        reduce using rule 16 (instruccion2 -> continue .)
    error           reduce using rule 16 (instruccion2 -> continue .)
    LET             reduce using rule 16 (instruccion2 -> continue .)
    ID              reduce using rule 16 (instruccion2 -> continue .)
    CONSOLE         reduce using rule 16 (instruccion2 -> continue .)
    RETURN          reduce using rule 16 (instruccion2 -> continue .)
    BREAK           reduce using rule 16 (instruccion2 -> continue .)
    CONTINUE        reduce using rule 16 (instruccion2 -> continue .)
    IF              reduce using rule 16 (instruccion2 -> continue .)
    WHILE           reduce using rule 16 (instruccion2 -> continue .)
    FOR             reduce using rule 16 (instruccion2 -> continue .)
    $end            reduce using rule 16 (instruccion2 -> continue .)
    LLADER          reduce using rule 16 (instruccion2 -> continue .)


state 11

    (17) instruccion2 -> condicional_if .

    PTOYCOMA        reduce using rule 17 (instruccion2 -> condicional_if .)
    error           reduce using rule 17 (instruccion2 -> condicional_if .)
    LET             reduce using rule 17 (instruccion2 -> condicional_if .)
    ID              reduce using rule 17 (instruccion2 -> condicional_if .)
    CONSOLE         reduce using rule 17 (instruccion2 -> condicional_if .)
    RETURN          reduce using rule 17 (instruccion2 -> condicional_if .)
    BREAK           reduce using rule 17 (instruccion2 -> condicional_if .)
    CONTINUE        reduce using rule 17 (instruccion2 -> condicional_if .)
    IF              reduce using rule 17 (instruccion2 -> condicional_if .)
    WHILE           reduce using rule 17 (instruccion2 -> condicional_if .)
    FOR             reduce using rule 17 (instruccion2 -> condicional_if .)
    $end            reduce using rule 17 (instruccion2 -> condicional_if .)
    LLADER          reduce using rule 17 (instruccion2 -> condicional_if .)


state 12

    (18) instruccion2 -> ciclo_while .

    PTOYCOMA        reduce using rule 18 (instruccion2 -> ciclo_while .)
    error           reduce using rule 18 (instruccion2 -> ciclo_while .)
    LET             reduce using rule 18 (instruccion2 -> ciclo_while .)
    ID              reduce using rule 18 (instruccion2 -> ciclo_while .)
    CONSOLE         reduce using rule 18 (instruccion2 -> ciclo_while .)
    RETURN          reduce using rule 18 (instruccion2 -> ciclo_while .)
    BREAK           reduce using rule 18 (instruccion2 -> ciclo_while .)
    CONTINUE        reduce using rule 18 (instruccion2 -> ciclo_while .)
    IF              reduce using rule 18 (instruccion2 -> ciclo_while .)
    WHILE           reduce using rule 18 (instruccion2 -> ciclo_while .)
    FOR             reduce using rule 18 (instruccion2 -> ciclo_while .)
    $end            reduce using rule 18 (instruccion2 -> ciclo_while .)
    LLADER          reduce using rule 18 (instruccion2 -> ciclo_while .)


state 13

    (19) instruccion2 -> ciclo_for .

    PTOYCOMA        reduce using rule 19 (instruccion2 -> ciclo_for .)
    error           reduce using rule 19 (instruccion2 -> ciclo_for .)
    LET             reduce using rule 19 (instruccion2 -> ciclo_for .)
    ID              reduce using rule 19 (instruccion2 -> ciclo_for .)
    CONSOLE         reduce using rule 19 (instruccion2 -> ciclo_for .)
    RETURN          reduce using rule 19 (instruccion2 -> ciclo_for .)
    BREAK           reduce using rule 19 (instruccion2 -> ciclo_for .)
    CONTINUE        reduce using rule 19 (instruccion2 -> ciclo_for .)
    IF              reduce using rule 19 (instruccion2 -> ciclo_for .)
    WHILE           reduce using rule 19 (instruccion2 -> ciclo_for .)
    FOR             reduce using rule 19 (instruccion2 -> ciclo_for .)
    $end            reduce using rule 19 (instruccion2 -> ciclo_for .)
    LLADER          reduce using rule 19 (instruccion2 -> ciclo_for .)


state 14

    (20) instruccion2 -> ciclo_for_of .

    PTOYCOMA        reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    error           reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    LET             reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    ID              reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    CONSOLE         reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    RETURN          reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    BREAK           reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    CONTINUE        reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    IF              reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    WHILE           reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    FOR             reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    $end            reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    LLADER          reduce using rule 20 (instruccion2 -> ciclo_for_of .)


state 15

    (21) declaracion -> LET . ID DOSPUNTOS tipo IGUAL expresion
    (22) declaracion -> LET . ID IGUAL expresion
    (23) declaracion -> LET . ID DOSPUNTOS tipo
    (24) declaracion -> LET . ID

    ID              shift and go to state 27


state 16

    (25) asignacion -> ID . IGUAL expresion

    IGUAL           shift and go to state 28


state 17

    (26) impresion -> CONSOLE . PUNTO LOG PARIZQ expresion PARDER

    PUNTO           shift and go to state 29


state 18

    (74) return -> RETURN .
    (75) return -> RETURN . expresion
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion POTENCIA expresion
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . MENOS expresion
    (34) expresion -> . PARIZQ expresion PARDER
    (35) expresion -> . expresion MAYOR expresion
    (36) expresion -> . expresion MENOR expresion
    (37) expresion -> . expresion MAYORIGUAL expresion
    (38) expresion -> . expresion MENORIGUAL expresion
    (39) expresion -> . expresion IGUALACION expresion
    (40) expresion -> . expresion DISTINTO expresion
    (41) expresion -> . expresion AND expresion
    (42) expresion -> . expresion OR expresion
    (43) expresion -> . NOT expresion
    (44) expresion -> . ENTERO
    (45) expresion -> . DECIMAL
    (46) expresion -> . CADENA
    (47) expresion -> . ID
    (48) expresion -> . TRUE
    (49) expresion -> . FALSE
    (50) expresion -> . ID INCREMENTO
    (51) expresion -> . ID DECREMENTO
    (52) expresion -> . INCREMENTO ID
    (53) expresion -> . DECREMENTO ID
    (54) expresion -> . aproximacion
    (55) expresion -> . exponencial
    (56) expresion -> . to_string
    (57) expresion -> . to_minusculas
    (58) expresion -> . to_mayusculas
    (59) expresion -> . separador
    (60) expresion -> . concatenacion
    (61) expresion -> . casteo_string
    (62) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (69) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

  ! shift/reduce conflict for ID resolved as shift
    PTOYCOMA        reduce using rule 74 (return -> RETURN .)
    error           reduce using rule 74 (return -> RETURN .)
    LET             reduce using rule 74 (return -> RETURN .)
    CONSOLE         reduce using rule 74 (return -> RETURN .)
    RETURN          reduce using rule 74 (return -> RETURN .)
    BREAK           reduce using rule 74 (return -> RETURN .)
    CONTINUE        reduce using rule 74 (return -> RETURN .)
    IF              reduce using rule 74 (return -> RETURN .)
    WHILE           reduce using rule 74 (return -> RETURN .)
    FOR             reduce using rule 74 (return -> RETURN .)
    $end            reduce using rule 74 (return -> RETURN .)
    LLADER          reduce using rule 74 (return -> RETURN .)
    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41
    CAST_STRING     shift and go to state 50

  ! ID              [ reduce using rule 74 (return -> RETURN .) ]

    expresion                      shift and go to state 30
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48
    casteo_string                  shift and go to state 49

state 19

    (77) break -> BREAK .

    PTOYCOMA        reduce using rule 77 (break -> BREAK .)
    error           reduce using rule 77 (break -> BREAK .)
    LET             reduce using rule 77 (break -> BREAK .)
    ID              reduce using rule 77 (break -> BREAK .)
    CONSOLE         reduce using rule 77 (break -> BREAK .)
    RETURN          reduce using rule 77 (break -> BREAK .)
    BREAK           reduce using rule 77 (break -> BREAK .)
    CONTINUE        reduce using rule 77 (break -> BREAK .)
    IF              reduce using rule 77 (break -> BREAK .)
    WHILE           reduce using rule 77 (break -> BREAK .)
    FOR             reduce using rule 77 (break -> BREAK .)
    $end            reduce using rule 77 (break -> BREAK .)
    LLADER          reduce using rule 77 (break -> BREAK .)


state 20

    (76) continue -> CONTINUE .

    PTOYCOMA        reduce using rule 76 (continue -> CONTINUE .)
    error           reduce using rule 76 (continue -> CONTINUE .)
    LET             reduce using rule 76 (continue -> CONTINUE .)
    ID              reduce using rule 76 (continue -> CONTINUE .)
    CONSOLE         reduce using rule 76 (continue -> CONTINUE .)
    RETURN          reduce using rule 76 (continue -> CONTINUE .)
    BREAK           reduce using rule 76 (continue -> CONTINUE .)
    CONTINUE        reduce using rule 76 (continue -> CONTINUE .)
    IF              reduce using rule 76 (continue -> CONTINUE .)
    WHILE           reduce using rule 76 (continue -> CONTINUE .)
    FOR             reduce using rule 76 (continue -> CONTINUE .)
    $end            reduce using rule 76 (continue -> CONTINUE .)
    LLADER          reduce using rule 76 (continue -> CONTINUE .)


state 21

    (78) condicional_if -> IF . PARIZQ expresion PARDER bloque
    (79) condicional_if -> IF . PARIZQ expresion PARDER bloque ELSE bloque
    (80) condicional_if -> IF . PARIZQ expresion PARDER bloque lista_elif
    (81) condicional_if -> IF . PARIZQ expresion PARDER bloque lista_elif ELSE bloque

    PARIZQ          shift and go to state 51


state 22

    (85) ciclo_while -> WHILE . PARIZQ expresion PARDER bloque

    PARIZQ          shift and go to state 52


state 23

    (86) ciclo_for -> FOR . PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (87) ciclo_for -> FOR . PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (88) ciclo_for -> FOR . PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (89) ciclo_for -> FOR . PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (90) ciclo_for_of -> FOR . PARIZQ LET ID OF expresion PARDER bloque

    PARIZQ          shift and go to state 53


state 24

    (1) instrucciones -> instrucciones instruccion .

    error           reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    LET             reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    CONSOLE         reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    RETURN          reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    FOR             reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 1 (instrucciones -> instrucciones instruccion .)


state 25

    (3) instruccion -> instruccion2 PTOYCOMA .

    error           reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    LET             reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    ID              reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    CONSOLE         reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    RETURN          reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    BREAK           reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    CONTINUE        reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    IF              reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    WHILE           reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    FOR             reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    $end            reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)


state 26

    (91) instruccion -> error PTOYCOMA .

    error           reduce using rule 91 (instruccion -> error PTOYCOMA .)
    LET             reduce using rule 91 (instruccion -> error PTOYCOMA .)
    ID              reduce using rule 91 (instruccion -> error PTOYCOMA .)
    CONSOLE         reduce using rule 91 (instruccion -> error PTOYCOMA .)
    RETURN          reduce using rule 91 (instruccion -> error PTOYCOMA .)
    BREAK           reduce using rule 91 (instruccion -> error PTOYCOMA .)
    CONTINUE        reduce using rule 91 (instruccion -> error PTOYCOMA .)
    IF              reduce using rule 91 (instruccion -> error PTOYCOMA .)
    WHILE           reduce using rule 91 (instruccion -> error PTOYCOMA .)
    FOR             reduce using rule 91 (instruccion -> error PTOYCOMA .)
    $end            reduce using rule 91 (instruccion -> error PTOYCOMA .)


state 27

    (21) declaracion -> LET ID . DOSPUNTOS tipo IGUAL expresion
    (22) declaracion -> LET ID . IGUAL expresion
    (23) declaracion -> LET ID . DOSPUNTOS tipo
    (24) declaracion -> LET ID .

    DOSPUNTOS       shift and go to state 54
    IGUAL           shift and go to state 55
    PTOYCOMA        reduce using rule 24 (declaracion -> LET ID .)
    error           reduce using rule 24 (declaracion -> LET ID .)
    LET             reduce using rule 24 (declaracion -> LET ID .)
    ID              reduce using rule 24 (declaracion -> LET ID .)
    CONSOLE         reduce using rule 24 (declaracion -> LET ID .)
    RETURN          reduce using rule 24 (declaracion -> LET ID .)
    BREAK           reduce using rule 24 (declaracion -> LET ID .)
    CONTINUE        reduce using rule 24 (declaracion -> LET ID .)
    IF              reduce using rule 24 (declaracion -> LET ID .)
    WHILE           reduce using rule 24 (declaracion -> LET ID .)
    FOR             reduce using rule 24 (declaracion -> LET ID .)
    $end            reduce using rule 24 (declaracion -> LET ID .)
    LLADER          reduce using rule 24 (declaracion -> LET ID .)


state 28

    (25) asignacion -> ID IGUAL . expresion
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion POTENCIA expresion
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . MENOS expresion
    (34) expresion -> . PARIZQ expresion PARDER
    (35) expresion -> . expresion MAYOR expresion
    (36) expresion -> . expresion MENOR expresion
    (37) expresion -> . expresion MAYORIGUAL expresion
    (38) expresion -> . expresion MENORIGUAL expresion
    (39) expresion -> . expresion IGUALACION expresion
    (40) expresion -> . expresion DISTINTO expresion
    (41) expresion -> . expresion AND expresion
    (42) expresion -> . expresion OR expresion
    (43) expresion -> . NOT expresion
    (44) expresion -> . ENTERO
    (45) expresion -> . DECIMAL
    (46) expresion -> . CADENA
    (47) expresion -> . ID
    (48) expresion -> . TRUE
    (49) expresion -> . FALSE
    (50) expresion -> . ID INCREMENTO
    (51) expresion -> . ID DECREMENTO
    (52) expresion -> . INCREMENTO ID
    (53) expresion -> . DECREMENTO ID
    (54) expresion -> . aproximacion
    (55) expresion -> . exponencial
    (56) expresion -> . to_string
    (57) expresion -> . to_minusculas
    (58) expresion -> . to_mayusculas
    (59) expresion -> . separador
    (60) expresion -> . concatenacion
    (61) expresion -> . casteo_string
    (62) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (69) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41
    CAST_STRING     shift and go to state 50

    expresion                      shift and go to state 56
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48
    casteo_string                  shift and go to state 49

state 29

    (26) impresion -> CONSOLE PUNTO . LOG PARIZQ expresion PARDER

    LOG             shift and go to state 57


state 30

    (75) return -> RETURN expresion .
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (35) expresion -> expresion . MAYOR expresion
    (36) expresion -> expresion . MENOR expresion
    (37) expresion -> expresion . MAYORIGUAL expresion
    (38) expresion -> expresion . MENORIGUAL expresion
    (39) expresion -> expresion . IGUALACION expresion
    (40) expresion -> expresion . DISTINTO expresion
    (41) expresion -> expresion . AND expresion
    (42) expresion -> expresion . OR expresion
    (62) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PTOYCOMA        reduce using rule 75 (return -> RETURN expresion .)
    error           reduce using rule 75 (return -> RETURN expresion .)
    LET             reduce using rule 75 (return -> RETURN expresion .)
    ID              reduce using rule 75 (return -> RETURN expresion .)
    CONSOLE         reduce using rule 75 (return -> RETURN expresion .)
    RETURN          reduce using rule 75 (return -> RETURN expresion .)
    BREAK           reduce using rule 75 (return -> RETURN expresion .)
    CONTINUE        reduce using rule 75 (return -> RETURN expresion .)
    IF              reduce using rule 75 (return -> RETURN expresion .)
    WHILE           reduce using rule 75 (return -> RETURN expresion .)
    FOR             reduce using rule 75 (return -> RETURN expresion .)
    $end            reduce using rule 75 (return -> RETURN expresion .)
    LLADER          reduce using rule 75 (return -> RETURN expresion .)
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORIGUAL      shift and go to state 67
    IGUALACION      shift and go to state 68
    DISTINTO        shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    PUNTO           shift and go to state 72


state 31

    (33) expresion -> MENOS . expresion
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion POTENCIA expresion
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . MENOS expresion
    (34) expresion -> . PARIZQ expresion PARDER
    (35) expresion -> . expresion MAYOR expresion
    (36) expresion -> . expresion MENOR expresion
    (37) expresion -> . expresion MAYORIGUAL expresion
    (38) expresion -> . expresion MENORIGUAL expresion
    (39) expresion -> . expresion IGUALACION expresion
    (40) expresion -> . expresion DISTINTO expresion
    (41) expresion -> . expresion AND expresion
    (42) expresion -> . expresion OR expresion
    (43) expresion -> . NOT expresion
    (44) expresion -> . ENTERO
    (45) expresion -> . DECIMAL
    (46) expresion -> . CADENA
    (47) expresion -> . ID
    (48) expresion -> . TRUE
    (49) expresion -> . FALSE
    (50) expresion -> . ID INCREMENTO
    (51) expresion -> . ID DECREMENTO
    (52) expresion -> . INCREMENTO ID
    (53) expresion -> . DECREMENTO ID
    (54) expresion -> . aproximacion
    (55) expresion -> . exponencial
    (56) expresion -> . to_string
    (57) expresion -> . to_minusculas
    (58) expresion -> . to_mayusculas
    (59) expresion -> . separador
    (60) expresion -> . concatenacion
    (61) expresion -> . casteo_string
    (62) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (69) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41
    CAST_STRING     shift and go to state 50

    expresion                      shift and go to state 73
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48
    casteo_string                  shift and go to state 49

state 32

    (34) expresion -> PARIZQ . expresion PARDER
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion POTENCIA expresion
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . MENOS expresion
    (34) expresion -> . PARIZQ expresion PARDER
    (35) expresion -> . expresion MAYOR expresion
    (36) expresion -> . expresion MENOR expresion
    (37) expresion -> . expresion MAYORIGUAL expresion
    (38) expresion -> . expresion MENORIGUAL expresion
    (39) expresion -> . expresion IGUALACION expresion
    (40) expresion -> . expresion DISTINTO expresion
    (41) expresion -> . expresion AND expresion
    (42) expresion -> . expresion OR expresion
    (43) expresion -> . NOT expresion
    (44) expresion -> . ENTERO
    (45) expresion -> . DECIMAL
    (46) expresion -> . CADENA
    (47) expresion -> . ID
    (48) expresion -> . TRUE
    (49) expresion -> . FALSE
    (50) expresion -> . ID INCREMENTO
    (51) expresion -> . ID DECREMENTO
    (52) expresion -> . INCREMENTO ID
    (53) expresion -> . DECREMENTO ID
    (54) expresion -> . aproximacion
    (55) expresion -> . exponencial
    (56) expresion -> . to_string
    (57) expresion -> . to_minusculas
    (58) expresion -> . to_mayusculas
    (59) expresion -> . separador
    (60) expresion -> . concatenacion
    (61) expresion -> . casteo_string
    (62) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (69) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41
    CAST_STRING     shift and go to state 50

    expresion                      shift and go to state 74
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48
    casteo_string                  shift and go to state 49

state 33

    (43) expresion -> NOT . expresion
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion POTENCIA expresion
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . MENOS expresion
    (34) expresion -> . PARIZQ expresion PARDER
    (35) expresion -> . expresion MAYOR expresion
    (36) expresion -> . expresion MENOR expresion
    (37) expresion -> . expresion MAYORIGUAL expresion
    (38) expresion -> . expresion MENORIGUAL expresion
    (39) expresion -> . expresion IGUALACION expresion
    (40) expresion -> . expresion DISTINTO expresion
    (41) expresion -> . expresion AND expresion
    (42) expresion -> . expresion OR expresion
    (43) expresion -> . NOT expresion
    (44) expresion -> . ENTERO
    (45) expresion -> . DECIMAL
    (46) expresion -> . CADENA
    (47) expresion -> . ID
    (48) expresion -> . TRUE
    (49) expresion -> . FALSE
    (50) expresion -> . ID INCREMENTO
    (51) expresion -> . ID DECREMENTO
    (52) expresion -> . INCREMENTO ID
    (53) expresion -> . DECREMENTO ID
    (54) expresion -> . aproximacion
    (55) expresion -> . exponencial
    (56) expresion -> . to_string
    (57) expresion -> . to_minusculas
    (58) expresion -> . to_mayusculas
    (59) expresion -> . separador
    (60) expresion -> . concatenacion
    (61) expresion -> . casteo_string
    (62) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (69) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41
    CAST_STRING     shift and go to state 50

    expresion                      shift and go to state 75
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48
    casteo_string                  shift and go to state 49

state 34

    (44) expresion -> ENTERO .

    MAS             reduce using rule 44 (expresion -> ENTERO .)
    MENOS           reduce using rule 44 (expresion -> ENTERO .)
    POR             reduce using rule 44 (expresion -> ENTERO .)
    DIVIDIDO        reduce using rule 44 (expresion -> ENTERO .)
    POTENCIA        reduce using rule 44 (expresion -> ENTERO .)
    MODULO          reduce using rule 44 (expresion -> ENTERO .)
    MAYOR           reduce using rule 44 (expresion -> ENTERO .)
    MENOR           reduce using rule 44 (expresion -> ENTERO .)
    MAYORIGUAL      reduce using rule 44 (expresion -> ENTERO .)
    MENORIGUAL      reduce using rule 44 (expresion -> ENTERO .)
    IGUALACION      reduce using rule 44 (expresion -> ENTERO .)
    DISTINTO        reduce using rule 44 (expresion -> ENTERO .)
    AND             reduce using rule 44 (expresion -> ENTERO .)
    OR              reduce using rule 44 (expresion -> ENTERO .)
    PUNTO           reduce using rule 44 (expresion -> ENTERO .)
    PTOYCOMA        reduce using rule 44 (expresion -> ENTERO .)
    error           reduce using rule 44 (expresion -> ENTERO .)
    LET             reduce using rule 44 (expresion -> ENTERO .)
    ID              reduce using rule 44 (expresion -> ENTERO .)
    CONSOLE         reduce using rule 44 (expresion -> ENTERO .)
    RETURN          reduce using rule 44 (expresion -> ENTERO .)
    BREAK           reduce using rule 44 (expresion -> ENTERO .)
    CONTINUE        reduce using rule 44 (expresion -> ENTERO .)
    IF              reduce using rule 44 (expresion -> ENTERO .)
    WHILE           reduce using rule 44 (expresion -> ENTERO .)
    FOR             reduce using rule 44 (expresion -> ENTERO .)
    $end            reduce using rule 44 (expresion -> ENTERO .)
    LLADER          reduce using rule 44 (expresion -> ENTERO .)
    PARDER          reduce using rule 44 (expresion -> ENTERO .)


state 35

    (45) expresion -> DECIMAL .

    MAS             reduce using rule 45 (expresion -> DECIMAL .)
    MENOS           reduce using rule 45 (expresion -> DECIMAL .)
    POR             reduce using rule 45 (expresion -> DECIMAL .)
    DIVIDIDO        reduce using rule 45 (expresion -> DECIMAL .)
    POTENCIA        reduce using rule 45 (expresion -> DECIMAL .)
    MODULO          reduce using rule 45 (expresion -> DECIMAL .)
    MAYOR           reduce using rule 45 (expresion -> DECIMAL .)
    MENOR           reduce using rule 45 (expresion -> DECIMAL .)
    MAYORIGUAL      reduce using rule 45 (expresion -> DECIMAL .)
    MENORIGUAL      reduce using rule 45 (expresion -> DECIMAL .)
    IGUALACION      reduce using rule 45 (expresion -> DECIMAL .)
    DISTINTO        reduce using rule 45 (expresion -> DECIMAL .)
    AND             reduce using rule 45 (expresion -> DECIMAL .)
    OR              reduce using rule 45 (expresion -> DECIMAL .)
    PUNTO           reduce using rule 45 (expresion -> DECIMAL .)
    PTOYCOMA        reduce using rule 45 (expresion -> DECIMAL .)
    error           reduce using rule 45 (expresion -> DECIMAL .)
    LET             reduce using rule 45 (expresion -> DECIMAL .)
    ID              reduce using rule 45 (expresion -> DECIMAL .)
    CONSOLE         reduce using rule 45 (expresion -> DECIMAL .)
    RETURN          reduce using rule 45 (expresion -> DECIMAL .)
    BREAK           reduce using rule 45 (expresion -> DECIMAL .)
    CONTINUE        reduce using rule 45 (expresion -> DECIMAL .)
    IF              reduce using rule 45 (expresion -> DECIMAL .)
    WHILE           reduce using rule 45 (expresion -> DECIMAL .)
    FOR             reduce using rule 45 (expresion -> DECIMAL .)
    $end            reduce using rule 45 (expresion -> DECIMAL .)
    LLADER          reduce using rule 45 (expresion -> DECIMAL .)
    PARDER          reduce using rule 45 (expresion -> DECIMAL .)


state 36

    (46) expresion -> CADENA .

    MAS             reduce using rule 46 (expresion -> CADENA .)
    MENOS           reduce using rule 46 (expresion -> CADENA .)
    POR             reduce using rule 46 (expresion -> CADENA .)
    DIVIDIDO        reduce using rule 46 (expresion -> CADENA .)
    POTENCIA        reduce using rule 46 (expresion -> CADENA .)
    MODULO          reduce using rule 46 (expresion -> CADENA .)
    MAYOR           reduce using rule 46 (expresion -> CADENA .)
    MENOR           reduce using rule 46 (expresion -> CADENA .)
    MAYORIGUAL      reduce using rule 46 (expresion -> CADENA .)
    MENORIGUAL      reduce using rule 46 (expresion -> CADENA .)
    IGUALACION      reduce using rule 46 (expresion -> CADENA .)
    DISTINTO        reduce using rule 46 (expresion -> CADENA .)
    AND             reduce using rule 46 (expresion -> CADENA .)
    OR              reduce using rule 46 (expresion -> CADENA .)
    PUNTO           reduce using rule 46 (expresion -> CADENA .)
    PTOYCOMA        reduce using rule 46 (expresion -> CADENA .)
    error           reduce using rule 46 (expresion -> CADENA .)
    LET             reduce using rule 46 (expresion -> CADENA .)
    ID              reduce using rule 46 (expresion -> CADENA .)
    CONSOLE         reduce using rule 46 (expresion -> CADENA .)
    RETURN          reduce using rule 46 (expresion -> CADENA .)
    BREAK           reduce using rule 46 (expresion -> CADENA .)
    CONTINUE        reduce using rule 46 (expresion -> CADENA .)
    IF              reduce using rule 46 (expresion -> CADENA .)
    WHILE           reduce using rule 46 (expresion -> CADENA .)
    FOR             reduce using rule 46 (expresion -> CADENA .)
    $end            reduce using rule 46 (expresion -> CADENA .)
    LLADER          reduce using rule 46 (expresion -> CADENA .)
    PARDER          reduce using rule 46 (expresion -> CADENA .)


state 37

    (47) expresion -> ID .
    (50) expresion -> ID . INCREMENTO
    (51) expresion -> ID . DECREMENTO

    MAS             reduce using rule 47 (expresion -> ID .)
    MENOS           reduce using rule 47 (expresion -> ID .)
    POR             reduce using rule 47 (expresion -> ID .)
    DIVIDIDO        reduce using rule 47 (expresion -> ID .)
    POTENCIA        reduce using rule 47 (expresion -> ID .)
    MODULO          reduce using rule 47 (expresion -> ID .)
    MAYOR           reduce using rule 47 (expresion -> ID .)
    MENOR           reduce using rule 47 (expresion -> ID .)
    MAYORIGUAL      reduce using rule 47 (expresion -> ID .)
    MENORIGUAL      reduce using rule 47 (expresion -> ID .)
    IGUALACION      reduce using rule 47 (expresion -> ID .)
    DISTINTO        reduce using rule 47 (expresion -> ID .)
    AND             reduce using rule 47 (expresion -> ID .)
    OR              reduce using rule 47 (expresion -> ID .)
    PUNTO           reduce using rule 47 (expresion -> ID .)
    PTOYCOMA        reduce using rule 47 (expresion -> ID .)
    error           reduce using rule 47 (expresion -> ID .)
    LET             reduce using rule 47 (expresion -> ID .)
    ID              reduce using rule 47 (expresion -> ID .)
    CONSOLE         reduce using rule 47 (expresion -> ID .)
    RETURN          reduce using rule 47 (expresion -> ID .)
    BREAK           reduce using rule 47 (expresion -> ID .)
    CONTINUE        reduce using rule 47 (expresion -> ID .)
    IF              reduce using rule 47 (expresion -> ID .)
    WHILE           reduce using rule 47 (expresion -> ID .)
    FOR             reduce using rule 47 (expresion -> ID .)
    $end            reduce using rule 47 (expresion -> ID .)
    LLADER          reduce using rule 47 (expresion -> ID .)
    PARDER          reduce using rule 47 (expresion -> ID .)
    INCREMENTO      shift and go to state 76
    DECREMENTO      shift and go to state 77


state 38

    (48) expresion -> TRUE .

    MAS             reduce using rule 48 (expresion -> TRUE .)
    MENOS           reduce using rule 48 (expresion -> TRUE .)
    POR             reduce using rule 48 (expresion -> TRUE .)
    DIVIDIDO        reduce using rule 48 (expresion -> TRUE .)
    POTENCIA        reduce using rule 48 (expresion -> TRUE .)
    MODULO          reduce using rule 48 (expresion -> TRUE .)
    MAYOR           reduce using rule 48 (expresion -> TRUE .)
    MENOR           reduce using rule 48 (expresion -> TRUE .)
    MAYORIGUAL      reduce using rule 48 (expresion -> TRUE .)
    MENORIGUAL      reduce using rule 48 (expresion -> TRUE .)
    IGUALACION      reduce using rule 48 (expresion -> TRUE .)
    DISTINTO        reduce using rule 48 (expresion -> TRUE .)
    AND             reduce using rule 48 (expresion -> TRUE .)
    OR              reduce using rule 48 (expresion -> TRUE .)
    PUNTO           reduce using rule 48 (expresion -> TRUE .)
    PTOYCOMA        reduce using rule 48 (expresion -> TRUE .)
    error           reduce using rule 48 (expresion -> TRUE .)
    LET             reduce using rule 48 (expresion -> TRUE .)
    ID              reduce using rule 48 (expresion -> TRUE .)
    CONSOLE         reduce using rule 48 (expresion -> TRUE .)
    RETURN          reduce using rule 48 (expresion -> TRUE .)
    BREAK           reduce using rule 48 (expresion -> TRUE .)
    CONTINUE        reduce using rule 48 (expresion -> TRUE .)
    IF              reduce using rule 48 (expresion -> TRUE .)
    WHILE           reduce using rule 48 (expresion -> TRUE .)
    FOR             reduce using rule 48 (expresion -> TRUE .)
    $end            reduce using rule 48 (expresion -> TRUE .)
    LLADER          reduce using rule 48 (expresion -> TRUE .)
    PARDER          reduce using rule 48 (expresion -> TRUE .)


state 39

    (49) expresion -> FALSE .

    MAS             reduce using rule 49 (expresion -> FALSE .)
    MENOS           reduce using rule 49 (expresion -> FALSE .)
    POR             reduce using rule 49 (expresion -> FALSE .)
    DIVIDIDO        reduce using rule 49 (expresion -> FALSE .)
    POTENCIA        reduce using rule 49 (expresion -> FALSE .)
    MODULO          reduce using rule 49 (expresion -> FALSE .)
    MAYOR           reduce using rule 49 (expresion -> FALSE .)
    MENOR           reduce using rule 49 (expresion -> FALSE .)
    MAYORIGUAL      reduce using rule 49 (expresion -> FALSE .)
    MENORIGUAL      reduce using rule 49 (expresion -> FALSE .)
    IGUALACION      reduce using rule 49 (expresion -> FALSE .)
    DISTINTO        reduce using rule 49 (expresion -> FALSE .)
    AND             reduce using rule 49 (expresion -> FALSE .)
    OR              reduce using rule 49 (expresion -> FALSE .)
    PUNTO           reduce using rule 49 (expresion -> FALSE .)
    PTOYCOMA        reduce using rule 49 (expresion -> FALSE .)
    error           reduce using rule 49 (expresion -> FALSE .)
    LET             reduce using rule 49 (expresion -> FALSE .)
    ID              reduce using rule 49 (expresion -> FALSE .)
    CONSOLE         reduce using rule 49 (expresion -> FALSE .)
    RETURN          reduce using rule 49 (expresion -> FALSE .)
    BREAK           reduce using rule 49 (expresion -> FALSE .)
    CONTINUE        reduce using rule 49 (expresion -> FALSE .)
    IF              reduce using rule 49 (expresion -> FALSE .)
    WHILE           reduce using rule 49 (expresion -> FALSE .)
    FOR             reduce using rule 49 (expresion -> FALSE .)
    $end            reduce using rule 49 (expresion -> FALSE .)
    LLADER          reduce using rule 49 (expresion -> FALSE .)
    PARDER          reduce using rule 49 (expresion -> FALSE .)


state 40

    (52) expresion -> INCREMENTO . ID

    ID              shift and go to state 78


state 41

    (53) expresion -> DECREMENTO . ID

    ID              shift and go to state 79


state 42

    (54) expresion -> aproximacion .

    MAS             reduce using rule 54 (expresion -> aproximacion .)
    MENOS           reduce using rule 54 (expresion -> aproximacion .)
    POR             reduce using rule 54 (expresion -> aproximacion .)
    DIVIDIDO        reduce using rule 54 (expresion -> aproximacion .)
    POTENCIA        reduce using rule 54 (expresion -> aproximacion .)
    MODULO          reduce using rule 54 (expresion -> aproximacion .)
    MAYOR           reduce using rule 54 (expresion -> aproximacion .)
    MENOR           reduce using rule 54 (expresion -> aproximacion .)
    MAYORIGUAL      reduce using rule 54 (expresion -> aproximacion .)
    MENORIGUAL      reduce using rule 54 (expresion -> aproximacion .)
    IGUALACION      reduce using rule 54 (expresion -> aproximacion .)
    DISTINTO        reduce using rule 54 (expresion -> aproximacion .)
    AND             reduce using rule 54 (expresion -> aproximacion .)
    OR              reduce using rule 54 (expresion -> aproximacion .)
    PUNTO           reduce using rule 54 (expresion -> aproximacion .)
    PTOYCOMA        reduce using rule 54 (expresion -> aproximacion .)
    error           reduce using rule 54 (expresion -> aproximacion .)
    LET             reduce using rule 54 (expresion -> aproximacion .)
    ID              reduce using rule 54 (expresion -> aproximacion .)
    CONSOLE         reduce using rule 54 (expresion -> aproximacion .)
    RETURN          reduce using rule 54 (expresion -> aproximacion .)
    BREAK           reduce using rule 54 (expresion -> aproximacion .)
    CONTINUE        reduce using rule 54 (expresion -> aproximacion .)
    IF              reduce using rule 54 (expresion -> aproximacion .)
    WHILE           reduce using rule 54 (expresion -> aproximacion .)
    FOR             reduce using rule 54 (expresion -> aproximacion .)
    $end            reduce using rule 54 (expresion -> aproximacion .)
    LLADER          reduce using rule 54 (expresion -> aproximacion .)
    PARDER          reduce using rule 54 (expresion -> aproximacion .)


state 43

    (55) expresion -> exponencial .

    MAS             reduce using rule 55 (expresion -> exponencial .)
    MENOS           reduce using rule 55 (expresion -> exponencial .)
    POR             reduce using rule 55 (expresion -> exponencial .)
    DIVIDIDO        reduce using rule 55 (expresion -> exponencial .)
    POTENCIA        reduce using rule 55 (expresion -> exponencial .)
    MODULO          reduce using rule 55 (expresion -> exponencial .)
    MAYOR           reduce using rule 55 (expresion -> exponencial .)
    MENOR           reduce using rule 55 (expresion -> exponencial .)
    MAYORIGUAL      reduce using rule 55 (expresion -> exponencial .)
    MENORIGUAL      reduce using rule 55 (expresion -> exponencial .)
    IGUALACION      reduce using rule 55 (expresion -> exponencial .)
    DISTINTO        reduce using rule 55 (expresion -> exponencial .)
    AND             reduce using rule 55 (expresion -> exponencial .)
    OR              reduce using rule 55 (expresion -> exponencial .)
    PUNTO           reduce using rule 55 (expresion -> exponencial .)
    PTOYCOMA        reduce using rule 55 (expresion -> exponencial .)
    error           reduce using rule 55 (expresion -> exponencial .)
    LET             reduce using rule 55 (expresion -> exponencial .)
    ID              reduce using rule 55 (expresion -> exponencial .)
    CONSOLE         reduce using rule 55 (expresion -> exponencial .)
    RETURN          reduce using rule 55 (expresion -> exponencial .)
    BREAK           reduce using rule 55 (expresion -> exponencial .)
    CONTINUE        reduce using rule 55 (expresion -> exponencial .)
    IF              reduce using rule 55 (expresion -> exponencial .)
    WHILE           reduce using rule 55 (expresion -> exponencial .)
    FOR             reduce using rule 55 (expresion -> exponencial .)
    $end            reduce using rule 55 (expresion -> exponencial .)
    LLADER          reduce using rule 55 (expresion -> exponencial .)
    PARDER          reduce using rule 55 (expresion -> exponencial .)


state 44

    (56) expresion -> to_string .

    MAS             reduce using rule 56 (expresion -> to_string .)
    MENOS           reduce using rule 56 (expresion -> to_string .)
    POR             reduce using rule 56 (expresion -> to_string .)
    DIVIDIDO        reduce using rule 56 (expresion -> to_string .)
    POTENCIA        reduce using rule 56 (expresion -> to_string .)
    MODULO          reduce using rule 56 (expresion -> to_string .)
    MAYOR           reduce using rule 56 (expresion -> to_string .)
    MENOR           reduce using rule 56 (expresion -> to_string .)
    MAYORIGUAL      reduce using rule 56 (expresion -> to_string .)
    MENORIGUAL      reduce using rule 56 (expresion -> to_string .)
    IGUALACION      reduce using rule 56 (expresion -> to_string .)
    DISTINTO        reduce using rule 56 (expresion -> to_string .)
    AND             reduce using rule 56 (expresion -> to_string .)
    OR              reduce using rule 56 (expresion -> to_string .)
    PUNTO           reduce using rule 56 (expresion -> to_string .)
    PTOYCOMA        reduce using rule 56 (expresion -> to_string .)
    error           reduce using rule 56 (expresion -> to_string .)
    LET             reduce using rule 56 (expresion -> to_string .)
    ID              reduce using rule 56 (expresion -> to_string .)
    CONSOLE         reduce using rule 56 (expresion -> to_string .)
    RETURN          reduce using rule 56 (expresion -> to_string .)
    BREAK           reduce using rule 56 (expresion -> to_string .)
    CONTINUE        reduce using rule 56 (expresion -> to_string .)
    IF              reduce using rule 56 (expresion -> to_string .)
    WHILE           reduce using rule 56 (expresion -> to_string .)
    FOR             reduce using rule 56 (expresion -> to_string .)
    $end            reduce using rule 56 (expresion -> to_string .)
    LLADER          reduce using rule 56 (expresion -> to_string .)
    PARDER          reduce using rule 56 (expresion -> to_string .)


state 45

    (57) expresion -> to_minusculas .

    MAS             reduce using rule 57 (expresion -> to_minusculas .)
    MENOS           reduce using rule 57 (expresion -> to_minusculas .)
    POR             reduce using rule 57 (expresion -> to_minusculas .)
    DIVIDIDO        reduce using rule 57 (expresion -> to_minusculas .)
    POTENCIA        reduce using rule 57 (expresion -> to_minusculas .)
    MODULO          reduce using rule 57 (expresion -> to_minusculas .)
    MAYOR           reduce using rule 57 (expresion -> to_minusculas .)
    MENOR           reduce using rule 57 (expresion -> to_minusculas .)
    MAYORIGUAL      reduce using rule 57 (expresion -> to_minusculas .)
    MENORIGUAL      reduce using rule 57 (expresion -> to_minusculas .)
    IGUALACION      reduce using rule 57 (expresion -> to_minusculas .)
    DISTINTO        reduce using rule 57 (expresion -> to_minusculas .)
    AND             reduce using rule 57 (expresion -> to_minusculas .)
    OR              reduce using rule 57 (expresion -> to_minusculas .)
    PUNTO           reduce using rule 57 (expresion -> to_minusculas .)
    PTOYCOMA        reduce using rule 57 (expresion -> to_minusculas .)
    error           reduce using rule 57 (expresion -> to_minusculas .)
    LET             reduce using rule 57 (expresion -> to_minusculas .)
    ID              reduce using rule 57 (expresion -> to_minusculas .)
    CONSOLE         reduce using rule 57 (expresion -> to_minusculas .)
    RETURN          reduce using rule 57 (expresion -> to_minusculas .)
    BREAK           reduce using rule 57 (expresion -> to_minusculas .)
    CONTINUE        reduce using rule 57 (expresion -> to_minusculas .)
    IF              reduce using rule 57 (expresion -> to_minusculas .)
    WHILE           reduce using rule 57 (expresion -> to_minusculas .)
    FOR             reduce using rule 57 (expresion -> to_minusculas .)
    $end            reduce using rule 57 (expresion -> to_minusculas .)
    LLADER          reduce using rule 57 (expresion -> to_minusculas .)
    PARDER          reduce using rule 57 (expresion -> to_minusculas .)


state 46

    (58) expresion -> to_mayusculas .

    MAS             reduce using rule 58 (expresion -> to_mayusculas .)
    MENOS           reduce using rule 58 (expresion -> to_mayusculas .)
    POR             reduce using rule 58 (expresion -> to_mayusculas .)
    DIVIDIDO        reduce using rule 58 (expresion -> to_mayusculas .)
    POTENCIA        reduce using rule 58 (expresion -> to_mayusculas .)
    MODULO          reduce using rule 58 (expresion -> to_mayusculas .)
    MAYOR           reduce using rule 58 (expresion -> to_mayusculas .)
    MENOR           reduce using rule 58 (expresion -> to_mayusculas .)
    MAYORIGUAL      reduce using rule 58 (expresion -> to_mayusculas .)
    MENORIGUAL      reduce using rule 58 (expresion -> to_mayusculas .)
    IGUALACION      reduce using rule 58 (expresion -> to_mayusculas .)
    DISTINTO        reduce using rule 58 (expresion -> to_mayusculas .)
    AND             reduce using rule 58 (expresion -> to_mayusculas .)
    OR              reduce using rule 58 (expresion -> to_mayusculas .)
    PUNTO           reduce using rule 58 (expresion -> to_mayusculas .)
    PTOYCOMA        reduce using rule 58 (expresion -> to_mayusculas .)
    error           reduce using rule 58 (expresion -> to_mayusculas .)
    LET             reduce using rule 58 (expresion -> to_mayusculas .)
    ID              reduce using rule 58 (expresion -> to_mayusculas .)
    CONSOLE         reduce using rule 58 (expresion -> to_mayusculas .)
    RETURN          reduce using rule 58 (expresion -> to_mayusculas .)
    BREAK           reduce using rule 58 (expresion -> to_mayusculas .)
    CONTINUE        reduce using rule 58 (expresion -> to_mayusculas .)
    IF              reduce using rule 58 (expresion -> to_mayusculas .)
    WHILE           reduce using rule 58 (expresion -> to_mayusculas .)
    FOR             reduce using rule 58 (expresion -> to_mayusculas .)
    $end            reduce using rule 58 (expresion -> to_mayusculas .)
    LLADER          reduce using rule 58 (expresion -> to_mayusculas .)
    PARDER          reduce using rule 58 (expresion -> to_mayusculas .)


state 47

    (59) expresion -> separador .

    MAS             reduce using rule 59 (expresion -> separador .)
    MENOS           reduce using rule 59 (expresion -> separador .)
    POR             reduce using rule 59 (expresion -> separador .)
    DIVIDIDO        reduce using rule 59 (expresion -> separador .)
    POTENCIA        reduce using rule 59 (expresion -> separador .)
    MODULO          reduce using rule 59 (expresion -> separador .)
    MAYOR           reduce using rule 59 (expresion -> separador .)
    MENOR           reduce using rule 59 (expresion -> separador .)
    MAYORIGUAL      reduce using rule 59 (expresion -> separador .)
    MENORIGUAL      reduce using rule 59 (expresion -> separador .)
    IGUALACION      reduce using rule 59 (expresion -> separador .)
    DISTINTO        reduce using rule 59 (expresion -> separador .)
    AND             reduce using rule 59 (expresion -> separador .)
    OR              reduce using rule 59 (expresion -> separador .)
    PUNTO           reduce using rule 59 (expresion -> separador .)
    PTOYCOMA        reduce using rule 59 (expresion -> separador .)
    error           reduce using rule 59 (expresion -> separador .)
    LET             reduce using rule 59 (expresion -> separador .)
    ID              reduce using rule 59 (expresion -> separador .)
    CONSOLE         reduce using rule 59 (expresion -> separador .)
    RETURN          reduce using rule 59 (expresion -> separador .)
    BREAK           reduce using rule 59 (expresion -> separador .)
    CONTINUE        reduce using rule 59 (expresion -> separador .)
    IF              reduce using rule 59 (expresion -> separador .)
    WHILE           reduce using rule 59 (expresion -> separador .)
    FOR             reduce using rule 59 (expresion -> separador .)
    $end            reduce using rule 59 (expresion -> separador .)
    LLADER          reduce using rule 59 (expresion -> separador .)
    PARDER          reduce using rule 59 (expresion -> separador .)


state 48

    (60) expresion -> concatenacion .

    MAS             reduce using rule 60 (expresion -> concatenacion .)
    MENOS           reduce using rule 60 (expresion -> concatenacion .)
    POR             reduce using rule 60 (expresion -> concatenacion .)
    DIVIDIDO        reduce using rule 60 (expresion -> concatenacion .)
    POTENCIA        reduce using rule 60 (expresion -> concatenacion .)
    MODULO          reduce using rule 60 (expresion -> concatenacion .)
    MAYOR           reduce using rule 60 (expresion -> concatenacion .)
    MENOR           reduce using rule 60 (expresion -> concatenacion .)
    MAYORIGUAL      reduce using rule 60 (expresion -> concatenacion .)
    MENORIGUAL      reduce using rule 60 (expresion -> concatenacion .)
    IGUALACION      reduce using rule 60 (expresion -> concatenacion .)
    DISTINTO        reduce using rule 60 (expresion -> concatenacion .)
    AND             reduce using rule 60 (expresion -> concatenacion .)
    OR              reduce using rule 60 (expresion -> concatenacion .)
    PUNTO           reduce using rule 60 (expresion -> concatenacion .)
    PTOYCOMA        reduce using rule 60 (expresion -> concatenacion .)
    error           reduce using rule 60 (expresion -> concatenacion .)
    LET             reduce using rule 60 (expresion -> concatenacion .)
    ID              reduce using rule 60 (expresion -> concatenacion .)
    CONSOLE         reduce using rule 60 (expresion -> concatenacion .)
    RETURN          reduce using rule 60 (expresion -> concatenacion .)
    BREAK           reduce using rule 60 (expresion -> concatenacion .)
    CONTINUE        reduce using rule 60 (expresion -> concatenacion .)
    IF              reduce using rule 60 (expresion -> concatenacion .)
    WHILE           reduce using rule 60 (expresion -> concatenacion .)
    FOR             reduce using rule 60 (expresion -> concatenacion .)
    $end            reduce using rule 60 (expresion -> concatenacion .)
    LLADER          reduce using rule 60 (expresion -> concatenacion .)
    PARDER          reduce using rule 60 (expresion -> concatenacion .)


state 49

    (61) expresion -> casteo_string .

    MAS             reduce using rule 61 (expresion -> casteo_string .)
    MENOS           reduce using rule 61 (expresion -> casteo_string .)
    POR             reduce using rule 61 (expresion -> casteo_string .)
    DIVIDIDO        reduce using rule 61 (expresion -> casteo_string .)
    POTENCIA        reduce using rule 61 (expresion -> casteo_string .)
    MODULO          reduce using rule 61 (expresion -> casteo_string .)
    MAYOR           reduce using rule 61 (expresion -> casteo_string .)
    MENOR           reduce using rule 61 (expresion -> casteo_string .)
    MAYORIGUAL      reduce using rule 61 (expresion -> casteo_string .)
    MENORIGUAL      reduce using rule 61 (expresion -> casteo_string .)
    IGUALACION      reduce using rule 61 (expresion -> casteo_string .)
    DISTINTO        reduce using rule 61 (expresion -> casteo_string .)
    AND             reduce using rule 61 (expresion -> casteo_string .)
    OR              reduce using rule 61 (expresion -> casteo_string .)
    PUNTO           reduce using rule 61 (expresion -> casteo_string .)
    PTOYCOMA        reduce using rule 61 (expresion -> casteo_string .)
    error           reduce using rule 61 (expresion -> casteo_string .)
    LET             reduce using rule 61 (expresion -> casteo_string .)
    ID              reduce using rule 61 (expresion -> casteo_string .)
    CONSOLE         reduce using rule 61 (expresion -> casteo_string .)
    RETURN          reduce using rule 61 (expresion -> casteo_string .)
    BREAK           reduce using rule 61 (expresion -> casteo_string .)
    CONTINUE        reduce using rule 61 (expresion -> casteo_string .)
    IF              reduce using rule 61 (expresion -> casteo_string .)
    WHILE           reduce using rule 61 (expresion -> casteo_string .)
    FOR             reduce using rule 61 (expresion -> casteo_string .)
    $end            reduce using rule 61 (expresion -> casteo_string .)
    LLADER          reduce using rule 61 (expresion -> casteo_string .)
    PARDER          reduce using rule 61 (expresion -> casteo_string .)


state 50

    (69) casteo_string -> CAST_STRING . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 80


state 51

    (78) condicional_if -> IF PARIZQ . expresion PARDER bloque
    (79) condicional_if -> IF PARIZQ . expresion PARDER bloque ELSE bloque
    (80) condicional_if -> IF PARIZQ . expresion PARDER bloque lista_elif
    (81) condicional_if -> IF PARIZQ . expresion PARDER bloque lista_elif ELSE bloque
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion POTENCIA expresion
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . MENOS expresion
    (34) expresion -> . PARIZQ expresion PARDER
    (35) expresion -> . expresion MAYOR expresion
    (36) expresion -> . expresion MENOR expresion
    (37) expresion -> . expresion MAYORIGUAL expresion
    (38) expresion -> . expresion MENORIGUAL expresion
    (39) expresion -> . expresion IGUALACION expresion
    (40) expresion -> . expresion DISTINTO expresion
    (41) expresion -> . expresion AND expresion
    (42) expresion -> . expresion OR expresion
    (43) expresion -> . NOT expresion
    (44) expresion -> . ENTERO
    (45) expresion -> . DECIMAL
    (46) expresion -> . CADENA
    (47) expresion -> . ID
    (48) expresion -> . TRUE
    (49) expresion -> . FALSE
    (50) expresion -> . ID INCREMENTO
    (51) expresion -> . ID DECREMENTO
    (52) expresion -> . INCREMENTO ID
    (53) expresion -> . DECREMENTO ID
    (54) expresion -> . aproximacion
    (55) expresion -> . exponencial
    (56) expresion -> . to_string
    (57) expresion -> . to_minusculas
    (58) expresion -> . to_mayusculas
    (59) expresion -> . separador
    (60) expresion -> . concatenacion
    (61) expresion -> . casteo_string
    (62) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (69) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41
    CAST_STRING     shift and go to state 50

    expresion                      shift and go to state 81
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48
    casteo_string                  shift and go to state 49

state 52

    (85) ciclo_while -> WHILE PARIZQ . expresion PARDER bloque
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion POTENCIA expresion
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . MENOS expresion
    (34) expresion -> . PARIZQ expresion PARDER
    (35) expresion -> . expresion MAYOR expresion
    (36) expresion -> . expresion MENOR expresion
    (37) expresion -> . expresion MAYORIGUAL expresion
    (38) expresion -> . expresion MENORIGUAL expresion
    (39) expresion -> . expresion IGUALACION expresion
    (40) expresion -> . expresion DISTINTO expresion
    (41) expresion -> . expresion AND expresion
    (42) expresion -> . expresion OR expresion
    (43) expresion -> . NOT expresion
    (44) expresion -> . ENTERO
    (45) expresion -> . DECIMAL
    (46) expresion -> . CADENA
    (47) expresion -> . ID
    (48) expresion -> . TRUE
    (49) expresion -> . FALSE
    (50) expresion -> . ID INCREMENTO
    (51) expresion -> . ID DECREMENTO
    (52) expresion -> . INCREMENTO ID
    (53) expresion -> . DECREMENTO ID
    (54) expresion -> . aproximacion
    (55) expresion -> . exponencial
    (56) expresion -> . to_string
    (57) expresion -> . to_minusculas
    (58) expresion -> . to_mayusculas
    (59) expresion -> . separador
    (60) expresion -> . concatenacion
    (61) expresion -> . casteo_string
    (62) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (69) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41
    CAST_STRING     shift and go to state 50

    expresion                      shift and go to state 82
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48
    casteo_string                  shift and go to state 49

state 53

    (86) ciclo_for -> FOR PARIZQ . declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (87) ciclo_for -> FOR PARIZQ . asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (88) ciclo_for -> FOR PARIZQ . declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (89) ciclo_for -> FOR PARIZQ . asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (90) ciclo_for_of -> FOR PARIZQ . LET ID OF expresion PARDER bloque
    (21) declaracion -> . LET ID DOSPUNTOS tipo IGUAL expresion
    (22) declaracion -> . LET ID IGUAL expresion
    (23) declaracion -> . LET ID DOSPUNTOS tipo
    (24) declaracion -> . LET ID
    (25) asignacion -> . ID IGUAL expresion

    LET             shift and go to state 85
    ID              shift and go to state 16

    declaracion                    shift and go to state 83
    asignacion                     shift and go to state 84

state 54

    (21) declaracion -> LET ID DOSPUNTOS . tipo IGUAL expresion
    (23) declaracion -> LET ID DOSPUNTOS . tipo
    (70) tipo -> . NUMBER
    (71) tipo -> . STRING
    (72) tipo -> . BOOLEAN
    (73) tipo -> . ANY

    NUMBER          shift and go to state 87
    STRING          shift and go to state 88
    BOOLEAN         shift and go to state 89
    ANY             shift and go to state 90

    tipo                           shift and go to state 86

state 55

    (22) declaracion -> LET ID IGUAL . expresion
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion POTENCIA expresion
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . MENOS expresion
    (34) expresion -> . PARIZQ expresion PARDER
    (35) expresion -> . expresion MAYOR expresion
    (36) expresion -> . expresion MENOR expresion
    (37) expresion -> . expresion MAYORIGUAL expresion
    (38) expresion -> . expresion MENORIGUAL expresion
    (39) expresion -> . expresion IGUALACION expresion
    (40) expresion -> . expresion DISTINTO expresion
    (41) expresion -> . expresion AND expresion
    (42) expresion -> . expresion OR expresion
    (43) expresion -> . NOT expresion
    (44) expresion -> . ENTERO
    (45) expresion -> . DECIMAL
    (46) expresion -> . CADENA
    (47) expresion -> . ID
    (48) expresion -> . TRUE
    (49) expresion -> . FALSE
    (50) expresion -> . ID INCREMENTO
    (51) expresion -> . ID DECREMENTO
    (52) expresion -> . INCREMENTO ID
    (53) expresion -> . DECREMENTO ID
    (54) expresion -> . aproximacion
    (55) expresion -> . exponencial
    (56) expresion -> . to_string
    (57) expresion -> . to_minusculas
    (58) expresion -> . to_mayusculas
    (59) expresion -> . separador
    (60) expresion -> . concatenacion
    (61) expresion -> . casteo_string
    (62) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (69) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41
    CAST_STRING     shift and go to state 50

    expresion                      shift and go to state 91
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48
    casteo_string                  shift and go to state 49

state 56

    (25) asignacion -> ID IGUAL expresion .
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (35) expresion -> expresion . MAYOR expresion
    (36) expresion -> expresion . MENOR expresion
    (37) expresion -> expresion . MAYORIGUAL expresion
    (38) expresion -> expresion . MENORIGUAL expresion
    (39) expresion -> expresion . IGUALACION expresion
    (40) expresion -> expresion . DISTINTO expresion
    (41) expresion -> expresion . AND expresion
    (42) expresion -> expresion . OR expresion
    (62) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PTOYCOMA        reduce using rule 25 (asignacion -> ID IGUAL expresion .)
    error           reduce using rule 25 (asignacion -> ID IGUAL expresion .)
    LET             reduce using rule 25 (asignacion -> ID IGUAL expresion .)
    ID              reduce using rule 25 (asignacion -> ID IGUAL expresion .)
    CONSOLE         reduce using rule 25 (asignacion -> ID IGUAL expresion .)
    RETURN          reduce using rule 25 (asignacion -> ID IGUAL expresion .)
    BREAK           reduce using rule 25 (asignacion -> ID IGUAL expresion .)
    CONTINUE        reduce using rule 25 (asignacion -> ID IGUAL expresion .)
    IF              reduce using rule 25 (asignacion -> ID IGUAL expresion .)
    WHILE           reduce using rule 25 (asignacion -> ID IGUAL expresion .)
    FOR             reduce using rule 25 (asignacion -> ID IGUAL expresion .)
    $end            reduce using rule 25 (asignacion -> ID IGUAL expresion .)
    LLADER          reduce using rule 25 (asignacion -> ID IGUAL expresion .)
    PARDER          reduce using rule 25 (asignacion -> ID IGUAL expresion .)
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORIGUAL      shift and go to state 67
    IGUALACION      shift and go to state 68
    DISTINTO        shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    PUNTO           shift and go to state 72


state 57

    (26) impresion -> CONSOLE PUNTO LOG . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 92


state 58

    (27) expresion -> expresion MAS . expresion
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion POTENCIA expresion
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . MENOS expresion
    (34) expresion -> . PARIZQ expresion PARDER
    (35) expresion -> . expresion MAYOR expresion
    (36) expresion -> . expresion MENOR expresion
    (37) expresion -> . expresion MAYORIGUAL expresion
    (38) expresion -> . expresion MENORIGUAL expresion
    (39) expresion -> . expresion IGUALACION expresion
    (40) expresion -> . expresion DISTINTO expresion
    (41) expresion -> . expresion AND expresion
    (42) expresion -> . expresion OR expresion
    (43) expresion -> . NOT expresion
    (44) expresion -> . ENTERO
    (45) expresion -> . DECIMAL
    (46) expresion -> . CADENA
    (47) expresion -> . ID
    (48) expresion -> . TRUE
    (49) expresion -> . FALSE
    (50) expresion -> . ID INCREMENTO
    (51) expresion -> . ID DECREMENTO
    (52) expresion -> . INCREMENTO ID
    (53) expresion -> . DECREMENTO ID
    (54) expresion -> . aproximacion
    (55) expresion -> . exponencial
    (56) expresion -> . to_string
    (57) expresion -> . to_minusculas
    (58) expresion -> . to_mayusculas
    (59) expresion -> . separador
    (60) expresion -> . concatenacion
    (61) expresion -> . casteo_string
    (62) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (69) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41
    CAST_STRING     shift and go to state 50

    expresion                      shift and go to state 93
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48
    casteo_string                  shift and go to state 49

state 59

    (28) expresion -> expresion MENOS . expresion
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion POTENCIA expresion
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . MENOS expresion
    (34) expresion -> . PARIZQ expresion PARDER
    (35) expresion -> . expresion MAYOR expresion
    (36) expresion -> . expresion MENOR expresion
    (37) expresion -> . expresion MAYORIGUAL expresion
    (38) expresion -> . expresion MENORIGUAL expresion
    (39) expresion -> . expresion IGUALACION expresion
    (40) expresion -> . expresion DISTINTO expresion
    (41) expresion -> . expresion AND expresion
    (42) expresion -> . expresion OR expresion
    (43) expresion -> . NOT expresion
    (44) expresion -> . ENTERO
    (45) expresion -> . DECIMAL
    (46) expresion -> . CADENA
    (47) expresion -> . ID
    (48) expresion -> . TRUE
    (49) expresion -> . FALSE
    (50) expresion -> . ID INCREMENTO
    (51) expresion -> . ID DECREMENTO
    (52) expresion -> . INCREMENTO ID
    (53) expresion -> . DECREMENTO ID
    (54) expresion -> . aproximacion
    (55) expresion -> . exponencial
    (56) expresion -> . to_string
    (57) expresion -> . to_minusculas
    (58) expresion -> . to_mayusculas
    (59) expresion -> . separador
    (60) expresion -> . concatenacion
    (61) expresion -> . casteo_string
    (62) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (69) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41
    CAST_STRING     shift and go to state 50

    expresion                      shift and go to state 94
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48
    casteo_string                  shift and go to state 49

state 60

    (29) expresion -> expresion POR . expresion
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion POTENCIA expresion
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . MENOS expresion
    (34) expresion -> . PARIZQ expresion PARDER
    (35) expresion -> . expresion MAYOR expresion
    (36) expresion -> . expresion MENOR expresion
    (37) expresion -> . expresion MAYORIGUAL expresion
    (38) expresion -> . expresion MENORIGUAL expresion
    (39) expresion -> . expresion IGUALACION expresion
    (40) expresion -> . expresion DISTINTO expresion
    (41) expresion -> . expresion AND expresion
    (42) expresion -> . expresion OR expresion
    (43) expresion -> . NOT expresion
    (44) expresion -> . ENTERO
    (45) expresion -> . DECIMAL
    (46) expresion -> . CADENA
    (47) expresion -> . ID
    (48) expresion -> . TRUE
    (49) expresion -> . FALSE
    (50) expresion -> . ID INCREMENTO
    (51) expresion -> . ID DECREMENTO
    (52) expresion -> . INCREMENTO ID
    (53) expresion -> . DECREMENTO ID
    (54) expresion -> . aproximacion
    (55) expresion -> . exponencial
    (56) expresion -> . to_string
    (57) expresion -> . to_minusculas
    (58) expresion -> . to_mayusculas
    (59) expresion -> . separador
    (60) expresion -> . concatenacion
    (61) expresion -> . casteo_string
    (62) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (69) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41
    CAST_STRING     shift and go to state 50

    expresion                      shift and go to state 95
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48
    casteo_string                  shift and go to state 49

state 61

    (30) expresion -> expresion DIVIDIDO . expresion
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion POTENCIA expresion
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . MENOS expresion
    (34) expresion -> . PARIZQ expresion PARDER
    (35) expresion -> . expresion MAYOR expresion
    (36) expresion -> . expresion MENOR expresion
    (37) expresion -> . expresion MAYORIGUAL expresion
    (38) expresion -> . expresion MENORIGUAL expresion
    (39) expresion -> . expresion IGUALACION expresion
    (40) expresion -> . expresion DISTINTO expresion
    (41) expresion -> . expresion AND expresion
    (42) expresion -> . expresion OR expresion
    (43) expresion -> . NOT expresion
    (44) expresion -> . ENTERO
    (45) expresion -> . DECIMAL
    (46) expresion -> . CADENA
    (47) expresion -> . ID
    (48) expresion -> . TRUE
    (49) expresion -> . FALSE
    (50) expresion -> . ID INCREMENTO
    (51) expresion -> . ID DECREMENTO
    (52) expresion -> . INCREMENTO ID
    (53) expresion -> . DECREMENTO ID
    (54) expresion -> . aproximacion
    (55) expresion -> . exponencial
    (56) expresion -> . to_string
    (57) expresion -> . to_minusculas
    (58) expresion -> . to_mayusculas
    (59) expresion -> . separador
    (60) expresion -> . concatenacion
    (61) expresion -> . casteo_string
    (62) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (69) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41
    CAST_STRING     shift and go to state 50

    expresion                      shift and go to state 96
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48
    casteo_string                  shift and go to state 49

state 62

    (31) expresion -> expresion POTENCIA . expresion
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion POTENCIA expresion
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . MENOS expresion
    (34) expresion -> . PARIZQ expresion PARDER
    (35) expresion -> . expresion MAYOR expresion
    (36) expresion -> . expresion MENOR expresion
    (37) expresion -> . expresion MAYORIGUAL expresion
    (38) expresion -> . expresion MENORIGUAL expresion
    (39) expresion -> . expresion IGUALACION expresion
    (40) expresion -> . expresion DISTINTO expresion
    (41) expresion -> . expresion AND expresion
    (42) expresion -> . expresion OR expresion
    (43) expresion -> . NOT expresion
    (44) expresion -> . ENTERO
    (45) expresion -> . DECIMAL
    (46) expresion -> . CADENA
    (47) expresion -> . ID
    (48) expresion -> . TRUE
    (49) expresion -> . FALSE
    (50) expresion -> . ID INCREMENTO
    (51) expresion -> . ID DECREMENTO
    (52) expresion -> . INCREMENTO ID
    (53) expresion -> . DECREMENTO ID
    (54) expresion -> . aproximacion
    (55) expresion -> . exponencial
    (56) expresion -> . to_string
    (57) expresion -> . to_minusculas
    (58) expresion -> . to_mayusculas
    (59) expresion -> . separador
    (60) expresion -> . concatenacion
    (61) expresion -> . casteo_string
    (62) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (69) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41
    CAST_STRING     shift and go to state 50

    expresion                      shift and go to state 97
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48
    casteo_string                  shift and go to state 49

state 63

    (32) expresion -> expresion MODULO . expresion
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion POTENCIA expresion
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . MENOS expresion
    (34) expresion -> . PARIZQ expresion PARDER
    (35) expresion -> . expresion MAYOR expresion
    (36) expresion -> . expresion MENOR expresion
    (37) expresion -> . expresion MAYORIGUAL expresion
    (38) expresion -> . expresion MENORIGUAL expresion
    (39) expresion -> . expresion IGUALACION expresion
    (40) expresion -> . expresion DISTINTO expresion
    (41) expresion -> . expresion AND expresion
    (42) expresion -> . expresion OR expresion
    (43) expresion -> . NOT expresion
    (44) expresion -> . ENTERO
    (45) expresion -> . DECIMAL
    (46) expresion -> . CADENA
    (47) expresion -> . ID
    (48) expresion -> . TRUE
    (49) expresion -> . FALSE
    (50) expresion -> . ID INCREMENTO
    (51) expresion -> . ID DECREMENTO
    (52) expresion -> . INCREMENTO ID
    (53) expresion -> . DECREMENTO ID
    (54) expresion -> . aproximacion
    (55) expresion -> . exponencial
    (56) expresion -> . to_string
    (57) expresion -> . to_minusculas
    (58) expresion -> . to_mayusculas
    (59) expresion -> . separador
    (60) expresion -> . concatenacion
    (61) expresion -> . casteo_string
    (62) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (69) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41
    CAST_STRING     shift and go to state 50

    expresion                      shift and go to state 98
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48
    casteo_string                  shift and go to state 49

state 64

    (35) expresion -> expresion MAYOR . expresion
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion POTENCIA expresion
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . MENOS expresion
    (34) expresion -> . PARIZQ expresion PARDER
    (35) expresion -> . expresion MAYOR expresion
    (36) expresion -> . expresion MENOR expresion
    (37) expresion -> . expresion MAYORIGUAL expresion
    (38) expresion -> . expresion MENORIGUAL expresion
    (39) expresion -> . expresion IGUALACION expresion
    (40) expresion -> . expresion DISTINTO expresion
    (41) expresion -> . expresion AND expresion
    (42) expresion -> . expresion OR expresion
    (43) expresion -> . NOT expresion
    (44) expresion -> . ENTERO
    (45) expresion -> . DECIMAL
    (46) expresion -> . CADENA
    (47) expresion -> . ID
    (48) expresion -> . TRUE
    (49) expresion -> . FALSE
    (50) expresion -> . ID INCREMENTO
    (51) expresion -> . ID DECREMENTO
    (52) expresion -> . INCREMENTO ID
    (53) expresion -> . DECREMENTO ID
    (54) expresion -> . aproximacion
    (55) expresion -> . exponencial
    (56) expresion -> . to_string
    (57) expresion -> . to_minusculas
    (58) expresion -> . to_mayusculas
    (59) expresion -> . separador
    (60) expresion -> . concatenacion
    (61) expresion -> . casteo_string
    (62) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (69) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41
    CAST_STRING     shift and go to state 50

    expresion                      shift and go to state 99
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48
    casteo_string                  shift and go to state 49

state 65

    (36) expresion -> expresion MENOR . expresion
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion POTENCIA expresion
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . MENOS expresion
    (34) expresion -> . PARIZQ expresion PARDER
    (35) expresion -> . expresion MAYOR expresion
    (36) expresion -> . expresion MENOR expresion
    (37) expresion -> . expresion MAYORIGUAL expresion
    (38) expresion -> . expresion MENORIGUAL expresion
    (39) expresion -> . expresion IGUALACION expresion
    (40) expresion -> . expresion DISTINTO expresion
    (41) expresion -> . expresion AND expresion
    (42) expresion -> . expresion OR expresion
    (43) expresion -> . NOT expresion
    (44) expresion -> . ENTERO
    (45) expresion -> . DECIMAL
    (46) expresion -> . CADENA
    (47) expresion -> . ID
    (48) expresion -> . TRUE
    (49) expresion -> . FALSE
    (50) expresion -> . ID INCREMENTO
    (51) expresion -> . ID DECREMENTO
    (52) expresion -> . INCREMENTO ID
    (53) expresion -> . DECREMENTO ID
    (54) expresion -> . aproximacion
    (55) expresion -> . exponencial
    (56) expresion -> . to_string
    (57) expresion -> . to_minusculas
    (58) expresion -> . to_mayusculas
    (59) expresion -> . separador
    (60) expresion -> . concatenacion
    (61) expresion -> . casteo_string
    (62) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (69) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41
    CAST_STRING     shift and go to state 50

    expresion                      shift and go to state 100
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48
    casteo_string                  shift and go to state 49

state 66

    (37) expresion -> expresion MAYORIGUAL . expresion
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion POTENCIA expresion
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . MENOS expresion
    (34) expresion -> . PARIZQ expresion PARDER
    (35) expresion -> . expresion MAYOR expresion
    (36) expresion -> . expresion MENOR expresion
    (37) expresion -> . expresion MAYORIGUAL expresion
    (38) expresion -> . expresion MENORIGUAL expresion
    (39) expresion -> . expresion IGUALACION expresion
    (40) expresion -> . expresion DISTINTO expresion
    (41) expresion -> . expresion AND expresion
    (42) expresion -> . expresion OR expresion
    (43) expresion -> . NOT expresion
    (44) expresion -> . ENTERO
    (45) expresion -> . DECIMAL
    (46) expresion -> . CADENA
    (47) expresion -> . ID
    (48) expresion -> . TRUE
    (49) expresion -> . FALSE
    (50) expresion -> . ID INCREMENTO
    (51) expresion -> . ID DECREMENTO
    (52) expresion -> . INCREMENTO ID
    (53) expresion -> . DECREMENTO ID
    (54) expresion -> . aproximacion
    (55) expresion -> . exponencial
    (56) expresion -> . to_string
    (57) expresion -> . to_minusculas
    (58) expresion -> . to_mayusculas
    (59) expresion -> . separador
    (60) expresion -> . concatenacion
    (61) expresion -> . casteo_string
    (62) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (69) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41
    CAST_STRING     shift and go to state 50

    expresion                      shift and go to state 101
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48
    casteo_string                  shift and go to state 49

state 67

    (38) expresion -> expresion MENORIGUAL . expresion
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion POTENCIA expresion
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . MENOS expresion
    (34) expresion -> . PARIZQ expresion PARDER
    (35) expresion -> . expresion MAYOR expresion
    (36) expresion -> . expresion MENOR expresion
    (37) expresion -> . expresion MAYORIGUAL expresion
    (38) expresion -> . expresion MENORIGUAL expresion
    (39) expresion -> . expresion IGUALACION expresion
    (40) expresion -> . expresion DISTINTO expresion
    (41) expresion -> . expresion AND expresion
    (42) expresion -> . expresion OR expresion
    (43) expresion -> . NOT expresion
    (44) expresion -> . ENTERO
    (45) expresion -> . DECIMAL
    (46) expresion -> . CADENA
    (47) expresion -> . ID
    (48) expresion -> . TRUE
    (49) expresion -> . FALSE
    (50) expresion -> . ID INCREMENTO
    (51) expresion -> . ID DECREMENTO
    (52) expresion -> . INCREMENTO ID
    (53) expresion -> . DECREMENTO ID
    (54) expresion -> . aproximacion
    (55) expresion -> . exponencial
    (56) expresion -> . to_string
    (57) expresion -> . to_minusculas
    (58) expresion -> . to_mayusculas
    (59) expresion -> . separador
    (60) expresion -> . concatenacion
    (61) expresion -> . casteo_string
    (62) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (69) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41
    CAST_STRING     shift and go to state 50

    expresion                      shift and go to state 102
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48
    casteo_string                  shift and go to state 49

state 68

    (39) expresion -> expresion IGUALACION . expresion
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion POTENCIA expresion
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . MENOS expresion
    (34) expresion -> . PARIZQ expresion PARDER
    (35) expresion -> . expresion MAYOR expresion
    (36) expresion -> . expresion MENOR expresion
    (37) expresion -> . expresion MAYORIGUAL expresion
    (38) expresion -> . expresion MENORIGUAL expresion
    (39) expresion -> . expresion IGUALACION expresion
    (40) expresion -> . expresion DISTINTO expresion
    (41) expresion -> . expresion AND expresion
    (42) expresion -> . expresion OR expresion
    (43) expresion -> . NOT expresion
    (44) expresion -> . ENTERO
    (45) expresion -> . DECIMAL
    (46) expresion -> . CADENA
    (47) expresion -> . ID
    (48) expresion -> . TRUE
    (49) expresion -> . FALSE
    (50) expresion -> . ID INCREMENTO
    (51) expresion -> . ID DECREMENTO
    (52) expresion -> . INCREMENTO ID
    (53) expresion -> . DECREMENTO ID
    (54) expresion -> . aproximacion
    (55) expresion -> . exponencial
    (56) expresion -> . to_string
    (57) expresion -> . to_minusculas
    (58) expresion -> . to_mayusculas
    (59) expresion -> . separador
    (60) expresion -> . concatenacion
    (61) expresion -> . casteo_string
    (62) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (69) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41
    CAST_STRING     shift and go to state 50

    expresion                      shift and go to state 103
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48
    casteo_string                  shift and go to state 49

state 69

    (40) expresion -> expresion DISTINTO . expresion
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion POTENCIA expresion
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . MENOS expresion
    (34) expresion -> . PARIZQ expresion PARDER
    (35) expresion -> . expresion MAYOR expresion
    (36) expresion -> . expresion MENOR expresion
    (37) expresion -> . expresion MAYORIGUAL expresion
    (38) expresion -> . expresion MENORIGUAL expresion
    (39) expresion -> . expresion IGUALACION expresion
    (40) expresion -> . expresion DISTINTO expresion
    (41) expresion -> . expresion AND expresion
    (42) expresion -> . expresion OR expresion
    (43) expresion -> . NOT expresion
    (44) expresion -> . ENTERO
    (45) expresion -> . DECIMAL
    (46) expresion -> . CADENA
    (47) expresion -> . ID
    (48) expresion -> . TRUE
    (49) expresion -> . FALSE
    (50) expresion -> . ID INCREMENTO
    (51) expresion -> . ID DECREMENTO
    (52) expresion -> . INCREMENTO ID
    (53) expresion -> . DECREMENTO ID
    (54) expresion -> . aproximacion
    (55) expresion -> . exponencial
    (56) expresion -> . to_string
    (57) expresion -> . to_minusculas
    (58) expresion -> . to_mayusculas
    (59) expresion -> . separador
    (60) expresion -> . concatenacion
    (61) expresion -> . casteo_string
    (62) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (69) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41
    CAST_STRING     shift and go to state 50

    expresion                      shift and go to state 104
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48
    casteo_string                  shift and go to state 49

state 70

    (41) expresion -> expresion AND . expresion
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion POTENCIA expresion
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . MENOS expresion
    (34) expresion -> . PARIZQ expresion PARDER
    (35) expresion -> . expresion MAYOR expresion
    (36) expresion -> . expresion MENOR expresion
    (37) expresion -> . expresion MAYORIGUAL expresion
    (38) expresion -> . expresion MENORIGUAL expresion
    (39) expresion -> . expresion IGUALACION expresion
    (40) expresion -> . expresion DISTINTO expresion
    (41) expresion -> . expresion AND expresion
    (42) expresion -> . expresion OR expresion
    (43) expresion -> . NOT expresion
    (44) expresion -> . ENTERO
    (45) expresion -> . DECIMAL
    (46) expresion -> . CADENA
    (47) expresion -> . ID
    (48) expresion -> . TRUE
    (49) expresion -> . FALSE
    (50) expresion -> . ID INCREMENTO
    (51) expresion -> . ID DECREMENTO
    (52) expresion -> . INCREMENTO ID
    (53) expresion -> . DECREMENTO ID
    (54) expresion -> . aproximacion
    (55) expresion -> . exponencial
    (56) expresion -> . to_string
    (57) expresion -> . to_minusculas
    (58) expresion -> . to_mayusculas
    (59) expresion -> . separador
    (60) expresion -> . concatenacion
    (61) expresion -> . casteo_string
    (62) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (69) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41
    CAST_STRING     shift and go to state 50

    expresion                      shift and go to state 105
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48
    casteo_string                  shift and go to state 49

state 71

    (42) expresion -> expresion OR . expresion
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion POTENCIA expresion
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . MENOS expresion
    (34) expresion -> . PARIZQ expresion PARDER
    (35) expresion -> . expresion MAYOR expresion
    (36) expresion -> . expresion MENOR expresion
    (37) expresion -> . expresion MAYORIGUAL expresion
    (38) expresion -> . expresion MENORIGUAL expresion
    (39) expresion -> . expresion IGUALACION expresion
    (40) expresion -> . expresion DISTINTO expresion
    (41) expresion -> . expresion AND expresion
    (42) expresion -> . expresion OR expresion
    (43) expresion -> . NOT expresion
    (44) expresion -> . ENTERO
    (45) expresion -> . DECIMAL
    (46) expresion -> . CADENA
    (47) expresion -> . ID
    (48) expresion -> . TRUE
    (49) expresion -> . FALSE
    (50) expresion -> . ID INCREMENTO
    (51) expresion -> . ID DECREMENTO
    (52) expresion -> . INCREMENTO ID
    (53) expresion -> . DECREMENTO ID
    (54) expresion -> . aproximacion
    (55) expresion -> . exponencial
    (56) expresion -> . to_string
    (57) expresion -> . to_minusculas
    (58) expresion -> . to_mayusculas
    (59) expresion -> . separador
    (60) expresion -> . concatenacion
    (61) expresion -> . casteo_string
    (62) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (69) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41
    CAST_STRING     shift and go to state 50

    expresion                      shift and go to state 106
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48
    casteo_string                  shift and go to state 49

state 72

    (62) aproximacion -> expresion PUNTO . TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> expresion PUNTO . TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> expresion PUNTO . TOSTRING PARIZQ PARDER
    (65) to_minusculas -> expresion PUNTO . TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> expresion PUNTO . TOUPPERCASE PARIZQ PARDER
    (67) separador -> expresion PUNTO . SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> expresion PUNTO . CONCAT PARIZQ expresion PARDER

    TOFIXED         shift and go to state 107
    TOEXPONENTIAL   shift and go to state 108
    TOSTRING        shift and go to state 109
    TOLOWERCASE     shift and go to state 110
    TOUPPERCASE     shift and go to state 111
    SPLIT           shift and go to state 112
    CONCAT          shift and go to state 113


state 73

    (33) expresion -> MENOS expresion .
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (35) expresion -> expresion . MAYOR expresion
    (36) expresion -> expresion . MENOR expresion
    (37) expresion -> expresion . MAYORIGUAL expresion
    (38) expresion -> expresion . MENORIGUAL expresion
    (39) expresion -> expresion . IGUALACION expresion
    (40) expresion -> expresion . DISTINTO expresion
    (41) expresion -> expresion . AND expresion
    (42) expresion -> expresion . OR expresion
    (62) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAS             reduce using rule 33 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 33 (expresion -> MENOS expresion .)
    POR             reduce using rule 33 (expresion -> MENOS expresion .)
    DIVIDIDO        reduce using rule 33 (expresion -> MENOS expresion .)
    POTENCIA        reduce using rule 33 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 33 (expresion -> MENOS expresion .)
    MAYOR           reduce using rule 33 (expresion -> MENOS expresion .)
    MENOR           reduce using rule 33 (expresion -> MENOS expresion .)
    MAYORIGUAL      reduce using rule 33 (expresion -> MENOS expresion .)
    MENORIGUAL      reduce using rule 33 (expresion -> MENOS expresion .)
    IGUALACION      reduce using rule 33 (expresion -> MENOS expresion .)
    DISTINTO        reduce using rule 33 (expresion -> MENOS expresion .)
    AND             reduce using rule 33 (expresion -> MENOS expresion .)
    OR              reduce using rule 33 (expresion -> MENOS expresion .)
    PUNTO           reduce using rule 33 (expresion -> MENOS expresion .)
    PTOYCOMA        reduce using rule 33 (expresion -> MENOS expresion .)
    error           reduce using rule 33 (expresion -> MENOS expresion .)
    LET             reduce using rule 33 (expresion -> MENOS expresion .)
    ID              reduce using rule 33 (expresion -> MENOS expresion .)
    CONSOLE         reduce using rule 33 (expresion -> MENOS expresion .)
    RETURN          reduce using rule 33 (expresion -> MENOS expresion .)
    BREAK           reduce using rule 33 (expresion -> MENOS expresion .)
    CONTINUE        reduce using rule 33 (expresion -> MENOS expresion .)
    IF              reduce using rule 33 (expresion -> MENOS expresion .)
    WHILE           reduce using rule 33 (expresion -> MENOS expresion .)
    FOR             reduce using rule 33 (expresion -> MENOS expresion .)
    $end            reduce using rule 33 (expresion -> MENOS expresion .)
    LLADER          reduce using rule 33 (expresion -> MENOS expresion .)
    PARDER          reduce using rule 33 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 58 ]
  ! MENOS           [ shift and go to state 59 ]
  ! POR             [ shift and go to state 60 ]
  ! DIVIDIDO        [ shift and go to state 61 ]
  ! POTENCIA        [ shift and go to state 62 ]
  ! MODULO          [ shift and go to state 63 ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENOR           [ shift and go to state 65 ]
  ! MAYORIGUAL      [ shift and go to state 66 ]
  ! MENORIGUAL      [ shift and go to state 67 ]
  ! IGUALACION      [ shift and go to state 68 ]
  ! DISTINTO        [ shift and go to state 69 ]
  ! AND             [ shift and go to state 70 ]
  ! OR              [ shift and go to state 71 ]
  ! PUNTO           [ shift and go to state 72 ]


state 74

    (34) expresion -> PARIZQ expresion . PARDER
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (35) expresion -> expresion . MAYOR expresion
    (36) expresion -> expresion . MENOR expresion
    (37) expresion -> expresion . MAYORIGUAL expresion
    (38) expresion -> expresion . MENORIGUAL expresion
    (39) expresion -> expresion . IGUALACION expresion
    (40) expresion -> expresion . DISTINTO expresion
    (41) expresion -> expresion . AND expresion
    (42) expresion -> expresion . OR expresion
    (62) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 114
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORIGUAL      shift and go to state 67
    IGUALACION      shift and go to state 68
    DISTINTO        shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    PUNTO           shift and go to state 72


state 75

    (43) expresion -> NOT expresion .
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (35) expresion -> expresion . MAYOR expresion
    (36) expresion -> expresion . MENOR expresion
    (37) expresion -> expresion . MAYORIGUAL expresion
    (38) expresion -> expresion . MENORIGUAL expresion
    (39) expresion -> expresion . IGUALACION expresion
    (40) expresion -> expresion . DISTINTO expresion
    (41) expresion -> expresion . AND expresion
    (42) expresion -> expresion . OR expresion
    (62) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    AND             reduce using rule 43 (expresion -> NOT expresion .)
    OR              reduce using rule 43 (expresion -> NOT expresion .)
    PUNTO           reduce using rule 43 (expresion -> NOT expresion .)
    PTOYCOMA        reduce using rule 43 (expresion -> NOT expresion .)
    error           reduce using rule 43 (expresion -> NOT expresion .)
    LET             reduce using rule 43 (expresion -> NOT expresion .)
    ID              reduce using rule 43 (expresion -> NOT expresion .)
    CONSOLE         reduce using rule 43 (expresion -> NOT expresion .)
    RETURN          reduce using rule 43 (expresion -> NOT expresion .)
    BREAK           reduce using rule 43 (expresion -> NOT expresion .)
    CONTINUE        reduce using rule 43 (expresion -> NOT expresion .)
    IF              reduce using rule 43 (expresion -> NOT expresion .)
    WHILE           reduce using rule 43 (expresion -> NOT expresion .)
    FOR             reduce using rule 43 (expresion -> NOT expresion .)
    $end            reduce using rule 43 (expresion -> NOT expresion .)
    LLADER          reduce using rule 43 (expresion -> NOT expresion .)
    PARDER          reduce using rule 43 (expresion -> NOT expresion .)
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORIGUAL      shift and go to state 67
    IGUALACION      shift and go to state 68
    DISTINTO        shift and go to state 69

  ! MAS             [ reduce using rule 43 (expresion -> NOT expresion .) ]
  ! MENOS           [ reduce using rule 43 (expresion -> NOT expresion .) ]
  ! POR             [ reduce using rule 43 (expresion -> NOT expresion .) ]
  ! DIVIDIDO        [ reduce using rule 43 (expresion -> NOT expresion .) ]
  ! POTENCIA        [ reduce using rule 43 (expresion -> NOT expresion .) ]
  ! MODULO          [ reduce using rule 43 (expresion -> NOT expresion .) ]
  ! MAYOR           [ reduce using rule 43 (expresion -> NOT expresion .) ]
  ! MENOR           [ reduce using rule 43 (expresion -> NOT expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 43 (expresion -> NOT expresion .) ]
  ! MENORIGUAL      [ reduce using rule 43 (expresion -> NOT expresion .) ]
  ! IGUALACION      [ reduce using rule 43 (expresion -> NOT expresion .) ]
  ! DISTINTO        [ reduce using rule 43 (expresion -> NOT expresion .) ]
  ! AND             [ shift and go to state 70 ]
  ! OR              [ shift and go to state 71 ]
  ! PUNTO           [ shift and go to state 72 ]


state 76

    (50) expresion -> ID INCREMENTO .

    MAS             reduce using rule 50 (expresion -> ID INCREMENTO .)
    MENOS           reduce using rule 50 (expresion -> ID INCREMENTO .)
    POR             reduce using rule 50 (expresion -> ID INCREMENTO .)
    DIVIDIDO        reduce using rule 50 (expresion -> ID INCREMENTO .)
    POTENCIA        reduce using rule 50 (expresion -> ID INCREMENTO .)
    MODULO          reduce using rule 50 (expresion -> ID INCREMENTO .)
    MAYOR           reduce using rule 50 (expresion -> ID INCREMENTO .)
    MENOR           reduce using rule 50 (expresion -> ID INCREMENTO .)
    MAYORIGUAL      reduce using rule 50 (expresion -> ID INCREMENTO .)
    MENORIGUAL      reduce using rule 50 (expresion -> ID INCREMENTO .)
    IGUALACION      reduce using rule 50 (expresion -> ID INCREMENTO .)
    DISTINTO        reduce using rule 50 (expresion -> ID INCREMENTO .)
    AND             reduce using rule 50 (expresion -> ID INCREMENTO .)
    OR              reduce using rule 50 (expresion -> ID INCREMENTO .)
    PUNTO           reduce using rule 50 (expresion -> ID INCREMENTO .)
    PTOYCOMA        reduce using rule 50 (expresion -> ID INCREMENTO .)
    error           reduce using rule 50 (expresion -> ID INCREMENTO .)
    LET             reduce using rule 50 (expresion -> ID INCREMENTO .)
    ID              reduce using rule 50 (expresion -> ID INCREMENTO .)
    CONSOLE         reduce using rule 50 (expresion -> ID INCREMENTO .)
    RETURN          reduce using rule 50 (expresion -> ID INCREMENTO .)
    BREAK           reduce using rule 50 (expresion -> ID INCREMENTO .)
    CONTINUE        reduce using rule 50 (expresion -> ID INCREMENTO .)
    IF              reduce using rule 50 (expresion -> ID INCREMENTO .)
    WHILE           reduce using rule 50 (expresion -> ID INCREMENTO .)
    FOR             reduce using rule 50 (expresion -> ID INCREMENTO .)
    $end            reduce using rule 50 (expresion -> ID INCREMENTO .)
    LLADER          reduce using rule 50 (expresion -> ID INCREMENTO .)
    PARDER          reduce using rule 50 (expresion -> ID INCREMENTO .)


state 77

    (51) expresion -> ID DECREMENTO .

    MAS             reduce using rule 51 (expresion -> ID DECREMENTO .)
    MENOS           reduce using rule 51 (expresion -> ID DECREMENTO .)
    POR             reduce using rule 51 (expresion -> ID DECREMENTO .)
    DIVIDIDO        reduce using rule 51 (expresion -> ID DECREMENTO .)
    POTENCIA        reduce using rule 51 (expresion -> ID DECREMENTO .)
    MODULO          reduce using rule 51 (expresion -> ID DECREMENTO .)
    MAYOR           reduce using rule 51 (expresion -> ID DECREMENTO .)
    MENOR           reduce using rule 51 (expresion -> ID DECREMENTO .)
    MAYORIGUAL      reduce using rule 51 (expresion -> ID DECREMENTO .)
    MENORIGUAL      reduce using rule 51 (expresion -> ID DECREMENTO .)
    IGUALACION      reduce using rule 51 (expresion -> ID DECREMENTO .)
    DISTINTO        reduce using rule 51 (expresion -> ID DECREMENTO .)
    AND             reduce using rule 51 (expresion -> ID DECREMENTO .)
    OR              reduce using rule 51 (expresion -> ID DECREMENTO .)
    PUNTO           reduce using rule 51 (expresion -> ID DECREMENTO .)
    PTOYCOMA        reduce using rule 51 (expresion -> ID DECREMENTO .)
    error           reduce using rule 51 (expresion -> ID DECREMENTO .)
    LET             reduce using rule 51 (expresion -> ID DECREMENTO .)
    ID              reduce using rule 51 (expresion -> ID DECREMENTO .)
    CONSOLE         reduce using rule 51 (expresion -> ID DECREMENTO .)
    RETURN          reduce using rule 51 (expresion -> ID DECREMENTO .)
    BREAK           reduce using rule 51 (expresion -> ID DECREMENTO .)
    CONTINUE        reduce using rule 51 (expresion -> ID DECREMENTO .)
    IF              reduce using rule 51 (expresion -> ID DECREMENTO .)
    WHILE           reduce using rule 51 (expresion -> ID DECREMENTO .)
    FOR             reduce using rule 51 (expresion -> ID DECREMENTO .)
    $end            reduce using rule 51 (expresion -> ID DECREMENTO .)
    LLADER          reduce using rule 51 (expresion -> ID DECREMENTO .)
    PARDER          reduce using rule 51 (expresion -> ID DECREMENTO .)


state 78

    (52) expresion -> INCREMENTO ID .

    MAS             reduce using rule 52 (expresion -> INCREMENTO ID .)
    MENOS           reduce using rule 52 (expresion -> INCREMENTO ID .)
    POR             reduce using rule 52 (expresion -> INCREMENTO ID .)
    DIVIDIDO        reduce using rule 52 (expresion -> INCREMENTO ID .)
    POTENCIA        reduce using rule 52 (expresion -> INCREMENTO ID .)
    MODULO          reduce using rule 52 (expresion -> INCREMENTO ID .)
    MAYOR           reduce using rule 52 (expresion -> INCREMENTO ID .)
    MENOR           reduce using rule 52 (expresion -> INCREMENTO ID .)
    MAYORIGUAL      reduce using rule 52 (expresion -> INCREMENTO ID .)
    MENORIGUAL      reduce using rule 52 (expresion -> INCREMENTO ID .)
    IGUALACION      reduce using rule 52 (expresion -> INCREMENTO ID .)
    DISTINTO        reduce using rule 52 (expresion -> INCREMENTO ID .)
    AND             reduce using rule 52 (expresion -> INCREMENTO ID .)
    OR              reduce using rule 52 (expresion -> INCREMENTO ID .)
    PUNTO           reduce using rule 52 (expresion -> INCREMENTO ID .)
    PTOYCOMA        reduce using rule 52 (expresion -> INCREMENTO ID .)
    error           reduce using rule 52 (expresion -> INCREMENTO ID .)
    LET             reduce using rule 52 (expresion -> INCREMENTO ID .)
    ID              reduce using rule 52 (expresion -> INCREMENTO ID .)
    CONSOLE         reduce using rule 52 (expresion -> INCREMENTO ID .)
    RETURN          reduce using rule 52 (expresion -> INCREMENTO ID .)
    BREAK           reduce using rule 52 (expresion -> INCREMENTO ID .)
    CONTINUE        reduce using rule 52 (expresion -> INCREMENTO ID .)
    IF              reduce using rule 52 (expresion -> INCREMENTO ID .)
    WHILE           reduce using rule 52 (expresion -> INCREMENTO ID .)
    FOR             reduce using rule 52 (expresion -> INCREMENTO ID .)
    $end            reduce using rule 52 (expresion -> INCREMENTO ID .)
    LLADER          reduce using rule 52 (expresion -> INCREMENTO ID .)
    PARDER          reduce using rule 52 (expresion -> INCREMENTO ID .)


state 79

    (53) expresion -> DECREMENTO ID .

    MAS             reduce using rule 53 (expresion -> DECREMENTO ID .)
    MENOS           reduce using rule 53 (expresion -> DECREMENTO ID .)
    POR             reduce using rule 53 (expresion -> DECREMENTO ID .)
    DIVIDIDO        reduce using rule 53 (expresion -> DECREMENTO ID .)
    POTENCIA        reduce using rule 53 (expresion -> DECREMENTO ID .)
    MODULO          reduce using rule 53 (expresion -> DECREMENTO ID .)
    MAYOR           reduce using rule 53 (expresion -> DECREMENTO ID .)
    MENOR           reduce using rule 53 (expresion -> DECREMENTO ID .)
    MAYORIGUAL      reduce using rule 53 (expresion -> DECREMENTO ID .)
    MENORIGUAL      reduce using rule 53 (expresion -> DECREMENTO ID .)
    IGUALACION      reduce using rule 53 (expresion -> DECREMENTO ID .)
    DISTINTO        reduce using rule 53 (expresion -> DECREMENTO ID .)
    AND             reduce using rule 53 (expresion -> DECREMENTO ID .)
    OR              reduce using rule 53 (expresion -> DECREMENTO ID .)
    PUNTO           reduce using rule 53 (expresion -> DECREMENTO ID .)
    PTOYCOMA        reduce using rule 53 (expresion -> DECREMENTO ID .)
    error           reduce using rule 53 (expresion -> DECREMENTO ID .)
    LET             reduce using rule 53 (expresion -> DECREMENTO ID .)
    ID              reduce using rule 53 (expresion -> DECREMENTO ID .)
    CONSOLE         reduce using rule 53 (expresion -> DECREMENTO ID .)
    RETURN          reduce using rule 53 (expresion -> DECREMENTO ID .)
    BREAK           reduce using rule 53 (expresion -> DECREMENTO ID .)
    CONTINUE        reduce using rule 53 (expresion -> DECREMENTO ID .)
    IF              reduce using rule 53 (expresion -> DECREMENTO ID .)
    WHILE           reduce using rule 53 (expresion -> DECREMENTO ID .)
    FOR             reduce using rule 53 (expresion -> DECREMENTO ID .)
    $end            reduce using rule 53 (expresion -> DECREMENTO ID .)
    LLADER          reduce using rule 53 (expresion -> DECREMENTO ID .)
    PARDER          reduce using rule 53 (expresion -> DECREMENTO ID .)


state 80

    (69) casteo_string -> CAST_STRING PARIZQ . expresion PARDER
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion POTENCIA expresion
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . MENOS expresion
    (34) expresion -> . PARIZQ expresion PARDER
    (35) expresion -> . expresion MAYOR expresion
    (36) expresion -> . expresion MENOR expresion
    (37) expresion -> . expresion MAYORIGUAL expresion
    (38) expresion -> . expresion MENORIGUAL expresion
    (39) expresion -> . expresion IGUALACION expresion
    (40) expresion -> . expresion DISTINTO expresion
    (41) expresion -> . expresion AND expresion
    (42) expresion -> . expresion OR expresion
    (43) expresion -> . NOT expresion
    (44) expresion -> . ENTERO
    (45) expresion -> . DECIMAL
    (46) expresion -> . CADENA
    (47) expresion -> . ID
    (48) expresion -> . TRUE
    (49) expresion -> . FALSE
    (50) expresion -> . ID INCREMENTO
    (51) expresion -> . ID DECREMENTO
    (52) expresion -> . INCREMENTO ID
    (53) expresion -> . DECREMENTO ID
    (54) expresion -> . aproximacion
    (55) expresion -> . exponencial
    (56) expresion -> . to_string
    (57) expresion -> . to_minusculas
    (58) expresion -> . to_mayusculas
    (59) expresion -> . separador
    (60) expresion -> . concatenacion
    (61) expresion -> . casteo_string
    (62) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (69) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41
    CAST_STRING     shift and go to state 50

    expresion                      shift and go to state 115
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48
    casteo_string                  shift and go to state 49

state 81

    (78) condicional_if -> IF PARIZQ expresion . PARDER bloque
    (79) condicional_if -> IF PARIZQ expresion . PARDER bloque ELSE bloque
    (80) condicional_if -> IF PARIZQ expresion . PARDER bloque lista_elif
    (81) condicional_if -> IF PARIZQ expresion . PARDER bloque lista_elif ELSE bloque
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (35) expresion -> expresion . MAYOR expresion
    (36) expresion -> expresion . MENOR expresion
    (37) expresion -> expresion . MAYORIGUAL expresion
    (38) expresion -> expresion . MENORIGUAL expresion
    (39) expresion -> expresion . IGUALACION expresion
    (40) expresion -> expresion . DISTINTO expresion
    (41) expresion -> expresion . AND expresion
    (42) expresion -> expresion . OR expresion
    (62) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 116
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORIGUAL      shift and go to state 67
    IGUALACION      shift and go to state 68
    DISTINTO        shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    PUNTO           shift and go to state 72


state 82

    (85) ciclo_while -> WHILE PARIZQ expresion . PARDER bloque
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (35) expresion -> expresion . MAYOR expresion
    (36) expresion -> expresion . MENOR expresion
    (37) expresion -> expresion . MAYORIGUAL expresion
    (38) expresion -> expresion . MENORIGUAL expresion
    (39) expresion -> expresion . IGUALACION expresion
    (40) expresion -> expresion . DISTINTO expresion
    (41) expresion -> expresion . AND expresion
    (42) expresion -> expresion . OR expresion
    (62) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 117
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORIGUAL      shift and go to state 67
    IGUALACION      shift and go to state 68
    DISTINTO        shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    PUNTO           shift and go to state 72


state 83

    (86) ciclo_for -> FOR PARIZQ declaracion . PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (88) ciclo_for -> FOR PARIZQ declaracion . PTOYCOMA expresion PTOYCOMA expresion PARDER bloque

    PTOYCOMA        shift and go to state 118


state 84

    (87) ciclo_for -> FOR PARIZQ asignacion . PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (89) ciclo_for -> FOR PARIZQ asignacion . PTOYCOMA expresion PTOYCOMA expresion PARDER bloque

    PTOYCOMA        shift and go to state 119


state 85

    (90) ciclo_for_of -> FOR PARIZQ LET . ID OF expresion PARDER bloque
    (21) declaracion -> LET . ID DOSPUNTOS tipo IGUAL expresion
    (22) declaracion -> LET . ID IGUAL expresion
    (23) declaracion -> LET . ID DOSPUNTOS tipo
    (24) declaracion -> LET . ID

    ID              shift and go to state 120


state 86

    (21) declaracion -> LET ID DOSPUNTOS tipo . IGUAL expresion
    (23) declaracion -> LET ID DOSPUNTOS tipo .

    IGUAL           shift and go to state 121
    PTOYCOMA        reduce using rule 23 (declaracion -> LET ID DOSPUNTOS tipo .)
    error           reduce using rule 23 (declaracion -> LET ID DOSPUNTOS tipo .)
    LET             reduce using rule 23 (declaracion -> LET ID DOSPUNTOS tipo .)
    ID              reduce using rule 23 (declaracion -> LET ID DOSPUNTOS tipo .)
    CONSOLE         reduce using rule 23 (declaracion -> LET ID DOSPUNTOS tipo .)
    RETURN          reduce using rule 23 (declaracion -> LET ID DOSPUNTOS tipo .)
    BREAK           reduce using rule 23 (declaracion -> LET ID DOSPUNTOS tipo .)
    CONTINUE        reduce using rule 23 (declaracion -> LET ID DOSPUNTOS tipo .)
    IF              reduce using rule 23 (declaracion -> LET ID DOSPUNTOS tipo .)
    WHILE           reduce using rule 23 (declaracion -> LET ID DOSPUNTOS tipo .)
    FOR             reduce using rule 23 (declaracion -> LET ID DOSPUNTOS tipo .)
    $end            reduce using rule 23 (declaracion -> LET ID DOSPUNTOS tipo .)
    LLADER          reduce using rule 23 (declaracion -> LET ID DOSPUNTOS tipo .)


state 87

    (70) tipo -> NUMBER .

    IGUAL           reduce using rule 70 (tipo -> NUMBER .)
    PTOYCOMA        reduce using rule 70 (tipo -> NUMBER .)
    error           reduce using rule 70 (tipo -> NUMBER .)
    LET             reduce using rule 70 (tipo -> NUMBER .)
    ID              reduce using rule 70 (tipo -> NUMBER .)
    CONSOLE         reduce using rule 70 (tipo -> NUMBER .)
    RETURN          reduce using rule 70 (tipo -> NUMBER .)
    BREAK           reduce using rule 70 (tipo -> NUMBER .)
    CONTINUE        reduce using rule 70 (tipo -> NUMBER .)
    IF              reduce using rule 70 (tipo -> NUMBER .)
    WHILE           reduce using rule 70 (tipo -> NUMBER .)
    FOR             reduce using rule 70 (tipo -> NUMBER .)
    $end            reduce using rule 70 (tipo -> NUMBER .)
    LLADER          reduce using rule 70 (tipo -> NUMBER .)


state 88

    (71) tipo -> STRING .

    IGUAL           reduce using rule 71 (tipo -> STRING .)
    PTOYCOMA        reduce using rule 71 (tipo -> STRING .)
    error           reduce using rule 71 (tipo -> STRING .)
    LET             reduce using rule 71 (tipo -> STRING .)
    ID              reduce using rule 71 (tipo -> STRING .)
    CONSOLE         reduce using rule 71 (tipo -> STRING .)
    RETURN          reduce using rule 71 (tipo -> STRING .)
    BREAK           reduce using rule 71 (tipo -> STRING .)
    CONTINUE        reduce using rule 71 (tipo -> STRING .)
    IF              reduce using rule 71 (tipo -> STRING .)
    WHILE           reduce using rule 71 (tipo -> STRING .)
    FOR             reduce using rule 71 (tipo -> STRING .)
    $end            reduce using rule 71 (tipo -> STRING .)
    LLADER          reduce using rule 71 (tipo -> STRING .)


state 89

    (72) tipo -> BOOLEAN .

    IGUAL           reduce using rule 72 (tipo -> BOOLEAN .)
    PTOYCOMA        reduce using rule 72 (tipo -> BOOLEAN .)
    error           reduce using rule 72 (tipo -> BOOLEAN .)
    LET             reduce using rule 72 (tipo -> BOOLEAN .)
    ID              reduce using rule 72 (tipo -> BOOLEAN .)
    CONSOLE         reduce using rule 72 (tipo -> BOOLEAN .)
    RETURN          reduce using rule 72 (tipo -> BOOLEAN .)
    BREAK           reduce using rule 72 (tipo -> BOOLEAN .)
    CONTINUE        reduce using rule 72 (tipo -> BOOLEAN .)
    IF              reduce using rule 72 (tipo -> BOOLEAN .)
    WHILE           reduce using rule 72 (tipo -> BOOLEAN .)
    FOR             reduce using rule 72 (tipo -> BOOLEAN .)
    $end            reduce using rule 72 (tipo -> BOOLEAN .)
    LLADER          reduce using rule 72 (tipo -> BOOLEAN .)


state 90

    (73) tipo -> ANY .

    IGUAL           reduce using rule 73 (tipo -> ANY .)
    PTOYCOMA        reduce using rule 73 (tipo -> ANY .)
    error           reduce using rule 73 (tipo -> ANY .)
    LET             reduce using rule 73 (tipo -> ANY .)
    ID              reduce using rule 73 (tipo -> ANY .)
    CONSOLE         reduce using rule 73 (tipo -> ANY .)
    RETURN          reduce using rule 73 (tipo -> ANY .)
    BREAK           reduce using rule 73 (tipo -> ANY .)
    CONTINUE        reduce using rule 73 (tipo -> ANY .)
    IF              reduce using rule 73 (tipo -> ANY .)
    WHILE           reduce using rule 73 (tipo -> ANY .)
    FOR             reduce using rule 73 (tipo -> ANY .)
    $end            reduce using rule 73 (tipo -> ANY .)
    LLADER          reduce using rule 73 (tipo -> ANY .)


state 91

    (22) declaracion -> LET ID IGUAL expresion .
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (35) expresion -> expresion . MAYOR expresion
    (36) expresion -> expresion . MENOR expresion
    (37) expresion -> expresion . MAYORIGUAL expresion
    (38) expresion -> expresion . MENORIGUAL expresion
    (39) expresion -> expresion . IGUALACION expresion
    (40) expresion -> expresion . DISTINTO expresion
    (41) expresion -> expresion . AND expresion
    (42) expresion -> expresion . OR expresion
    (62) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PTOYCOMA        reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    error           reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    LET             reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    ID              reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    CONSOLE         reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    RETURN          reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    BREAK           reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    CONTINUE        reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    IF              reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    WHILE           reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    FOR             reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    $end            reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    LLADER          reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORIGUAL      shift and go to state 67
    IGUALACION      shift and go to state 68
    DISTINTO        shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    PUNTO           shift and go to state 72


state 92

    (26) impresion -> CONSOLE PUNTO LOG PARIZQ . expresion PARDER
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion POTENCIA expresion
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . MENOS expresion
    (34) expresion -> . PARIZQ expresion PARDER
    (35) expresion -> . expresion MAYOR expresion
    (36) expresion -> . expresion MENOR expresion
    (37) expresion -> . expresion MAYORIGUAL expresion
    (38) expresion -> . expresion MENORIGUAL expresion
    (39) expresion -> . expresion IGUALACION expresion
    (40) expresion -> . expresion DISTINTO expresion
    (41) expresion -> . expresion AND expresion
    (42) expresion -> . expresion OR expresion
    (43) expresion -> . NOT expresion
    (44) expresion -> . ENTERO
    (45) expresion -> . DECIMAL
    (46) expresion -> . CADENA
    (47) expresion -> . ID
    (48) expresion -> . TRUE
    (49) expresion -> . FALSE
    (50) expresion -> . ID INCREMENTO
    (51) expresion -> . ID DECREMENTO
    (52) expresion -> . INCREMENTO ID
    (53) expresion -> . DECREMENTO ID
    (54) expresion -> . aproximacion
    (55) expresion -> . exponencial
    (56) expresion -> . to_string
    (57) expresion -> . to_minusculas
    (58) expresion -> . to_mayusculas
    (59) expresion -> . separador
    (60) expresion -> . concatenacion
    (61) expresion -> . casteo_string
    (62) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (69) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41
    CAST_STRING     shift and go to state 50

    expresion                      shift and go to state 122
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48
    casteo_string                  shift and go to state 49

state 93

    (27) expresion -> expresion MAS expresion .
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (35) expresion -> expresion . MAYOR expresion
    (36) expresion -> expresion . MENOR expresion
    (37) expresion -> expresion . MAYORIGUAL expresion
    (38) expresion -> expresion . MENORIGUAL expresion
    (39) expresion -> expresion . IGUALACION expresion
    (40) expresion -> expresion . DISTINTO expresion
    (41) expresion -> expresion . AND expresion
    (42) expresion -> expresion . OR expresion
    (62) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAS             reduce using rule 27 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 27 (expresion -> expresion MAS expresion .)
    MAYOR           reduce using rule 27 (expresion -> expresion MAS expresion .)
    MENOR           reduce using rule 27 (expresion -> expresion MAS expresion .)
    MAYORIGUAL      reduce using rule 27 (expresion -> expresion MAS expresion .)
    MENORIGUAL      reduce using rule 27 (expresion -> expresion MAS expresion .)
    IGUALACION      reduce using rule 27 (expresion -> expresion MAS expresion .)
    DISTINTO        reduce using rule 27 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 27 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 27 (expresion -> expresion MAS expresion .)
    PUNTO           reduce using rule 27 (expresion -> expresion MAS expresion .)
    PTOYCOMA        reduce using rule 27 (expresion -> expresion MAS expresion .)
    error           reduce using rule 27 (expresion -> expresion MAS expresion .)
    LET             reduce using rule 27 (expresion -> expresion MAS expresion .)
    ID              reduce using rule 27 (expresion -> expresion MAS expresion .)
    CONSOLE         reduce using rule 27 (expresion -> expresion MAS expresion .)
    RETURN          reduce using rule 27 (expresion -> expresion MAS expresion .)
    BREAK           reduce using rule 27 (expresion -> expresion MAS expresion .)
    CONTINUE        reduce using rule 27 (expresion -> expresion MAS expresion .)
    IF              reduce using rule 27 (expresion -> expresion MAS expresion .)
    WHILE           reduce using rule 27 (expresion -> expresion MAS expresion .)
    FOR             reduce using rule 27 (expresion -> expresion MAS expresion .)
    $end            reduce using rule 27 (expresion -> expresion MAS expresion .)
    LLADER          reduce using rule 27 (expresion -> expresion MAS expresion .)
    PARDER          reduce using rule 27 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63

  ! POR             [ reduce using rule 27 (expresion -> expresion MAS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 27 (expresion -> expresion MAS expresion .) ]
  ! POTENCIA        [ reduce using rule 27 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 27 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 58 ]
  ! MENOS           [ shift and go to state 59 ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENOR           [ shift and go to state 65 ]
  ! MAYORIGUAL      [ shift and go to state 66 ]
  ! MENORIGUAL      [ shift and go to state 67 ]
  ! IGUALACION      [ shift and go to state 68 ]
  ! DISTINTO        [ shift and go to state 69 ]
  ! AND             [ shift and go to state 70 ]
  ! OR              [ shift and go to state 71 ]
  ! PUNTO           [ shift and go to state 72 ]


state 94

    (28) expresion -> expresion MENOS expresion .
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (35) expresion -> expresion . MAYOR expresion
    (36) expresion -> expresion . MENOR expresion
    (37) expresion -> expresion . MAYORIGUAL expresion
    (38) expresion -> expresion . MENORIGUAL expresion
    (39) expresion -> expresion . IGUALACION expresion
    (40) expresion -> expresion . DISTINTO expresion
    (41) expresion -> expresion . AND expresion
    (42) expresion -> expresion . OR expresion
    (62) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAS             reduce using rule 28 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 28 (expresion -> expresion MENOS expresion .)
    MAYOR           reduce using rule 28 (expresion -> expresion MENOS expresion .)
    MENOR           reduce using rule 28 (expresion -> expresion MENOS expresion .)
    MAYORIGUAL      reduce using rule 28 (expresion -> expresion MENOS expresion .)
    MENORIGUAL      reduce using rule 28 (expresion -> expresion MENOS expresion .)
    IGUALACION      reduce using rule 28 (expresion -> expresion MENOS expresion .)
    DISTINTO        reduce using rule 28 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 28 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 28 (expresion -> expresion MENOS expresion .)
    PUNTO           reduce using rule 28 (expresion -> expresion MENOS expresion .)
    PTOYCOMA        reduce using rule 28 (expresion -> expresion MENOS expresion .)
    error           reduce using rule 28 (expresion -> expresion MENOS expresion .)
    LET             reduce using rule 28 (expresion -> expresion MENOS expresion .)
    ID              reduce using rule 28 (expresion -> expresion MENOS expresion .)
    CONSOLE         reduce using rule 28 (expresion -> expresion MENOS expresion .)
    RETURN          reduce using rule 28 (expresion -> expresion MENOS expresion .)
    BREAK           reduce using rule 28 (expresion -> expresion MENOS expresion .)
    CONTINUE        reduce using rule 28 (expresion -> expresion MENOS expresion .)
    IF              reduce using rule 28 (expresion -> expresion MENOS expresion .)
    WHILE           reduce using rule 28 (expresion -> expresion MENOS expresion .)
    FOR             reduce using rule 28 (expresion -> expresion MENOS expresion .)
    $end            reduce using rule 28 (expresion -> expresion MENOS expresion .)
    LLADER          reduce using rule 28 (expresion -> expresion MENOS expresion .)
    PARDER          reduce using rule 28 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63

  ! POR             [ reduce using rule 28 (expresion -> expresion MENOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 28 (expresion -> expresion MENOS expresion .) ]
  ! POTENCIA        [ reduce using rule 28 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 28 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 58 ]
  ! MENOS           [ shift and go to state 59 ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENOR           [ shift and go to state 65 ]
  ! MAYORIGUAL      [ shift and go to state 66 ]
  ! MENORIGUAL      [ shift and go to state 67 ]
  ! IGUALACION      [ shift and go to state 68 ]
  ! DISTINTO        [ shift and go to state 69 ]
  ! AND             [ shift and go to state 70 ]
  ! OR              [ shift and go to state 71 ]
  ! PUNTO           [ shift and go to state 72 ]


state 95

    (29) expresion -> expresion POR expresion .
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (35) expresion -> expresion . MAYOR expresion
    (36) expresion -> expresion . MENOR expresion
    (37) expresion -> expresion . MAYORIGUAL expresion
    (38) expresion -> expresion . MENORIGUAL expresion
    (39) expresion -> expresion . IGUALACION expresion
    (40) expresion -> expresion . DISTINTO expresion
    (41) expresion -> expresion . AND expresion
    (42) expresion -> expresion . OR expresion
    (62) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAS             reduce using rule 29 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 29 (expresion -> expresion POR expresion .)
    POR             reduce using rule 29 (expresion -> expresion POR expresion .)
    DIVIDIDO        reduce using rule 29 (expresion -> expresion POR expresion .)
    MODULO          reduce using rule 29 (expresion -> expresion POR expresion .)
    MAYOR           reduce using rule 29 (expresion -> expresion POR expresion .)
    MENOR           reduce using rule 29 (expresion -> expresion POR expresion .)
    MAYORIGUAL      reduce using rule 29 (expresion -> expresion POR expresion .)
    MENORIGUAL      reduce using rule 29 (expresion -> expresion POR expresion .)
    IGUALACION      reduce using rule 29 (expresion -> expresion POR expresion .)
    DISTINTO        reduce using rule 29 (expresion -> expresion POR expresion .)
    AND             reduce using rule 29 (expresion -> expresion POR expresion .)
    OR              reduce using rule 29 (expresion -> expresion POR expresion .)
    PUNTO           reduce using rule 29 (expresion -> expresion POR expresion .)
    PTOYCOMA        reduce using rule 29 (expresion -> expresion POR expresion .)
    error           reduce using rule 29 (expresion -> expresion POR expresion .)
    LET             reduce using rule 29 (expresion -> expresion POR expresion .)
    ID              reduce using rule 29 (expresion -> expresion POR expresion .)
    CONSOLE         reduce using rule 29 (expresion -> expresion POR expresion .)
    RETURN          reduce using rule 29 (expresion -> expresion POR expresion .)
    BREAK           reduce using rule 29 (expresion -> expresion POR expresion .)
    CONTINUE        reduce using rule 29 (expresion -> expresion POR expresion .)
    IF              reduce using rule 29 (expresion -> expresion POR expresion .)
    WHILE           reduce using rule 29 (expresion -> expresion POR expresion .)
    FOR             reduce using rule 29 (expresion -> expresion POR expresion .)
    $end            reduce using rule 29 (expresion -> expresion POR expresion .)
    LLADER          reduce using rule 29 (expresion -> expresion POR expresion .)
    PARDER          reduce using rule 29 (expresion -> expresion POR expresion .)
    POTENCIA        shift and go to state 62

  ! POTENCIA        [ reduce using rule 29 (expresion -> expresion POR expresion .) ]
  ! MAS             [ shift and go to state 58 ]
  ! MENOS           [ shift and go to state 59 ]
  ! POR             [ shift and go to state 60 ]
  ! DIVIDIDO        [ shift and go to state 61 ]
  ! MODULO          [ shift and go to state 63 ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENOR           [ shift and go to state 65 ]
  ! MAYORIGUAL      [ shift and go to state 66 ]
  ! MENORIGUAL      [ shift and go to state 67 ]
  ! IGUALACION      [ shift and go to state 68 ]
  ! DISTINTO        [ shift and go to state 69 ]
  ! AND             [ shift and go to state 70 ]
  ! OR              [ shift and go to state 71 ]
  ! PUNTO           [ shift and go to state 72 ]


state 96

    (30) expresion -> expresion DIVIDIDO expresion .
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (35) expresion -> expresion . MAYOR expresion
    (36) expresion -> expresion . MENOR expresion
    (37) expresion -> expresion . MAYORIGUAL expresion
    (38) expresion -> expresion . MENORIGUAL expresion
    (39) expresion -> expresion . IGUALACION expresion
    (40) expresion -> expresion . DISTINTO expresion
    (41) expresion -> expresion . AND expresion
    (42) expresion -> expresion . OR expresion
    (62) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAS             reduce using rule 30 (expresion -> expresion DIVIDIDO expresion .)
    MENOS           reduce using rule 30 (expresion -> expresion DIVIDIDO expresion .)
    POR             reduce using rule 30 (expresion -> expresion DIVIDIDO expresion .)
    DIVIDIDO        reduce using rule 30 (expresion -> expresion DIVIDIDO expresion .)
    MODULO          reduce using rule 30 (expresion -> expresion DIVIDIDO expresion .)
    MAYOR           reduce using rule 30 (expresion -> expresion DIVIDIDO expresion .)
    MENOR           reduce using rule 30 (expresion -> expresion DIVIDIDO expresion .)
    MAYORIGUAL      reduce using rule 30 (expresion -> expresion DIVIDIDO expresion .)
    MENORIGUAL      reduce using rule 30 (expresion -> expresion DIVIDIDO expresion .)
    IGUALACION      reduce using rule 30 (expresion -> expresion DIVIDIDO expresion .)
    DISTINTO        reduce using rule 30 (expresion -> expresion DIVIDIDO expresion .)
    AND             reduce using rule 30 (expresion -> expresion DIVIDIDO expresion .)
    OR              reduce using rule 30 (expresion -> expresion DIVIDIDO expresion .)
    PUNTO           reduce using rule 30 (expresion -> expresion DIVIDIDO expresion .)
    PTOYCOMA        reduce using rule 30 (expresion -> expresion DIVIDIDO expresion .)
    error           reduce using rule 30 (expresion -> expresion DIVIDIDO expresion .)
    LET             reduce using rule 30 (expresion -> expresion DIVIDIDO expresion .)
    ID              reduce using rule 30 (expresion -> expresion DIVIDIDO expresion .)
    CONSOLE         reduce using rule 30 (expresion -> expresion DIVIDIDO expresion .)
    RETURN          reduce using rule 30 (expresion -> expresion DIVIDIDO expresion .)
    BREAK           reduce using rule 30 (expresion -> expresion DIVIDIDO expresion .)
    CONTINUE        reduce using rule 30 (expresion -> expresion DIVIDIDO expresion .)
    IF              reduce using rule 30 (expresion -> expresion DIVIDIDO expresion .)
    WHILE           reduce using rule 30 (expresion -> expresion DIVIDIDO expresion .)
    FOR             reduce using rule 30 (expresion -> expresion DIVIDIDO expresion .)
    $end            reduce using rule 30 (expresion -> expresion DIVIDIDO expresion .)
    LLADER          reduce using rule 30 (expresion -> expresion DIVIDIDO expresion .)
    PARDER          reduce using rule 30 (expresion -> expresion DIVIDIDO expresion .)
    POTENCIA        shift and go to state 62

  ! POTENCIA        [ reduce using rule 30 (expresion -> expresion DIVIDIDO expresion .) ]
  ! MAS             [ shift and go to state 58 ]
  ! MENOS           [ shift and go to state 59 ]
  ! POR             [ shift and go to state 60 ]
  ! DIVIDIDO        [ shift and go to state 61 ]
  ! MODULO          [ shift and go to state 63 ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENOR           [ shift and go to state 65 ]
  ! MAYORIGUAL      [ shift and go to state 66 ]
  ! MENORIGUAL      [ shift and go to state 67 ]
  ! IGUALACION      [ shift and go to state 68 ]
  ! DISTINTO        [ shift and go to state 69 ]
  ! AND             [ shift and go to state 70 ]
  ! OR              [ shift and go to state 71 ]
  ! PUNTO           [ shift and go to state 72 ]


state 97

    (31) expresion -> expresion POTENCIA expresion .
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (35) expresion -> expresion . MAYOR expresion
    (36) expresion -> expresion . MENOR expresion
    (37) expresion -> expresion . MAYORIGUAL expresion
    (38) expresion -> expresion . MENORIGUAL expresion
    (39) expresion -> expresion . IGUALACION expresion
    (40) expresion -> expresion . DISTINTO expresion
    (41) expresion -> expresion . AND expresion
    (42) expresion -> expresion . OR expresion
    (62) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAS             reduce using rule 31 (expresion -> expresion POTENCIA expresion .)
    MENOS           reduce using rule 31 (expresion -> expresion POTENCIA expresion .)
    POR             reduce using rule 31 (expresion -> expresion POTENCIA expresion .)
    DIVIDIDO        reduce using rule 31 (expresion -> expresion POTENCIA expresion .)
    POTENCIA        reduce using rule 31 (expresion -> expresion POTENCIA expresion .)
    MODULO          reduce using rule 31 (expresion -> expresion POTENCIA expresion .)
    MAYOR           reduce using rule 31 (expresion -> expresion POTENCIA expresion .)
    MENOR           reduce using rule 31 (expresion -> expresion POTENCIA expresion .)
    MAYORIGUAL      reduce using rule 31 (expresion -> expresion POTENCIA expresion .)
    MENORIGUAL      reduce using rule 31 (expresion -> expresion POTENCIA expresion .)
    IGUALACION      reduce using rule 31 (expresion -> expresion POTENCIA expresion .)
    DISTINTO        reduce using rule 31 (expresion -> expresion POTENCIA expresion .)
    AND             reduce using rule 31 (expresion -> expresion POTENCIA expresion .)
    OR              reduce using rule 31 (expresion -> expresion POTENCIA expresion .)
    PUNTO           reduce using rule 31 (expresion -> expresion POTENCIA expresion .)
    PTOYCOMA        reduce using rule 31 (expresion -> expresion POTENCIA expresion .)
    error           reduce using rule 31 (expresion -> expresion POTENCIA expresion .)
    LET             reduce using rule 31 (expresion -> expresion POTENCIA expresion .)
    ID              reduce using rule 31 (expresion -> expresion POTENCIA expresion .)
    CONSOLE         reduce using rule 31 (expresion -> expresion POTENCIA expresion .)
    RETURN          reduce using rule 31 (expresion -> expresion POTENCIA expresion .)
    BREAK           reduce using rule 31 (expresion -> expresion POTENCIA expresion .)
    CONTINUE        reduce using rule 31 (expresion -> expresion POTENCIA expresion .)
    IF              reduce using rule 31 (expresion -> expresion POTENCIA expresion .)
    WHILE           reduce using rule 31 (expresion -> expresion POTENCIA expresion .)
    FOR             reduce using rule 31 (expresion -> expresion POTENCIA expresion .)
    $end            reduce using rule 31 (expresion -> expresion POTENCIA expresion .)
    LLADER          reduce using rule 31 (expresion -> expresion POTENCIA expresion .)
    PARDER          reduce using rule 31 (expresion -> expresion POTENCIA expresion .)

  ! MAS             [ shift and go to state 58 ]
  ! MENOS           [ shift and go to state 59 ]
  ! POR             [ shift and go to state 60 ]
  ! DIVIDIDO        [ shift and go to state 61 ]
  ! POTENCIA        [ shift and go to state 62 ]
  ! MODULO          [ shift and go to state 63 ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENOR           [ shift and go to state 65 ]
  ! MAYORIGUAL      [ shift and go to state 66 ]
  ! MENORIGUAL      [ shift and go to state 67 ]
  ! IGUALACION      [ shift and go to state 68 ]
  ! DISTINTO        [ shift and go to state 69 ]
  ! AND             [ shift and go to state 70 ]
  ! OR              [ shift and go to state 71 ]
  ! PUNTO           [ shift and go to state 72 ]


state 98

    (32) expresion -> expresion MODULO expresion .
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (35) expresion -> expresion . MAYOR expresion
    (36) expresion -> expresion . MENOR expresion
    (37) expresion -> expresion . MAYORIGUAL expresion
    (38) expresion -> expresion . MENORIGUAL expresion
    (39) expresion -> expresion . IGUALACION expresion
    (40) expresion -> expresion . DISTINTO expresion
    (41) expresion -> expresion . AND expresion
    (42) expresion -> expresion . OR expresion
    (62) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAS             reduce using rule 32 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 32 (expresion -> expresion MODULO expresion .)
    POR             reduce using rule 32 (expresion -> expresion MODULO expresion .)
    DIVIDIDO        reduce using rule 32 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 32 (expresion -> expresion MODULO expresion .)
    MAYOR           reduce using rule 32 (expresion -> expresion MODULO expresion .)
    MENOR           reduce using rule 32 (expresion -> expresion MODULO expresion .)
    MAYORIGUAL      reduce using rule 32 (expresion -> expresion MODULO expresion .)
    MENORIGUAL      reduce using rule 32 (expresion -> expresion MODULO expresion .)
    IGUALACION      reduce using rule 32 (expresion -> expresion MODULO expresion .)
    DISTINTO        reduce using rule 32 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 32 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 32 (expresion -> expresion MODULO expresion .)
    PUNTO           reduce using rule 32 (expresion -> expresion MODULO expresion .)
    PTOYCOMA        reduce using rule 32 (expresion -> expresion MODULO expresion .)
    error           reduce using rule 32 (expresion -> expresion MODULO expresion .)
    LET             reduce using rule 32 (expresion -> expresion MODULO expresion .)
    ID              reduce using rule 32 (expresion -> expresion MODULO expresion .)
    CONSOLE         reduce using rule 32 (expresion -> expresion MODULO expresion .)
    RETURN          reduce using rule 32 (expresion -> expresion MODULO expresion .)
    BREAK           reduce using rule 32 (expresion -> expresion MODULO expresion .)
    CONTINUE        reduce using rule 32 (expresion -> expresion MODULO expresion .)
    IF              reduce using rule 32 (expresion -> expresion MODULO expresion .)
    WHILE           reduce using rule 32 (expresion -> expresion MODULO expresion .)
    FOR             reduce using rule 32 (expresion -> expresion MODULO expresion .)
    $end            reduce using rule 32 (expresion -> expresion MODULO expresion .)
    LLADER          reduce using rule 32 (expresion -> expresion MODULO expresion .)
    PARDER          reduce using rule 32 (expresion -> expresion MODULO expresion .)
    POTENCIA        shift and go to state 62

  ! POTENCIA        [ reduce using rule 32 (expresion -> expresion MODULO expresion .) ]
  ! MAS             [ shift and go to state 58 ]
  ! MENOS           [ shift and go to state 59 ]
  ! POR             [ shift and go to state 60 ]
  ! DIVIDIDO        [ shift and go to state 61 ]
  ! MODULO          [ shift and go to state 63 ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENOR           [ shift and go to state 65 ]
  ! MAYORIGUAL      [ shift and go to state 66 ]
  ! MENORIGUAL      [ shift and go to state 67 ]
  ! IGUALACION      [ shift and go to state 68 ]
  ! DISTINTO        [ shift and go to state 69 ]
  ! AND             [ shift and go to state 70 ]
  ! OR              [ shift and go to state 71 ]
  ! PUNTO           [ shift and go to state 72 ]


state 99

    (35) expresion -> expresion MAYOR expresion .
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (35) expresion -> expresion . MAYOR expresion
    (36) expresion -> expresion . MENOR expresion
    (37) expresion -> expresion . MAYORIGUAL expresion
    (38) expresion -> expresion . MENORIGUAL expresion
    (39) expresion -> expresion . IGUALACION expresion
    (40) expresion -> expresion . DISTINTO expresion
    (41) expresion -> expresion . AND expresion
    (42) expresion -> expresion . OR expresion
    (62) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAYOR           reduce using rule 35 (expresion -> expresion MAYOR expresion .)
    MENOR           reduce using rule 35 (expresion -> expresion MAYOR expresion .)
    MAYORIGUAL      reduce using rule 35 (expresion -> expresion MAYOR expresion .)
    MENORIGUAL      reduce using rule 35 (expresion -> expresion MAYOR expresion .)
    IGUALACION      reduce using rule 35 (expresion -> expresion MAYOR expresion .)
    DISTINTO        reduce using rule 35 (expresion -> expresion MAYOR expresion .)
    AND             reduce using rule 35 (expresion -> expresion MAYOR expresion .)
    OR              reduce using rule 35 (expresion -> expresion MAYOR expresion .)
    PUNTO           reduce using rule 35 (expresion -> expresion MAYOR expresion .)
    PTOYCOMA        reduce using rule 35 (expresion -> expresion MAYOR expresion .)
    error           reduce using rule 35 (expresion -> expresion MAYOR expresion .)
    LET             reduce using rule 35 (expresion -> expresion MAYOR expresion .)
    ID              reduce using rule 35 (expresion -> expresion MAYOR expresion .)
    CONSOLE         reduce using rule 35 (expresion -> expresion MAYOR expresion .)
    RETURN          reduce using rule 35 (expresion -> expresion MAYOR expresion .)
    BREAK           reduce using rule 35 (expresion -> expresion MAYOR expresion .)
    CONTINUE        reduce using rule 35 (expresion -> expresion MAYOR expresion .)
    IF              reduce using rule 35 (expresion -> expresion MAYOR expresion .)
    WHILE           reduce using rule 35 (expresion -> expresion MAYOR expresion .)
    FOR             reduce using rule 35 (expresion -> expresion MAYOR expresion .)
    $end            reduce using rule 35 (expresion -> expresion MAYOR expresion .)
    LLADER          reduce using rule 35 (expresion -> expresion MAYOR expresion .)
    PARDER          reduce using rule 35 (expresion -> expresion MAYOR expresion .)
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63

  ! MAS             [ reduce using rule 35 (expresion -> expresion MAYOR expresion .) ]
  ! MENOS           [ reduce using rule 35 (expresion -> expresion MAYOR expresion .) ]
  ! POR             [ reduce using rule 35 (expresion -> expresion MAYOR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 35 (expresion -> expresion MAYOR expresion .) ]
  ! POTENCIA        [ reduce using rule 35 (expresion -> expresion MAYOR expresion .) ]
  ! MODULO          [ reduce using rule 35 (expresion -> expresion MAYOR expresion .) ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENOR           [ shift and go to state 65 ]
  ! MAYORIGUAL      [ shift and go to state 66 ]
  ! MENORIGUAL      [ shift and go to state 67 ]
  ! IGUALACION      [ shift and go to state 68 ]
  ! DISTINTO        [ shift and go to state 69 ]
  ! AND             [ shift and go to state 70 ]
  ! OR              [ shift and go to state 71 ]
  ! PUNTO           [ shift and go to state 72 ]


state 100

    (36) expresion -> expresion MENOR expresion .
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (35) expresion -> expresion . MAYOR expresion
    (36) expresion -> expresion . MENOR expresion
    (37) expresion -> expresion . MAYORIGUAL expresion
    (38) expresion -> expresion . MENORIGUAL expresion
    (39) expresion -> expresion . IGUALACION expresion
    (40) expresion -> expresion . DISTINTO expresion
    (41) expresion -> expresion . AND expresion
    (42) expresion -> expresion . OR expresion
    (62) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAYOR           reduce using rule 36 (expresion -> expresion MENOR expresion .)
    MENOR           reduce using rule 36 (expresion -> expresion MENOR expresion .)
    MAYORIGUAL      reduce using rule 36 (expresion -> expresion MENOR expresion .)
    MENORIGUAL      reduce using rule 36 (expresion -> expresion MENOR expresion .)
    IGUALACION      reduce using rule 36 (expresion -> expresion MENOR expresion .)
    DISTINTO        reduce using rule 36 (expresion -> expresion MENOR expresion .)
    AND             reduce using rule 36 (expresion -> expresion MENOR expresion .)
    OR              reduce using rule 36 (expresion -> expresion MENOR expresion .)
    PUNTO           reduce using rule 36 (expresion -> expresion MENOR expresion .)
    PTOYCOMA        reduce using rule 36 (expresion -> expresion MENOR expresion .)
    error           reduce using rule 36 (expresion -> expresion MENOR expresion .)
    LET             reduce using rule 36 (expresion -> expresion MENOR expresion .)
    ID              reduce using rule 36 (expresion -> expresion MENOR expresion .)
    CONSOLE         reduce using rule 36 (expresion -> expresion MENOR expresion .)
    RETURN          reduce using rule 36 (expresion -> expresion MENOR expresion .)
    BREAK           reduce using rule 36 (expresion -> expresion MENOR expresion .)
    CONTINUE        reduce using rule 36 (expresion -> expresion MENOR expresion .)
    IF              reduce using rule 36 (expresion -> expresion MENOR expresion .)
    WHILE           reduce using rule 36 (expresion -> expresion MENOR expresion .)
    FOR             reduce using rule 36 (expresion -> expresion MENOR expresion .)
    $end            reduce using rule 36 (expresion -> expresion MENOR expresion .)
    LLADER          reduce using rule 36 (expresion -> expresion MENOR expresion .)
    PARDER          reduce using rule 36 (expresion -> expresion MENOR expresion .)
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63

  ! MAS             [ reduce using rule 36 (expresion -> expresion MENOR expresion .) ]
  ! MENOS           [ reduce using rule 36 (expresion -> expresion MENOR expresion .) ]
  ! POR             [ reduce using rule 36 (expresion -> expresion MENOR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 36 (expresion -> expresion MENOR expresion .) ]
  ! POTENCIA        [ reduce using rule 36 (expresion -> expresion MENOR expresion .) ]
  ! MODULO          [ reduce using rule 36 (expresion -> expresion MENOR expresion .) ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENOR           [ shift and go to state 65 ]
  ! MAYORIGUAL      [ shift and go to state 66 ]
  ! MENORIGUAL      [ shift and go to state 67 ]
  ! IGUALACION      [ shift and go to state 68 ]
  ! DISTINTO        [ shift and go to state 69 ]
  ! AND             [ shift and go to state 70 ]
  ! OR              [ shift and go to state 71 ]
  ! PUNTO           [ shift and go to state 72 ]


state 101

    (37) expresion -> expresion MAYORIGUAL expresion .
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (35) expresion -> expresion . MAYOR expresion
    (36) expresion -> expresion . MENOR expresion
    (37) expresion -> expresion . MAYORIGUAL expresion
    (38) expresion -> expresion . MENORIGUAL expresion
    (39) expresion -> expresion . IGUALACION expresion
    (40) expresion -> expresion . DISTINTO expresion
    (41) expresion -> expresion . AND expresion
    (42) expresion -> expresion . OR expresion
    (62) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAYOR           reduce using rule 37 (expresion -> expresion MAYORIGUAL expresion .)
    MENOR           reduce using rule 37 (expresion -> expresion MAYORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 37 (expresion -> expresion MAYORIGUAL expresion .)
    MENORIGUAL      reduce using rule 37 (expresion -> expresion MAYORIGUAL expresion .)
    IGUALACION      reduce using rule 37 (expresion -> expresion MAYORIGUAL expresion .)
    DISTINTO        reduce using rule 37 (expresion -> expresion MAYORIGUAL expresion .)
    AND             reduce using rule 37 (expresion -> expresion MAYORIGUAL expresion .)
    OR              reduce using rule 37 (expresion -> expresion MAYORIGUAL expresion .)
    PUNTO           reduce using rule 37 (expresion -> expresion MAYORIGUAL expresion .)
    PTOYCOMA        reduce using rule 37 (expresion -> expresion MAYORIGUAL expresion .)
    error           reduce using rule 37 (expresion -> expresion MAYORIGUAL expresion .)
    LET             reduce using rule 37 (expresion -> expresion MAYORIGUAL expresion .)
    ID              reduce using rule 37 (expresion -> expresion MAYORIGUAL expresion .)
    CONSOLE         reduce using rule 37 (expresion -> expresion MAYORIGUAL expresion .)
    RETURN          reduce using rule 37 (expresion -> expresion MAYORIGUAL expresion .)
    BREAK           reduce using rule 37 (expresion -> expresion MAYORIGUAL expresion .)
    CONTINUE        reduce using rule 37 (expresion -> expresion MAYORIGUAL expresion .)
    IF              reduce using rule 37 (expresion -> expresion MAYORIGUAL expresion .)
    WHILE           reduce using rule 37 (expresion -> expresion MAYORIGUAL expresion .)
    FOR             reduce using rule 37 (expresion -> expresion MAYORIGUAL expresion .)
    $end            reduce using rule 37 (expresion -> expresion MAYORIGUAL expresion .)
    LLADER          reduce using rule 37 (expresion -> expresion MAYORIGUAL expresion .)
    PARDER          reduce using rule 37 (expresion -> expresion MAYORIGUAL expresion .)
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63

  ! MAS             [ reduce using rule 37 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 37 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! POR             [ reduce using rule 37 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! DIVIDIDO        [ reduce using rule 37 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! POTENCIA        [ reduce using rule 37 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 37 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENOR           [ shift and go to state 65 ]
  ! MAYORIGUAL      [ shift and go to state 66 ]
  ! MENORIGUAL      [ shift and go to state 67 ]
  ! IGUALACION      [ shift and go to state 68 ]
  ! DISTINTO        [ shift and go to state 69 ]
  ! AND             [ shift and go to state 70 ]
  ! OR              [ shift and go to state 71 ]
  ! PUNTO           [ shift and go to state 72 ]


state 102

    (38) expresion -> expresion MENORIGUAL expresion .
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (35) expresion -> expresion . MAYOR expresion
    (36) expresion -> expresion . MENOR expresion
    (37) expresion -> expresion . MAYORIGUAL expresion
    (38) expresion -> expresion . MENORIGUAL expresion
    (39) expresion -> expresion . IGUALACION expresion
    (40) expresion -> expresion . DISTINTO expresion
    (41) expresion -> expresion . AND expresion
    (42) expresion -> expresion . OR expresion
    (62) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAYOR           reduce using rule 38 (expresion -> expresion MENORIGUAL expresion .)
    MENOR           reduce using rule 38 (expresion -> expresion MENORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 38 (expresion -> expresion MENORIGUAL expresion .)
    MENORIGUAL      reduce using rule 38 (expresion -> expresion MENORIGUAL expresion .)
    IGUALACION      reduce using rule 38 (expresion -> expresion MENORIGUAL expresion .)
    DISTINTO        reduce using rule 38 (expresion -> expresion MENORIGUAL expresion .)
    AND             reduce using rule 38 (expresion -> expresion MENORIGUAL expresion .)
    OR              reduce using rule 38 (expresion -> expresion MENORIGUAL expresion .)
    PUNTO           reduce using rule 38 (expresion -> expresion MENORIGUAL expresion .)
    PTOYCOMA        reduce using rule 38 (expresion -> expresion MENORIGUAL expresion .)
    error           reduce using rule 38 (expresion -> expresion MENORIGUAL expresion .)
    LET             reduce using rule 38 (expresion -> expresion MENORIGUAL expresion .)
    ID              reduce using rule 38 (expresion -> expresion MENORIGUAL expresion .)
    CONSOLE         reduce using rule 38 (expresion -> expresion MENORIGUAL expresion .)
    RETURN          reduce using rule 38 (expresion -> expresion MENORIGUAL expresion .)
    BREAK           reduce using rule 38 (expresion -> expresion MENORIGUAL expresion .)
    CONTINUE        reduce using rule 38 (expresion -> expresion MENORIGUAL expresion .)
    IF              reduce using rule 38 (expresion -> expresion MENORIGUAL expresion .)
    WHILE           reduce using rule 38 (expresion -> expresion MENORIGUAL expresion .)
    FOR             reduce using rule 38 (expresion -> expresion MENORIGUAL expresion .)
    $end            reduce using rule 38 (expresion -> expresion MENORIGUAL expresion .)
    LLADER          reduce using rule 38 (expresion -> expresion MENORIGUAL expresion .)
    PARDER          reduce using rule 38 (expresion -> expresion MENORIGUAL expresion .)
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63

  ! MAS             [ reduce using rule 38 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 38 (expresion -> expresion MENORIGUAL expresion .) ]
  ! POR             [ reduce using rule 38 (expresion -> expresion MENORIGUAL expresion .) ]
  ! DIVIDIDO        [ reduce using rule 38 (expresion -> expresion MENORIGUAL expresion .) ]
  ! POTENCIA        [ reduce using rule 38 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 38 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENOR           [ shift and go to state 65 ]
  ! MAYORIGUAL      [ shift and go to state 66 ]
  ! MENORIGUAL      [ shift and go to state 67 ]
  ! IGUALACION      [ shift and go to state 68 ]
  ! DISTINTO        [ shift and go to state 69 ]
  ! AND             [ shift and go to state 70 ]
  ! OR              [ shift and go to state 71 ]
  ! PUNTO           [ shift and go to state 72 ]


state 103

    (39) expresion -> expresion IGUALACION expresion .
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (35) expresion -> expresion . MAYOR expresion
    (36) expresion -> expresion . MENOR expresion
    (37) expresion -> expresion . MAYORIGUAL expresion
    (38) expresion -> expresion . MENORIGUAL expresion
    (39) expresion -> expresion . IGUALACION expresion
    (40) expresion -> expresion . DISTINTO expresion
    (41) expresion -> expresion . AND expresion
    (42) expresion -> expresion . OR expresion
    (62) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAYOR           reduce using rule 39 (expresion -> expresion IGUALACION expresion .)
    MENOR           reduce using rule 39 (expresion -> expresion IGUALACION expresion .)
    MAYORIGUAL      reduce using rule 39 (expresion -> expresion IGUALACION expresion .)
    MENORIGUAL      reduce using rule 39 (expresion -> expresion IGUALACION expresion .)
    IGUALACION      reduce using rule 39 (expresion -> expresion IGUALACION expresion .)
    DISTINTO        reduce using rule 39 (expresion -> expresion IGUALACION expresion .)
    AND             reduce using rule 39 (expresion -> expresion IGUALACION expresion .)
    OR              reduce using rule 39 (expresion -> expresion IGUALACION expresion .)
    PUNTO           reduce using rule 39 (expresion -> expresion IGUALACION expresion .)
    PTOYCOMA        reduce using rule 39 (expresion -> expresion IGUALACION expresion .)
    error           reduce using rule 39 (expresion -> expresion IGUALACION expresion .)
    LET             reduce using rule 39 (expresion -> expresion IGUALACION expresion .)
    ID              reduce using rule 39 (expresion -> expresion IGUALACION expresion .)
    CONSOLE         reduce using rule 39 (expresion -> expresion IGUALACION expresion .)
    RETURN          reduce using rule 39 (expresion -> expresion IGUALACION expresion .)
    BREAK           reduce using rule 39 (expresion -> expresion IGUALACION expresion .)
    CONTINUE        reduce using rule 39 (expresion -> expresion IGUALACION expresion .)
    IF              reduce using rule 39 (expresion -> expresion IGUALACION expresion .)
    WHILE           reduce using rule 39 (expresion -> expresion IGUALACION expresion .)
    FOR             reduce using rule 39 (expresion -> expresion IGUALACION expresion .)
    $end            reduce using rule 39 (expresion -> expresion IGUALACION expresion .)
    LLADER          reduce using rule 39 (expresion -> expresion IGUALACION expresion .)
    PARDER          reduce using rule 39 (expresion -> expresion IGUALACION expresion .)
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63

  ! MAS             [ reduce using rule 39 (expresion -> expresion IGUALACION expresion .) ]
  ! MENOS           [ reduce using rule 39 (expresion -> expresion IGUALACION expresion .) ]
  ! POR             [ reduce using rule 39 (expresion -> expresion IGUALACION expresion .) ]
  ! DIVIDIDO        [ reduce using rule 39 (expresion -> expresion IGUALACION expresion .) ]
  ! POTENCIA        [ reduce using rule 39 (expresion -> expresion IGUALACION expresion .) ]
  ! MODULO          [ reduce using rule 39 (expresion -> expresion IGUALACION expresion .) ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENOR           [ shift and go to state 65 ]
  ! MAYORIGUAL      [ shift and go to state 66 ]
  ! MENORIGUAL      [ shift and go to state 67 ]
  ! IGUALACION      [ shift and go to state 68 ]
  ! DISTINTO        [ shift and go to state 69 ]
  ! AND             [ shift and go to state 70 ]
  ! OR              [ shift and go to state 71 ]
  ! PUNTO           [ shift and go to state 72 ]


state 104

    (40) expresion -> expresion DISTINTO expresion .
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (35) expresion -> expresion . MAYOR expresion
    (36) expresion -> expresion . MENOR expresion
    (37) expresion -> expresion . MAYORIGUAL expresion
    (38) expresion -> expresion . MENORIGUAL expresion
    (39) expresion -> expresion . IGUALACION expresion
    (40) expresion -> expresion . DISTINTO expresion
    (41) expresion -> expresion . AND expresion
    (42) expresion -> expresion . OR expresion
    (62) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAYOR           reduce using rule 40 (expresion -> expresion DISTINTO expresion .)
    MENOR           reduce using rule 40 (expresion -> expresion DISTINTO expresion .)
    MAYORIGUAL      reduce using rule 40 (expresion -> expresion DISTINTO expresion .)
    MENORIGUAL      reduce using rule 40 (expresion -> expresion DISTINTO expresion .)
    IGUALACION      reduce using rule 40 (expresion -> expresion DISTINTO expresion .)
    DISTINTO        reduce using rule 40 (expresion -> expresion DISTINTO expresion .)
    AND             reduce using rule 40 (expresion -> expresion DISTINTO expresion .)
    OR              reduce using rule 40 (expresion -> expresion DISTINTO expresion .)
    PUNTO           reduce using rule 40 (expresion -> expresion DISTINTO expresion .)
    PTOYCOMA        reduce using rule 40 (expresion -> expresion DISTINTO expresion .)
    error           reduce using rule 40 (expresion -> expresion DISTINTO expresion .)
    LET             reduce using rule 40 (expresion -> expresion DISTINTO expresion .)
    ID              reduce using rule 40 (expresion -> expresion DISTINTO expresion .)
    CONSOLE         reduce using rule 40 (expresion -> expresion DISTINTO expresion .)
    RETURN          reduce using rule 40 (expresion -> expresion DISTINTO expresion .)
    BREAK           reduce using rule 40 (expresion -> expresion DISTINTO expresion .)
    CONTINUE        reduce using rule 40 (expresion -> expresion DISTINTO expresion .)
    IF              reduce using rule 40 (expresion -> expresion DISTINTO expresion .)
    WHILE           reduce using rule 40 (expresion -> expresion DISTINTO expresion .)
    FOR             reduce using rule 40 (expresion -> expresion DISTINTO expresion .)
    $end            reduce using rule 40 (expresion -> expresion DISTINTO expresion .)
    LLADER          reduce using rule 40 (expresion -> expresion DISTINTO expresion .)
    PARDER          reduce using rule 40 (expresion -> expresion DISTINTO expresion .)
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63

  ! MAS             [ reduce using rule 40 (expresion -> expresion DISTINTO expresion .) ]
  ! MENOS           [ reduce using rule 40 (expresion -> expresion DISTINTO expresion .) ]
  ! POR             [ reduce using rule 40 (expresion -> expresion DISTINTO expresion .) ]
  ! DIVIDIDO        [ reduce using rule 40 (expresion -> expresion DISTINTO expresion .) ]
  ! POTENCIA        [ reduce using rule 40 (expresion -> expresion DISTINTO expresion .) ]
  ! MODULO          [ reduce using rule 40 (expresion -> expresion DISTINTO expresion .) ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENOR           [ shift and go to state 65 ]
  ! MAYORIGUAL      [ shift and go to state 66 ]
  ! MENORIGUAL      [ shift and go to state 67 ]
  ! IGUALACION      [ shift and go to state 68 ]
  ! DISTINTO        [ shift and go to state 69 ]
  ! AND             [ shift and go to state 70 ]
  ! OR              [ shift and go to state 71 ]
  ! PUNTO           [ shift and go to state 72 ]


state 105

    (41) expresion -> expresion AND expresion .
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (35) expresion -> expresion . MAYOR expresion
    (36) expresion -> expresion . MENOR expresion
    (37) expresion -> expresion . MAYORIGUAL expresion
    (38) expresion -> expresion . MENORIGUAL expresion
    (39) expresion -> expresion . IGUALACION expresion
    (40) expresion -> expresion . DISTINTO expresion
    (41) expresion -> expresion . AND expresion
    (42) expresion -> expresion . OR expresion
    (62) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    AND             reduce using rule 41 (expresion -> expresion AND expresion .)
    OR              reduce using rule 41 (expresion -> expresion AND expresion .)
    PUNTO           reduce using rule 41 (expresion -> expresion AND expresion .)
    PTOYCOMA        reduce using rule 41 (expresion -> expresion AND expresion .)
    error           reduce using rule 41 (expresion -> expresion AND expresion .)
    LET             reduce using rule 41 (expresion -> expresion AND expresion .)
    ID              reduce using rule 41 (expresion -> expresion AND expresion .)
    CONSOLE         reduce using rule 41 (expresion -> expresion AND expresion .)
    RETURN          reduce using rule 41 (expresion -> expresion AND expresion .)
    BREAK           reduce using rule 41 (expresion -> expresion AND expresion .)
    CONTINUE        reduce using rule 41 (expresion -> expresion AND expresion .)
    IF              reduce using rule 41 (expresion -> expresion AND expresion .)
    WHILE           reduce using rule 41 (expresion -> expresion AND expresion .)
    FOR             reduce using rule 41 (expresion -> expresion AND expresion .)
    $end            reduce using rule 41 (expresion -> expresion AND expresion .)
    LLADER          reduce using rule 41 (expresion -> expresion AND expresion .)
    PARDER          reduce using rule 41 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORIGUAL      shift and go to state 67
    IGUALACION      shift and go to state 68
    DISTINTO        shift and go to state 69

  ! MAS             [ reduce using rule 41 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 41 (expresion -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 41 (expresion -> expresion AND expresion .) ]
  ! DIVIDIDO        [ reduce using rule 41 (expresion -> expresion AND expresion .) ]
  ! POTENCIA        [ reduce using rule 41 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 41 (expresion -> expresion AND expresion .) ]
  ! MAYOR           [ reduce using rule 41 (expresion -> expresion AND expresion .) ]
  ! MENOR           [ reduce using rule 41 (expresion -> expresion AND expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 41 (expresion -> expresion AND expresion .) ]
  ! MENORIGUAL      [ reduce using rule 41 (expresion -> expresion AND expresion .) ]
  ! IGUALACION      [ reduce using rule 41 (expresion -> expresion AND expresion .) ]
  ! DISTINTO        [ reduce using rule 41 (expresion -> expresion AND expresion .) ]
  ! AND             [ shift and go to state 70 ]
  ! OR              [ shift and go to state 71 ]
  ! PUNTO           [ shift and go to state 72 ]


state 106

    (42) expresion -> expresion OR expresion .
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (35) expresion -> expresion . MAYOR expresion
    (36) expresion -> expresion . MENOR expresion
    (37) expresion -> expresion . MAYORIGUAL expresion
    (38) expresion -> expresion . MENORIGUAL expresion
    (39) expresion -> expresion . IGUALACION expresion
    (40) expresion -> expresion . DISTINTO expresion
    (41) expresion -> expresion . AND expresion
    (42) expresion -> expresion . OR expresion
    (62) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    OR              reduce using rule 42 (expresion -> expresion OR expresion .)
    PUNTO           reduce using rule 42 (expresion -> expresion OR expresion .)
    PTOYCOMA        reduce using rule 42 (expresion -> expresion OR expresion .)
    error           reduce using rule 42 (expresion -> expresion OR expresion .)
    LET             reduce using rule 42 (expresion -> expresion OR expresion .)
    ID              reduce using rule 42 (expresion -> expresion OR expresion .)
    CONSOLE         reduce using rule 42 (expresion -> expresion OR expresion .)
    RETURN          reduce using rule 42 (expresion -> expresion OR expresion .)
    BREAK           reduce using rule 42 (expresion -> expresion OR expresion .)
    CONTINUE        reduce using rule 42 (expresion -> expresion OR expresion .)
    IF              reduce using rule 42 (expresion -> expresion OR expresion .)
    WHILE           reduce using rule 42 (expresion -> expresion OR expresion .)
    FOR             reduce using rule 42 (expresion -> expresion OR expresion .)
    $end            reduce using rule 42 (expresion -> expresion OR expresion .)
    LLADER          reduce using rule 42 (expresion -> expresion OR expresion .)
    PARDER          reduce using rule 42 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORIGUAL      shift and go to state 67
    IGUALACION      shift and go to state 68
    DISTINTO        shift and go to state 69
    AND             shift and go to state 70

  ! MAS             [ reduce using rule 42 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 42 (expresion -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 42 (expresion -> expresion OR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 42 (expresion -> expresion OR expresion .) ]
  ! POTENCIA        [ reduce using rule 42 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 42 (expresion -> expresion OR expresion .) ]
  ! MAYOR           [ reduce using rule 42 (expresion -> expresion OR expresion .) ]
  ! MENOR           [ reduce using rule 42 (expresion -> expresion OR expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 42 (expresion -> expresion OR expresion .) ]
  ! MENORIGUAL      [ reduce using rule 42 (expresion -> expresion OR expresion .) ]
  ! IGUALACION      [ reduce using rule 42 (expresion -> expresion OR expresion .) ]
  ! DISTINTO        [ reduce using rule 42 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 42 (expresion -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 71 ]
  ! PUNTO           [ shift and go to state 72 ]


state 107

    (62) aproximacion -> expresion PUNTO TOFIXED . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 123


state 108

    (63) exponencial -> expresion PUNTO TOEXPONENTIAL . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 124


state 109

    (64) to_string -> expresion PUNTO TOSTRING . PARIZQ PARDER

    PARIZQ          shift and go to state 125


state 110

    (65) to_minusculas -> expresion PUNTO TOLOWERCASE . PARIZQ PARDER

    PARIZQ          shift and go to state 126


state 111

    (66) to_mayusculas -> expresion PUNTO TOUPPERCASE . PARIZQ PARDER

    PARIZQ          shift and go to state 127


state 112

    (67) separador -> expresion PUNTO SPLIT . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 128


state 113

    (68) concatenacion -> expresion PUNTO CONCAT . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 129


state 114

    (34) expresion -> PARIZQ expresion PARDER .

    MAS             reduce using rule 34 (expresion -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 34 (expresion -> PARIZQ expresion PARDER .)
    POR             reduce using rule 34 (expresion -> PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 34 (expresion -> PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 34 (expresion -> PARIZQ expresion PARDER .)
    MODULO          reduce using rule 34 (expresion -> PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 34 (expresion -> PARIZQ expresion PARDER .)
    MENOR           reduce using rule 34 (expresion -> PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 34 (expresion -> PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 34 (expresion -> PARIZQ expresion PARDER .)
    IGUALACION      reduce using rule 34 (expresion -> PARIZQ expresion PARDER .)
    DISTINTO        reduce using rule 34 (expresion -> PARIZQ expresion PARDER .)
    AND             reduce using rule 34 (expresion -> PARIZQ expresion PARDER .)
    OR              reduce using rule 34 (expresion -> PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 34 (expresion -> PARIZQ expresion PARDER .)
    PTOYCOMA        reduce using rule 34 (expresion -> PARIZQ expresion PARDER .)
    error           reduce using rule 34 (expresion -> PARIZQ expresion PARDER .)
    LET             reduce using rule 34 (expresion -> PARIZQ expresion PARDER .)
    ID              reduce using rule 34 (expresion -> PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 34 (expresion -> PARIZQ expresion PARDER .)
    RETURN          reduce using rule 34 (expresion -> PARIZQ expresion PARDER .)
    BREAK           reduce using rule 34 (expresion -> PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 34 (expresion -> PARIZQ expresion PARDER .)
    IF              reduce using rule 34 (expresion -> PARIZQ expresion PARDER .)
    WHILE           reduce using rule 34 (expresion -> PARIZQ expresion PARDER .)
    FOR             reduce using rule 34 (expresion -> PARIZQ expresion PARDER .)
    $end            reduce using rule 34 (expresion -> PARIZQ expresion PARDER .)
    LLADER          reduce using rule 34 (expresion -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 34 (expresion -> PARIZQ expresion PARDER .)


state 115

    (69) casteo_string -> CAST_STRING PARIZQ expresion . PARDER
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (35) expresion -> expresion . MAYOR expresion
    (36) expresion -> expresion . MENOR expresion
    (37) expresion -> expresion . MAYORIGUAL expresion
    (38) expresion -> expresion . MENORIGUAL expresion
    (39) expresion -> expresion . IGUALACION expresion
    (40) expresion -> expresion . DISTINTO expresion
    (41) expresion -> expresion . AND expresion
    (42) expresion -> expresion . OR expresion
    (62) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 130
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORIGUAL      shift and go to state 67
    IGUALACION      shift and go to state 68
    DISTINTO        shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    PUNTO           shift and go to state 72


state 116

    (78) condicional_if -> IF PARIZQ expresion PARDER . bloque
    (79) condicional_if -> IF PARIZQ expresion PARDER . bloque ELSE bloque
    (80) condicional_if -> IF PARIZQ expresion PARDER . bloque lista_elif
    (81) condicional_if -> IF PARIZQ expresion PARDER . bloque lista_elif ELSE bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 132

    bloque                         shift and go to state 131

state 117

    (85) ciclo_while -> WHILE PARIZQ expresion PARDER . bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 132

    bloque                         shift and go to state 133

state 118

    (86) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA . expresion PTOYCOMA asignacion PARDER bloque
    (88) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA . expresion PTOYCOMA expresion PARDER bloque
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion POTENCIA expresion
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . MENOS expresion
    (34) expresion -> . PARIZQ expresion PARDER
    (35) expresion -> . expresion MAYOR expresion
    (36) expresion -> . expresion MENOR expresion
    (37) expresion -> . expresion MAYORIGUAL expresion
    (38) expresion -> . expresion MENORIGUAL expresion
    (39) expresion -> . expresion IGUALACION expresion
    (40) expresion -> . expresion DISTINTO expresion
    (41) expresion -> . expresion AND expresion
    (42) expresion -> . expresion OR expresion
    (43) expresion -> . NOT expresion
    (44) expresion -> . ENTERO
    (45) expresion -> . DECIMAL
    (46) expresion -> . CADENA
    (47) expresion -> . ID
    (48) expresion -> . TRUE
    (49) expresion -> . FALSE
    (50) expresion -> . ID INCREMENTO
    (51) expresion -> . ID DECREMENTO
    (52) expresion -> . INCREMENTO ID
    (53) expresion -> . DECREMENTO ID
    (54) expresion -> . aproximacion
    (55) expresion -> . exponencial
    (56) expresion -> . to_string
    (57) expresion -> . to_minusculas
    (58) expresion -> . to_mayusculas
    (59) expresion -> . separador
    (60) expresion -> . concatenacion
    (61) expresion -> . casteo_string
    (62) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (69) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41
    CAST_STRING     shift and go to state 50

    expresion                      shift and go to state 134
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48
    casteo_string                  shift and go to state 49

state 119

    (87) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA . expresion PTOYCOMA asignacion PARDER bloque
    (89) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA . expresion PTOYCOMA expresion PARDER bloque
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion POTENCIA expresion
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . MENOS expresion
    (34) expresion -> . PARIZQ expresion PARDER
    (35) expresion -> . expresion MAYOR expresion
    (36) expresion -> . expresion MENOR expresion
    (37) expresion -> . expresion MAYORIGUAL expresion
    (38) expresion -> . expresion MENORIGUAL expresion
    (39) expresion -> . expresion IGUALACION expresion
    (40) expresion -> . expresion DISTINTO expresion
    (41) expresion -> . expresion AND expresion
    (42) expresion -> . expresion OR expresion
    (43) expresion -> . NOT expresion
    (44) expresion -> . ENTERO
    (45) expresion -> . DECIMAL
    (46) expresion -> . CADENA
    (47) expresion -> . ID
    (48) expresion -> . TRUE
    (49) expresion -> . FALSE
    (50) expresion -> . ID INCREMENTO
    (51) expresion -> . ID DECREMENTO
    (52) expresion -> . INCREMENTO ID
    (53) expresion -> . DECREMENTO ID
    (54) expresion -> . aproximacion
    (55) expresion -> . exponencial
    (56) expresion -> . to_string
    (57) expresion -> . to_minusculas
    (58) expresion -> . to_mayusculas
    (59) expresion -> . separador
    (60) expresion -> . concatenacion
    (61) expresion -> . casteo_string
    (62) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (69) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41
    CAST_STRING     shift and go to state 50

    expresion                      shift and go to state 135
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48
    casteo_string                  shift and go to state 49

state 120

    (90) ciclo_for_of -> FOR PARIZQ LET ID . OF expresion PARDER bloque
    (21) declaracion -> LET ID . DOSPUNTOS tipo IGUAL expresion
    (22) declaracion -> LET ID . IGUAL expresion
    (23) declaracion -> LET ID . DOSPUNTOS tipo
    (24) declaracion -> LET ID .

    OF              shift and go to state 136
    DOSPUNTOS       shift and go to state 54
    IGUAL           shift and go to state 55
    PTOYCOMA        reduce using rule 24 (declaracion -> LET ID .)


state 121

    (21) declaracion -> LET ID DOSPUNTOS tipo IGUAL . expresion
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion POTENCIA expresion
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . MENOS expresion
    (34) expresion -> . PARIZQ expresion PARDER
    (35) expresion -> . expresion MAYOR expresion
    (36) expresion -> . expresion MENOR expresion
    (37) expresion -> . expresion MAYORIGUAL expresion
    (38) expresion -> . expresion MENORIGUAL expresion
    (39) expresion -> . expresion IGUALACION expresion
    (40) expresion -> . expresion DISTINTO expresion
    (41) expresion -> . expresion AND expresion
    (42) expresion -> . expresion OR expresion
    (43) expresion -> . NOT expresion
    (44) expresion -> . ENTERO
    (45) expresion -> . DECIMAL
    (46) expresion -> . CADENA
    (47) expresion -> . ID
    (48) expresion -> . TRUE
    (49) expresion -> . FALSE
    (50) expresion -> . ID INCREMENTO
    (51) expresion -> . ID DECREMENTO
    (52) expresion -> . INCREMENTO ID
    (53) expresion -> . DECREMENTO ID
    (54) expresion -> . aproximacion
    (55) expresion -> . exponencial
    (56) expresion -> . to_string
    (57) expresion -> . to_minusculas
    (58) expresion -> . to_mayusculas
    (59) expresion -> . separador
    (60) expresion -> . concatenacion
    (61) expresion -> . casteo_string
    (62) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (69) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41
    CAST_STRING     shift and go to state 50

    expresion                      shift and go to state 137
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48
    casteo_string                  shift and go to state 49

state 122

    (26) impresion -> CONSOLE PUNTO LOG PARIZQ expresion . PARDER
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (35) expresion -> expresion . MAYOR expresion
    (36) expresion -> expresion . MENOR expresion
    (37) expresion -> expresion . MAYORIGUAL expresion
    (38) expresion -> expresion . MENORIGUAL expresion
    (39) expresion -> expresion . IGUALACION expresion
    (40) expresion -> expresion . DISTINTO expresion
    (41) expresion -> expresion . AND expresion
    (42) expresion -> expresion . OR expresion
    (62) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 138
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORIGUAL      shift and go to state 67
    IGUALACION      shift and go to state 68
    DISTINTO        shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    PUNTO           shift and go to state 72


state 123

    (62) aproximacion -> expresion PUNTO TOFIXED PARIZQ . expresion PARDER
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion POTENCIA expresion
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . MENOS expresion
    (34) expresion -> . PARIZQ expresion PARDER
    (35) expresion -> . expresion MAYOR expresion
    (36) expresion -> . expresion MENOR expresion
    (37) expresion -> . expresion MAYORIGUAL expresion
    (38) expresion -> . expresion MENORIGUAL expresion
    (39) expresion -> . expresion IGUALACION expresion
    (40) expresion -> . expresion DISTINTO expresion
    (41) expresion -> . expresion AND expresion
    (42) expresion -> . expresion OR expresion
    (43) expresion -> . NOT expresion
    (44) expresion -> . ENTERO
    (45) expresion -> . DECIMAL
    (46) expresion -> . CADENA
    (47) expresion -> . ID
    (48) expresion -> . TRUE
    (49) expresion -> . FALSE
    (50) expresion -> . ID INCREMENTO
    (51) expresion -> . ID DECREMENTO
    (52) expresion -> . INCREMENTO ID
    (53) expresion -> . DECREMENTO ID
    (54) expresion -> . aproximacion
    (55) expresion -> . exponencial
    (56) expresion -> . to_string
    (57) expresion -> . to_minusculas
    (58) expresion -> . to_mayusculas
    (59) expresion -> . separador
    (60) expresion -> . concatenacion
    (61) expresion -> . casteo_string
    (62) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (69) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41
    CAST_STRING     shift and go to state 50

    expresion                      shift and go to state 139
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48
    casteo_string                  shift and go to state 49

state 124

    (63) exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ . expresion PARDER
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion POTENCIA expresion
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . MENOS expresion
    (34) expresion -> . PARIZQ expresion PARDER
    (35) expresion -> . expresion MAYOR expresion
    (36) expresion -> . expresion MENOR expresion
    (37) expresion -> . expresion MAYORIGUAL expresion
    (38) expresion -> . expresion MENORIGUAL expresion
    (39) expresion -> . expresion IGUALACION expresion
    (40) expresion -> . expresion DISTINTO expresion
    (41) expresion -> . expresion AND expresion
    (42) expresion -> . expresion OR expresion
    (43) expresion -> . NOT expresion
    (44) expresion -> . ENTERO
    (45) expresion -> . DECIMAL
    (46) expresion -> . CADENA
    (47) expresion -> . ID
    (48) expresion -> . TRUE
    (49) expresion -> . FALSE
    (50) expresion -> . ID INCREMENTO
    (51) expresion -> . ID DECREMENTO
    (52) expresion -> . INCREMENTO ID
    (53) expresion -> . DECREMENTO ID
    (54) expresion -> . aproximacion
    (55) expresion -> . exponencial
    (56) expresion -> . to_string
    (57) expresion -> . to_minusculas
    (58) expresion -> . to_mayusculas
    (59) expresion -> . separador
    (60) expresion -> . concatenacion
    (61) expresion -> . casteo_string
    (62) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (69) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41
    CAST_STRING     shift and go to state 50

    expresion                      shift and go to state 140
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48
    casteo_string                  shift and go to state 49

state 125

    (64) to_string -> expresion PUNTO TOSTRING PARIZQ . PARDER

    PARDER          shift and go to state 141


state 126

    (65) to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ . PARDER

    PARDER          shift and go to state 142


state 127

    (66) to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ . PARDER

    PARDER          shift and go to state 143


state 128

    (67) separador -> expresion PUNTO SPLIT PARIZQ . expresion PARDER
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion POTENCIA expresion
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . MENOS expresion
    (34) expresion -> . PARIZQ expresion PARDER
    (35) expresion -> . expresion MAYOR expresion
    (36) expresion -> . expresion MENOR expresion
    (37) expresion -> . expresion MAYORIGUAL expresion
    (38) expresion -> . expresion MENORIGUAL expresion
    (39) expresion -> . expresion IGUALACION expresion
    (40) expresion -> . expresion DISTINTO expresion
    (41) expresion -> . expresion AND expresion
    (42) expresion -> . expresion OR expresion
    (43) expresion -> . NOT expresion
    (44) expresion -> . ENTERO
    (45) expresion -> . DECIMAL
    (46) expresion -> . CADENA
    (47) expresion -> . ID
    (48) expresion -> . TRUE
    (49) expresion -> . FALSE
    (50) expresion -> . ID INCREMENTO
    (51) expresion -> . ID DECREMENTO
    (52) expresion -> . INCREMENTO ID
    (53) expresion -> . DECREMENTO ID
    (54) expresion -> . aproximacion
    (55) expresion -> . exponencial
    (56) expresion -> . to_string
    (57) expresion -> . to_minusculas
    (58) expresion -> . to_mayusculas
    (59) expresion -> . separador
    (60) expresion -> . concatenacion
    (61) expresion -> . casteo_string
    (62) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (69) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41
    CAST_STRING     shift and go to state 50

    expresion                      shift and go to state 144
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48
    casteo_string                  shift and go to state 49

state 129

    (68) concatenacion -> expresion PUNTO CONCAT PARIZQ . expresion PARDER
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion POTENCIA expresion
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . MENOS expresion
    (34) expresion -> . PARIZQ expresion PARDER
    (35) expresion -> . expresion MAYOR expresion
    (36) expresion -> . expresion MENOR expresion
    (37) expresion -> . expresion MAYORIGUAL expresion
    (38) expresion -> . expresion MENORIGUAL expresion
    (39) expresion -> . expresion IGUALACION expresion
    (40) expresion -> . expresion DISTINTO expresion
    (41) expresion -> . expresion AND expresion
    (42) expresion -> . expresion OR expresion
    (43) expresion -> . NOT expresion
    (44) expresion -> . ENTERO
    (45) expresion -> . DECIMAL
    (46) expresion -> . CADENA
    (47) expresion -> . ID
    (48) expresion -> . TRUE
    (49) expresion -> . FALSE
    (50) expresion -> . ID INCREMENTO
    (51) expresion -> . ID DECREMENTO
    (52) expresion -> . INCREMENTO ID
    (53) expresion -> . DECREMENTO ID
    (54) expresion -> . aproximacion
    (55) expresion -> . exponencial
    (56) expresion -> . to_string
    (57) expresion -> . to_minusculas
    (58) expresion -> . to_mayusculas
    (59) expresion -> . separador
    (60) expresion -> . concatenacion
    (61) expresion -> . casteo_string
    (62) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (69) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41
    CAST_STRING     shift and go to state 50

    expresion                      shift and go to state 145
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48
    casteo_string                  shift and go to state 49

state 130

    (69) casteo_string -> CAST_STRING PARIZQ expresion PARDER .

    MAS             reduce using rule 69 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    MENOS           reduce using rule 69 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    POR             reduce using rule 69 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 69 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 69 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    MODULO          reduce using rule 69 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 69 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    MENOR           reduce using rule 69 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 69 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 69 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    IGUALACION      reduce using rule 69 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    DISTINTO        reduce using rule 69 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    AND             reduce using rule 69 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    OR              reduce using rule 69 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 69 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    PTOYCOMA        reduce using rule 69 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    error           reduce using rule 69 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    LET             reduce using rule 69 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    ID              reduce using rule 69 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 69 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    RETURN          reduce using rule 69 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    BREAK           reduce using rule 69 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 69 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    IF              reduce using rule 69 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    WHILE           reduce using rule 69 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    FOR             reduce using rule 69 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    $end            reduce using rule 69 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    LLADER          reduce using rule 69 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    PARDER          reduce using rule 69 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)


state 131

    (78) condicional_if -> IF PARIZQ expresion PARDER bloque .
    (79) condicional_if -> IF PARIZQ expresion PARDER bloque . ELSE bloque
    (80) condicional_if -> IF PARIZQ expresion PARDER bloque . lista_elif
    (81) condicional_if -> IF PARIZQ expresion PARDER bloque . lista_elif ELSE bloque
    (82) lista_elif -> . lista_elif elif
    (83) lista_elif -> . elif
    (84) elif -> . ELSE IF PARIZQ expresion PARDER bloque

    PTOYCOMA        reduce using rule 78 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    error           reduce using rule 78 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    LET             reduce using rule 78 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    ID              reduce using rule 78 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    CONSOLE         reduce using rule 78 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    RETURN          reduce using rule 78 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    BREAK           reduce using rule 78 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    CONTINUE        reduce using rule 78 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    IF              reduce using rule 78 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    WHILE           reduce using rule 78 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    FOR             reduce using rule 78 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    $end            reduce using rule 78 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    LLADER          reduce using rule 78 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    ELSE            shift and go to state 146

    lista_elif                     shift and go to state 147
    elif                           shift and go to state 148

state 132

    (9) bloque -> LLAIZQ . instruccion3 LLADER
    (10) bloque -> LLAIZQ . LLADER
    (5) instruccion3 -> . instruccion3 instruccion2
    (6) instruccion3 -> . instruccion3 instruccion2 PTOYCOMA
    (7) instruccion3 -> . instruccion2
    (8) instruccion3 -> . instruccion2 PTOYCOMA
    (11) instruccion2 -> . declaracion
    (12) instruccion2 -> . asignacion
    (13) instruccion2 -> . impresion
    (14) instruccion2 -> . return
    (15) instruccion2 -> . break
    (16) instruccion2 -> . continue
    (17) instruccion2 -> . condicional_if
    (18) instruccion2 -> . ciclo_while
    (19) instruccion2 -> . ciclo_for
    (20) instruccion2 -> . ciclo_for_of
    (21) declaracion -> . LET ID DOSPUNTOS tipo IGUAL expresion
    (22) declaracion -> . LET ID IGUAL expresion
    (23) declaracion -> . LET ID DOSPUNTOS tipo
    (24) declaracion -> . LET ID
    (25) asignacion -> . ID IGUAL expresion
    (26) impresion -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER
    (74) return -> . RETURN
    (75) return -> . RETURN expresion
    (77) break -> . BREAK
    (76) continue -> . CONTINUE
    (78) condicional_if -> . IF PARIZQ expresion PARDER bloque
    (79) condicional_if -> . IF PARIZQ expresion PARDER bloque ELSE bloque
    (80) condicional_if -> . IF PARIZQ expresion PARDER bloque lista_elif
    (81) condicional_if -> . IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque
    (85) ciclo_while -> . WHILE PARIZQ expresion PARDER bloque
    (86) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (87) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (88) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (89) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (90) ciclo_for_of -> . FOR PARIZQ LET ID OF expresion PARDER bloque

    LLADER          shift and go to state 150
    LET             shift and go to state 15
    ID              shift and go to state 16
    CONSOLE         shift and go to state 17
    RETURN          shift and go to state 18
    BREAK           shift and go to state 19
    CONTINUE        shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    FOR             shift and go to state 23

    instruccion3                   shift and go to state 149
    instruccion2                   shift and go to state 151
    declaracion                    shift and go to state 5
    asignacion                     shift and go to state 6
    impresion                      shift and go to state 7
    return                         shift and go to state 8
    break                          shift and go to state 9
    continue                       shift and go to state 10
    condicional_if                 shift and go to state 11
    ciclo_while                    shift and go to state 12
    ciclo_for                      shift and go to state 13
    ciclo_for_of                   shift and go to state 14

state 133

    (85) ciclo_while -> WHILE PARIZQ expresion PARDER bloque .

    PTOYCOMA        reduce using rule 85 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    error           reduce using rule 85 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    LET             reduce using rule 85 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    ID              reduce using rule 85 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    CONSOLE         reduce using rule 85 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    RETURN          reduce using rule 85 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    BREAK           reduce using rule 85 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    CONTINUE        reduce using rule 85 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    IF              reduce using rule 85 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    WHILE           reduce using rule 85 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    FOR             reduce using rule 85 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    $end            reduce using rule 85 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    LLADER          reduce using rule 85 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)


state 134

    (86) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion . PTOYCOMA asignacion PARDER bloque
    (88) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion . PTOYCOMA expresion PARDER bloque
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (35) expresion -> expresion . MAYOR expresion
    (36) expresion -> expresion . MENOR expresion
    (37) expresion -> expresion . MAYORIGUAL expresion
    (38) expresion -> expresion . MENORIGUAL expresion
    (39) expresion -> expresion . IGUALACION expresion
    (40) expresion -> expresion . DISTINTO expresion
    (41) expresion -> expresion . AND expresion
    (42) expresion -> expresion . OR expresion
    (62) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PTOYCOMA        shift and go to state 152
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORIGUAL      shift and go to state 67
    IGUALACION      shift and go to state 68
    DISTINTO        shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    PUNTO           shift and go to state 72


state 135

    (87) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion . PTOYCOMA asignacion PARDER bloque
    (89) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion . PTOYCOMA expresion PARDER bloque
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (35) expresion -> expresion . MAYOR expresion
    (36) expresion -> expresion . MENOR expresion
    (37) expresion -> expresion . MAYORIGUAL expresion
    (38) expresion -> expresion . MENORIGUAL expresion
    (39) expresion -> expresion . IGUALACION expresion
    (40) expresion -> expresion . DISTINTO expresion
    (41) expresion -> expresion . AND expresion
    (42) expresion -> expresion . OR expresion
    (62) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PTOYCOMA        shift and go to state 153
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORIGUAL      shift and go to state 67
    IGUALACION      shift and go to state 68
    DISTINTO        shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    PUNTO           shift and go to state 72


state 136

    (90) ciclo_for_of -> FOR PARIZQ LET ID OF . expresion PARDER bloque
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion POTENCIA expresion
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . MENOS expresion
    (34) expresion -> . PARIZQ expresion PARDER
    (35) expresion -> . expresion MAYOR expresion
    (36) expresion -> . expresion MENOR expresion
    (37) expresion -> . expresion MAYORIGUAL expresion
    (38) expresion -> . expresion MENORIGUAL expresion
    (39) expresion -> . expresion IGUALACION expresion
    (40) expresion -> . expresion DISTINTO expresion
    (41) expresion -> . expresion AND expresion
    (42) expresion -> . expresion OR expresion
    (43) expresion -> . NOT expresion
    (44) expresion -> . ENTERO
    (45) expresion -> . DECIMAL
    (46) expresion -> . CADENA
    (47) expresion -> . ID
    (48) expresion -> . TRUE
    (49) expresion -> . FALSE
    (50) expresion -> . ID INCREMENTO
    (51) expresion -> . ID DECREMENTO
    (52) expresion -> . INCREMENTO ID
    (53) expresion -> . DECREMENTO ID
    (54) expresion -> . aproximacion
    (55) expresion -> . exponencial
    (56) expresion -> . to_string
    (57) expresion -> . to_minusculas
    (58) expresion -> . to_mayusculas
    (59) expresion -> . separador
    (60) expresion -> . concatenacion
    (61) expresion -> . casteo_string
    (62) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (69) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41
    CAST_STRING     shift and go to state 50

    expresion                      shift and go to state 154
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48
    casteo_string                  shift and go to state 49

state 137

    (21) declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (35) expresion -> expresion . MAYOR expresion
    (36) expresion -> expresion . MENOR expresion
    (37) expresion -> expresion . MAYORIGUAL expresion
    (38) expresion -> expresion . MENORIGUAL expresion
    (39) expresion -> expresion . IGUALACION expresion
    (40) expresion -> expresion . DISTINTO expresion
    (41) expresion -> expresion . AND expresion
    (42) expresion -> expresion . OR expresion
    (62) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PTOYCOMA        reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    error           reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    LET             reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    ID              reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    CONSOLE         reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    RETURN          reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    BREAK           reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    CONTINUE        reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    IF              reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    WHILE           reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    FOR             reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    $end            reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    LLADER          reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORIGUAL      shift and go to state 67
    IGUALACION      shift and go to state 68
    DISTINTO        shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    PUNTO           shift and go to state 72


state 138

    (26) impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .

    PTOYCOMA        reduce using rule 26 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    error           reduce using rule 26 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    LET             reduce using rule 26 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    ID              reduce using rule 26 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 26 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    RETURN          reduce using rule 26 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    BREAK           reduce using rule 26 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 26 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    IF              reduce using rule 26 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    WHILE           reduce using rule 26 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    FOR             reduce using rule 26 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    $end            reduce using rule 26 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    LLADER          reduce using rule 26 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)


state 139

    (62) aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion . PARDER
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (35) expresion -> expresion . MAYOR expresion
    (36) expresion -> expresion . MENOR expresion
    (37) expresion -> expresion . MAYORIGUAL expresion
    (38) expresion -> expresion . MENORIGUAL expresion
    (39) expresion -> expresion . IGUALACION expresion
    (40) expresion -> expresion . DISTINTO expresion
    (41) expresion -> expresion . AND expresion
    (42) expresion -> expresion . OR expresion
    (62) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 155
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORIGUAL      shift and go to state 67
    IGUALACION      shift and go to state 68
    DISTINTO        shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    PUNTO           shift and go to state 72


state 140

    (63) exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion . PARDER
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (35) expresion -> expresion . MAYOR expresion
    (36) expresion -> expresion . MENOR expresion
    (37) expresion -> expresion . MAYORIGUAL expresion
    (38) expresion -> expresion . MENORIGUAL expresion
    (39) expresion -> expresion . IGUALACION expresion
    (40) expresion -> expresion . DISTINTO expresion
    (41) expresion -> expresion . AND expresion
    (42) expresion -> expresion . OR expresion
    (62) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 156
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORIGUAL      shift and go to state 67
    IGUALACION      shift and go to state 68
    DISTINTO        shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    PUNTO           shift and go to state 72


state 141

    (64) to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .

    MAS             reduce using rule 64 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    MENOS           reduce using rule 64 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    POR             reduce using rule 64 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 64 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    POTENCIA        reduce using rule 64 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    MODULO          reduce using rule 64 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    MAYOR           reduce using rule 64 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    MENOR           reduce using rule 64 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    MAYORIGUAL      reduce using rule 64 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    MENORIGUAL      reduce using rule 64 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    IGUALACION      reduce using rule 64 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    DISTINTO        reduce using rule 64 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    AND             reduce using rule 64 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    OR              reduce using rule 64 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    PUNTO           reduce using rule 64 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    PTOYCOMA        reduce using rule 64 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    error           reduce using rule 64 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    LET             reduce using rule 64 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    ID              reduce using rule 64 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    CONSOLE         reduce using rule 64 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    RETURN          reduce using rule 64 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    BREAK           reduce using rule 64 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    CONTINUE        reduce using rule 64 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    IF              reduce using rule 64 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    WHILE           reduce using rule 64 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    FOR             reduce using rule 64 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    $end            reduce using rule 64 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    LLADER          reduce using rule 64 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    PARDER          reduce using rule 64 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)


state 142

    (65) to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .

    MAS             reduce using rule 65 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    MENOS           reduce using rule 65 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    POR             reduce using rule 65 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 65 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    POTENCIA        reduce using rule 65 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    MODULO          reduce using rule 65 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    MAYOR           reduce using rule 65 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    MENOR           reduce using rule 65 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    MAYORIGUAL      reduce using rule 65 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    MENORIGUAL      reduce using rule 65 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    IGUALACION      reduce using rule 65 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    DISTINTO        reduce using rule 65 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    AND             reduce using rule 65 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    OR              reduce using rule 65 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    PUNTO           reduce using rule 65 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    PTOYCOMA        reduce using rule 65 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    error           reduce using rule 65 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    LET             reduce using rule 65 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    ID              reduce using rule 65 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    CONSOLE         reduce using rule 65 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    RETURN          reduce using rule 65 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    BREAK           reduce using rule 65 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    CONTINUE        reduce using rule 65 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    IF              reduce using rule 65 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    WHILE           reduce using rule 65 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    FOR             reduce using rule 65 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    $end            reduce using rule 65 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    LLADER          reduce using rule 65 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    PARDER          reduce using rule 65 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)


state 143

    (66) to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .

    MAS             reduce using rule 66 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    MENOS           reduce using rule 66 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    POR             reduce using rule 66 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 66 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    POTENCIA        reduce using rule 66 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    MODULO          reduce using rule 66 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    MAYOR           reduce using rule 66 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    MENOR           reduce using rule 66 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    MAYORIGUAL      reduce using rule 66 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    MENORIGUAL      reduce using rule 66 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    IGUALACION      reduce using rule 66 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    DISTINTO        reduce using rule 66 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    AND             reduce using rule 66 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    OR              reduce using rule 66 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    PUNTO           reduce using rule 66 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    PTOYCOMA        reduce using rule 66 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    error           reduce using rule 66 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    LET             reduce using rule 66 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    ID              reduce using rule 66 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    CONSOLE         reduce using rule 66 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    RETURN          reduce using rule 66 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    BREAK           reduce using rule 66 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    CONTINUE        reduce using rule 66 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    IF              reduce using rule 66 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    WHILE           reduce using rule 66 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    FOR             reduce using rule 66 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    $end            reduce using rule 66 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    LLADER          reduce using rule 66 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    PARDER          reduce using rule 66 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)


state 144

    (67) separador -> expresion PUNTO SPLIT PARIZQ expresion . PARDER
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (35) expresion -> expresion . MAYOR expresion
    (36) expresion -> expresion . MENOR expresion
    (37) expresion -> expresion . MAYORIGUAL expresion
    (38) expresion -> expresion . MENORIGUAL expresion
    (39) expresion -> expresion . IGUALACION expresion
    (40) expresion -> expresion . DISTINTO expresion
    (41) expresion -> expresion . AND expresion
    (42) expresion -> expresion . OR expresion
    (62) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 157
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORIGUAL      shift and go to state 67
    IGUALACION      shift and go to state 68
    DISTINTO        shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    PUNTO           shift and go to state 72


state 145

    (68) concatenacion -> expresion PUNTO CONCAT PARIZQ expresion . PARDER
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (35) expresion -> expresion . MAYOR expresion
    (36) expresion -> expresion . MENOR expresion
    (37) expresion -> expresion . MAYORIGUAL expresion
    (38) expresion -> expresion . MENORIGUAL expresion
    (39) expresion -> expresion . IGUALACION expresion
    (40) expresion -> expresion . DISTINTO expresion
    (41) expresion -> expresion . AND expresion
    (42) expresion -> expresion . OR expresion
    (62) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 158
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORIGUAL      shift and go to state 67
    IGUALACION      shift and go to state 68
    DISTINTO        shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    PUNTO           shift and go to state 72


state 146

    (79) condicional_if -> IF PARIZQ expresion PARDER bloque ELSE . bloque
    (84) elif -> ELSE . IF PARIZQ expresion PARDER bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    IF              shift and go to state 159
    LLAIZQ          shift and go to state 132

    bloque                         shift and go to state 160

state 147

    (80) condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .
    (81) condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif . ELSE bloque
    (82) lista_elif -> lista_elif . elif
    (84) elif -> . ELSE IF PARIZQ expresion PARDER bloque

    PTOYCOMA        reduce using rule 80 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    error           reduce using rule 80 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    LET             reduce using rule 80 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    ID              reduce using rule 80 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    CONSOLE         reduce using rule 80 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    RETURN          reduce using rule 80 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    BREAK           reduce using rule 80 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    CONTINUE        reduce using rule 80 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    IF              reduce using rule 80 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    WHILE           reduce using rule 80 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    FOR             reduce using rule 80 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    $end            reduce using rule 80 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    LLADER          reduce using rule 80 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    ELSE            shift and go to state 161

    elif                           shift and go to state 162

state 148

    (83) lista_elif -> elif .

    ELSE            reduce using rule 83 (lista_elif -> elif .)
    PTOYCOMA        reduce using rule 83 (lista_elif -> elif .)
    error           reduce using rule 83 (lista_elif -> elif .)
    LET             reduce using rule 83 (lista_elif -> elif .)
    ID              reduce using rule 83 (lista_elif -> elif .)
    CONSOLE         reduce using rule 83 (lista_elif -> elif .)
    RETURN          reduce using rule 83 (lista_elif -> elif .)
    BREAK           reduce using rule 83 (lista_elif -> elif .)
    CONTINUE        reduce using rule 83 (lista_elif -> elif .)
    IF              reduce using rule 83 (lista_elif -> elif .)
    WHILE           reduce using rule 83 (lista_elif -> elif .)
    FOR             reduce using rule 83 (lista_elif -> elif .)
    $end            reduce using rule 83 (lista_elif -> elif .)
    LLADER          reduce using rule 83 (lista_elif -> elif .)


state 149

    (9) bloque -> LLAIZQ instruccion3 . LLADER
    (5) instruccion3 -> instruccion3 . instruccion2
    (6) instruccion3 -> instruccion3 . instruccion2 PTOYCOMA
    (11) instruccion2 -> . declaracion
    (12) instruccion2 -> . asignacion
    (13) instruccion2 -> . impresion
    (14) instruccion2 -> . return
    (15) instruccion2 -> . break
    (16) instruccion2 -> . continue
    (17) instruccion2 -> . condicional_if
    (18) instruccion2 -> . ciclo_while
    (19) instruccion2 -> . ciclo_for
    (20) instruccion2 -> . ciclo_for_of
    (21) declaracion -> . LET ID DOSPUNTOS tipo IGUAL expresion
    (22) declaracion -> . LET ID IGUAL expresion
    (23) declaracion -> . LET ID DOSPUNTOS tipo
    (24) declaracion -> . LET ID
    (25) asignacion -> . ID IGUAL expresion
    (26) impresion -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER
    (74) return -> . RETURN
    (75) return -> . RETURN expresion
    (77) break -> . BREAK
    (76) continue -> . CONTINUE
    (78) condicional_if -> . IF PARIZQ expresion PARDER bloque
    (79) condicional_if -> . IF PARIZQ expresion PARDER bloque ELSE bloque
    (80) condicional_if -> . IF PARIZQ expresion PARDER bloque lista_elif
    (81) condicional_if -> . IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque
    (85) ciclo_while -> . WHILE PARIZQ expresion PARDER bloque
    (86) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (87) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (88) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (89) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (90) ciclo_for_of -> . FOR PARIZQ LET ID OF expresion PARDER bloque

    LLADER          shift and go to state 163
    LET             shift and go to state 15
    ID              shift and go to state 16
    CONSOLE         shift and go to state 17
    RETURN          shift and go to state 18
    BREAK           shift and go to state 19
    CONTINUE        shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    FOR             shift and go to state 23

    instruccion2                   shift and go to state 164
    declaracion                    shift and go to state 5
    asignacion                     shift and go to state 6
    impresion                      shift and go to state 7
    return                         shift and go to state 8
    break                          shift and go to state 9
    continue                       shift and go to state 10
    condicional_if                 shift and go to state 11
    ciclo_while                    shift and go to state 12
    ciclo_for                      shift and go to state 13
    ciclo_for_of                   shift and go to state 14

state 150

    (10) bloque -> LLAIZQ LLADER .

    ELSE            reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    PTOYCOMA        reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    error           reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    LET             reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    ID              reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    CONSOLE         reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    RETURN          reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    BREAK           reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    CONTINUE        reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    IF              reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    WHILE           reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    FOR             reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    $end            reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    LLADER          reduce using rule 10 (bloque -> LLAIZQ LLADER .)


state 151

    (7) instruccion3 -> instruccion2 .
    (8) instruccion3 -> instruccion2 . PTOYCOMA

    LLADER          reduce using rule 7 (instruccion3 -> instruccion2 .)
    LET             reduce using rule 7 (instruccion3 -> instruccion2 .)
    ID              reduce using rule 7 (instruccion3 -> instruccion2 .)
    CONSOLE         reduce using rule 7 (instruccion3 -> instruccion2 .)
    RETURN          reduce using rule 7 (instruccion3 -> instruccion2 .)
    BREAK           reduce using rule 7 (instruccion3 -> instruccion2 .)
    CONTINUE        reduce using rule 7 (instruccion3 -> instruccion2 .)
    IF              reduce using rule 7 (instruccion3 -> instruccion2 .)
    WHILE           reduce using rule 7 (instruccion3 -> instruccion2 .)
    FOR             reduce using rule 7 (instruccion3 -> instruccion2 .)
    PTOYCOMA        shift and go to state 165


state 152

    (86) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA . asignacion PARDER bloque
    (88) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA . expresion PARDER bloque
    (25) asignacion -> . ID IGUAL expresion
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion POTENCIA expresion
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . MENOS expresion
    (34) expresion -> . PARIZQ expresion PARDER
    (35) expresion -> . expresion MAYOR expresion
    (36) expresion -> . expresion MENOR expresion
    (37) expresion -> . expresion MAYORIGUAL expresion
    (38) expresion -> . expresion MENORIGUAL expresion
    (39) expresion -> . expresion IGUALACION expresion
    (40) expresion -> . expresion DISTINTO expresion
    (41) expresion -> . expresion AND expresion
    (42) expresion -> . expresion OR expresion
    (43) expresion -> . NOT expresion
    (44) expresion -> . ENTERO
    (45) expresion -> . DECIMAL
    (46) expresion -> . CADENA
    (47) expresion -> . ID
    (48) expresion -> . TRUE
    (49) expresion -> . FALSE
    (50) expresion -> . ID INCREMENTO
    (51) expresion -> . ID DECREMENTO
    (52) expresion -> . INCREMENTO ID
    (53) expresion -> . DECREMENTO ID
    (54) expresion -> . aproximacion
    (55) expresion -> . exponencial
    (56) expresion -> . to_string
    (57) expresion -> . to_minusculas
    (58) expresion -> . to_mayusculas
    (59) expresion -> . separador
    (60) expresion -> . concatenacion
    (61) expresion -> . casteo_string
    (62) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (69) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    ID              shift and go to state 168
    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41
    CAST_STRING     shift and go to state 50

    expresion                      shift and go to state 166
    asignacion                     shift and go to state 167
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48
    casteo_string                  shift and go to state 49

state 153

    (87) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA . asignacion PARDER bloque
    (89) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA . expresion PARDER bloque
    (25) asignacion -> . ID IGUAL expresion
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion POTENCIA expresion
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . MENOS expresion
    (34) expresion -> . PARIZQ expresion PARDER
    (35) expresion -> . expresion MAYOR expresion
    (36) expresion -> . expresion MENOR expresion
    (37) expresion -> . expresion MAYORIGUAL expresion
    (38) expresion -> . expresion MENORIGUAL expresion
    (39) expresion -> . expresion IGUALACION expresion
    (40) expresion -> . expresion DISTINTO expresion
    (41) expresion -> . expresion AND expresion
    (42) expresion -> . expresion OR expresion
    (43) expresion -> . NOT expresion
    (44) expresion -> . ENTERO
    (45) expresion -> . DECIMAL
    (46) expresion -> . CADENA
    (47) expresion -> . ID
    (48) expresion -> . TRUE
    (49) expresion -> . FALSE
    (50) expresion -> . ID INCREMENTO
    (51) expresion -> . ID DECREMENTO
    (52) expresion -> . INCREMENTO ID
    (53) expresion -> . DECREMENTO ID
    (54) expresion -> . aproximacion
    (55) expresion -> . exponencial
    (56) expresion -> . to_string
    (57) expresion -> . to_minusculas
    (58) expresion -> . to_mayusculas
    (59) expresion -> . separador
    (60) expresion -> . concatenacion
    (61) expresion -> . casteo_string
    (62) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (69) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    ID              shift and go to state 168
    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41
    CAST_STRING     shift and go to state 50

    asignacion                     shift and go to state 169
    expresion                      shift and go to state 170
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48
    casteo_string                  shift and go to state 49

state 154

    (90) ciclo_for_of -> FOR PARIZQ LET ID OF expresion . PARDER bloque
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (35) expresion -> expresion . MAYOR expresion
    (36) expresion -> expresion . MENOR expresion
    (37) expresion -> expresion . MAYORIGUAL expresion
    (38) expresion -> expresion . MENORIGUAL expresion
    (39) expresion -> expresion . IGUALACION expresion
    (40) expresion -> expresion . DISTINTO expresion
    (41) expresion -> expresion . AND expresion
    (42) expresion -> expresion . OR expresion
    (62) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 171
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORIGUAL      shift and go to state 67
    IGUALACION      shift and go to state 68
    DISTINTO        shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    PUNTO           shift and go to state 72


state 155

    (62) aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .

    MAS             reduce using rule 62 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    MENOS           reduce using rule 62 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    POR             reduce using rule 62 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 62 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 62 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    MODULO          reduce using rule 62 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 62 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    MENOR           reduce using rule 62 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 62 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 62 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    IGUALACION      reduce using rule 62 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    DISTINTO        reduce using rule 62 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    AND             reduce using rule 62 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    OR              reduce using rule 62 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 62 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    PTOYCOMA        reduce using rule 62 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    error           reduce using rule 62 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    LET             reduce using rule 62 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    ID              reduce using rule 62 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 62 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    RETURN          reduce using rule 62 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    BREAK           reduce using rule 62 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 62 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    IF              reduce using rule 62 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    WHILE           reduce using rule 62 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    FOR             reduce using rule 62 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    $end            reduce using rule 62 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    LLADER          reduce using rule 62 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    PARDER          reduce using rule 62 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)


state 156

    (63) exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .

    MAS             reduce using rule 63 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    MENOS           reduce using rule 63 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    POR             reduce using rule 63 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 63 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 63 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    MODULO          reduce using rule 63 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 63 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    MENOR           reduce using rule 63 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 63 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 63 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    IGUALACION      reduce using rule 63 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    DISTINTO        reduce using rule 63 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    AND             reduce using rule 63 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    OR              reduce using rule 63 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 63 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    PTOYCOMA        reduce using rule 63 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    error           reduce using rule 63 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    LET             reduce using rule 63 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    ID              reduce using rule 63 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 63 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    RETURN          reduce using rule 63 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    BREAK           reduce using rule 63 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 63 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    IF              reduce using rule 63 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    WHILE           reduce using rule 63 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    FOR             reduce using rule 63 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    $end            reduce using rule 63 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    LLADER          reduce using rule 63 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    PARDER          reduce using rule 63 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)


state 157

    (67) separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .

    MAS             reduce using rule 67 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    MENOS           reduce using rule 67 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    POR             reduce using rule 67 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 67 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 67 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    MODULO          reduce using rule 67 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 67 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    MENOR           reduce using rule 67 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 67 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 67 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    IGUALACION      reduce using rule 67 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    DISTINTO        reduce using rule 67 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    AND             reduce using rule 67 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    OR              reduce using rule 67 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 67 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    PTOYCOMA        reduce using rule 67 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    error           reduce using rule 67 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    LET             reduce using rule 67 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    ID              reduce using rule 67 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 67 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    RETURN          reduce using rule 67 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    BREAK           reduce using rule 67 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 67 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    IF              reduce using rule 67 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    WHILE           reduce using rule 67 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    FOR             reduce using rule 67 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    $end            reduce using rule 67 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    LLADER          reduce using rule 67 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    PARDER          reduce using rule 67 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)


state 158

    (68) concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .

    MAS             reduce using rule 68 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    MENOS           reduce using rule 68 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    POR             reduce using rule 68 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 68 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 68 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    MODULO          reduce using rule 68 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 68 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    MENOR           reduce using rule 68 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 68 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 68 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    IGUALACION      reduce using rule 68 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    DISTINTO        reduce using rule 68 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    AND             reduce using rule 68 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    OR              reduce using rule 68 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 68 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    PTOYCOMA        reduce using rule 68 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    error           reduce using rule 68 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    LET             reduce using rule 68 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    ID              reduce using rule 68 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 68 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    RETURN          reduce using rule 68 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    BREAK           reduce using rule 68 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 68 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    IF              reduce using rule 68 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    WHILE           reduce using rule 68 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    FOR             reduce using rule 68 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    $end            reduce using rule 68 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    LLADER          reduce using rule 68 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    PARDER          reduce using rule 68 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)


state 159

    (84) elif -> ELSE IF . PARIZQ expresion PARDER bloque

    PARIZQ          shift and go to state 172


state 160

    (79) condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .

    PTOYCOMA        reduce using rule 79 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    error           reduce using rule 79 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    LET             reduce using rule 79 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    ID              reduce using rule 79 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    CONSOLE         reduce using rule 79 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    RETURN          reduce using rule 79 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    BREAK           reduce using rule 79 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    CONTINUE        reduce using rule 79 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    IF              reduce using rule 79 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    WHILE           reduce using rule 79 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    FOR             reduce using rule 79 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    $end            reduce using rule 79 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    LLADER          reduce using rule 79 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)


state 161

    (81) condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE . bloque
    (84) elif -> ELSE . IF PARIZQ expresion PARDER bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    IF              shift and go to state 159
    LLAIZQ          shift and go to state 132

    bloque                         shift and go to state 173

state 162

    (82) lista_elif -> lista_elif elif .

    ELSE            reduce using rule 82 (lista_elif -> lista_elif elif .)
    PTOYCOMA        reduce using rule 82 (lista_elif -> lista_elif elif .)
    error           reduce using rule 82 (lista_elif -> lista_elif elif .)
    LET             reduce using rule 82 (lista_elif -> lista_elif elif .)
    ID              reduce using rule 82 (lista_elif -> lista_elif elif .)
    CONSOLE         reduce using rule 82 (lista_elif -> lista_elif elif .)
    RETURN          reduce using rule 82 (lista_elif -> lista_elif elif .)
    BREAK           reduce using rule 82 (lista_elif -> lista_elif elif .)
    CONTINUE        reduce using rule 82 (lista_elif -> lista_elif elif .)
    IF              reduce using rule 82 (lista_elif -> lista_elif elif .)
    WHILE           reduce using rule 82 (lista_elif -> lista_elif elif .)
    FOR             reduce using rule 82 (lista_elif -> lista_elif elif .)
    $end            reduce using rule 82 (lista_elif -> lista_elif elif .)
    LLADER          reduce using rule 82 (lista_elif -> lista_elif elif .)


state 163

    (9) bloque -> LLAIZQ instruccion3 LLADER .

    ELSE            reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    PTOYCOMA        reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    error           reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    LET             reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    ID              reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    CONSOLE         reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    RETURN          reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    BREAK           reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    CONTINUE        reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    IF              reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    WHILE           reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    FOR             reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    $end            reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    LLADER          reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)


state 164

    (5) instruccion3 -> instruccion3 instruccion2 .
    (6) instruccion3 -> instruccion3 instruccion2 . PTOYCOMA

    LLADER          reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    LET             reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    ID              reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    CONSOLE         reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    RETURN          reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    BREAK           reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    CONTINUE        reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    IF              reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    WHILE           reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    FOR             reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    PTOYCOMA        shift and go to state 174


state 165

    (8) instruccion3 -> instruccion2 PTOYCOMA .

    LLADER          reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    LET             reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    ID              reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    CONSOLE         reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    RETURN          reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    BREAK           reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    CONTINUE        reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    IF              reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    WHILE           reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    FOR             reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)


state 166

    (88) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion . PARDER bloque
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (35) expresion -> expresion . MAYOR expresion
    (36) expresion -> expresion . MENOR expresion
    (37) expresion -> expresion . MAYORIGUAL expresion
    (38) expresion -> expresion . MENORIGUAL expresion
    (39) expresion -> expresion . IGUALACION expresion
    (40) expresion -> expresion . DISTINTO expresion
    (41) expresion -> expresion . AND expresion
    (42) expresion -> expresion . OR expresion
    (62) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 175
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORIGUAL      shift and go to state 67
    IGUALACION      shift and go to state 68
    DISTINTO        shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    PUNTO           shift and go to state 72


state 167

    (86) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion . PARDER bloque

    PARDER          shift and go to state 176


state 168

    (25) asignacion -> ID . IGUAL expresion
    (47) expresion -> ID .
    (50) expresion -> ID . INCREMENTO
    (51) expresion -> ID . DECREMENTO

    IGUAL           shift and go to state 28
    PARDER          reduce using rule 47 (expresion -> ID .)
    MAS             reduce using rule 47 (expresion -> ID .)
    MENOS           reduce using rule 47 (expresion -> ID .)
    POR             reduce using rule 47 (expresion -> ID .)
    DIVIDIDO        reduce using rule 47 (expresion -> ID .)
    POTENCIA        reduce using rule 47 (expresion -> ID .)
    MODULO          reduce using rule 47 (expresion -> ID .)
    MAYOR           reduce using rule 47 (expresion -> ID .)
    MENOR           reduce using rule 47 (expresion -> ID .)
    MAYORIGUAL      reduce using rule 47 (expresion -> ID .)
    MENORIGUAL      reduce using rule 47 (expresion -> ID .)
    IGUALACION      reduce using rule 47 (expresion -> ID .)
    DISTINTO        reduce using rule 47 (expresion -> ID .)
    AND             reduce using rule 47 (expresion -> ID .)
    OR              reduce using rule 47 (expresion -> ID .)
    PUNTO           reduce using rule 47 (expresion -> ID .)
    INCREMENTO      shift and go to state 76
    DECREMENTO      shift and go to state 77


state 169

    (87) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion . PARDER bloque

    PARDER          shift and go to state 177


state 170

    (89) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion . PARDER bloque
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (35) expresion -> expresion . MAYOR expresion
    (36) expresion -> expresion . MENOR expresion
    (37) expresion -> expresion . MAYORIGUAL expresion
    (38) expresion -> expresion . MENORIGUAL expresion
    (39) expresion -> expresion . IGUALACION expresion
    (40) expresion -> expresion . DISTINTO expresion
    (41) expresion -> expresion . AND expresion
    (42) expresion -> expresion . OR expresion
    (62) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 178
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORIGUAL      shift and go to state 67
    IGUALACION      shift and go to state 68
    DISTINTO        shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    PUNTO           shift and go to state 72


state 171

    (90) ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER . bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 132

    bloque                         shift and go to state 179

state 172

    (84) elif -> ELSE IF PARIZQ . expresion PARDER bloque
    (27) expresion -> . expresion MAS expresion
    (28) expresion -> . expresion MENOS expresion
    (29) expresion -> . expresion POR expresion
    (30) expresion -> . expresion DIVIDIDO expresion
    (31) expresion -> . expresion POTENCIA expresion
    (32) expresion -> . expresion MODULO expresion
    (33) expresion -> . MENOS expresion
    (34) expresion -> . PARIZQ expresion PARDER
    (35) expresion -> . expresion MAYOR expresion
    (36) expresion -> . expresion MENOR expresion
    (37) expresion -> . expresion MAYORIGUAL expresion
    (38) expresion -> . expresion MENORIGUAL expresion
    (39) expresion -> . expresion IGUALACION expresion
    (40) expresion -> . expresion DISTINTO expresion
    (41) expresion -> . expresion AND expresion
    (42) expresion -> . expresion OR expresion
    (43) expresion -> . NOT expresion
    (44) expresion -> . ENTERO
    (45) expresion -> . DECIMAL
    (46) expresion -> . CADENA
    (47) expresion -> . ID
    (48) expresion -> . TRUE
    (49) expresion -> . FALSE
    (50) expresion -> . ID INCREMENTO
    (51) expresion -> . ID DECREMENTO
    (52) expresion -> . INCREMENTO ID
    (53) expresion -> . DECREMENTO ID
    (54) expresion -> . aproximacion
    (55) expresion -> . exponencial
    (56) expresion -> . to_string
    (57) expresion -> . to_minusculas
    (58) expresion -> . to_mayusculas
    (59) expresion -> . separador
    (60) expresion -> . concatenacion
    (61) expresion -> . casteo_string
    (62) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (69) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41
    CAST_STRING     shift and go to state 50

    expresion                      shift and go to state 180
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48
    casteo_string                  shift and go to state 49

state 173

    (81) condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .

    PTOYCOMA        reduce using rule 81 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    error           reduce using rule 81 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    LET             reduce using rule 81 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    ID              reduce using rule 81 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    CONSOLE         reduce using rule 81 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    RETURN          reduce using rule 81 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    BREAK           reduce using rule 81 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    CONTINUE        reduce using rule 81 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    IF              reduce using rule 81 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    WHILE           reduce using rule 81 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    FOR             reduce using rule 81 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    $end            reduce using rule 81 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    LLADER          reduce using rule 81 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)


state 174

    (6) instruccion3 -> instruccion3 instruccion2 PTOYCOMA .

    LLADER          reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    LET             reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    ID              reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    CONSOLE         reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    RETURN          reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    BREAK           reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    CONTINUE        reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    IF              reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    WHILE           reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    FOR             reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)


state 175

    (88) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER . bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 132

    bloque                         shift and go to state 181

state 176

    (86) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER . bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 132

    bloque                         shift and go to state 182

state 177

    (87) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER . bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 132

    bloque                         shift and go to state 183

state 178

    (89) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER . bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 132

    bloque                         shift and go to state 184

state 179

    (90) ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .

    PTOYCOMA        reduce using rule 90 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    error           reduce using rule 90 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    LET             reduce using rule 90 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    ID              reduce using rule 90 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    CONSOLE         reduce using rule 90 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    RETURN          reduce using rule 90 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    BREAK           reduce using rule 90 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    CONTINUE        reduce using rule 90 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    IF              reduce using rule 90 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    WHILE           reduce using rule 90 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    FOR             reduce using rule 90 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    $end            reduce using rule 90 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    LLADER          reduce using rule 90 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)


state 180

    (84) elif -> ELSE IF PARIZQ expresion . PARDER bloque
    (27) expresion -> expresion . MAS expresion
    (28) expresion -> expresion . MENOS expresion
    (29) expresion -> expresion . POR expresion
    (30) expresion -> expresion . DIVIDIDO expresion
    (31) expresion -> expresion . POTENCIA expresion
    (32) expresion -> expresion . MODULO expresion
    (35) expresion -> expresion . MAYOR expresion
    (36) expresion -> expresion . MENOR expresion
    (37) expresion -> expresion . MAYORIGUAL expresion
    (38) expresion -> expresion . MENORIGUAL expresion
    (39) expresion -> expresion . IGUALACION expresion
    (40) expresion -> expresion . DISTINTO expresion
    (41) expresion -> expresion . AND expresion
    (42) expresion -> expresion . OR expresion
    (62) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (63) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (64) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (65) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (66) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (67) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (68) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 185
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    POR             shift and go to state 60
    DIVIDIDO        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYORIGUAL      shift and go to state 66
    MENORIGUAL      shift and go to state 67
    IGUALACION      shift and go to state 68
    DISTINTO        shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    PUNTO           shift and go to state 72


state 181

    (88) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .

    PTOYCOMA        reduce using rule 88 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    error           reduce using rule 88 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    LET             reduce using rule 88 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    ID              reduce using rule 88 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    CONSOLE         reduce using rule 88 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    RETURN          reduce using rule 88 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    BREAK           reduce using rule 88 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    CONTINUE        reduce using rule 88 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    IF              reduce using rule 88 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    WHILE           reduce using rule 88 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    FOR             reduce using rule 88 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    $end            reduce using rule 88 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    LLADER          reduce using rule 88 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)


state 182

    (86) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .

    PTOYCOMA        reduce using rule 86 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    error           reduce using rule 86 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    LET             reduce using rule 86 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    ID              reduce using rule 86 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    CONSOLE         reduce using rule 86 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    RETURN          reduce using rule 86 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    BREAK           reduce using rule 86 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    CONTINUE        reduce using rule 86 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    IF              reduce using rule 86 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    WHILE           reduce using rule 86 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    FOR             reduce using rule 86 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    $end            reduce using rule 86 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    LLADER          reduce using rule 86 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)


state 183

    (87) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .

    PTOYCOMA        reduce using rule 87 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    error           reduce using rule 87 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    LET             reduce using rule 87 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    ID              reduce using rule 87 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    CONSOLE         reduce using rule 87 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    RETURN          reduce using rule 87 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    BREAK           reduce using rule 87 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    CONTINUE        reduce using rule 87 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    IF              reduce using rule 87 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    WHILE           reduce using rule 87 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    FOR             reduce using rule 87 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    $end            reduce using rule 87 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    LLADER          reduce using rule 87 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)


state 184

    (89) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .

    PTOYCOMA        reduce using rule 89 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    error           reduce using rule 89 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    LET             reduce using rule 89 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    ID              reduce using rule 89 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    CONSOLE         reduce using rule 89 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    RETURN          reduce using rule 89 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    BREAK           reduce using rule 89 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    CONTINUE        reduce using rule 89 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    IF              reduce using rule 89 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    WHILE           reduce using rule 89 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    FOR             reduce using rule 89 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    $end            reduce using rule 89 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    LLADER          reduce using rule 89 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)


state 185

    (84) elif -> ELSE IF PARIZQ expresion PARDER . bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 132

    bloque                         shift and go to state 186

state 186

    (84) elif -> ELSE IF PARIZQ expresion PARDER bloque .

    ELSE            reduce using rule 84 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    PTOYCOMA        reduce using rule 84 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    error           reduce using rule 84 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    LET             reduce using rule 84 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    ID              reduce using rule 84 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    CONSOLE         reduce using rule 84 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    RETURN          reduce using rule 84 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    BREAK           reduce using rule 84 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    CONTINUE        reduce using rule 84 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    IF              reduce using rule 84 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    WHILE           reduce using rule 84 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    FOR             reduce using rule 84 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    $end            reduce using rule 84 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    LLADER          reduce using rule 84 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 18 resolved as shift
