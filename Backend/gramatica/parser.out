Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> instrucciones
Rule 1     instrucciones -> instrucciones instruccion
Rule 2     instrucciones -> instruccion
Rule 3     instruccion -> instruccion2
Rule 4     instruccion -> funcion
Rule 5     instruccion -> comentarios
Rule 6     instruccion2 -> instruccion3 PTOYCOMA
Rule 7     instruccion2 -> instruccion3
Rule 8     instruccion4 -> instruccion4 instruccion2
Rule 9     instruccion4 -> instruccion2
Rule 10    bloque -> LLAIZQ instruccion4 LLADER
Rule 11    bloque -> LLAIZQ LLADER
Rule 12    instruccion3 -> declaracion
Rule 13    instruccion3 -> asignacion
Rule 14    instruccion3 -> impresion
Rule 15    instruccion3 -> condicional
Rule 16    instruccion3 -> ciclo_while
Rule 17    instruccion3 -> ciclo_for
Rule 18    instruccion3 -> ciclo_for_of
Rule 19    instruccion3 -> llamada_funcion
Rule 20    instruccion3 -> return
Rule 21    instruccion3 -> break
Rule 22    instruccion3 -> continue
Rule 23    instruccion3 -> comentarios
Rule 24    instruccion3 -> instanciar
Rule 25    instruccion3 -> declaracionInterface
Rule 26    instruccion3 -> declaracionArray
Rule 27    instruccion3 -> asignacion_array
Rule 28    comentarios -> COMENTARIO
Rule 29    comentarios -> COMENTARIO_MULTILINEA
Rule 30    declaracion -> LET ID IGUAL expresion
Rule 31    declaracion -> LET ID
Rule 32    declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion
Rule 33    declaracion -> LET ID DOSPUNTOS tipo
Rule 34    asignacion -> ID IGUAL expresion
Rule 35    asignacion -> dec
Rule 36    asignacion -> inc
Rule 37    asignacion -> asignacionInterface
Rule 38    dec -> ID DECREMENTO
Rule 39    dec -> DECREMENTO ID
Rule 40    inc -> ID INCREMENTO
Rule 41    inc -> INCREMENTO ID
Rule 42    impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER
Rule 43    impresion -> CONSOLE PUNTO LOG PARIZQ lista_argumentos PARDER
Rule 44    condicional -> IF PARIZQ expresion PARDER bloque
Rule 45    condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque
Rule 46    condicional -> IF PARIZQ expresion PARDER bloque lista_elif
Rule 47    condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque
Rule 48    lista_elif -> lista_elif elseif
Rule 49    lista_elif -> elseif
Rule 50    elseif -> ELSE IF PARIZQ expresion PARDER bloque
Rule 51    ciclo_while -> WHILE PARIZQ expresion PARDER bloque
Rule 52    ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
Rule 53    ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
Rule 54    ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque
Rule 55    funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque
Rule 56    funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque
Rule 57    funcion -> FUNCTION ID PARIZQ PARDER bloque
Rule 58    funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS tipo bloque
Rule 59    funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo CORIZQ CORDER bloque
Rule 60    lista_parametros -> lista_parametros COMA parametro
Rule 61    lista_parametros -> parametro
Rule 62    parametro -> ID DOSPUNTOS tipo
Rule 63    parametro -> ID DOSPUNTOS tipo CORIZQ CORDER
Rule 64    expresion -> llamada_funcion
Rule 65    llamada_funcion -> ID PARIZQ lista_argumentos PARDER
Rule 66    llamada_funcion -> ID PARIZQ PARDER
Rule 67    lista_argumentos -> lista_argumentos COMA expresion
Rule 68    lista_argumentos -> expresion
Rule 69    tipo -> NUMBER
Rule 70    tipo -> STRING
Rule 71    tipo -> BOOLEAN
Rule 72    tipo -> ANY
Rule 73    tipo -> NULL
Rule 74    expresion -> expresion MAS expresion
Rule 75    expresion -> expresion MENOS expresion
Rule 76    expresion -> expresion POR expresion
Rule 77    expresion -> expresion DIVIDIDO expresion
Rule 78    expresion -> expresion MODULO expresion
Rule 79    expresion -> expresion POTENCIA expresion
Rule 80    expresion -> MENOS expresion
Rule 81    expresion -> expresion MAYOR expresion
Rule 82    expresion -> expresion MENOR expresion
Rule 83    expresion -> expresion MAYORIGUAL expresion
Rule 84    expresion -> expresion MENORIGUAL expresion
Rule 85    expresion -> expresion IGUALACION expresion
Rule 86    expresion -> expresion DISTINTO expresion
Rule 87    expresion -> expresion AND expresion
Rule 88    expresion -> expresion OR expresion
Rule 89    expresion -> NOT expresion
Rule 90    expresion -> dec
Rule 91    expresion -> inc
Rule 92    expresion -> casteo
Rule 93    expresion -> PARIZQ expresion PARDER
Rule 94    expresion -> ENTERO
Rule 95    expresion -> DECIMAL
Rule 96    expresion -> CADENA
Rule 97    expresion -> NULL
Rule 98    expresion -> booleano
Rule 99    expresion -> ID
Rule 100   booleano -> TRUE
Rule 101   booleano -> FALSE
Rule 102   expresion -> aproximacion
Rule 103   expresion -> exponencial
Rule 104   expresion -> separador
Rule 105   expresion -> concatenacion
Rule 106   expresion -> to_minusculas
Rule 107   aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER
Rule 108   exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
Rule 109   expresion -> ID PUNTO TOUPPERCASE PARIZQ PARDER
Rule 110   to_minusculas -> ID PUNTO TOLOWERCASE PARIZQ PARDER
Rule 111   separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER
Rule 112   concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER
Rule 113   casteo -> expresion PUNTO TOSTRING PARIZQ PARDER
Rule 114   casteo -> CAST_STRING PARIZQ expresion PARDER
Rule 115   return -> RETURN expresion
Rule 116   return -> RETURN
Rule 117   break -> BREAK
Rule 118   continue -> CONTINUE
Rule 119   instanciar -> INTERFACE ID bloquestruct
Rule 120   bloquestruct -> LLAIZQ lista_params_struct LLADER
Rule 121   lista_params_struct -> lista_params_struct param_struct
Rule 122   lista_params_struct -> param_struct
Rule 123   param_struct -> ID DOSPUNTOS tipo PTOYCOMA
Rule 124   declaracionInterface -> LET ID DOSPUNTOS ID IGUAL LLAIZQ lista_d LLADER
Rule 125   lista_d -> lista_d COMA parDecl
Rule 126   lista_d -> parDecl
Rule 127   parDecl -> ID DOSPUNTOS expresion
Rule 128   expresion -> ID PUNTO ID
Rule 129   asignacionInterface -> ID PUNTO ID IGUAL expresion
Rule 130   declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER
Rule 131   declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER
Rule 132   declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR
Rule 133   declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER
Rule 134   declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER
Rule 135   declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER
Rule 136   declaracionArray -> LET ID IGUAL CORIZQ CORDER
Rule 137   declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion
Rule 138   declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER
Rule 139   lista_exp -> lista_exp COMA expresion
Rule 140   lista_exp -> expresion
Rule 141   expresion -> arreglo
Rule 142   arreglo -> CORIZQ lista_exp CORDER
Rule 143   arreglo -> CORIZQ CORDER
Rule 144   expresion -> acceso_array
Rule 145   acceso_array -> ID lista_acceso_array
Rule 146   lista_acceso_array -> lista_acceso_array acceso_array_exp
Rule 147   lista_acceso_array -> acceso_array_exp
Rule 148   acceso_array_exp -> CORIZQ expresion CORDER
Rule 149   asignacion_array -> ID lista_acceso_array IGUAL expresion
Rule 150   instruccion -> error PTOYCOMA

Terminals, with rules where they appear

AND                  : 87
ANY                  : 72
ARRAY                : 130 131 132
BOOLEAN              : 71
BREAK                : 117
CADENA               : 96
CAST_STRING          : 114
COMA                 : 60 67 125 139
COMENTARIO           : 28
COMENTARIO_MULTILINEA : 29
CONCAT               : 112
CONSOLE              : 42 43
CONTINUE             : 118
CORDER               : 59 63 130 131 133 134 134 135 135 136 137 138 142 143 148
CORIZQ               : 59 63 130 131 133 134 134 135 135 136 137 138 142 143 148
DECIMAL              : 95
DECREMENTO           : 38 39
DISTINTO             : 86
DIVIDIDO             : 77
DOSPUNTOS            : 32 33 56 58 59 62 63 123 124 127 130 131 132 133 134 135 137
ELSE                 : 45 47 50
ENTERO               : 94
FALSE                : 101
FOR                  : 52 53 54
FUNCTION             : 55 56 57 58 59
ID                   : 30 31 32 33 34 38 39 40 41 54 55 56 57 58 59 62 63 65 66 99 109 110 119 123 124 124 127 128 128 129 129 130 131 132 133 134 135 136 137 138 145 149
IF                   : 44 45 46 47 50
IGUAL                : 30 32 34 124 129 130 131 134 135 136 137 138 149
IGUALACION           : 85
INCREMENTO           : 40 41
INTERFACE            : 119
LET                  : 30 31 32 33 54 124 130 131 132 133 134 135 136 137 138
LLADER               : 10 11 120 124
LLAIZQ               : 10 11 120 124
LOG                  : 42 43
MAS                  : 74
MAYOR                : 81 130 131 132
MAYORIGUAL           : 83
MENOR                : 82 130 131 132
MENORIGUAL           : 84
MENOS                : 75 80
MODULO               : 78
NOT                  : 89
NULL                 : 73 97
NUMBER               : 69
OF                   : 54
OR                   : 88
PARDER               : 42 43 44 45 46 47 50 51 52 53 54 55 56 57 58 59 65 66 93 107 108 109 110 111 112 113 114
PARIZQ               : 42 43 44 45 46 47 50 51 52 53 54 55 56 57 58 59 65 66 93 107 108 109 110 111 112 113 114
POR                  : 76
POTENCIA             : 79
PTOYCOMA             : 6 52 52 53 53 123 150
PUNTO                : 42 43 107 108 109 110 111 112 113 128 129
RETURN               : 115 116
SPLIT                : 111
STRING               : 70
TOEXPONENTIAL        : 108
TOFIXED              : 107
TOLOWERCASE          : 110
TOSTRING             : 113
TOUPPERCASE          : 109
TRUE                 : 100
WHILE                : 51
error                : 150

Nonterminals, with rules where they appear

acceso_array         : 144
acceso_array_exp     : 146 147
aproximacion         : 102
arreglo              : 141
asignacion           : 13 52 53 53
asignacionInterface  : 37
asignacion_array     : 27
bloque               : 44 45 45 46 47 47 50 51 52 53 54 55 56 57 58 59
bloquestruct         : 119
booleano             : 98
break                : 21
casteo               : 92
ciclo_for            : 17
ciclo_for_of         : 18
ciclo_while          : 16
comentarios          : 5 23
concatenacion        : 105
condicional          : 15
continue             : 22
dec                  : 35 90
declaracion          : 12 52
declaracionArray     : 26
declaracionInterface : 25
elseif               : 48 49
exponencial          : 103
expresion            : 30 32 34 42 44 45 46 47 50 51 52 53 54 67 68 74 74 75 75 76 76 77 77 78 78 79 79 80 81 81 82 82 83 83 84 84 85 85 86 86 87 87 88 88 89 93 107 107 108 108 111 111 112 112 113 114 115 127 129 137 139 140 148 149
funcion              : 4
impresion            : 14
inc                  : 36 91
instanciar           : 24
instruccion          : 1 2
instruccion2         : 3 8 9
instruccion3         : 6 7
instruccion4         : 8 10
instrucciones        : 1 0
lista_acceso_array   : 145 146 149
lista_argumentos     : 43 65 67
lista_d              : 124 125
lista_elif           : 46 47 48
lista_exp            : 130 134 138 139 142
lista_parametros     : 55 56 59 60
lista_params_struct  : 120 121
llamada_funcion      : 19 64
parDecl              : 125 126
param_struct         : 121 122
parametro            : 60 61
return               : 20
separador            : 104
tipo                 : 32 33 56 58 59 62 63 123 130 131 132 133 134 135 137
to_minusculas        : 106

Parsing method: LALR

state 0

    (0) S' -> . instrucciones
    (1) instrucciones -> . instrucciones instruccion
    (2) instrucciones -> . instruccion
    (3) instruccion -> . instruccion2
    (4) instruccion -> . funcion
    (5) instruccion -> . comentarios
    (150) instruccion -> . error PTOYCOMA
    (6) instruccion2 -> . instruccion3 PTOYCOMA
    (7) instruccion2 -> . instruccion3
    (55) funcion -> . FUNCTION ID PARIZQ lista_parametros PARDER bloque
    (56) funcion -> . FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque
    (57) funcion -> . FUNCTION ID PARIZQ PARDER bloque
    (58) funcion -> . FUNCTION ID PARIZQ PARDER DOSPUNTOS tipo bloque
    (59) funcion -> . FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo CORIZQ CORDER bloque
    (28) comentarios -> . COMENTARIO
    (29) comentarios -> . COMENTARIO_MULTILINEA
    (12) instruccion3 -> . declaracion
    (13) instruccion3 -> . asignacion
    (14) instruccion3 -> . impresion
    (15) instruccion3 -> . condicional
    (16) instruccion3 -> . ciclo_while
    (17) instruccion3 -> . ciclo_for
    (18) instruccion3 -> . ciclo_for_of
    (19) instruccion3 -> . llamada_funcion
    (20) instruccion3 -> . return
    (21) instruccion3 -> . break
    (22) instruccion3 -> . continue
    (23) instruccion3 -> . comentarios
    (24) instruccion3 -> . instanciar
    (25) instruccion3 -> . declaracionInterface
    (26) instruccion3 -> . declaracionArray
    (27) instruccion3 -> . asignacion_array
    (30) declaracion -> . LET ID IGUAL expresion
    (31) declaracion -> . LET ID
    (32) declaracion -> . LET ID DOSPUNTOS tipo IGUAL expresion
    (33) declaracion -> . LET ID DOSPUNTOS tipo
    (34) asignacion -> . ID IGUAL expresion
    (35) asignacion -> . dec
    (36) asignacion -> . inc
    (37) asignacion -> . asignacionInterface
    (42) impresion -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER
    (43) impresion -> . CONSOLE PUNTO LOG PARIZQ lista_argumentos PARDER
    (44) condicional -> . IF PARIZQ expresion PARDER bloque
    (45) condicional -> . IF PARIZQ expresion PARDER bloque ELSE bloque
    (46) condicional -> . IF PARIZQ expresion PARDER bloque lista_elif
    (47) condicional -> . IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque
    (51) ciclo_while -> . WHILE PARIZQ expresion PARDER bloque
    (52) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (53) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (54) ciclo_for_of -> . FOR PARIZQ LET ID OF expresion PARDER bloque
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (115) return -> . RETURN expresion
    (116) return -> . RETURN
    (117) break -> . BREAK
    (118) continue -> . CONTINUE
    (119) instanciar -> . INTERFACE ID bloquestruct
    (124) declaracionInterface -> . LET ID DOSPUNTOS ID IGUAL LLAIZQ lista_d LLADER
    (130) declaracionArray -> . LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER
    (131) declaracionArray -> . LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER
    (132) declaracionArray -> . LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR
    (133) declaracionArray -> . LET ID DOSPUNTOS tipo CORIZQ CORDER
    (134) declaracionArray -> . LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER
    (135) declaracionArray -> . LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER
    (136) declaracionArray -> . LET ID IGUAL CORIZQ CORDER
    (137) declaracionArray -> . LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion
    (138) declaracionArray -> . LET ID IGUAL CORIZQ lista_exp CORDER
    (149) asignacion_array -> . ID lista_acceso_array IGUAL expresion
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (129) asignacionInterface -> . ID PUNTO ID IGUAL expresion

    error           shift and go to state 6
    FUNCTION        shift and go to state 8
    COMENTARIO      shift and go to state 10
    COMENTARIO_MULTILINEA shift and go to state 11
    LET             shift and go to state 27
    ID              shift and go to state 9
    CONSOLE         shift and go to state 31
    IF              shift and go to state 32
    WHILE           shift and go to state 33
    FOR             shift and go to state 34
    RETURN          shift and go to state 35
    BREAK           shift and go to state 36
    CONTINUE        shift and go to state 37
    INTERFACE       shift and go to state 38
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40

    instrucciones                  shift and go to state 1
    instruccion                    shift and go to state 2
    instruccion2                   shift and go to state 3
    funcion                        shift and go to state 4
    comentarios                    shift and go to state 5
    instruccion3                   shift and go to state 7
    declaracion                    shift and go to state 12
    asignacion                     shift and go to state 13
    impresion                      shift and go to state 14
    condicional                    shift and go to state 15
    ciclo_while                    shift and go to state 16
    ciclo_for                      shift and go to state 17
    ciclo_for_of                   shift and go to state 18
    llamada_funcion                shift and go to state 19
    return                         shift and go to state 20
    break                          shift and go to state 21
    continue                       shift and go to state 22
    instanciar                     shift and go to state 23
    declaracionInterface           shift and go to state 24
    declaracionArray               shift and go to state 25
    asignacion_array               shift and go to state 26
    dec                            shift and go to state 28
    inc                            shift and go to state 29
    asignacionInterface            shift and go to state 30

state 1

    (0) S' -> instrucciones .
    (1) instrucciones -> instrucciones . instruccion
    (3) instruccion -> . instruccion2
    (4) instruccion -> . funcion
    (5) instruccion -> . comentarios
    (150) instruccion -> . error PTOYCOMA
    (6) instruccion2 -> . instruccion3 PTOYCOMA
    (7) instruccion2 -> . instruccion3
    (55) funcion -> . FUNCTION ID PARIZQ lista_parametros PARDER bloque
    (56) funcion -> . FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque
    (57) funcion -> . FUNCTION ID PARIZQ PARDER bloque
    (58) funcion -> . FUNCTION ID PARIZQ PARDER DOSPUNTOS tipo bloque
    (59) funcion -> . FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo CORIZQ CORDER bloque
    (28) comentarios -> . COMENTARIO
    (29) comentarios -> . COMENTARIO_MULTILINEA
    (12) instruccion3 -> . declaracion
    (13) instruccion3 -> . asignacion
    (14) instruccion3 -> . impresion
    (15) instruccion3 -> . condicional
    (16) instruccion3 -> . ciclo_while
    (17) instruccion3 -> . ciclo_for
    (18) instruccion3 -> . ciclo_for_of
    (19) instruccion3 -> . llamada_funcion
    (20) instruccion3 -> . return
    (21) instruccion3 -> . break
    (22) instruccion3 -> . continue
    (23) instruccion3 -> . comentarios
    (24) instruccion3 -> . instanciar
    (25) instruccion3 -> . declaracionInterface
    (26) instruccion3 -> . declaracionArray
    (27) instruccion3 -> . asignacion_array
    (30) declaracion -> . LET ID IGUAL expresion
    (31) declaracion -> . LET ID
    (32) declaracion -> . LET ID DOSPUNTOS tipo IGUAL expresion
    (33) declaracion -> . LET ID DOSPUNTOS tipo
    (34) asignacion -> . ID IGUAL expresion
    (35) asignacion -> . dec
    (36) asignacion -> . inc
    (37) asignacion -> . asignacionInterface
    (42) impresion -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER
    (43) impresion -> . CONSOLE PUNTO LOG PARIZQ lista_argumentos PARDER
    (44) condicional -> . IF PARIZQ expresion PARDER bloque
    (45) condicional -> . IF PARIZQ expresion PARDER bloque ELSE bloque
    (46) condicional -> . IF PARIZQ expresion PARDER bloque lista_elif
    (47) condicional -> . IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque
    (51) ciclo_while -> . WHILE PARIZQ expresion PARDER bloque
    (52) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (53) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (54) ciclo_for_of -> . FOR PARIZQ LET ID OF expresion PARDER bloque
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (115) return -> . RETURN expresion
    (116) return -> . RETURN
    (117) break -> . BREAK
    (118) continue -> . CONTINUE
    (119) instanciar -> . INTERFACE ID bloquestruct
    (124) declaracionInterface -> . LET ID DOSPUNTOS ID IGUAL LLAIZQ lista_d LLADER
    (130) declaracionArray -> . LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER
    (131) declaracionArray -> . LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER
    (132) declaracionArray -> . LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR
    (133) declaracionArray -> . LET ID DOSPUNTOS tipo CORIZQ CORDER
    (134) declaracionArray -> . LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER
    (135) declaracionArray -> . LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER
    (136) declaracionArray -> . LET ID IGUAL CORIZQ CORDER
    (137) declaracionArray -> . LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion
    (138) declaracionArray -> . LET ID IGUAL CORIZQ lista_exp CORDER
    (149) asignacion_array -> . ID lista_acceso_array IGUAL expresion
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (129) asignacionInterface -> . ID PUNTO ID IGUAL expresion

    error           shift and go to state 6
    FUNCTION        shift and go to state 8
    COMENTARIO      shift and go to state 10
    COMENTARIO_MULTILINEA shift and go to state 11
    LET             shift and go to state 27
    ID              shift and go to state 9
    CONSOLE         shift and go to state 31
    IF              shift and go to state 32
    WHILE           shift and go to state 33
    FOR             shift and go to state 34
    RETURN          shift and go to state 35
    BREAK           shift and go to state 36
    CONTINUE        shift and go to state 37
    INTERFACE       shift and go to state 38
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40

    instruccion                    shift and go to state 41
    instruccion2                   shift and go to state 3
    funcion                        shift and go to state 4
    comentarios                    shift and go to state 5
    instruccion3                   shift and go to state 7
    declaracion                    shift and go to state 12
    asignacion                     shift and go to state 13
    impresion                      shift and go to state 14
    condicional                    shift and go to state 15
    ciclo_while                    shift and go to state 16
    ciclo_for                      shift and go to state 17
    ciclo_for_of                   shift and go to state 18
    llamada_funcion                shift and go to state 19
    return                         shift and go to state 20
    break                          shift and go to state 21
    continue                       shift and go to state 22
    instanciar                     shift and go to state 23
    declaracionInterface           shift and go to state 24
    declaracionArray               shift and go to state 25
    asignacion_array               shift and go to state 26
    dec                            shift and go to state 28
    inc                            shift and go to state 29
    asignacionInterface            shift and go to state 30

state 2

    (2) instrucciones -> instruccion .

    error           reduce using rule 2 (instrucciones -> instruccion .)
    FUNCTION        reduce using rule 2 (instrucciones -> instruccion .)
    COMENTARIO      reduce using rule 2 (instrucciones -> instruccion .)
    COMENTARIO_MULTILINEA reduce using rule 2 (instrucciones -> instruccion .)
    LET             reduce using rule 2 (instrucciones -> instruccion .)
    ID              reduce using rule 2 (instrucciones -> instruccion .)
    CONSOLE         reduce using rule 2 (instrucciones -> instruccion .)
    IF              reduce using rule 2 (instrucciones -> instruccion .)
    WHILE           reduce using rule 2 (instrucciones -> instruccion .)
    FOR             reduce using rule 2 (instrucciones -> instruccion .)
    RETURN          reduce using rule 2 (instrucciones -> instruccion .)
    BREAK           reduce using rule 2 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 2 (instrucciones -> instruccion .)
    INTERFACE       reduce using rule 2 (instrucciones -> instruccion .)
    DECREMENTO      reduce using rule 2 (instrucciones -> instruccion .)
    INCREMENTO      reduce using rule 2 (instrucciones -> instruccion .)
    $end            reduce using rule 2 (instrucciones -> instruccion .)


state 3

    (3) instruccion -> instruccion2 .

    error           reduce using rule 3 (instruccion -> instruccion2 .)
    FUNCTION        reduce using rule 3 (instruccion -> instruccion2 .)
    COMENTARIO      reduce using rule 3 (instruccion -> instruccion2 .)
    COMENTARIO_MULTILINEA reduce using rule 3 (instruccion -> instruccion2 .)
    LET             reduce using rule 3 (instruccion -> instruccion2 .)
    ID              reduce using rule 3 (instruccion -> instruccion2 .)
    CONSOLE         reduce using rule 3 (instruccion -> instruccion2 .)
    IF              reduce using rule 3 (instruccion -> instruccion2 .)
    WHILE           reduce using rule 3 (instruccion -> instruccion2 .)
    FOR             reduce using rule 3 (instruccion -> instruccion2 .)
    RETURN          reduce using rule 3 (instruccion -> instruccion2 .)
    BREAK           reduce using rule 3 (instruccion -> instruccion2 .)
    CONTINUE        reduce using rule 3 (instruccion -> instruccion2 .)
    INTERFACE       reduce using rule 3 (instruccion -> instruccion2 .)
    DECREMENTO      reduce using rule 3 (instruccion -> instruccion2 .)
    INCREMENTO      reduce using rule 3 (instruccion -> instruccion2 .)
    $end            reduce using rule 3 (instruccion -> instruccion2 .)


state 4

    (4) instruccion -> funcion .

    error           reduce using rule 4 (instruccion -> funcion .)
    FUNCTION        reduce using rule 4 (instruccion -> funcion .)
    COMENTARIO      reduce using rule 4 (instruccion -> funcion .)
    COMENTARIO_MULTILINEA reduce using rule 4 (instruccion -> funcion .)
    LET             reduce using rule 4 (instruccion -> funcion .)
    ID              reduce using rule 4 (instruccion -> funcion .)
    CONSOLE         reduce using rule 4 (instruccion -> funcion .)
    IF              reduce using rule 4 (instruccion -> funcion .)
    WHILE           reduce using rule 4 (instruccion -> funcion .)
    FOR             reduce using rule 4 (instruccion -> funcion .)
    RETURN          reduce using rule 4 (instruccion -> funcion .)
    BREAK           reduce using rule 4 (instruccion -> funcion .)
    CONTINUE        reduce using rule 4 (instruccion -> funcion .)
    INTERFACE       reduce using rule 4 (instruccion -> funcion .)
    DECREMENTO      reduce using rule 4 (instruccion -> funcion .)
    INCREMENTO      reduce using rule 4 (instruccion -> funcion .)
    $end            reduce using rule 4 (instruccion -> funcion .)


state 5

    (5) instruccion -> comentarios .
    (23) instruccion3 -> comentarios .

  ! reduce/reduce conflict for error resolved using rule 5 (instruccion -> comentarios .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 5 (instruccion -> comentarios .)
  ! reduce/reduce conflict for COMENTARIO resolved using rule 5 (instruccion -> comentarios .)
  ! reduce/reduce conflict for COMENTARIO_MULTILINEA resolved using rule 5 (instruccion -> comentarios .)
  ! reduce/reduce conflict for LET resolved using rule 5 (instruccion -> comentarios .)
  ! reduce/reduce conflict for ID resolved using rule 5 (instruccion -> comentarios .)
  ! reduce/reduce conflict for CONSOLE resolved using rule 5 (instruccion -> comentarios .)
  ! reduce/reduce conflict for IF resolved using rule 5 (instruccion -> comentarios .)
  ! reduce/reduce conflict for WHILE resolved using rule 5 (instruccion -> comentarios .)
  ! reduce/reduce conflict for FOR resolved using rule 5 (instruccion -> comentarios .)
  ! reduce/reduce conflict for RETURN resolved using rule 5 (instruccion -> comentarios .)
  ! reduce/reduce conflict for BREAK resolved using rule 5 (instruccion -> comentarios .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 5 (instruccion -> comentarios .)
  ! reduce/reduce conflict for INTERFACE resolved using rule 5 (instruccion -> comentarios .)
  ! reduce/reduce conflict for DECREMENTO resolved using rule 5 (instruccion -> comentarios .)
  ! reduce/reduce conflict for INCREMENTO resolved using rule 5 (instruccion -> comentarios .)
  ! reduce/reduce conflict for $end resolved using rule 5 (instruccion -> comentarios .)
    error           reduce using rule 5 (instruccion -> comentarios .)
    FUNCTION        reduce using rule 5 (instruccion -> comentarios .)
    COMENTARIO      reduce using rule 5 (instruccion -> comentarios .)
    COMENTARIO_MULTILINEA reduce using rule 5 (instruccion -> comentarios .)
    LET             reduce using rule 5 (instruccion -> comentarios .)
    ID              reduce using rule 5 (instruccion -> comentarios .)
    CONSOLE         reduce using rule 5 (instruccion -> comentarios .)
    IF              reduce using rule 5 (instruccion -> comentarios .)
    WHILE           reduce using rule 5 (instruccion -> comentarios .)
    FOR             reduce using rule 5 (instruccion -> comentarios .)
    RETURN          reduce using rule 5 (instruccion -> comentarios .)
    BREAK           reduce using rule 5 (instruccion -> comentarios .)
    CONTINUE        reduce using rule 5 (instruccion -> comentarios .)
    INTERFACE       reduce using rule 5 (instruccion -> comentarios .)
    DECREMENTO      reduce using rule 5 (instruccion -> comentarios .)
    INCREMENTO      reduce using rule 5 (instruccion -> comentarios .)
    $end            reduce using rule 5 (instruccion -> comentarios .)
    PTOYCOMA        reduce using rule 23 (instruccion3 -> comentarios .)

  ! error           [ reduce using rule 23 (instruccion3 -> comentarios .) ]
  ! FUNCTION        [ reduce using rule 23 (instruccion3 -> comentarios .) ]
  ! COMENTARIO      [ reduce using rule 23 (instruccion3 -> comentarios .) ]
  ! COMENTARIO_MULTILINEA [ reduce using rule 23 (instruccion3 -> comentarios .) ]
  ! LET             [ reduce using rule 23 (instruccion3 -> comentarios .) ]
  ! ID              [ reduce using rule 23 (instruccion3 -> comentarios .) ]
  ! CONSOLE         [ reduce using rule 23 (instruccion3 -> comentarios .) ]
  ! IF              [ reduce using rule 23 (instruccion3 -> comentarios .) ]
  ! WHILE           [ reduce using rule 23 (instruccion3 -> comentarios .) ]
  ! FOR             [ reduce using rule 23 (instruccion3 -> comentarios .) ]
  ! RETURN          [ reduce using rule 23 (instruccion3 -> comentarios .) ]
  ! BREAK           [ reduce using rule 23 (instruccion3 -> comentarios .) ]
  ! CONTINUE        [ reduce using rule 23 (instruccion3 -> comentarios .) ]
  ! INTERFACE       [ reduce using rule 23 (instruccion3 -> comentarios .) ]
  ! DECREMENTO      [ reduce using rule 23 (instruccion3 -> comentarios .) ]
  ! INCREMENTO      [ reduce using rule 23 (instruccion3 -> comentarios .) ]
  ! $end            [ reduce using rule 23 (instruccion3 -> comentarios .) ]


state 6

    (150) instruccion -> error . PTOYCOMA

    PTOYCOMA        shift and go to state 42


state 7

    (6) instruccion2 -> instruccion3 . PTOYCOMA
    (7) instruccion2 -> instruccion3 .

    PTOYCOMA        shift and go to state 43
    error           reduce using rule 7 (instruccion2 -> instruccion3 .)
    FUNCTION        reduce using rule 7 (instruccion2 -> instruccion3 .)
    COMENTARIO      reduce using rule 7 (instruccion2 -> instruccion3 .)
    COMENTARIO_MULTILINEA reduce using rule 7 (instruccion2 -> instruccion3 .)
    LET             reduce using rule 7 (instruccion2 -> instruccion3 .)
    ID              reduce using rule 7 (instruccion2 -> instruccion3 .)
    CONSOLE         reduce using rule 7 (instruccion2 -> instruccion3 .)
    IF              reduce using rule 7 (instruccion2 -> instruccion3 .)
    WHILE           reduce using rule 7 (instruccion2 -> instruccion3 .)
    FOR             reduce using rule 7 (instruccion2 -> instruccion3 .)
    RETURN          reduce using rule 7 (instruccion2 -> instruccion3 .)
    BREAK           reduce using rule 7 (instruccion2 -> instruccion3 .)
    CONTINUE        reduce using rule 7 (instruccion2 -> instruccion3 .)
    INTERFACE       reduce using rule 7 (instruccion2 -> instruccion3 .)
    DECREMENTO      reduce using rule 7 (instruccion2 -> instruccion3 .)
    INCREMENTO      reduce using rule 7 (instruccion2 -> instruccion3 .)
    $end            reduce using rule 7 (instruccion2 -> instruccion3 .)
    LLADER          reduce using rule 7 (instruccion2 -> instruccion3 .)


state 8

    (55) funcion -> FUNCTION . ID PARIZQ lista_parametros PARDER bloque
    (56) funcion -> FUNCTION . ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque
    (57) funcion -> FUNCTION . ID PARIZQ PARDER bloque
    (58) funcion -> FUNCTION . ID PARIZQ PARDER DOSPUNTOS tipo bloque
    (59) funcion -> FUNCTION . ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo CORIZQ CORDER bloque

    ID              shift and go to state 44


state 9

    (34) asignacion -> ID . IGUAL expresion
    (65) llamada_funcion -> ID . PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> ID . PARIZQ PARDER
    (149) asignacion_array -> ID . lista_acceso_array IGUAL expresion
    (38) dec -> ID . DECREMENTO
    (40) inc -> ID . INCREMENTO
    (129) asignacionInterface -> ID . PUNTO ID IGUAL expresion
    (146) lista_acceso_array -> . lista_acceso_array acceso_array_exp
    (147) lista_acceso_array -> . acceso_array_exp
    (148) acceso_array_exp -> . CORIZQ expresion CORDER

    IGUAL           shift and go to state 45
    PARIZQ          shift and go to state 46
    DECREMENTO      shift and go to state 48
    INCREMENTO      shift and go to state 49
    PUNTO           shift and go to state 50
    CORIZQ          shift and go to state 52

    lista_acceso_array             shift and go to state 47
    acceso_array_exp               shift and go to state 51

state 10

    (28) comentarios -> COMENTARIO .

    error           reduce using rule 28 (comentarios -> COMENTARIO .)
    FUNCTION        reduce using rule 28 (comentarios -> COMENTARIO .)
    COMENTARIO      reduce using rule 28 (comentarios -> COMENTARIO .)
    COMENTARIO_MULTILINEA reduce using rule 28 (comentarios -> COMENTARIO .)
    LET             reduce using rule 28 (comentarios -> COMENTARIO .)
    ID              reduce using rule 28 (comentarios -> COMENTARIO .)
    CONSOLE         reduce using rule 28 (comentarios -> COMENTARIO .)
    IF              reduce using rule 28 (comentarios -> COMENTARIO .)
    WHILE           reduce using rule 28 (comentarios -> COMENTARIO .)
    FOR             reduce using rule 28 (comentarios -> COMENTARIO .)
    RETURN          reduce using rule 28 (comentarios -> COMENTARIO .)
    BREAK           reduce using rule 28 (comentarios -> COMENTARIO .)
    CONTINUE        reduce using rule 28 (comentarios -> COMENTARIO .)
    INTERFACE       reduce using rule 28 (comentarios -> COMENTARIO .)
    DECREMENTO      reduce using rule 28 (comentarios -> COMENTARIO .)
    INCREMENTO      reduce using rule 28 (comentarios -> COMENTARIO .)
    $end            reduce using rule 28 (comentarios -> COMENTARIO .)
    PTOYCOMA        reduce using rule 28 (comentarios -> COMENTARIO .)
    LLADER          reduce using rule 28 (comentarios -> COMENTARIO .)


state 11

    (29) comentarios -> COMENTARIO_MULTILINEA .

    error           reduce using rule 29 (comentarios -> COMENTARIO_MULTILINEA .)
    FUNCTION        reduce using rule 29 (comentarios -> COMENTARIO_MULTILINEA .)
    COMENTARIO      reduce using rule 29 (comentarios -> COMENTARIO_MULTILINEA .)
    COMENTARIO_MULTILINEA reduce using rule 29 (comentarios -> COMENTARIO_MULTILINEA .)
    LET             reduce using rule 29 (comentarios -> COMENTARIO_MULTILINEA .)
    ID              reduce using rule 29 (comentarios -> COMENTARIO_MULTILINEA .)
    CONSOLE         reduce using rule 29 (comentarios -> COMENTARIO_MULTILINEA .)
    IF              reduce using rule 29 (comentarios -> COMENTARIO_MULTILINEA .)
    WHILE           reduce using rule 29 (comentarios -> COMENTARIO_MULTILINEA .)
    FOR             reduce using rule 29 (comentarios -> COMENTARIO_MULTILINEA .)
    RETURN          reduce using rule 29 (comentarios -> COMENTARIO_MULTILINEA .)
    BREAK           reduce using rule 29 (comentarios -> COMENTARIO_MULTILINEA .)
    CONTINUE        reduce using rule 29 (comentarios -> COMENTARIO_MULTILINEA .)
    INTERFACE       reduce using rule 29 (comentarios -> COMENTARIO_MULTILINEA .)
    DECREMENTO      reduce using rule 29 (comentarios -> COMENTARIO_MULTILINEA .)
    INCREMENTO      reduce using rule 29 (comentarios -> COMENTARIO_MULTILINEA .)
    $end            reduce using rule 29 (comentarios -> COMENTARIO_MULTILINEA .)
    PTOYCOMA        reduce using rule 29 (comentarios -> COMENTARIO_MULTILINEA .)
    LLADER          reduce using rule 29 (comentarios -> COMENTARIO_MULTILINEA .)


state 12

    (12) instruccion3 -> declaracion .

    PTOYCOMA        reduce using rule 12 (instruccion3 -> declaracion .)
    error           reduce using rule 12 (instruccion3 -> declaracion .)
    FUNCTION        reduce using rule 12 (instruccion3 -> declaracion .)
    COMENTARIO      reduce using rule 12 (instruccion3 -> declaracion .)
    COMENTARIO_MULTILINEA reduce using rule 12 (instruccion3 -> declaracion .)
    LET             reduce using rule 12 (instruccion3 -> declaracion .)
    ID              reduce using rule 12 (instruccion3 -> declaracion .)
    CONSOLE         reduce using rule 12 (instruccion3 -> declaracion .)
    IF              reduce using rule 12 (instruccion3 -> declaracion .)
    WHILE           reduce using rule 12 (instruccion3 -> declaracion .)
    FOR             reduce using rule 12 (instruccion3 -> declaracion .)
    RETURN          reduce using rule 12 (instruccion3 -> declaracion .)
    BREAK           reduce using rule 12 (instruccion3 -> declaracion .)
    CONTINUE        reduce using rule 12 (instruccion3 -> declaracion .)
    INTERFACE       reduce using rule 12 (instruccion3 -> declaracion .)
    DECREMENTO      reduce using rule 12 (instruccion3 -> declaracion .)
    INCREMENTO      reduce using rule 12 (instruccion3 -> declaracion .)
    $end            reduce using rule 12 (instruccion3 -> declaracion .)
    LLADER          reduce using rule 12 (instruccion3 -> declaracion .)


state 13

    (13) instruccion3 -> asignacion .

    PTOYCOMA        reduce using rule 13 (instruccion3 -> asignacion .)
    error           reduce using rule 13 (instruccion3 -> asignacion .)
    FUNCTION        reduce using rule 13 (instruccion3 -> asignacion .)
    COMENTARIO      reduce using rule 13 (instruccion3 -> asignacion .)
    COMENTARIO_MULTILINEA reduce using rule 13 (instruccion3 -> asignacion .)
    LET             reduce using rule 13 (instruccion3 -> asignacion .)
    ID              reduce using rule 13 (instruccion3 -> asignacion .)
    CONSOLE         reduce using rule 13 (instruccion3 -> asignacion .)
    IF              reduce using rule 13 (instruccion3 -> asignacion .)
    WHILE           reduce using rule 13 (instruccion3 -> asignacion .)
    FOR             reduce using rule 13 (instruccion3 -> asignacion .)
    RETURN          reduce using rule 13 (instruccion3 -> asignacion .)
    BREAK           reduce using rule 13 (instruccion3 -> asignacion .)
    CONTINUE        reduce using rule 13 (instruccion3 -> asignacion .)
    INTERFACE       reduce using rule 13 (instruccion3 -> asignacion .)
    DECREMENTO      reduce using rule 13 (instruccion3 -> asignacion .)
    INCREMENTO      reduce using rule 13 (instruccion3 -> asignacion .)
    $end            reduce using rule 13 (instruccion3 -> asignacion .)
    LLADER          reduce using rule 13 (instruccion3 -> asignacion .)


state 14

    (14) instruccion3 -> impresion .

    PTOYCOMA        reduce using rule 14 (instruccion3 -> impresion .)
    error           reduce using rule 14 (instruccion3 -> impresion .)
    FUNCTION        reduce using rule 14 (instruccion3 -> impresion .)
    COMENTARIO      reduce using rule 14 (instruccion3 -> impresion .)
    COMENTARIO_MULTILINEA reduce using rule 14 (instruccion3 -> impresion .)
    LET             reduce using rule 14 (instruccion3 -> impresion .)
    ID              reduce using rule 14 (instruccion3 -> impresion .)
    CONSOLE         reduce using rule 14 (instruccion3 -> impresion .)
    IF              reduce using rule 14 (instruccion3 -> impresion .)
    WHILE           reduce using rule 14 (instruccion3 -> impresion .)
    FOR             reduce using rule 14 (instruccion3 -> impresion .)
    RETURN          reduce using rule 14 (instruccion3 -> impresion .)
    BREAK           reduce using rule 14 (instruccion3 -> impresion .)
    CONTINUE        reduce using rule 14 (instruccion3 -> impresion .)
    INTERFACE       reduce using rule 14 (instruccion3 -> impresion .)
    DECREMENTO      reduce using rule 14 (instruccion3 -> impresion .)
    INCREMENTO      reduce using rule 14 (instruccion3 -> impresion .)
    $end            reduce using rule 14 (instruccion3 -> impresion .)
    LLADER          reduce using rule 14 (instruccion3 -> impresion .)


state 15

    (15) instruccion3 -> condicional .

    PTOYCOMA        reduce using rule 15 (instruccion3 -> condicional .)
    error           reduce using rule 15 (instruccion3 -> condicional .)
    FUNCTION        reduce using rule 15 (instruccion3 -> condicional .)
    COMENTARIO      reduce using rule 15 (instruccion3 -> condicional .)
    COMENTARIO_MULTILINEA reduce using rule 15 (instruccion3 -> condicional .)
    LET             reduce using rule 15 (instruccion3 -> condicional .)
    ID              reduce using rule 15 (instruccion3 -> condicional .)
    CONSOLE         reduce using rule 15 (instruccion3 -> condicional .)
    IF              reduce using rule 15 (instruccion3 -> condicional .)
    WHILE           reduce using rule 15 (instruccion3 -> condicional .)
    FOR             reduce using rule 15 (instruccion3 -> condicional .)
    RETURN          reduce using rule 15 (instruccion3 -> condicional .)
    BREAK           reduce using rule 15 (instruccion3 -> condicional .)
    CONTINUE        reduce using rule 15 (instruccion3 -> condicional .)
    INTERFACE       reduce using rule 15 (instruccion3 -> condicional .)
    DECREMENTO      reduce using rule 15 (instruccion3 -> condicional .)
    INCREMENTO      reduce using rule 15 (instruccion3 -> condicional .)
    $end            reduce using rule 15 (instruccion3 -> condicional .)
    LLADER          reduce using rule 15 (instruccion3 -> condicional .)


state 16

    (16) instruccion3 -> ciclo_while .

    PTOYCOMA        reduce using rule 16 (instruccion3 -> ciclo_while .)
    error           reduce using rule 16 (instruccion3 -> ciclo_while .)
    FUNCTION        reduce using rule 16 (instruccion3 -> ciclo_while .)
    COMENTARIO      reduce using rule 16 (instruccion3 -> ciclo_while .)
    COMENTARIO_MULTILINEA reduce using rule 16 (instruccion3 -> ciclo_while .)
    LET             reduce using rule 16 (instruccion3 -> ciclo_while .)
    ID              reduce using rule 16 (instruccion3 -> ciclo_while .)
    CONSOLE         reduce using rule 16 (instruccion3 -> ciclo_while .)
    IF              reduce using rule 16 (instruccion3 -> ciclo_while .)
    WHILE           reduce using rule 16 (instruccion3 -> ciclo_while .)
    FOR             reduce using rule 16 (instruccion3 -> ciclo_while .)
    RETURN          reduce using rule 16 (instruccion3 -> ciclo_while .)
    BREAK           reduce using rule 16 (instruccion3 -> ciclo_while .)
    CONTINUE        reduce using rule 16 (instruccion3 -> ciclo_while .)
    INTERFACE       reduce using rule 16 (instruccion3 -> ciclo_while .)
    DECREMENTO      reduce using rule 16 (instruccion3 -> ciclo_while .)
    INCREMENTO      reduce using rule 16 (instruccion3 -> ciclo_while .)
    $end            reduce using rule 16 (instruccion3 -> ciclo_while .)
    LLADER          reduce using rule 16 (instruccion3 -> ciclo_while .)


state 17

    (17) instruccion3 -> ciclo_for .

    PTOYCOMA        reduce using rule 17 (instruccion3 -> ciclo_for .)
    error           reduce using rule 17 (instruccion3 -> ciclo_for .)
    FUNCTION        reduce using rule 17 (instruccion3 -> ciclo_for .)
    COMENTARIO      reduce using rule 17 (instruccion3 -> ciclo_for .)
    COMENTARIO_MULTILINEA reduce using rule 17 (instruccion3 -> ciclo_for .)
    LET             reduce using rule 17 (instruccion3 -> ciclo_for .)
    ID              reduce using rule 17 (instruccion3 -> ciclo_for .)
    CONSOLE         reduce using rule 17 (instruccion3 -> ciclo_for .)
    IF              reduce using rule 17 (instruccion3 -> ciclo_for .)
    WHILE           reduce using rule 17 (instruccion3 -> ciclo_for .)
    FOR             reduce using rule 17 (instruccion3 -> ciclo_for .)
    RETURN          reduce using rule 17 (instruccion3 -> ciclo_for .)
    BREAK           reduce using rule 17 (instruccion3 -> ciclo_for .)
    CONTINUE        reduce using rule 17 (instruccion3 -> ciclo_for .)
    INTERFACE       reduce using rule 17 (instruccion3 -> ciclo_for .)
    DECREMENTO      reduce using rule 17 (instruccion3 -> ciclo_for .)
    INCREMENTO      reduce using rule 17 (instruccion3 -> ciclo_for .)
    $end            reduce using rule 17 (instruccion3 -> ciclo_for .)
    LLADER          reduce using rule 17 (instruccion3 -> ciclo_for .)


state 18

    (18) instruccion3 -> ciclo_for_of .

    PTOYCOMA        reduce using rule 18 (instruccion3 -> ciclo_for_of .)
    error           reduce using rule 18 (instruccion3 -> ciclo_for_of .)
    FUNCTION        reduce using rule 18 (instruccion3 -> ciclo_for_of .)
    COMENTARIO      reduce using rule 18 (instruccion3 -> ciclo_for_of .)
    COMENTARIO_MULTILINEA reduce using rule 18 (instruccion3 -> ciclo_for_of .)
    LET             reduce using rule 18 (instruccion3 -> ciclo_for_of .)
    ID              reduce using rule 18 (instruccion3 -> ciclo_for_of .)
    CONSOLE         reduce using rule 18 (instruccion3 -> ciclo_for_of .)
    IF              reduce using rule 18 (instruccion3 -> ciclo_for_of .)
    WHILE           reduce using rule 18 (instruccion3 -> ciclo_for_of .)
    FOR             reduce using rule 18 (instruccion3 -> ciclo_for_of .)
    RETURN          reduce using rule 18 (instruccion3 -> ciclo_for_of .)
    BREAK           reduce using rule 18 (instruccion3 -> ciclo_for_of .)
    CONTINUE        reduce using rule 18 (instruccion3 -> ciclo_for_of .)
    INTERFACE       reduce using rule 18 (instruccion3 -> ciclo_for_of .)
    DECREMENTO      reduce using rule 18 (instruccion3 -> ciclo_for_of .)
    INCREMENTO      reduce using rule 18 (instruccion3 -> ciclo_for_of .)
    $end            reduce using rule 18 (instruccion3 -> ciclo_for_of .)
    LLADER          reduce using rule 18 (instruccion3 -> ciclo_for_of .)


state 19

    (19) instruccion3 -> llamada_funcion .

    PTOYCOMA        reduce using rule 19 (instruccion3 -> llamada_funcion .)
    error           reduce using rule 19 (instruccion3 -> llamada_funcion .)
    FUNCTION        reduce using rule 19 (instruccion3 -> llamada_funcion .)
    COMENTARIO      reduce using rule 19 (instruccion3 -> llamada_funcion .)
    COMENTARIO_MULTILINEA reduce using rule 19 (instruccion3 -> llamada_funcion .)
    LET             reduce using rule 19 (instruccion3 -> llamada_funcion .)
    ID              reduce using rule 19 (instruccion3 -> llamada_funcion .)
    CONSOLE         reduce using rule 19 (instruccion3 -> llamada_funcion .)
    IF              reduce using rule 19 (instruccion3 -> llamada_funcion .)
    WHILE           reduce using rule 19 (instruccion3 -> llamada_funcion .)
    FOR             reduce using rule 19 (instruccion3 -> llamada_funcion .)
    RETURN          reduce using rule 19 (instruccion3 -> llamada_funcion .)
    BREAK           reduce using rule 19 (instruccion3 -> llamada_funcion .)
    CONTINUE        reduce using rule 19 (instruccion3 -> llamada_funcion .)
    INTERFACE       reduce using rule 19 (instruccion3 -> llamada_funcion .)
    DECREMENTO      reduce using rule 19 (instruccion3 -> llamada_funcion .)
    INCREMENTO      reduce using rule 19 (instruccion3 -> llamada_funcion .)
    $end            reduce using rule 19 (instruccion3 -> llamada_funcion .)
    LLADER          reduce using rule 19 (instruccion3 -> llamada_funcion .)


state 20

    (20) instruccion3 -> return .

    PTOYCOMA        reduce using rule 20 (instruccion3 -> return .)
    error           reduce using rule 20 (instruccion3 -> return .)
    FUNCTION        reduce using rule 20 (instruccion3 -> return .)
    COMENTARIO      reduce using rule 20 (instruccion3 -> return .)
    COMENTARIO_MULTILINEA reduce using rule 20 (instruccion3 -> return .)
    LET             reduce using rule 20 (instruccion3 -> return .)
    ID              reduce using rule 20 (instruccion3 -> return .)
    CONSOLE         reduce using rule 20 (instruccion3 -> return .)
    IF              reduce using rule 20 (instruccion3 -> return .)
    WHILE           reduce using rule 20 (instruccion3 -> return .)
    FOR             reduce using rule 20 (instruccion3 -> return .)
    RETURN          reduce using rule 20 (instruccion3 -> return .)
    BREAK           reduce using rule 20 (instruccion3 -> return .)
    CONTINUE        reduce using rule 20 (instruccion3 -> return .)
    INTERFACE       reduce using rule 20 (instruccion3 -> return .)
    DECREMENTO      reduce using rule 20 (instruccion3 -> return .)
    INCREMENTO      reduce using rule 20 (instruccion3 -> return .)
    $end            reduce using rule 20 (instruccion3 -> return .)
    LLADER          reduce using rule 20 (instruccion3 -> return .)


state 21

    (21) instruccion3 -> break .

    PTOYCOMA        reduce using rule 21 (instruccion3 -> break .)
    error           reduce using rule 21 (instruccion3 -> break .)
    FUNCTION        reduce using rule 21 (instruccion3 -> break .)
    COMENTARIO      reduce using rule 21 (instruccion3 -> break .)
    COMENTARIO_MULTILINEA reduce using rule 21 (instruccion3 -> break .)
    LET             reduce using rule 21 (instruccion3 -> break .)
    ID              reduce using rule 21 (instruccion3 -> break .)
    CONSOLE         reduce using rule 21 (instruccion3 -> break .)
    IF              reduce using rule 21 (instruccion3 -> break .)
    WHILE           reduce using rule 21 (instruccion3 -> break .)
    FOR             reduce using rule 21 (instruccion3 -> break .)
    RETURN          reduce using rule 21 (instruccion3 -> break .)
    BREAK           reduce using rule 21 (instruccion3 -> break .)
    CONTINUE        reduce using rule 21 (instruccion3 -> break .)
    INTERFACE       reduce using rule 21 (instruccion3 -> break .)
    DECREMENTO      reduce using rule 21 (instruccion3 -> break .)
    INCREMENTO      reduce using rule 21 (instruccion3 -> break .)
    $end            reduce using rule 21 (instruccion3 -> break .)
    LLADER          reduce using rule 21 (instruccion3 -> break .)


state 22

    (22) instruccion3 -> continue .

    PTOYCOMA        reduce using rule 22 (instruccion3 -> continue .)
    error           reduce using rule 22 (instruccion3 -> continue .)
    FUNCTION        reduce using rule 22 (instruccion3 -> continue .)
    COMENTARIO      reduce using rule 22 (instruccion3 -> continue .)
    COMENTARIO_MULTILINEA reduce using rule 22 (instruccion3 -> continue .)
    LET             reduce using rule 22 (instruccion3 -> continue .)
    ID              reduce using rule 22 (instruccion3 -> continue .)
    CONSOLE         reduce using rule 22 (instruccion3 -> continue .)
    IF              reduce using rule 22 (instruccion3 -> continue .)
    WHILE           reduce using rule 22 (instruccion3 -> continue .)
    FOR             reduce using rule 22 (instruccion3 -> continue .)
    RETURN          reduce using rule 22 (instruccion3 -> continue .)
    BREAK           reduce using rule 22 (instruccion3 -> continue .)
    CONTINUE        reduce using rule 22 (instruccion3 -> continue .)
    INTERFACE       reduce using rule 22 (instruccion3 -> continue .)
    DECREMENTO      reduce using rule 22 (instruccion3 -> continue .)
    INCREMENTO      reduce using rule 22 (instruccion3 -> continue .)
    $end            reduce using rule 22 (instruccion3 -> continue .)
    LLADER          reduce using rule 22 (instruccion3 -> continue .)


state 23

    (24) instruccion3 -> instanciar .

    PTOYCOMA        reduce using rule 24 (instruccion3 -> instanciar .)
    error           reduce using rule 24 (instruccion3 -> instanciar .)
    FUNCTION        reduce using rule 24 (instruccion3 -> instanciar .)
    COMENTARIO      reduce using rule 24 (instruccion3 -> instanciar .)
    COMENTARIO_MULTILINEA reduce using rule 24 (instruccion3 -> instanciar .)
    LET             reduce using rule 24 (instruccion3 -> instanciar .)
    ID              reduce using rule 24 (instruccion3 -> instanciar .)
    CONSOLE         reduce using rule 24 (instruccion3 -> instanciar .)
    IF              reduce using rule 24 (instruccion3 -> instanciar .)
    WHILE           reduce using rule 24 (instruccion3 -> instanciar .)
    FOR             reduce using rule 24 (instruccion3 -> instanciar .)
    RETURN          reduce using rule 24 (instruccion3 -> instanciar .)
    BREAK           reduce using rule 24 (instruccion3 -> instanciar .)
    CONTINUE        reduce using rule 24 (instruccion3 -> instanciar .)
    INTERFACE       reduce using rule 24 (instruccion3 -> instanciar .)
    DECREMENTO      reduce using rule 24 (instruccion3 -> instanciar .)
    INCREMENTO      reduce using rule 24 (instruccion3 -> instanciar .)
    $end            reduce using rule 24 (instruccion3 -> instanciar .)
    LLADER          reduce using rule 24 (instruccion3 -> instanciar .)


state 24

    (25) instruccion3 -> declaracionInterface .

    PTOYCOMA        reduce using rule 25 (instruccion3 -> declaracionInterface .)
    error           reduce using rule 25 (instruccion3 -> declaracionInterface .)
    FUNCTION        reduce using rule 25 (instruccion3 -> declaracionInterface .)
    COMENTARIO      reduce using rule 25 (instruccion3 -> declaracionInterface .)
    COMENTARIO_MULTILINEA reduce using rule 25 (instruccion3 -> declaracionInterface .)
    LET             reduce using rule 25 (instruccion3 -> declaracionInterface .)
    ID              reduce using rule 25 (instruccion3 -> declaracionInterface .)
    CONSOLE         reduce using rule 25 (instruccion3 -> declaracionInterface .)
    IF              reduce using rule 25 (instruccion3 -> declaracionInterface .)
    WHILE           reduce using rule 25 (instruccion3 -> declaracionInterface .)
    FOR             reduce using rule 25 (instruccion3 -> declaracionInterface .)
    RETURN          reduce using rule 25 (instruccion3 -> declaracionInterface .)
    BREAK           reduce using rule 25 (instruccion3 -> declaracionInterface .)
    CONTINUE        reduce using rule 25 (instruccion3 -> declaracionInterface .)
    INTERFACE       reduce using rule 25 (instruccion3 -> declaracionInterface .)
    DECREMENTO      reduce using rule 25 (instruccion3 -> declaracionInterface .)
    INCREMENTO      reduce using rule 25 (instruccion3 -> declaracionInterface .)
    $end            reduce using rule 25 (instruccion3 -> declaracionInterface .)
    LLADER          reduce using rule 25 (instruccion3 -> declaracionInterface .)


state 25

    (26) instruccion3 -> declaracionArray .

    PTOYCOMA        reduce using rule 26 (instruccion3 -> declaracionArray .)
    error           reduce using rule 26 (instruccion3 -> declaracionArray .)
    FUNCTION        reduce using rule 26 (instruccion3 -> declaracionArray .)
    COMENTARIO      reduce using rule 26 (instruccion3 -> declaracionArray .)
    COMENTARIO_MULTILINEA reduce using rule 26 (instruccion3 -> declaracionArray .)
    LET             reduce using rule 26 (instruccion3 -> declaracionArray .)
    ID              reduce using rule 26 (instruccion3 -> declaracionArray .)
    CONSOLE         reduce using rule 26 (instruccion3 -> declaracionArray .)
    IF              reduce using rule 26 (instruccion3 -> declaracionArray .)
    WHILE           reduce using rule 26 (instruccion3 -> declaracionArray .)
    FOR             reduce using rule 26 (instruccion3 -> declaracionArray .)
    RETURN          reduce using rule 26 (instruccion3 -> declaracionArray .)
    BREAK           reduce using rule 26 (instruccion3 -> declaracionArray .)
    CONTINUE        reduce using rule 26 (instruccion3 -> declaracionArray .)
    INTERFACE       reduce using rule 26 (instruccion3 -> declaracionArray .)
    DECREMENTO      reduce using rule 26 (instruccion3 -> declaracionArray .)
    INCREMENTO      reduce using rule 26 (instruccion3 -> declaracionArray .)
    $end            reduce using rule 26 (instruccion3 -> declaracionArray .)
    LLADER          reduce using rule 26 (instruccion3 -> declaracionArray .)


state 26

    (27) instruccion3 -> asignacion_array .

    PTOYCOMA        reduce using rule 27 (instruccion3 -> asignacion_array .)
    error           reduce using rule 27 (instruccion3 -> asignacion_array .)
    FUNCTION        reduce using rule 27 (instruccion3 -> asignacion_array .)
    COMENTARIO      reduce using rule 27 (instruccion3 -> asignacion_array .)
    COMENTARIO_MULTILINEA reduce using rule 27 (instruccion3 -> asignacion_array .)
    LET             reduce using rule 27 (instruccion3 -> asignacion_array .)
    ID              reduce using rule 27 (instruccion3 -> asignacion_array .)
    CONSOLE         reduce using rule 27 (instruccion3 -> asignacion_array .)
    IF              reduce using rule 27 (instruccion3 -> asignacion_array .)
    WHILE           reduce using rule 27 (instruccion3 -> asignacion_array .)
    FOR             reduce using rule 27 (instruccion3 -> asignacion_array .)
    RETURN          reduce using rule 27 (instruccion3 -> asignacion_array .)
    BREAK           reduce using rule 27 (instruccion3 -> asignacion_array .)
    CONTINUE        reduce using rule 27 (instruccion3 -> asignacion_array .)
    INTERFACE       reduce using rule 27 (instruccion3 -> asignacion_array .)
    DECREMENTO      reduce using rule 27 (instruccion3 -> asignacion_array .)
    INCREMENTO      reduce using rule 27 (instruccion3 -> asignacion_array .)
    $end            reduce using rule 27 (instruccion3 -> asignacion_array .)
    LLADER          reduce using rule 27 (instruccion3 -> asignacion_array .)


state 27

    (30) declaracion -> LET . ID IGUAL expresion
    (31) declaracion -> LET . ID
    (32) declaracion -> LET . ID DOSPUNTOS tipo IGUAL expresion
    (33) declaracion -> LET . ID DOSPUNTOS tipo
    (124) declaracionInterface -> LET . ID DOSPUNTOS ID IGUAL LLAIZQ lista_d LLADER
    (130) declaracionArray -> LET . ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER
    (131) declaracionArray -> LET . ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER
    (132) declaracionArray -> LET . ID DOSPUNTOS ARRAY MENOR tipo MAYOR
    (133) declaracionArray -> LET . ID DOSPUNTOS tipo CORIZQ CORDER
    (134) declaracionArray -> LET . ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER
    (135) declaracionArray -> LET . ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER
    (136) declaracionArray -> LET . ID IGUAL CORIZQ CORDER
    (137) declaracionArray -> LET . ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion
    (138) declaracionArray -> LET . ID IGUAL CORIZQ lista_exp CORDER

    ID              shift and go to state 53


state 28

    (35) asignacion -> dec .

    PTOYCOMA        reduce using rule 35 (asignacion -> dec .)
    error           reduce using rule 35 (asignacion -> dec .)
    FUNCTION        reduce using rule 35 (asignacion -> dec .)
    COMENTARIO      reduce using rule 35 (asignacion -> dec .)
    COMENTARIO_MULTILINEA reduce using rule 35 (asignacion -> dec .)
    LET             reduce using rule 35 (asignacion -> dec .)
    ID              reduce using rule 35 (asignacion -> dec .)
    CONSOLE         reduce using rule 35 (asignacion -> dec .)
    IF              reduce using rule 35 (asignacion -> dec .)
    WHILE           reduce using rule 35 (asignacion -> dec .)
    FOR             reduce using rule 35 (asignacion -> dec .)
    RETURN          reduce using rule 35 (asignacion -> dec .)
    BREAK           reduce using rule 35 (asignacion -> dec .)
    CONTINUE        reduce using rule 35 (asignacion -> dec .)
    INTERFACE       reduce using rule 35 (asignacion -> dec .)
    DECREMENTO      reduce using rule 35 (asignacion -> dec .)
    INCREMENTO      reduce using rule 35 (asignacion -> dec .)
    $end            reduce using rule 35 (asignacion -> dec .)
    LLADER          reduce using rule 35 (asignacion -> dec .)
    PARDER          reduce using rule 35 (asignacion -> dec .)


state 29

    (36) asignacion -> inc .

    PTOYCOMA        reduce using rule 36 (asignacion -> inc .)
    error           reduce using rule 36 (asignacion -> inc .)
    FUNCTION        reduce using rule 36 (asignacion -> inc .)
    COMENTARIO      reduce using rule 36 (asignacion -> inc .)
    COMENTARIO_MULTILINEA reduce using rule 36 (asignacion -> inc .)
    LET             reduce using rule 36 (asignacion -> inc .)
    ID              reduce using rule 36 (asignacion -> inc .)
    CONSOLE         reduce using rule 36 (asignacion -> inc .)
    IF              reduce using rule 36 (asignacion -> inc .)
    WHILE           reduce using rule 36 (asignacion -> inc .)
    FOR             reduce using rule 36 (asignacion -> inc .)
    RETURN          reduce using rule 36 (asignacion -> inc .)
    BREAK           reduce using rule 36 (asignacion -> inc .)
    CONTINUE        reduce using rule 36 (asignacion -> inc .)
    INTERFACE       reduce using rule 36 (asignacion -> inc .)
    DECREMENTO      reduce using rule 36 (asignacion -> inc .)
    INCREMENTO      reduce using rule 36 (asignacion -> inc .)
    $end            reduce using rule 36 (asignacion -> inc .)
    LLADER          reduce using rule 36 (asignacion -> inc .)
    PARDER          reduce using rule 36 (asignacion -> inc .)


state 30

    (37) asignacion -> asignacionInterface .

    PTOYCOMA        reduce using rule 37 (asignacion -> asignacionInterface .)
    error           reduce using rule 37 (asignacion -> asignacionInterface .)
    FUNCTION        reduce using rule 37 (asignacion -> asignacionInterface .)
    COMENTARIO      reduce using rule 37 (asignacion -> asignacionInterface .)
    COMENTARIO_MULTILINEA reduce using rule 37 (asignacion -> asignacionInterface .)
    LET             reduce using rule 37 (asignacion -> asignacionInterface .)
    ID              reduce using rule 37 (asignacion -> asignacionInterface .)
    CONSOLE         reduce using rule 37 (asignacion -> asignacionInterface .)
    IF              reduce using rule 37 (asignacion -> asignacionInterface .)
    WHILE           reduce using rule 37 (asignacion -> asignacionInterface .)
    FOR             reduce using rule 37 (asignacion -> asignacionInterface .)
    RETURN          reduce using rule 37 (asignacion -> asignacionInterface .)
    BREAK           reduce using rule 37 (asignacion -> asignacionInterface .)
    CONTINUE        reduce using rule 37 (asignacion -> asignacionInterface .)
    INTERFACE       reduce using rule 37 (asignacion -> asignacionInterface .)
    DECREMENTO      reduce using rule 37 (asignacion -> asignacionInterface .)
    INCREMENTO      reduce using rule 37 (asignacion -> asignacionInterface .)
    $end            reduce using rule 37 (asignacion -> asignacionInterface .)
    LLADER          reduce using rule 37 (asignacion -> asignacionInterface .)
    PARDER          reduce using rule 37 (asignacion -> asignacionInterface .)


state 31

    (42) impresion -> CONSOLE . PUNTO LOG PARIZQ expresion PARDER
    (43) impresion -> CONSOLE . PUNTO LOG PARIZQ lista_argumentos PARDER

    PUNTO           shift and go to state 54


state 32

    (44) condicional -> IF . PARIZQ expresion PARDER bloque
    (45) condicional -> IF . PARIZQ expresion PARDER bloque ELSE bloque
    (46) condicional -> IF . PARIZQ expresion PARDER bloque lista_elif
    (47) condicional -> IF . PARIZQ expresion PARDER bloque lista_elif ELSE bloque

    PARIZQ          shift and go to state 55


state 33

    (51) ciclo_while -> WHILE . PARIZQ expresion PARDER bloque

    PARIZQ          shift and go to state 56


state 34

    (52) ciclo_for -> FOR . PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (53) ciclo_for -> FOR . PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (54) ciclo_for_of -> FOR . PARIZQ LET ID OF expresion PARDER bloque

    PARIZQ          shift and go to state 57


state 35

    (115) return -> RETURN . expresion
    (116) return -> RETURN .
    (64) expresion -> . llamada_funcion
    (74) expresion -> . expresion MAS expresion
    (75) expresion -> . expresion MENOS expresion
    (76) expresion -> . expresion POR expresion
    (77) expresion -> . expresion DIVIDIDO expresion
    (78) expresion -> . expresion MODULO expresion
    (79) expresion -> . expresion POTENCIA expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . expresion MAYOR expresion
    (82) expresion -> . expresion MENOR expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORIGUAL expresion
    (85) expresion -> . expresion IGUALACION expresion
    (86) expresion -> . expresion DISTINTO expresion
    (87) expresion -> . expresion AND expresion
    (88) expresion -> . expresion OR expresion
    (89) expresion -> . NOT expresion
    (90) expresion -> . dec
    (91) expresion -> . inc
    (92) expresion -> . casteo
    (93) expresion -> . PARIZQ expresion PARDER
    (94) expresion -> . ENTERO
    (95) expresion -> . DECIMAL
    (96) expresion -> . CADENA
    (97) expresion -> . NULL
    (98) expresion -> . booleano
    (99) expresion -> . ID
    (102) expresion -> . aproximacion
    (103) expresion -> . exponencial
    (104) expresion -> . separador
    (105) expresion -> . concatenacion
    (106) expresion -> . to_minusculas
    (109) expresion -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (128) expresion -> . ID PUNTO ID
    (141) expresion -> . arreglo
    (144) expresion -> . acceso_array
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (113) casteo -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (114) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (100) booleano -> . TRUE
    (101) booleano -> . FALSE
    (107) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (110) to_minusculas -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (142) arreglo -> . CORIZQ lista_exp CORDER
    (143) arreglo -> . CORIZQ CORDER
    (145) acceso_array -> . ID lista_acceso_array

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for DECREMENTO resolved as shift
  ! shift/reduce conflict for INCREMENTO resolved as shift
    PTOYCOMA        reduce using rule 116 (return -> RETURN .)
    error           reduce using rule 116 (return -> RETURN .)
    FUNCTION        reduce using rule 116 (return -> RETURN .)
    COMENTARIO      reduce using rule 116 (return -> RETURN .)
    COMENTARIO_MULTILINEA reduce using rule 116 (return -> RETURN .)
    LET             reduce using rule 116 (return -> RETURN .)
    CONSOLE         reduce using rule 116 (return -> RETURN .)
    IF              reduce using rule 116 (return -> RETURN .)
    WHILE           reduce using rule 116 (return -> RETURN .)
    FOR             reduce using rule 116 (return -> RETURN .)
    RETURN          reduce using rule 116 (return -> RETURN .)
    BREAK           reduce using rule 116 (return -> RETURN .)
    CONTINUE        reduce using rule 116 (return -> RETURN .)
    INTERFACE       reduce using rule 116 (return -> RETURN .)
    $end            reduce using rule 116 (return -> RETURN .)
    LLADER          reduce using rule 116 (return -> RETURN .)
    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    CADENA          shift and go to state 68
    NULL            shift and go to state 69
    ID              shift and go to state 71
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40
    CAST_STRING     shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    CORIZQ          shift and go to state 82

  ! ID              [ reduce using rule 116 (return -> RETURN .) ]
  ! DECREMENTO      [ reduce using rule 116 (return -> RETURN .) ]
  ! INCREMENTO      [ reduce using rule 116 (return -> RETURN .) ]

    expresion                      shift and go to state 58
    llamada_funcion                shift and go to state 59
    dec                            shift and go to state 62
    inc                            shift and go to state 63
    casteo                         shift and go to state 64
    booleano                       shift and go to state 70
    aproximacion                   shift and go to state 72
    exponencial                    shift and go to state 73
    separador                      shift and go to state 74
    concatenacion                  shift and go to state 75
    to_minusculas                  shift and go to state 76
    arreglo                        shift and go to state 77
    acceso_array                   shift and go to state 78

state 36

    (117) break -> BREAK .

    PTOYCOMA        reduce using rule 117 (break -> BREAK .)
    error           reduce using rule 117 (break -> BREAK .)
    FUNCTION        reduce using rule 117 (break -> BREAK .)
    COMENTARIO      reduce using rule 117 (break -> BREAK .)
    COMENTARIO_MULTILINEA reduce using rule 117 (break -> BREAK .)
    LET             reduce using rule 117 (break -> BREAK .)
    ID              reduce using rule 117 (break -> BREAK .)
    CONSOLE         reduce using rule 117 (break -> BREAK .)
    IF              reduce using rule 117 (break -> BREAK .)
    WHILE           reduce using rule 117 (break -> BREAK .)
    FOR             reduce using rule 117 (break -> BREAK .)
    RETURN          reduce using rule 117 (break -> BREAK .)
    BREAK           reduce using rule 117 (break -> BREAK .)
    CONTINUE        reduce using rule 117 (break -> BREAK .)
    INTERFACE       reduce using rule 117 (break -> BREAK .)
    DECREMENTO      reduce using rule 117 (break -> BREAK .)
    INCREMENTO      reduce using rule 117 (break -> BREAK .)
    $end            reduce using rule 117 (break -> BREAK .)
    LLADER          reduce using rule 117 (break -> BREAK .)


state 37

    (118) continue -> CONTINUE .

    PTOYCOMA        reduce using rule 118 (continue -> CONTINUE .)
    error           reduce using rule 118 (continue -> CONTINUE .)
    FUNCTION        reduce using rule 118 (continue -> CONTINUE .)
    COMENTARIO      reduce using rule 118 (continue -> CONTINUE .)
    COMENTARIO_MULTILINEA reduce using rule 118 (continue -> CONTINUE .)
    LET             reduce using rule 118 (continue -> CONTINUE .)
    ID              reduce using rule 118 (continue -> CONTINUE .)
    CONSOLE         reduce using rule 118 (continue -> CONTINUE .)
    IF              reduce using rule 118 (continue -> CONTINUE .)
    WHILE           reduce using rule 118 (continue -> CONTINUE .)
    FOR             reduce using rule 118 (continue -> CONTINUE .)
    RETURN          reduce using rule 118 (continue -> CONTINUE .)
    BREAK           reduce using rule 118 (continue -> CONTINUE .)
    CONTINUE        reduce using rule 118 (continue -> CONTINUE .)
    INTERFACE       reduce using rule 118 (continue -> CONTINUE .)
    DECREMENTO      reduce using rule 118 (continue -> CONTINUE .)
    INCREMENTO      reduce using rule 118 (continue -> CONTINUE .)
    $end            reduce using rule 118 (continue -> CONTINUE .)
    LLADER          reduce using rule 118 (continue -> CONTINUE .)


state 38

    (119) instanciar -> INTERFACE . ID bloquestruct

    ID              shift and go to state 83


state 39

    (39) dec -> DECREMENTO . ID

    ID              shift and go to state 84


state 40

    (41) inc -> INCREMENTO . ID

    ID              shift and go to state 85


state 41

    (1) instrucciones -> instrucciones instruccion .

    error           reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    FUNCTION        reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    COMENTARIO      reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    COMENTARIO_MULTILINEA reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    LET             reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    CONSOLE         reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    FOR             reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    RETURN          reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    INTERFACE       reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    DECREMENTO      reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    INCREMENTO      reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 1 (instrucciones -> instrucciones instruccion .)


state 42

    (150) instruccion -> error PTOYCOMA .

    error           reduce using rule 150 (instruccion -> error PTOYCOMA .)
    FUNCTION        reduce using rule 150 (instruccion -> error PTOYCOMA .)
    COMENTARIO      reduce using rule 150 (instruccion -> error PTOYCOMA .)
    COMENTARIO_MULTILINEA reduce using rule 150 (instruccion -> error PTOYCOMA .)
    LET             reduce using rule 150 (instruccion -> error PTOYCOMA .)
    ID              reduce using rule 150 (instruccion -> error PTOYCOMA .)
    CONSOLE         reduce using rule 150 (instruccion -> error PTOYCOMA .)
    IF              reduce using rule 150 (instruccion -> error PTOYCOMA .)
    WHILE           reduce using rule 150 (instruccion -> error PTOYCOMA .)
    FOR             reduce using rule 150 (instruccion -> error PTOYCOMA .)
    RETURN          reduce using rule 150 (instruccion -> error PTOYCOMA .)
    BREAK           reduce using rule 150 (instruccion -> error PTOYCOMA .)
    CONTINUE        reduce using rule 150 (instruccion -> error PTOYCOMA .)
    INTERFACE       reduce using rule 150 (instruccion -> error PTOYCOMA .)
    DECREMENTO      reduce using rule 150 (instruccion -> error PTOYCOMA .)
    INCREMENTO      reduce using rule 150 (instruccion -> error PTOYCOMA .)
    $end            reduce using rule 150 (instruccion -> error PTOYCOMA .)


state 43

    (6) instruccion2 -> instruccion3 PTOYCOMA .

    error           reduce using rule 6 (instruccion2 -> instruccion3 PTOYCOMA .)
    FUNCTION        reduce using rule 6 (instruccion2 -> instruccion3 PTOYCOMA .)
    COMENTARIO      reduce using rule 6 (instruccion2 -> instruccion3 PTOYCOMA .)
    COMENTARIO_MULTILINEA reduce using rule 6 (instruccion2 -> instruccion3 PTOYCOMA .)
    LET             reduce using rule 6 (instruccion2 -> instruccion3 PTOYCOMA .)
    ID              reduce using rule 6 (instruccion2 -> instruccion3 PTOYCOMA .)
    CONSOLE         reduce using rule 6 (instruccion2 -> instruccion3 PTOYCOMA .)
    IF              reduce using rule 6 (instruccion2 -> instruccion3 PTOYCOMA .)
    WHILE           reduce using rule 6 (instruccion2 -> instruccion3 PTOYCOMA .)
    FOR             reduce using rule 6 (instruccion2 -> instruccion3 PTOYCOMA .)
    RETURN          reduce using rule 6 (instruccion2 -> instruccion3 PTOYCOMA .)
    BREAK           reduce using rule 6 (instruccion2 -> instruccion3 PTOYCOMA .)
    CONTINUE        reduce using rule 6 (instruccion2 -> instruccion3 PTOYCOMA .)
    INTERFACE       reduce using rule 6 (instruccion2 -> instruccion3 PTOYCOMA .)
    DECREMENTO      reduce using rule 6 (instruccion2 -> instruccion3 PTOYCOMA .)
    INCREMENTO      reduce using rule 6 (instruccion2 -> instruccion3 PTOYCOMA .)
    $end            reduce using rule 6 (instruccion2 -> instruccion3 PTOYCOMA .)
    LLADER          reduce using rule 6 (instruccion2 -> instruccion3 PTOYCOMA .)


state 44

    (55) funcion -> FUNCTION ID . PARIZQ lista_parametros PARDER bloque
    (56) funcion -> FUNCTION ID . PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque
    (57) funcion -> FUNCTION ID . PARIZQ PARDER bloque
    (58) funcion -> FUNCTION ID . PARIZQ PARDER DOSPUNTOS tipo bloque
    (59) funcion -> FUNCTION ID . PARIZQ lista_parametros PARDER DOSPUNTOS tipo CORIZQ CORDER bloque

    PARIZQ          shift and go to state 86


state 45

    (34) asignacion -> ID IGUAL . expresion
    (64) expresion -> . llamada_funcion
    (74) expresion -> . expresion MAS expresion
    (75) expresion -> . expresion MENOS expresion
    (76) expresion -> . expresion POR expresion
    (77) expresion -> . expresion DIVIDIDO expresion
    (78) expresion -> . expresion MODULO expresion
    (79) expresion -> . expresion POTENCIA expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . expresion MAYOR expresion
    (82) expresion -> . expresion MENOR expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORIGUAL expresion
    (85) expresion -> . expresion IGUALACION expresion
    (86) expresion -> . expresion DISTINTO expresion
    (87) expresion -> . expresion AND expresion
    (88) expresion -> . expresion OR expresion
    (89) expresion -> . NOT expresion
    (90) expresion -> . dec
    (91) expresion -> . inc
    (92) expresion -> . casteo
    (93) expresion -> . PARIZQ expresion PARDER
    (94) expresion -> . ENTERO
    (95) expresion -> . DECIMAL
    (96) expresion -> . CADENA
    (97) expresion -> . NULL
    (98) expresion -> . booleano
    (99) expresion -> . ID
    (102) expresion -> . aproximacion
    (103) expresion -> . exponencial
    (104) expresion -> . separador
    (105) expresion -> . concatenacion
    (106) expresion -> . to_minusculas
    (109) expresion -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (128) expresion -> . ID PUNTO ID
    (141) expresion -> . arreglo
    (144) expresion -> . acceso_array
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (113) casteo -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (114) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (100) booleano -> . TRUE
    (101) booleano -> . FALSE
    (107) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (110) to_minusculas -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (142) arreglo -> . CORIZQ lista_exp CORDER
    (143) arreglo -> . CORIZQ CORDER
    (145) acceso_array -> . ID lista_acceso_array

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    CADENA          shift and go to state 68
    NULL            shift and go to state 69
    ID              shift and go to state 71
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40
    CAST_STRING     shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    CORIZQ          shift and go to state 82

    expresion                      shift and go to state 87
    llamada_funcion                shift and go to state 59
    dec                            shift and go to state 62
    inc                            shift and go to state 63
    casteo                         shift and go to state 64
    booleano                       shift and go to state 70
    aproximacion                   shift and go to state 72
    exponencial                    shift and go to state 73
    separador                      shift and go to state 74
    concatenacion                  shift and go to state 75
    to_minusculas                  shift and go to state 76
    arreglo                        shift and go to state 77
    acceso_array                   shift and go to state 78

state 46

    (65) llamada_funcion -> ID PARIZQ . lista_argumentos PARDER
    (66) llamada_funcion -> ID PARIZQ . PARDER
    (67) lista_argumentos -> . lista_argumentos COMA expresion
    (68) lista_argumentos -> . expresion
    (64) expresion -> . llamada_funcion
    (74) expresion -> . expresion MAS expresion
    (75) expresion -> . expresion MENOS expresion
    (76) expresion -> . expresion POR expresion
    (77) expresion -> . expresion DIVIDIDO expresion
    (78) expresion -> . expresion MODULO expresion
    (79) expresion -> . expresion POTENCIA expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . expresion MAYOR expresion
    (82) expresion -> . expresion MENOR expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORIGUAL expresion
    (85) expresion -> . expresion IGUALACION expresion
    (86) expresion -> . expresion DISTINTO expresion
    (87) expresion -> . expresion AND expresion
    (88) expresion -> . expresion OR expresion
    (89) expresion -> . NOT expresion
    (90) expresion -> . dec
    (91) expresion -> . inc
    (92) expresion -> . casteo
    (93) expresion -> . PARIZQ expresion PARDER
    (94) expresion -> . ENTERO
    (95) expresion -> . DECIMAL
    (96) expresion -> . CADENA
    (97) expresion -> . NULL
    (98) expresion -> . booleano
    (99) expresion -> . ID
    (102) expresion -> . aproximacion
    (103) expresion -> . exponencial
    (104) expresion -> . separador
    (105) expresion -> . concatenacion
    (106) expresion -> . to_minusculas
    (109) expresion -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (128) expresion -> . ID PUNTO ID
    (141) expresion -> . arreglo
    (144) expresion -> . acceso_array
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (113) casteo -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (114) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (100) booleano -> . TRUE
    (101) booleano -> . FALSE
    (107) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (110) to_minusculas -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (142) arreglo -> . CORIZQ lista_exp CORDER
    (143) arreglo -> . CORIZQ CORDER
    (145) acceso_array -> . ID lista_acceso_array

    PARDER          shift and go to state 89
    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    CADENA          shift and go to state 68
    NULL            shift and go to state 69
    ID              shift and go to state 71
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40
    CAST_STRING     shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    CORIZQ          shift and go to state 82

    lista_argumentos               shift and go to state 88
    expresion                      shift and go to state 90
    llamada_funcion                shift and go to state 59
    dec                            shift and go to state 62
    inc                            shift and go to state 63
    casteo                         shift and go to state 64
    booleano                       shift and go to state 70
    aproximacion                   shift and go to state 72
    exponencial                    shift and go to state 73
    separador                      shift and go to state 74
    concatenacion                  shift and go to state 75
    to_minusculas                  shift and go to state 76
    arreglo                        shift and go to state 77
    acceso_array                   shift and go to state 78

state 47

    (149) asignacion_array -> ID lista_acceso_array . IGUAL expresion
    (146) lista_acceso_array -> lista_acceso_array . acceso_array_exp
    (148) acceso_array_exp -> . CORIZQ expresion CORDER

    IGUAL           shift and go to state 91
    CORIZQ          shift and go to state 52

    acceso_array_exp               shift and go to state 92

state 48

    (38) dec -> ID DECREMENTO .

    PTOYCOMA        reduce using rule 38 (dec -> ID DECREMENTO .)
    error           reduce using rule 38 (dec -> ID DECREMENTO .)
    FUNCTION        reduce using rule 38 (dec -> ID DECREMENTO .)
    COMENTARIO      reduce using rule 38 (dec -> ID DECREMENTO .)
    COMENTARIO_MULTILINEA reduce using rule 38 (dec -> ID DECREMENTO .)
    LET             reduce using rule 38 (dec -> ID DECREMENTO .)
    ID              reduce using rule 38 (dec -> ID DECREMENTO .)
    CONSOLE         reduce using rule 38 (dec -> ID DECREMENTO .)
    IF              reduce using rule 38 (dec -> ID DECREMENTO .)
    WHILE           reduce using rule 38 (dec -> ID DECREMENTO .)
    FOR             reduce using rule 38 (dec -> ID DECREMENTO .)
    RETURN          reduce using rule 38 (dec -> ID DECREMENTO .)
    BREAK           reduce using rule 38 (dec -> ID DECREMENTO .)
    CONTINUE        reduce using rule 38 (dec -> ID DECREMENTO .)
    INTERFACE       reduce using rule 38 (dec -> ID DECREMENTO .)
    DECREMENTO      reduce using rule 38 (dec -> ID DECREMENTO .)
    INCREMENTO      reduce using rule 38 (dec -> ID DECREMENTO .)
    $end            reduce using rule 38 (dec -> ID DECREMENTO .)
    MAS             reduce using rule 38 (dec -> ID DECREMENTO .)
    MENOS           reduce using rule 38 (dec -> ID DECREMENTO .)
    POR             reduce using rule 38 (dec -> ID DECREMENTO .)
    DIVIDIDO        reduce using rule 38 (dec -> ID DECREMENTO .)
    MODULO          reduce using rule 38 (dec -> ID DECREMENTO .)
    POTENCIA        reduce using rule 38 (dec -> ID DECREMENTO .)
    MAYOR           reduce using rule 38 (dec -> ID DECREMENTO .)
    MENOR           reduce using rule 38 (dec -> ID DECREMENTO .)
    MAYORIGUAL      reduce using rule 38 (dec -> ID DECREMENTO .)
    MENORIGUAL      reduce using rule 38 (dec -> ID DECREMENTO .)
    IGUALACION      reduce using rule 38 (dec -> ID DECREMENTO .)
    DISTINTO        reduce using rule 38 (dec -> ID DECREMENTO .)
    AND             reduce using rule 38 (dec -> ID DECREMENTO .)
    OR              reduce using rule 38 (dec -> ID DECREMENTO .)
    PUNTO           reduce using rule 38 (dec -> ID DECREMENTO .)
    LLADER          reduce using rule 38 (dec -> ID DECREMENTO .)
    PARDER          reduce using rule 38 (dec -> ID DECREMENTO .)
    COMA            reduce using rule 38 (dec -> ID DECREMENTO .)
    CORDER          reduce using rule 38 (dec -> ID DECREMENTO .)


state 49

    (40) inc -> ID INCREMENTO .

    PTOYCOMA        reduce using rule 40 (inc -> ID INCREMENTO .)
    error           reduce using rule 40 (inc -> ID INCREMENTO .)
    FUNCTION        reduce using rule 40 (inc -> ID INCREMENTO .)
    COMENTARIO      reduce using rule 40 (inc -> ID INCREMENTO .)
    COMENTARIO_MULTILINEA reduce using rule 40 (inc -> ID INCREMENTO .)
    LET             reduce using rule 40 (inc -> ID INCREMENTO .)
    ID              reduce using rule 40 (inc -> ID INCREMENTO .)
    CONSOLE         reduce using rule 40 (inc -> ID INCREMENTO .)
    IF              reduce using rule 40 (inc -> ID INCREMENTO .)
    WHILE           reduce using rule 40 (inc -> ID INCREMENTO .)
    FOR             reduce using rule 40 (inc -> ID INCREMENTO .)
    RETURN          reduce using rule 40 (inc -> ID INCREMENTO .)
    BREAK           reduce using rule 40 (inc -> ID INCREMENTO .)
    CONTINUE        reduce using rule 40 (inc -> ID INCREMENTO .)
    INTERFACE       reduce using rule 40 (inc -> ID INCREMENTO .)
    DECREMENTO      reduce using rule 40 (inc -> ID INCREMENTO .)
    INCREMENTO      reduce using rule 40 (inc -> ID INCREMENTO .)
    $end            reduce using rule 40 (inc -> ID INCREMENTO .)
    MAS             reduce using rule 40 (inc -> ID INCREMENTO .)
    MENOS           reduce using rule 40 (inc -> ID INCREMENTO .)
    POR             reduce using rule 40 (inc -> ID INCREMENTO .)
    DIVIDIDO        reduce using rule 40 (inc -> ID INCREMENTO .)
    MODULO          reduce using rule 40 (inc -> ID INCREMENTO .)
    POTENCIA        reduce using rule 40 (inc -> ID INCREMENTO .)
    MAYOR           reduce using rule 40 (inc -> ID INCREMENTO .)
    MENOR           reduce using rule 40 (inc -> ID INCREMENTO .)
    MAYORIGUAL      reduce using rule 40 (inc -> ID INCREMENTO .)
    MENORIGUAL      reduce using rule 40 (inc -> ID INCREMENTO .)
    IGUALACION      reduce using rule 40 (inc -> ID INCREMENTO .)
    DISTINTO        reduce using rule 40 (inc -> ID INCREMENTO .)
    AND             reduce using rule 40 (inc -> ID INCREMENTO .)
    OR              reduce using rule 40 (inc -> ID INCREMENTO .)
    PUNTO           reduce using rule 40 (inc -> ID INCREMENTO .)
    LLADER          reduce using rule 40 (inc -> ID INCREMENTO .)
    PARDER          reduce using rule 40 (inc -> ID INCREMENTO .)
    COMA            reduce using rule 40 (inc -> ID INCREMENTO .)
    CORDER          reduce using rule 40 (inc -> ID INCREMENTO .)


state 50

    (129) asignacionInterface -> ID PUNTO . ID IGUAL expresion

    ID              shift and go to state 93


state 51

    (147) lista_acceso_array -> acceso_array_exp .

    IGUAL           reduce using rule 147 (lista_acceso_array -> acceso_array_exp .)
    CORIZQ          reduce using rule 147 (lista_acceso_array -> acceso_array_exp .)
    MAS             reduce using rule 147 (lista_acceso_array -> acceso_array_exp .)
    MENOS           reduce using rule 147 (lista_acceso_array -> acceso_array_exp .)
    POR             reduce using rule 147 (lista_acceso_array -> acceso_array_exp .)
    DIVIDIDO        reduce using rule 147 (lista_acceso_array -> acceso_array_exp .)
    MODULO          reduce using rule 147 (lista_acceso_array -> acceso_array_exp .)
    POTENCIA        reduce using rule 147 (lista_acceso_array -> acceso_array_exp .)
    MAYOR           reduce using rule 147 (lista_acceso_array -> acceso_array_exp .)
    MENOR           reduce using rule 147 (lista_acceso_array -> acceso_array_exp .)
    MAYORIGUAL      reduce using rule 147 (lista_acceso_array -> acceso_array_exp .)
    MENORIGUAL      reduce using rule 147 (lista_acceso_array -> acceso_array_exp .)
    IGUALACION      reduce using rule 147 (lista_acceso_array -> acceso_array_exp .)
    DISTINTO        reduce using rule 147 (lista_acceso_array -> acceso_array_exp .)
    AND             reduce using rule 147 (lista_acceso_array -> acceso_array_exp .)
    OR              reduce using rule 147 (lista_acceso_array -> acceso_array_exp .)
    PUNTO           reduce using rule 147 (lista_acceso_array -> acceso_array_exp .)
    PTOYCOMA        reduce using rule 147 (lista_acceso_array -> acceso_array_exp .)
    error           reduce using rule 147 (lista_acceso_array -> acceso_array_exp .)
    FUNCTION        reduce using rule 147 (lista_acceso_array -> acceso_array_exp .)
    COMENTARIO      reduce using rule 147 (lista_acceso_array -> acceso_array_exp .)
    COMENTARIO_MULTILINEA reduce using rule 147 (lista_acceso_array -> acceso_array_exp .)
    LET             reduce using rule 147 (lista_acceso_array -> acceso_array_exp .)
    ID              reduce using rule 147 (lista_acceso_array -> acceso_array_exp .)
    CONSOLE         reduce using rule 147 (lista_acceso_array -> acceso_array_exp .)
    IF              reduce using rule 147 (lista_acceso_array -> acceso_array_exp .)
    WHILE           reduce using rule 147 (lista_acceso_array -> acceso_array_exp .)
    FOR             reduce using rule 147 (lista_acceso_array -> acceso_array_exp .)
    RETURN          reduce using rule 147 (lista_acceso_array -> acceso_array_exp .)
    BREAK           reduce using rule 147 (lista_acceso_array -> acceso_array_exp .)
    CONTINUE        reduce using rule 147 (lista_acceso_array -> acceso_array_exp .)
    INTERFACE       reduce using rule 147 (lista_acceso_array -> acceso_array_exp .)
    DECREMENTO      reduce using rule 147 (lista_acceso_array -> acceso_array_exp .)
    INCREMENTO      reduce using rule 147 (lista_acceso_array -> acceso_array_exp .)
    $end            reduce using rule 147 (lista_acceso_array -> acceso_array_exp .)
    LLADER          reduce using rule 147 (lista_acceso_array -> acceso_array_exp .)
    PARDER          reduce using rule 147 (lista_acceso_array -> acceso_array_exp .)
    COMA            reduce using rule 147 (lista_acceso_array -> acceso_array_exp .)
    CORDER          reduce using rule 147 (lista_acceso_array -> acceso_array_exp .)


state 52

    (148) acceso_array_exp -> CORIZQ . expresion CORDER
    (64) expresion -> . llamada_funcion
    (74) expresion -> . expresion MAS expresion
    (75) expresion -> . expresion MENOS expresion
    (76) expresion -> . expresion POR expresion
    (77) expresion -> . expresion DIVIDIDO expresion
    (78) expresion -> . expresion MODULO expresion
    (79) expresion -> . expresion POTENCIA expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . expresion MAYOR expresion
    (82) expresion -> . expresion MENOR expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORIGUAL expresion
    (85) expresion -> . expresion IGUALACION expresion
    (86) expresion -> . expresion DISTINTO expresion
    (87) expresion -> . expresion AND expresion
    (88) expresion -> . expresion OR expresion
    (89) expresion -> . NOT expresion
    (90) expresion -> . dec
    (91) expresion -> . inc
    (92) expresion -> . casteo
    (93) expresion -> . PARIZQ expresion PARDER
    (94) expresion -> . ENTERO
    (95) expresion -> . DECIMAL
    (96) expresion -> . CADENA
    (97) expresion -> . NULL
    (98) expresion -> . booleano
    (99) expresion -> . ID
    (102) expresion -> . aproximacion
    (103) expresion -> . exponencial
    (104) expresion -> . separador
    (105) expresion -> . concatenacion
    (106) expresion -> . to_minusculas
    (109) expresion -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (128) expresion -> . ID PUNTO ID
    (141) expresion -> . arreglo
    (144) expresion -> . acceso_array
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (113) casteo -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (114) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (100) booleano -> . TRUE
    (101) booleano -> . FALSE
    (107) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (110) to_minusculas -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (142) arreglo -> . CORIZQ lista_exp CORDER
    (143) arreglo -> . CORIZQ CORDER
    (145) acceso_array -> . ID lista_acceso_array

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    CADENA          shift and go to state 68
    NULL            shift and go to state 69
    ID              shift and go to state 71
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40
    CAST_STRING     shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    CORIZQ          shift and go to state 82

    expresion                      shift and go to state 94
    llamada_funcion                shift and go to state 59
    dec                            shift and go to state 62
    inc                            shift and go to state 63
    casteo                         shift and go to state 64
    booleano                       shift and go to state 70
    aproximacion                   shift and go to state 72
    exponencial                    shift and go to state 73
    separador                      shift and go to state 74
    concatenacion                  shift and go to state 75
    to_minusculas                  shift and go to state 76
    arreglo                        shift and go to state 77
    acceso_array                   shift and go to state 78

state 53

    (30) declaracion -> LET ID . IGUAL expresion
    (31) declaracion -> LET ID .
    (32) declaracion -> LET ID . DOSPUNTOS tipo IGUAL expresion
    (33) declaracion -> LET ID . DOSPUNTOS tipo
    (124) declaracionInterface -> LET ID . DOSPUNTOS ID IGUAL LLAIZQ lista_d LLADER
    (130) declaracionArray -> LET ID . DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER
    (131) declaracionArray -> LET ID . DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER
    (132) declaracionArray -> LET ID . DOSPUNTOS ARRAY MENOR tipo MAYOR
    (133) declaracionArray -> LET ID . DOSPUNTOS tipo CORIZQ CORDER
    (134) declaracionArray -> LET ID . DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER
    (135) declaracionArray -> LET ID . DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER
    (136) declaracionArray -> LET ID . IGUAL CORIZQ CORDER
    (137) declaracionArray -> LET ID . DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion
    (138) declaracionArray -> LET ID . IGUAL CORIZQ lista_exp CORDER

    IGUAL           shift and go to state 95
    PTOYCOMA        reduce using rule 31 (declaracion -> LET ID .)
    error           reduce using rule 31 (declaracion -> LET ID .)
    FUNCTION        reduce using rule 31 (declaracion -> LET ID .)
    COMENTARIO      reduce using rule 31 (declaracion -> LET ID .)
    COMENTARIO_MULTILINEA reduce using rule 31 (declaracion -> LET ID .)
    LET             reduce using rule 31 (declaracion -> LET ID .)
    ID              reduce using rule 31 (declaracion -> LET ID .)
    CONSOLE         reduce using rule 31 (declaracion -> LET ID .)
    IF              reduce using rule 31 (declaracion -> LET ID .)
    WHILE           reduce using rule 31 (declaracion -> LET ID .)
    FOR             reduce using rule 31 (declaracion -> LET ID .)
    RETURN          reduce using rule 31 (declaracion -> LET ID .)
    BREAK           reduce using rule 31 (declaracion -> LET ID .)
    CONTINUE        reduce using rule 31 (declaracion -> LET ID .)
    INTERFACE       reduce using rule 31 (declaracion -> LET ID .)
    DECREMENTO      reduce using rule 31 (declaracion -> LET ID .)
    INCREMENTO      reduce using rule 31 (declaracion -> LET ID .)
    $end            reduce using rule 31 (declaracion -> LET ID .)
    LLADER          reduce using rule 31 (declaracion -> LET ID .)
    DOSPUNTOS       shift and go to state 96


state 54

    (42) impresion -> CONSOLE PUNTO . LOG PARIZQ expresion PARDER
    (43) impresion -> CONSOLE PUNTO . LOG PARIZQ lista_argumentos PARDER

    LOG             shift and go to state 97


state 55

    (44) condicional -> IF PARIZQ . expresion PARDER bloque
    (45) condicional -> IF PARIZQ . expresion PARDER bloque ELSE bloque
    (46) condicional -> IF PARIZQ . expresion PARDER bloque lista_elif
    (47) condicional -> IF PARIZQ . expresion PARDER bloque lista_elif ELSE bloque
    (64) expresion -> . llamada_funcion
    (74) expresion -> . expresion MAS expresion
    (75) expresion -> . expresion MENOS expresion
    (76) expresion -> . expresion POR expresion
    (77) expresion -> . expresion DIVIDIDO expresion
    (78) expresion -> . expresion MODULO expresion
    (79) expresion -> . expresion POTENCIA expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . expresion MAYOR expresion
    (82) expresion -> . expresion MENOR expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORIGUAL expresion
    (85) expresion -> . expresion IGUALACION expresion
    (86) expresion -> . expresion DISTINTO expresion
    (87) expresion -> . expresion AND expresion
    (88) expresion -> . expresion OR expresion
    (89) expresion -> . NOT expresion
    (90) expresion -> . dec
    (91) expresion -> . inc
    (92) expresion -> . casteo
    (93) expresion -> . PARIZQ expresion PARDER
    (94) expresion -> . ENTERO
    (95) expresion -> . DECIMAL
    (96) expresion -> . CADENA
    (97) expresion -> . NULL
    (98) expresion -> . booleano
    (99) expresion -> . ID
    (102) expresion -> . aproximacion
    (103) expresion -> . exponencial
    (104) expresion -> . separador
    (105) expresion -> . concatenacion
    (106) expresion -> . to_minusculas
    (109) expresion -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (128) expresion -> . ID PUNTO ID
    (141) expresion -> . arreglo
    (144) expresion -> . acceso_array
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (113) casteo -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (114) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (100) booleano -> . TRUE
    (101) booleano -> . FALSE
    (107) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (110) to_minusculas -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (142) arreglo -> . CORIZQ lista_exp CORDER
    (143) arreglo -> . CORIZQ CORDER
    (145) acceso_array -> . ID lista_acceso_array

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    CADENA          shift and go to state 68
    NULL            shift and go to state 69
    ID              shift and go to state 71
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40
    CAST_STRING     shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    CORIZQ          shift and go to state 82

    expresion                      shift and go to state 98
    llamada_funcion                shift and go to state 59
    dec                            shift and go to state 62
    inc                            shift and go to state 63
    casteo                         shift and go to state 64
    booleano                       shift and go to state 70
    aproximacion                   shift and go to state 72
    exponencial                    shift and go to state 73
    separador                      shift and go to state 74
    concatenacion                  shift and go to state 75
    to_minusculas                  shift and go to state 76
    arreglo                        shift and go to state 77
    acceso_array                   shift and go to state 78

state 56

    (51) ciclo_while -> WHILE PARIZQ . expresion PARDER bloque
    (64) expresion -> . llamada_funcion
    (74) expresion -> . expresion MAS expresion
    (75) expresion -> . expresion MENOS expresion
    (76) expresion -> . expresion POR expresion
    (77) expresion -> . expresion DIVIDIDO expresion
    (78) expresion -> . expresion MODULO expresion
    (79) expresion -> . expresion POTENCIA expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . expresion MAYOR expresion
    (82) expresion -> . expresion MENOR expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORIGUAL expresion
    (85) expresion -> . expresion IGUALACION expresion
    (86) expresion -> . expresion DISTINTO expresion
    (87) expresion -> . expresion AND expresion
    (88) expresion -> . expresion OR expresion
    (89) expresion -> . NOT expresion
    (90) expresion -> . dec
    (91) expresion -> . inc
    (92) expresion -> . casteo
    (93) expresion -> . PARIZQ expresion PARDER
    (94) expresion -> . ENTERO
    (95) expresion -> . DECIMAL
    (96) expresion -> . CADENA
    (97) expresion -> . NULL
    (98) expresion -> . booleano
    (99) expresion -> . ID
    (102) expresion -> . aproximacion
    (103) expresion -> . exponencial
    (104) expresion -> . separador
    (105) expresion -> . concatenacion
    (106) expresion -> . to_minusculas
    (109) expresion -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (128) expresion -> . ID PUNTO ID
    (141) expresion -> . arreglo
    (144) expresion -> . acceso_array
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (113) casteo -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (114) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (100) booleano -> . TRUE
    (101) booleano -> . FALSE
    (107) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (110) to_minusculas -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (142) arreglo -> . CORIZQ lista_exp CORDER
    (143) arreglo -> . CORIZQ CORDER
    (145) acceso_array -> . ID lista_acceso_array

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    CADENA          shift and go to state 68
    NULL            shift and go to state 69
    ID              shift and go to state 71
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40
    CAST_STRING     shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    CORIZQ          shift and go to state 82

    expresion                      shift and go to state 99
    llamada_funcion                shift and go to state 59
    dec                            shift and go to state 62
    inc                            shift and go to state 63
    casteo                         shift and go to state 64
    booleano                       shift and go to state 70
    aproximacion                   shift and go to state 72
    exponencial                    shift and go to state 73
    separador                      shift and go to state 74
    concatenacion                  shift and go to state 75
    to_minusculas                  shift and go to state 76
    arreglo                        shift and go to state 77
    acceso_array                   shift and go to state 78

state 57

    (52) ciclo_for -> FOR PARIZQ . declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (53) ciclo_for -> FOR PARIZQ . asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (54) ciclo_for_of -> FOR PARIZQ . LET ID OF expresion PARDER bloque
    (30) declaracion -> . LET ID IGUAL expresion
    (31) declaracion -> . LET ID
    (32) declaracion -> . LET ID DOSPUNTOS tipo IGUAL expresion
    (33) declaracion -> . LET ID DOSPUNTOS tipo
    (34) asignacion -> . ID IGUAL expresion
    (35) asignacion -> . dec
    (36) asignacion -> . inc
    (37) asignacion -> . asignacionInterface
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (129) asignacionInterface -> . ID PUNTO ID IGUAL expresion

    LET             shift and go to state 102
    ID              shift and go to state 103
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40

    declaracion                    shift and go to state 100
    asignacion                     shift and go to state 101
    dec                            shift and go to state 28
    inc                            shift and go to state 29
    asignacionInterface            shift and go to state 30

state 58

    (115) return -> RETURN expresion .
    (74) expresion -> expresion . MAS expresion
    (75) expresion -> expresion . MENOS expresion
    (76) expresion -> expresion . POR expresion
    (77) expresion -> expresion . DIVIDIDO expresion
    (78) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MAYOR expresion
    (82) expresion -> expresion . MENOR expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORIGUAL expresion
    (85) expresion -> expresion . IGUALACION expresion
    (86) expresion -> expresion . DISTINTO expresion
    (87) expresion -> expresion . AND expresion
    (88) expresion -> expresion . OR expresion
    (113) casteo -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (107) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PTOYCOMA        reduce using rule 115 (return -> RETURN expresion .)
    error           reduce using rule 115 (return -> RETURN expresion .)
    FUNCTION        reduce using rule 115 (return -> RETURN expresion .)
    COMENTARIO      reduce using rule 115 (return -> RETURN expresion .)
    COMENTARIO_MULTILINEA reduce using rule 115 (return -> RETURN expresion .)
    LET             reduce using rule 115 (return -> RETURN expresion .)
    ID              reduce using rule 115 (return -> RETURN expresion .)
    CONSOLE         reduce using rule 115 (return -> RETURN expresion .)
    IF              reduce using rule 115 (return -> RETURN expresion .)
    WHILE           reduce using rule 115 (return -> RETURN expresion .)
    FOR             reduce using rule 115 (return -> RETURN expresion .)
    RETURN          reduce using rule 115 (return -> RETURN expresion .)
    BREAK           reduce using rule 115 (return -> RETURN expresion .)
    CONTINUE        reduce using rule 115 (return -> RETURN expresion .)
    INTERFACE       reduce using rule 115 (return -> RETURN expresion .)
    DECREMENTO      reduce using rule 115 (return -> RETURN expresion .)
    INCREMENTO      reduce using rule 115 (return -> RETURN expresion .)
    $end            reduce using rule 115 (return -> RETURN expresion .)
    LLADER          reduce using rule 115 (return -> RETURN expresion .)
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIVIDIDO        shift and go to state 107
    MODULO          shift and go to state 108
    POTENCIA        shift and go to state 109
    MAYOR           shift and go to state 110
    MENOR           shift and go to state 111
    MAYORIGUAL      shift and go to state 112
    MENORIGUAL      shift and go to state 113
    IGUALACION      shift and go to state 114
    DISTINTO        shift and go to state 115
    AND             shift and go to state 116
    OR              shift and go to state 117
    PUNTO           shift and go to state 118


state 59

    (64) expresion -> llamada_funcion .

    MAS             reduce using rule 64 (expresion -> llamada_funcion .)
    MENOS           reduce using rule 64 (expresion -> llamada_funcion .)
    POR             reduce using rule 64 (expresion -> llamada_funcion .)
    DIVIDIDO        reduce using rule 64 (expresion -> llamada_funcion .)
    MODULO          reduce using rule 64 (expresion -> llamada_funcion .)
    POTENCIA        reduce using rule 64 (expresion -> llamada_funcion .)
    MAYOR           reduce using rule 64 (expresion -> llamada_funcion .)
    MENOR           reduce using rule 64 (expresion -> llamada_funcion .)
    MAYORIGUAL      reduce using rule 64 (expresion -> llamada_funcion .)
    MENORIGUAL      reduce using rule 64 (expresion -> llamada_funcion .)
    IGUALACION      reduce using rule 64 (expresion -> llamada_funcion .)
    DISTINTO        reduce using rule 64 (expresion -> llamada_funcion .)
    AND             reduce using rule 64 (expresion -> llamada_funcion .)
    OR              reduce using rule 64 (expresion -> llamada_funcion .)
    PUNTO           reduce using rule 64 (expresion -> llamada_funcion .)
    PTOYCOMA        reduce using rule 64 (expresion -> llamada_funcion .)
    error           reduce using rule 64 (expresion -> llamada_funcion .)
    FUNCTION        reduce using rule 64 (expresion -> llamada_funcion .)
    COMENTARIO      reduce using rule 64 (expresion -> llamada_funcion .)
    COMENTARIO_MULTILINEA reduce using rule 64 (expresion -> llamada_funcion .)
    LET             reduce using rule 64 (expresion -> llamada_funcion .)
    ID              reduce using rule 64 (expresion -> llamada_funcion .)
    CONSOLE         reduce using rule 64 (expresion -> llamada_funcion .)
    IF              reduce using rule 64 (expresion -> llamada_funcion .)
    WHILE           reduce using rule 64 (expresion -> llamada_funcion .)
    FOR             reduce using rule 64 (expresion -> llamada_funcion .)
    RETURN          reduce using rule 64 (expresion -> llamada_funcion .)
    BREAK           reduce using rule 64 (expresion -> llamada_funcion .)
    CONTINUE        reduce using rule 64 (expresion -> llamada_funcion .)
    INTERFACE       reduce using rule 64 (expresion -> llamada_funcion .)
    DECREMENTO      reduce using rule 64 (expresion -> llamada_funcion .)
    INCREMENTO      reduce using rule 64 (expresion -> llamada_funcion .)
    $end            reduce using rule 64 (expresion -> llamada_funcion .)
    LLADER          reduce using rule 64 (expresion -> llamada_funcion .)
    PARDER          reduce using rule 64 (expresion -> llamada_funcion .)
    COMA            reduce using rule 64 (expresion -> llamada_funcion .)
    CORDER          reduce using rule 64 (expresion -> llamada_funcion .)


state 60

    (80) expresion -> MENOS . expresion
    (64) expresion -> . llamada_funcion
    (74) expresion -> . expresion MAS expresion
    (75) expresion -> . expresion MENOS expresion
    (76) expresion -> . expresion POR expresion
    (77) expresion -> . expresion DIVIDIDO expresion
    (78) expresion -> . expresion MODULO expresion
    (79) expresion -> . expresion POTENCIA expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . expresion MAYOR expresion
    (82) expresion -> . expresion MENOR expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORIGUAL expresion
    (85) expresion -> . expresion IGUALACION expresion
    (86) expresion -> . expresion DISTINTO expresion
    (87) expresion -> . expresion AND expresion
    (88) expresion -> . expresion OR expresion
    (89) expresion -> . NOT expresion
    (90) expresion -> . dec
    (91) expresion -> . inc
    (92) expresion -> . casteo
    (93) expresion -> . PARIZQ expresion PARDER
    (94) expresion -> . ENTERO
    (95) expresion -> . DECIMAL
    (96) expresion -> . CADENA
    (97) expresion -> . NULL
    (98) expresion -> . booleano
    (99) expresion -> . ID
    (102) expresion -> . aproximacion
    (103) expresion -> . exponencial
    (104) expresion -> . separador
    (105) expresion -> . concatenacion
    (106) expresion -> . to_minusculas
    (109) expresion -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (128) expresion -> . ID PUNTO ID
    (141) expresion -> . arreglo
    (144) expresion -> . acceso_array
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (113) casteo -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (114) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (100) booleano -> . TRUE
    (101) booleano -> . FALSE
    (107) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (110) to_minusculas -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (142) arreglo -> . CORIZQ lista_exp CORDER
    (143) arreglo -> . CORIZQ CORDER
    (145) acceso_array -> . ID lista_acceso_array

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    CADENA          shift and go to state 68
    NULL            shift and go to state 69
    ID              shift and go to state 71
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40
    CAST_STRING     shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    CORIZQ          shift and go to state 82

    expresion                      shift and go to state 119
    llamada_funcion                shift and go to state 59
    dec                            shift and go to state 62
    inc                            shift and go to state 63
    casteo                         shift and go to state 64
    booleano                       shift and go to state 70
    aproximacion                   shift and go to state 72
    exponencial                    shift and go to state 73
    separador                      shift and go to state 74
    concatenacion                  shift and go to state 75
    to_minusculas                  shift and go to state 76
    arreglo                        shift and go to state 77
    acceso_array                   shift and go to state 78

state 61

    (89) expresion -> NOT . expresion
    (64) expresion -> . llamada_funcion
    (74) expresion -> . expresion MAS expresion
    (75) expresion -> . expresion MENOS expresion
    (76) expresion -> . expresion POR expresion
    (77) expresion -> . expresion DIVIDIDO expresion
    (78) expresion -> . expresion MODULO expresion
    (79) expresion -> . expresion POTENCIA expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . expresion MAYOR expresion
    (82) expresion -> . expresion MENOR expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORIGUAL expresion
    (85) expresion -> . expresion IGUALACION expresion
    (86) expresion -> . expresion DISTINTO expresion
    (87) expresion -> . expresion AND expresion
    (88) expresion -> . expresion OR expresion
    (89) expresion -> . NOT expresion
    (90) expresion -> . dec
    (91) expresion -> . inc
    (92) expresion -> . casteo
    (93) expresion -> . PARIZQ expresion PARDER
    (94) expresion -> . ENTERO
    (95) expresion -> . DECIMAL
    (96) expresion -> . CADENA
    (97) expresion -> . NULL
    (98) expresion -> . booleano
    (99) expresion -> . ID
    (102) expresion -> . aproximacion
    (103) expresion -> . exponencial
    (104) expresion -> . separador
    (105) expresion -> . concatenacion
    (106) expresion -> . to_minusculas
    (109) expresion -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (128) expresion -> . ID PUNTO ID
    (141) expresion -> . arreglo
    (144) expresion -> . acceso_array
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (113) casteo -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (114) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (100) booleano -> . TRUE
    (101) booleano -> . FALSE
    (107) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (110) to_minusculas -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (142) arreglo -> . CORIZQ lista_exp CORDER
    (143) arreglo -> . CORIZQ CORDER
    (145) acceso_array -> . ID lista_acceso_array

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    CADENA          shift and go to state 68
    NULL            shift and go to state 69
    ID              shift and go to state 71
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40
    CAST_STRING     shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    CORIZQ          shift and go to state 82

    expresion                      shift and go to state 120
    llamada_funcion                shift and go to state 59
    dec                            shift and go to state 62
    inc                            shift and go to state 63
    casteo                         shift and go to state 64
    booleano                       shift and go to state 70
    aproximacion                   shift and go to state 72
    exponencial                    shift and go to state 73
    separador                      shift and go to state 74
    concatenacion                  shift and go to state 75
    to_minusculas                  shift and go to state 76
    arreglo                        shift and go to state 77
    acceso_array                   shift and go to state 78

state 62

    (90) expresion -> dec .

    MAS             reduce using rule 90 (expresion -> dec .)
    MENOS           reduce using rule 90 (expresion -> dec .)
    POR             reduce using rule 90 (expresion -> dec .)
    DIVIDIDO        reduce using rule 90 (expresion -> dec .)
    MODULO          reduce using rule 90 (expresion -> dec .)
    POTENCIA        reduce using rule 90 (expresion -> dec .)
    MAYOR           reduce using rule 90 (expresion -> dec .)
    MENOR           reduce using rule 90 (expresion -> dec .)
    MAYORIGUAL      reduce using rule 90 (expresion -> dec .)
    MENORIGUAL      reduce using rule 90 (expresion -> dec .)
    IGUALACION      reduce using rule 90 (expresion -> dec .)
    DISTINTO        reduce using rule 90 (expresion -> dec .)
    AND             reduce using rule 90 (expresion -> dec .)
    OR              reduce using rule 90 (expresion -> dec .)
    PUNTO           reduce using rule 90 (expresion -> dec .)
    PTOYCOMA        reduce using rule 90 (expresion -> dec .)
    error           reduce using rule 90 (expresion -> dec .)
    FUNCTION        reduce using rule 90 (expresion -> dec .)
    COMENTARIO      reduce using rule 90 (expresion -> dec .)
    COMENTARIO_MULTILINEA reduce using rule 90 (expresion -> dec .)
    LET             reduce using rule 90 (expresion -> dec .)
    ID              reduce using rule 90 (expresion -> dec .)
    CONSOLE         reduce using rule 90 (expresion -> dec .)
    IF              reduce using rule 90 (expresion -> dec .)
    WHILE           reduce using rule 90 (expresion -> dec .)
    FOR             reduce using rule 90 (expresion -> dec .)
    RETURN          reduce using rule 90 (expresion -> dec .)
    BREAK           reduce using rule 90 (expresion -> dec .)
    CONTINUE        reduce using rule 90 (expresion -> dec .)
    INTERFACE       reduce using rule 90 (expresion -> dec .)
    DECREMENTO      reduce using rule 90 (expresion -> dec .)
    INCREMENTO      reduce using rule 90 (expresion -> dec .)
    $end            reduce using rule 90 (expresion -> dec .)
    LLADER          reduce using rule 90 (expresion -> dec .)
    PARDER          reduce using rule 90 (expresion -> dec .)
    COMA            reduce using rule 90 (expresion -> dec .)
    CORDER          reduce using rule 90 (expresion -> dec .)


state 63

    (91) expresion -> inc .

    MAS             reduce using rule 91 (expresion -> inc .)
    MENOS           reduce using rule 91 (expresion -> inc .)
    POR             reduce using rule 91 (expresion -> inc .)
    DIVIDIDO        reduce using rule 91 (expresion -> inc .)
    MODULO          reduce using rule 91 (expresion -> inc .)
    POTENCIA        reduce using rule 91 (expresion -> inc .)
    MAYOR           reduce using rule 91 (expresion -> inc .)
    MENOR           reduce using rule 91 (expresion -> inc .)
    MAYORIGUAL      reduce using rule 91 (expresion -> inc .)
    MENORIGUAL      reduce using rule 91 (expresion -> inc .)
    IGUALACION      reduce using rule 91 (expresion -> inc .)
    DISTINTO        reduce using rule 91 (expresion -> inc .)
    AND             reduce using rule 91 (expresion -> inc .)
    OR              reduce using rule 91 (expresion -> inc .)
    PUNTO           reduce using rule 91 (expresion -> inc .)
    PTOYCOMA        reduce using rule 91 (expresion -> inc .)
    error           reduce using rule 91 (expresion -> inc .)
    FUNCTION        reduce using rule 91 (expresion -> inc .)
    COMENTARIO      reduce using rule 91 (expresion -> inc .)
    COMENTARIO_MULTILINEA reduce using rule 91 (expresion -> inc .)
    LET             reduce using rule 91 (expresion -> inc .)
    ID              reduce using rule 91 (expresion -> inc .)
    CONSOLE         reduce using rule 91 (expresion -> inc .)
    IF              reduce using rule 91 (expresion -> inc .)
    WHILE           reduce using rule 91 (expresion -> inc .)
    FOR             reduce using rule 91 (expresion -> inc .)
    RETURN          reduce using rule 91 (expresion -> inc .)
    BREAK           reduce using rule 91 (expresion -> inc .)
    CONTINUE        reduce using rule 91 (expresion -> inc .)
    INTERFACE       reduce using rule 91 (expresion -> inc .)
    DECREMENTO      reduce using rule 91 (expresion -> inc .)
    INCREMENTO      reduce using rule 91 (expresion -> inc .)
    $end            reduce using rule 91 (expresion -> inc .)
    LLADER          reduce using rule 91 (expresion -> inc .)
    PARDER          reduce using rule 91 (expresion -> inc .)
    COMA            reduce using rule 91 (expresion -> inc .)
    CORDER          reduce using rule 91 (expresion -> inc .)


state 64

    (92) expresion -> casteo .

    MAS             reduce using rule 92 (expresion -> casteo .)
    MENOS           reduce using rule 92 (expresion -> casteo .)
    POR             reduce using rule 92 (expresion -> casteo .)
    DIVIDIDO        reduce using rule 92 (expresion -> casteo .)
    MODULO          reduce using rule 92 (expresion -> casteo .)
    POTENCIA        reduce using rule 92 (expresion -> casteo .)
    MAYOR           reduce using rule 92 (expresion -> casteo .)
    MENOR           reduce using rule 92 (expresion -> casteo .)
    MAYORIGUAL      reduce using rule 92 (expresion -> casteo .)
    MENORIGUAL      reduce using rule 92 (expresion -> casteo .)
    IGUALACION      reduce using rule 92 (expresion -> casteo .)
    DISTINTO        reduce using rule 92 (expresion -> casteo .)
    AND             reduce using rule 92 (expresion -> casteo .)
    OR              reduce using rule 92 (expresion -> casteo .)
    PUNTO           reduce using rule 92 (expresion -> casteo .)
    PTOYCOMA        reduce using rule 92 (expresion -> casteo .)
    error           reduce using rule 92 (expresion -> casteo .)
    FUNCTION        reduce using rule 92 (expresion -> casteo .)
    COMENTARIO      reduce using rule 92 (expresion -> casteo .)
    COMENTARIO_MULTILINEA reduce using rule 92 (expresion -> casteo .)
    LET             reduce using rule 92 (expresion -> casteo .)
    ID              reduce using rule 92 (expresion -> casteo .)
    CONSOLE         reduce using rule 92 (expresion -> casteo .)
    IF              reduce using rule 92 (expresion -> casteo .)
    WHILE           reduce using rule 92 (expresion -> casteo .)
    FOR             reduce using rule 92 (expresion -> casteo .)
    RETURN          reduce using rule 92 (expresion -> casteo .)
    BREAK           reduce using rule 92 (expresion -> casteo .)
    CONTINUE        reduce using rule 92 (expresion -> casteo .)
    INTERFACE       reduce using rule 92 (expresion -> casteo .)
    DECREMENTO      reduce using rule 92 (expresion -> casteo .)
    INCREMENTO      reduce using rule 92 (expresion -> casteo .)
    $end            reduce using rule 92 (expresion -> casteo .)
    LLADER          reduce using rule 92 (expresion -> casteo .)
    PARDER          reduce using rule 92 (expresion -> casteo .)
    COMA            reduce using rule 92 (expresion -> casteo .)
    CORDER          reduce using rule 92 (expresion -> casteo .)


state 65

    (93) expresion -> PARIZQ . expresion PARDER
    (64) expresion -> . llamada_funcion
    (74) expresion -> . expresion MAS expresion
    (75) expresion -> . expresion MENOS expresion
    (76) expresion -> . expresion POR expresion
    (77) expresion -> . expresion DIVIDIDO expresion
    (78) expresion -> . expresion MODULO expresion
    (79) expresion -> . expresion POTENCIA expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . expresion MAYOR expresion
    (82) expresion -> . expresion MENOR expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORIGUAL expresion
    (85) expresion -> . expresion IGUALACION expresion
    (86) expresion -> . expresion DISTINTO expresion
    (87) expresion -> . expresion AND expresion
    (88) expresion -> . expresion OR expresion
    (89) expresion -> . NOT expresion
    (90) expresion -> . dec
    (91) expresion -> . inc
    (92) expresion -> . casteo
    (93) expresion -> . PARIZQ expresion PARDER
    (94) expresion -> . ENTERO
    (95) expresion -> . DECIMAL
    (96) expresion -> . CADENA
    (97) expresion -> . NULL
    (98) expresion -> . booleano
    (99) expresion -> . ID
    (102) expresion -> . aproximacion
    (103) expresion -> . exponencial
    (104) expresion -> . separador
    (105) expresion -> . concatenacion
    (106) expresion -> . to_minusculas
    (109) expresion -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (128) expresion -> . ID PUNTO ID
    (141) expresion -> . arreglo
    (144) expresion -> . acceso_array
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (113) casteo -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (114) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (100) booleano -> . TRUE
    (101) booleano -> . FALSE
    (107) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (110) to_minusculas -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (142) arreglo -> . CORIZQ lista_exp CORDER
    (143) arreglo -> . CORIZQ CORDER
    (145) acceso_array -> . ID lista_acceso_array

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    CADENA          shift and go to state 68
    NULL            shift and go to state 69
    ID              shift and go to state 71
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40
    CAST_STRING     shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    CORIZQ          shift and go to state 82

    expresion                      shift and go to state 121
    llamada_funcion                shift and go to state 59
    dec                            shift and go to state 62
    inc                            shift and go to state 63
    casteo                         shift and go to state 64
    booleano                       shift and go to state 70
    aproximacion                   shift and go to state 72
    exponencial                    shift and go to state 73
    separador                      shift and go to state 74
    concatenacion                  shift and go to state 75
    to_minusculas                  shift and go to state 76
    arreglo                        shift and go to state 77
    acceso_array                   shift and go to state 78

state 66

    (94) expresion -> ENTERO .

    MAS             reduce using rule 94 (expresion -> ENTERO .)
    MENOS           reduce using rule 94 (expresion -> ENTERO .)
    POR             reduce using rule 94 (expresion -> ENTERO .)
    DIVIDIDO        reduce using rule 94 (expresion -> ENTERO .)
    MODULO          reduce using rule 94 (expresion -> ENTERO .)
    POTENCIA        reduce using rule 94 (expresion -> ENTERO .)
    MAYOR           reduce using rule 94 (expresion -> ENTERO .)
    MENOR           reduce using rule 94 (expresion -> ENTERO .)
    MAYORIGUAL      reduce using rule 94 (expresion -> ENTERO .)
    MENORIGUAL      reduce using rule 94 (expresion -> ENTERO .)
    IGUALACION      reduce using rule 94 (expresion -> ENTERO .)
    DISTINTO        reduce using rule 94 (expresion -> ENTERO .)
    AND             reduce using rule 94 (expresion -> ENTERO .)
    OR              reduce using rule 94 (expresion -> ENTERO .)
    PUNTO           reduce using rule 94 (expresion -> ENTERO .)
    PTOYCOMA        reduce using rule 94 (expresion -> ENTERO .)
    error           reduce using rule 94 (expresion -> ENTERO .)
    FUNCTION        reduce using rule 94 (expresion -> ENTERO .)
    COMENTARIO      reduce using rule 94 (expresion -> ENTERO .)
    COMENTARIO_MULTILINEA reduce using rule 94 (expresion -> ENTERO .)
    LET             reduce using rule 94 (expresion -> ENTERO .)
    ID              reduce using rule 94 (expresion -> ENTERO .)
    CONSOLE         reduce using rule 94 (expresion -> ENTERO .)
    IF              reduce using rule 94 (expresion -> ENTERO .)
    WHILE           reduce using rule 94 (expresion -> ENTERO .)
    FOR             reduce using rule 94 (expresion -> ENTERO .)
    RETURN          reduce using rule 94 (expresion -> ENTERO .)
    BREAK           reduce using rule 94 (expresion -> ENTERO .)
    CONTINUE        reduce using rule 94 (expresion -> ENTERO .)
    INTERFACE       reduce using rule 94 (expresion -> ENTERO .)
    DECREMENTO      reduce using rule 94 (expresion -> ENTERO .)
    INCREMENTO      reduce using rule 94 (expresion -> ENTERO .)
    $end            reduce using rule 94 (expresion -> ENTERO .)
    LLADER          reduce using rule 94 (expresion -> ENTERO .)
    PARDER          reduce using rule 94 (expresion -> ENTERO .)
    COMA            reduce using rule 94 (expresion -> ENTERO .)
    CORDER          reduce using rule 94 (expresion -> ENTERO .)


state 67

    (95) expresion -> DECIMAL .

    MAS             reduce using rule 95 (expresion -> DECIMAL .)
    MENOS           reduce using rule 95 (expresion -> DECIMAL .)
    POR             reduce using rule 95 (expresion -> DECIMAL .)
    DIVIDIDO        reduce using rule 95 (expresion -> DECIMAL .)
    MODULO          reduce using rule 95 (expresion -> DECIMAL .)
    POTENCIA        reduce using rule 95 (expresion -> DECIMAL .)
    MAYOR           reduce using rule 95 (expresion -> DECIMAL .)
    MENOR           reduce using rule 95 (expresion -> DECIMAL .)
    MAYORIGUAL      reduce using rule 95 (expresion -> DECIMAL .)
    MENORIGUAL      reduce using rule 95 (expresion -> DECIMAL .)
    IGUALACION      reduce using rule 95 (expresion -> DECIMAL .)
    DISTINTO        reduce using rule 95 (expresion -> DECIMAL .)
    AND             reduce using rule 95 (expresion -> DECIMAL .)
    OR              reduce using rule 95 (expresion -> DECIMAL .)
    PUNTO           reduce using rule 95 (expresion -> DECIMAL .)
    PTOYCOMA        reduce using rule 95 (expresion -> DECIMAL .)
    error           reduce using rule 95 (expresion -> DECIMAL .)
    FUNCTION        reduce using rule 95 (expresion -> DECIMAL .)
    COMENTARIO      reduce using rule 95 (expresion -> DECIMAL .)
    COMENTARIO_MULTILINEA reduce using rule 95 (expresion -> DECIMAL .)
    LET             reduce using rule 95 (expresion -> DECIMAL .)
    ID              reduce using rule 95 (expresion -> DECIMAL .)
    CONSOLE         reduce using rule 95 (expresion -> DECIMAL .)
    IF              reduce using rule 95 (expresion -> DECIMAL .)
    WHILE           reduce using rule 95 (expresion -> DECIMAL .)
    FOR             reduce using rule 95 (expresion -> DECIMAL .)
    RETURN          reduce using rule 95 (expresion -> DECIMAL .)
    BREAK           reduce using rule 95 (expresion -> DECIMAL .)
    CONTINUE        reduce using rule 95 (expresion -> DECIMAL .)
    INTERFACE       reduce using rule 95 (expresion -> DECIMAL .)
    DECREMENTO      reduce using rule 95 (expresion -> DECIMAL .)
    INCREMENTO      reduce using rule 95 (expresion -> DECIMAL .)
    $end            reduce using rule 95 (expresion -> DECIMAL .)
    LLADER          reduce using rule 95 (expresion -> DECIMAL .)
    PARDER          reduce using rule 95 (expresion -> DECIMAL .)
    COMA            reduce using rule 95 (expresion -> DECIMAL .)
    CORDER          reduce using rule 95 (expresion -> DECIMAL .)


state 68

    (96) expresion -> CADENA .

    MAS             reduce using rule 96 (expresion -> CADENA .)
    MENOS           reduce using rule 96 (expresion -> CADENA .)
    POR             reduce using rule 96 (expresion -> CADENA .)
    DIVIDIDO        reduce using rule 96 (expresion -> CADENA .)
    MODULO          reduce using rule 96 (expresion -> CADENA .)
    POTENCIA        reduce using rule 96 (expresion -> CADENA .)
    MAYOR           reduce using rule 96 (expresion -> CADENA .)
    MENOR           reduce using rule 96 (expresion -> CADENA .)
    MAYORIGUAL      reduce using rule 96 (expresion -> CADENA .)
    MENORIGUAL      reduce using rule 96 (expresion -> CADENA .)
    IGUALACION      reduce using rule 96 (expresion -> CADENA .)
    DISTINTO        reduce using rule 96 (expresion -> CADENA .)
    AND             reduce using rule 96 (expresion -> CADENA .)
    OR              reduce using rule 96 (expresion -> CADENA .)
    PUNTO           reduce using rule 96 (expresion -> CADENA .)
    PTOYCOMA        reduce using rule 96 (expresion -> CADENA .)
    error           reduce using rule 96 (expresion -> CADENA .)
    FUNCTION        reduce using rule 96 (expresion -> CADENA .)
    COMENTARIO      reduce using rule 96 (expresion -> CADENA .)
    COMENTARIO_MULTILINEA reduce using rule 96 (expresion -> CADENA .)
    LET             reduce using rule 96 (expresion -> CADENA .)
    ID              reduce using rule 96 (expresion -> CADENA .)
    CONSOLE         reduce using rule 96 (expresion -> CADENA .)
    IF              reduce using rule 96 (expresion -> CADENA .)
    WHILE           reduce using rule 96 (expresion -> CADENA .)
    FOR             reduce using rule 96 (expresion -> CADENA .)
    RETURN          reduce using rule 96 (expresion -> CADENA .)
    BREAK           reduce using rule 96 (expresion -> CADENA .)
    CONTINUE        reduce using rule 96 (expresion -> CADENA .)
    INTERFACE       reduce using rule 96 (expresion -> CADENA .)
    DECREMENTO      reduce using rule 96 (expresion -> CADENA .)
    INCREMENTO      reduce using rule 96 (expresion -> CADENA .)
    $end            reduce using rule 96 (expresion -> CADENA .)
    LLADER          reduce using rule 96 (expresion -> CADENA .)
    PARDER          reduce using rule 96 (expresion -> CADENA .)
    COMA            reduce using rule 96 (expresion -> CADENA .)
    CORDER          reduce using rule 96 (expresion -> CADENA .)


state 69

    (97) expresion -> NULL .

    MAS             reduce using rule 97 (expresion -> NULL .)
    MENOS           reduce using rule 97 (expresion -> NULL .)
    POR             reduce using rule 97 (expresion -> NULL .)
    DIVIDIDO        reduce using rule 97 (expresion -> NULL .)
    MODULO          reduce using rule 97 (expresion -> NULL .)
    POTENCIA        reduce using rule 97 (expresion -> NULL .)
    MAYOR           reduce using rule 97 (expresion -> NULL .)
    MENOR           reduce using rule 97 (expresion -> NULL .)
    MAYORIGUAL      reduce using rule 97 (expresion -> NULL .)
    MENORIGUAL      reduce using rule 97 (expresion -> NULL .)
    IGUALACION      reduce using rule 97 (expresion -> NULL .)
    DISTINTO        reduce using rule 97 (expresion -> NULL .)
    AND             reduce using rule 97 (expresion -> NULL .)
    OR              reduce using rule 97 (expresion -> NULL .)
    PUNTO           reduce using rule 97 (expresion -> NULL .)
    PTOYCOMA        reduce using rule 97 (expresion -> NULL .)
    error           reduce using rule 97 (expresion -> NULL .)
    FUNCTION        reduce using rule 97 (expresion -> NULL .)
    COMENTARIO      reduce using rule 97 (expresion -> NULL .)
    COMENTARIO_MULTILINEA reduce using rule 97 (expresion -> NULL .)
    LET             reduce using rule 97 (expresion -> NULL .)
    ID              reduce using rule 97 (expresion -> NULL .)
    CONSOLE         reduce using rule 97 (expresion -> NULL .)
    IF              reduce using rule 97 (expresion -> NULL .)
    WHILE           reduce using rule 97 (expresion -> NULL .)
    FOR             reduce using rule 97 (expresion -> NULL .)
    RETURN          reduce using rule 97 (expresion -> NULL .)
    BREAK           reduce using rule 97 (expresion -> NULL .)
    CONTINUE        reduce using rule 97 (expresion -> NULL .)
    INTERFACE       reduce using rule 97 (expresion -> NULL .)
    DECREMENTO      reduce using rule 97 (expresion -> NULL .)
    INCREMENTO      reduce using rule 97 (expresion -> NULL .)
    $end            reduce using rule 97 (expresion -> NULL .)
    LLADER          reduce using rule 97 (expresion -> NULL .)
    PARDER          reduce using rule 97 (expresion -> NULL .)
    COMA            reduce using rule 97 (expresion -> NULL .)
    CORDER          reduce using rule 97 (expresion -> NULL .)


state 70

    (98) expresion -> booleano .

    MAS             reduce using rule 98 (expresion -> booleano .)
    MENOS           reduce using rule 98 (expresion -> booleano .)
    POR             reduce using rule 98 (expresion -> booleano .)
    DIVIDIDO        reduce using rule 98 (expresion -> booleano .)
    MODULO          reduce using rule 98 (expresion -> booleano .)
    POTENCIA        reduce using rule 98 (expresion -> booleano .)
    MAYOR           reduce using rule 98 (expresion -> booleano .)
    MENOR           reduce using rule 98 (expresion -> booleano .)
    MAYORIGUAL      reduce using rule 98 (expresion -> booleano .)
    MENORIGUAL      reduce using rule 98 (expresion -> booleano .)
    IGUALACION      reduce using rule 98 (expresion -> booleano .)
    DISTINTO        reduce using rule 98 (expresion -> booleano .)
    AND             reduce using rule 98 (expresion -> booleano .)
    OR              reduce using rule 98 (expresion -> booleano .)
    PUNTO           reduce using rule 98 (expresion -> booleano .)
    PTOYCOMA        reduce using rule 98 (expresion -> booleano .)
    error           reduce using rule 98 (expresion -> booleano .)
    FUNCTION        reduce using rule 98 (expresion -> booleano .)
    COMENTARIO      reduce using rule 98 (expresion -> booleano .)
    COMENTARIO_MULTILINEA reduce using rule 98 (expresion -> booleano .)
    LET             reduce using rule 98 (expresion -> booleano .)
    ID              reduce using rule 98 (expresion -> booleano .)
    CONSOLE         reduce using rule 98 (expresion -> booleano .)
    IF              reduce using rule 98 (expresion -> booleano .)
    WHILE           reduce using rule 98 (expresion -> booleano .)
    FOR             reduce using rule 98 (expresion -> booleano .)
    RETURN          reduce using rule 98 (expresion -> booleano .)
    BREAK           reduce using rule 98 (expresion -> booleano .)
    CONTINUE        reduce using rule 98 (expresion -> booleano .)
    INTERFACE       reduce using rule 98 (expresion -> booleano .)
    DECREMENTO      reduce using rule 98 (expresion -> booleano .)
    INCREMENTO      reduce using rule 98 (expresion -> booleano .)
    $end            reduce using rule 98 (expresion -> booleano .)
    LLADER          reduce using rule 98 (expresion -> booleano .)
    PARDER          reduce using rule 98 (expresion -> booleano .)
    COMA            reduce using rule 98 (expresion -> booleano .)
    CORDER          reduce using rule 98 (expresion -> booleano .)


state 71

    (99) expresion -> ID .
    (109) expresion -> ID . PUNTO TOUPPERCASE PARIZQ PARDER
    (128) expresion -> ID . PUNTO ID
    (65) llamada_funcion -> ID . PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> ID . PARIZQ PARDER
    (38) dec -> ID . DECREMENTO
    (40) inc -> ID . INCREMENTO
    (110) to_minusculas -> ID . PUNTO TOLOWERCASE PARIZQ PARDER
    (145) acceso_array -> ID . lista_acceso_array
    (146) lista_acceso_array -> . lista_acceso_array acceso_array_exp
    (147) lista_acceso_array -> . acceso_array_exp
    (148) acceso_array_exp -> . CORIZQ expresion CORDER

  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for DECREMENTO resolved as shift
  ! shift/reduce conflict for INCREMENTO resolved as shift
    MAS             reduce using rule 99 (expresion -> ID .)
    MENOS           reduce using rule 99 (expresion -> ID .)
    POR             reduce using rule 99 (expresion -> ID .)
    DIVIDIDO        reduce using rule 99 (expresion -> ID .)
    MODULO          reduce using rule 99 (expresion -> ID .)
    POTENCIA        reduce using rule 99 (expresion -> ID .)
    MAYOR           reduce using rule 99 (expresion -> ID .)
    MENOR           reduce using rule 99 (expresion -> ID .)
    MAYORIGUAL      reduce using rule 99 (expresion -> ID .)
    MENORIGUAL      reduce using rule 99 (expresion -> ID .)
    IGUALACION      reduce using rule 99 (expresion -> ID .)
    DISTINTO        reduce using rule 99 (expresion -> ID .)
    AND             reduce using rule 99 (expresion -> ID .)
    OR              reduce using rule 99 (expresion -> ID .)
    PTOYCOMA        reduce using rule 99 (expresion -> ID .)
    error           reduce using rule 99 (expresion -> ID .)
    FUNCTION        reduce using rule 99 (expresion -> ID .)
    COMENTARIO      reduce using rule 99 (expresion -> ID .)
    COMENTARIO_MULTILINEA reduce using rule 99 (expresion -> ID .)
    LET             reduce using rule 99 (expresion -> ID .)
    ID              reduce using rule 99 (expresion -> ID .)
    CONSOLE         reduce using rule 99 (expresion -> ID .)
    IF              reduce using rule 99 (expresion -> ID .)
    WHILE           reduce using rule 99 (expresion -> ID .)
    FOR             reduce using rule 99 (expresion -> ID .)
    RETURN          reduce using rule 99 (expresion -> ID .)
    BREAK           reduce using rule 99 (expresion -> ID .)
    CONTINUE        reduce using rule 99 (expresion -> ID .)
    INTERFACE       reduce using rule 99 (expresion -> ID .)
    $end            reduce using rule 99 (expresion -> ID .)
    LLADER          reduce using rule 99 (expresion -> ID .)
    PARDER          reduce using rule 99 (expresion -> ID .)
    COMA            reduce using rule 99 (expresion -> ID .)
    CORDER          reduce using rule 99 (expresion -> ID .)
    PUNTO           shift and go to state 122
    PARIZQ          shift and go to state 46
    DECREMENTO      shift and go to state 48
    INCREMENTO      shift and go to state 49
    CORIZQ          shift and go to state 52

  ! PUNTO           [ reduce using rule 99 (expresion -> ID .) ]
  ! DECREMENTO      [ reduce using rule 99 (expresion -> ID .) ]
  ! INCREMENTO      [ reduce using rule 99 (expresion -> ID .) ]

    lista_acceso_array             shift and go to state 123
    acceso_array_exp               shift and go to state 51

state 72

    (102) expresion -> aproximacion .

    MAS             reduce using rule 102 (expresion -> aproximacion .)
    MENOS           reduce using rule 102 (expresion -> aproximacion .)
    POR             reduce using rule 102 (expresion -> aproximacion .)
    DIVIDIDO        reduce using rule 102 (expresion -> aproximacion .)
    MODULO          reduce using rule 102 (expresion -> aproximacion .)
    POTENCIA        reduce using rule 102 (expresion -> aproximacion .)
    MAYOR           reduce using rule 102 (expresion -> aproximacion .)
    MENOR           reduce using rule 102 (expresion -> aproximacion .)
    MAYORIGUAL      reduce using rule 102 (expresion -> aproximacion .)
    MENORIGUAL      reduce using rule 102 (expresion -> aproximacion .)
    IGUALACION      reduce using rule 102 (expresion -> aproximacion .)
    DISTINTO        reduce using rule 102 (expresion -> aproximacion .)
    AND             reduce using rule 102 (expresion -> aproximacion .)
    OR              reduce using rule 102 (expresion -> aproximacion .)
    PUNTO           reduce using rule 102 (expresion -> aproximacion .)
    PTOYCOMA        reduce using rule 102 (expresion -> aproximacion .)
    error           reduce using rule 102 (expresion -> aproximacion .)
    FUNCTION        reduce using rule 102 (expresion -> aproximacion .)
    COMENTARIO      reduce using rule 102 (expresion -> aproximacion .)
    COMENTARIO_MULTILINEA reduce using rule 102 (expresion -> aproximacion .)
    LET             reduce using rule 102 (expresion -> aproximacion .)
    ID              reduce using rule 102 (expresion -> aproximacion .)
    CONSOLE         reduce using rule 102 (expresion -> aproximacion .)
    IF              reduce using rule 102 (expresion -> aproximacion .)
    WHILE           reduce using rule 102 (expresion -> aproximacion .)
    FOR             reduce using rule 102 (expresion -> aproximacion .)
    RETURN          reduce using rule 102 (expresion -> aproximacion .)
    BREAK           reduce using rule 102 (expresion -> aproximacion .)
    CONTINUE        reduce using rule 102 (expresion -> aproximacion .)
    INTERFACE       reduce using rule 102 (expresion -> aproximacion .)
    DECREMENTO      reduce using rule 102 (expresion -> aproximacion .)
    INCREMENTO      reduce using rule 102 (expresion -> aproximacion .)
    $end            reduce using rule 102 (expresion -> aproximacion .)
    LLADER          reduce using rule 102 (expresion -> aproximacion .)
    PARDER          reduce using rule 102 (expresion -> aproximacion .)
    COMA            reduce using rule 102 (expresion -> aproximacion .)
    CORDER          reduce using rule 102 (expresion -> aproximacion .)


state 73

    (103) expresion -> exponencial .

    MAS             reduce using rule 103 (expresion -> exponencial .)
    MENOS           reduce using rule 103 (expresion -> exponencial .)
    POR             reduce using rule 103 (expresion -> exponencial .)
    DIVIDIDO        reduce using rule 103 (expresion -> exponencial .)
    MODULO          reduce using rule 103 (expresion -> exponencial .)
    POTENCIA        reduce using rule 103 (expresion -> exponencial .)
    MAYOR           reduce using rule 103 (expresion -> exponencial .)
    MENOR           reduce using rule 103 (expresion -> exponencial .)
    MAYORIGUAL      reduce using rule 103 (expresion -> exponencial .)
    MENORIGUAL      reduce using rule 103 (expresion -> exponencial .)
    IGUALACION      reduce using rule 103 (expresion -> exponencial .)
    DISTINTO        reduce using rule 103 (expresion -> exponencial .)
    AND             reduce using rule 103 (expresion -> exponencial .)
    OR              reduce using rule 103 (expresion -> exponencial .)
    PUNTO           reduce using rule 103 (expresion -> exponencial .)
    PTOYCOMA        reduce using rule 103 (expresion -> exponencial .)
    error           reduce using rule 103 (expresion -> exponencial .)
    FUNCTION        reduce using rule 103 (expresion -> exponencial .)
    COMENTARIO      reduce using rule 103 (expresion -> exponencial .)
    COMENTARIO_MULTILINEA reduce using rule 103 (expresion -> exponencial .)
    LET             reduce using rule 103 (expresion -> exponencial .)
    ID              reduce using rule 103 (expresion -> exponencial .)
    CONSOLE         reduce using rule 103 (expresion -> exponencial .)
    IF              reduce using rule 103 (expresion -> exponencial .)
    WHILE           reduce using rule 103 (expresion -> exponencial .)
    FOR             reduce using rule 103 (expresion -> exponencial .)
    RETURN          reduce using rule 103 (expresion -> exponencial .)
    BREAK           reduce using rule 103 (expresion -> exponencial .)
    CONTINUE        reduce using rule 103 (expresion -> exponencial .)
    INTERFACE       reduce using rule 103 (expresion -> exponencial .)
    DECREMENTO      reduce using rule 103 (expresion -> exponencial .)
    INCREMENTO      reduce using rule 103 (expresion -> exponencial .)
    $end            reduce using rule 103 (expresion -> exponencial .)
    LLADER          reduce using rule 103 (expresion -> exponencial .)
    PARDER          reduce using rule 103 (expresion -> exponencial .)
    COMA            reduce using rule 103 (expresion -> exponencial .)
    CORDER          reduce using rule 103 (expresion -> exponencial .)


state 74

    (104) expresion -> separador .

    MAS             reduce using rule 104 (expresion -> separador .)
    MENOS           reduce using rule 104 (expresion -> separador .)
    POR             reduce using rule 104 (expresion -> separador .)
    DIVIDIDO        reduce using rule 104 (expresion -> separador .)
    MODULO          reduce using rule 104 (expresion -> separador .)
    POTENCIA        reduce using rule 104 (expresion -> separador .)
    MAYOR           reduce using rule 104 (expresion -> separador .)
    MENOR           reduce using rule 104 (expresion -> separador .)
    MAYORIGUAL      reduce using rule 104 (expresion -> separador .)
    MENORIGUAL      reduce using rule 104 (expresion -> separador .)
    IGUALACION      reduce using rule 104 (expresion -> separador .)
    DISTINTO        reduce using rule 104 (expresion -> separador .)
    AND             reduce using rule 104 (expresion -> separador .)
    OR              reduce using rule 104 (expresion -> separador .)
    PUNTO           reduce using rule 104 (expresion -> separador .)
    PTOYCOMA        reduce using rule 104 (expresion -> separador .)
    error           reduce using rule 104 (expresion -> separador .)
    FUNCTION        reduce using rule 104 (expresion -> separador .)
    COMENTARIO      reduce using rule 104 (expresion -> separador .)
    COMENTARIO_MULTILINEA reduce using rule 104 (expresion -> separador .)
    LET             reduce using rule 104 (expresion -> separador .)
    ID              reduce using rule 104 (expresion -> separador .)
    CONSOLE         reduce using rule 104 (expresion -> separador .)
    IF              reduce using rule 104 (expresion -> separador .)
    WHILE           reduce using rule 104 (expresion -> separador .)
    FOR             reduce using rule 104 (expresion -> separador .)
    RETURN          reduce using rule 104 (expresion -> separador .)
    BREAK           reduce using rule 104 (expresion -> separador .)
    CONTINUE        reduce using rule 104 (expresion -> separador .)
    INTERFACE       reduce using rule 104 (expresion -> separador .)
    DECREMENTO      reduce using rule 104 (expresion -> separador .)
    INCREMENTO      reduce using rule 104 (expresion -> separador .)
    $end            reduce using rule 104 (expresion -> separador .)
    LLADER          reduce using rule 104 (expresion -> separador .)
    PARDER          reduce using rule 104 (expresion -> separador .)
    COMA            reduce using rule 104 (expresion -> separador .)
    CORDER          reduce using rule 104 (expresion -> separador .)


state 75

    (105) expresion -> concatenacion .

    MAS             reduce using rule 105 (expresion -> concatenacion .)
    MENOS           reduce using rule 105 (expresion -> concatenacion .)
    POR             reduce using rule 105 (expresion -> concatenacion .)
    DIVIDIDO        reduce using rule 105 (expresion -> concatenacion .)
    MODULO          reduce using rule 105 (expresion -> concatenacion .)
    POTENCIA        reduce using rule 105 (expresion -> concatenacion .)
    MAYOR           reduce using rule 105 (expresion -> concatenacion .)
    MENOR           reduce using rule 105 (expresion -> concatenacion .)
    MAYORIGUAL      reduce using rule 105 (expresion -> concatenacion .)
    MENORIGUAL      reduce using rule 105 (expresion -> concatenacion .)
    IGUALACION      reduce using rule 105 (expresion -> concatenacion .)
    DISTINTO        reduce using rule 105 (expresion -> concatenacion .)
    AND             reduce using rule 105 (expresion -> concatenacion .)
    OR              reduce using rule 105 (expresion -> concatenacion .)
    PUNTO           reduce using rule 105 (expresion -> concatenacion .)
    PTOYCOMA        reduce using rule 105 (expresion -> concatenacion .)
    error           reduce using rule 105 (expresion -> concatenacion .)
    FUNCTION        reduce using rule 105 (expresion -> concatenacion .)
    COMENTARIO      reduce using rule 105 (expresion -> concatenacion .)
    COMENTARIO_MULTILINEA reduce using rule 105 (expresion -> concatenacion .)
    LET             reduce using rule 105 (expresion -> concatenacion .)
    ID              reduce using rule 105 (expresion -> concatenacion .)
    CONSOLE         reduce using rule 105 (expresion -> concatenacion .)
    IF              reduce using rule 105 (expresion -> concatenacion .)
    WHILE           reduce using rule 105 (expresion -> concatenacion .)
    FOR             reduce using rule 105 (expresion -> concatenacion .)
    RETURN          reduce using rule 105 (expresion -> concatenacion .)
    BREAK           reduce using rule 105 (expresion -> concatenacion .)
    CONTINUE        reduce using rule 105 (expresion -> concatenacion .)
    INTERFACE       reduce using rule 105 (expresion -> concatenacion .)
    DECREMENTO      reduce using rule 105 (expresion -> concatenacion .)
    INCREMENTO      reduce using rule 105 (expresion -> concatenacion .)
    $end            reduce using rule 105 (expresion -> concatenacion .)
    LLADER          reduce using rule 105 (expresion -> concatenacion .)
    PARDER          reduce using rule 105 (expresion -> concatenacion .)
    COMA            reduce using rule 105 (expresion -> concatenacion .)
    CORDER          reduce using rule 105 (expresion -> concatenacion .)


state 76

    (106) expresion -> to_minusculas .

    MAS             reduce using rule 106 (expresion -> to_minusculas .)
    MENOS           reduce using rule 106 (expresion -> to_minusculas .)
    POR             reduce using rule 106 (expresion -> to_minusculas .)
    DIVIDIDO        reduce using rule 106 (expresion -> to_minusculas .)
    MODULO          reduce using rule 106 (expresion -> to_minusculas .)
    POTENCIA        reduce using rule 106 (expresion -> to_minusculas .)
    MAYOR           reduce using rule 106 (expresion -> to_minusculas .)
    MENOR           reduce using rule 106 (expresion -> to_minusculas .)
    MAYORIGUAL      reduce using rule 106 (expresion -> to_minusculas .)
    MENORIGUAL      reduce using rule 106 (expresion -> to_minusculas .)
    IGUALACION      reduce using rule 106 (expresion -> to_minusculas .)
    DISTINTO        reduce using rule 106 (expresion -> to_minusculas .)
    AND             reduce using rule 106 (expresion -> to_minusculas .)
    OR              reduce using rule 106 (expresion -> to_minusculas .)
    PUNTO           reduce using rule 106 (expresion -> to_minusculas .)
    PTOYCOMA        reduce using rule 106 (expresion -> to_minusculas .)
    error           reduce using rule 106 (expresion -> to_minusculas .)
    FUNCTION        reduce using rule 106 (expresion -> to_minusculas .)
    COMENTARIO      reduce using rule 106 (expresion -> to_minusculas .)
    COMENTARIO_MULTILINEA reduce using rule 106 (expresion -> to_minusculas .)
    LET             reduce using rule 106 (expresion -> to_minusculas .)
    ID              reduce using rule 106 (expresion -> to_minusculas .)
    CONSOLE         reduce using rule 106 (expresion -> to_minusculas .)
    IF              reduce using rule 106 (expresion -> to_minusculas .)
    WHILE           reduce using rule 106 (expresion -> to_minusculas .)
    FOR             reduce using rule 106 (expresion -> to_minusculas .)
    RETURN          reduce using rule 106 (expresion -> to_minusculas .)
    BREAK           reduce using rule 106 (expresion -> to_minusculas .)
    CONTINUE        reduce using rule 106 (expresion -> to_minusculas .)
    INTERFACE       reduce using rule 106 (expresion -> to_minusculas .)
    DECREMENTO      reduce using rule 106 (expresion -> to_minusculas .)
    INCREMENTO      reduce using rule 106 (expresion -> to_minusculas .)
    $end            reduce using rule 106 (expresion -> to_minusculas .)
    LLADER          reduce using rule 106 (expresion -> to_minusculas .)
    PARDER          reduce using rule 106 (expresion -> to_minusculas .)
    COMA            reduce using rule 106 (expresion -> to_minusculas .)
    CORDER          reduce using rule 106 (expresion -> to_minusculas .)


state 77

    (141) expresion -> arreglo .

    MAS             reduce using rule 141 (expresion -> arreglo .)
    MENOS           reduce using rule 141 (expresion -> arreglo .)
    POR             reduce using rule 141 (expresion -> arreglo .)
    DIVIDIDO        reduce using rule 141 (expresion -> arreglo .)
    MODULO          reduce using rule 141 (expresion -> arreglo .)
    POTENCIA        reduce using rule 141 (expresion -> arreglo .)
    MAYOR           reduce using rule 141 (expresion -> arreglo .)
    MENOR           reduce using rule 141 (expresion -> arreglo .)
    MAYORIGUAL      reduce using rule 141 (expresion -> arreglo .)
    MENORIGUAL      reduce using rule 141 (expresion -> arreglo .)
    IGUALACION      reduce using rule 141 (expresion -> arreglo .)
    DISTINTO        reduce using rule 141 (expresion -> arreglo .)
    AND             reduce using rule 141 (expresion -> arreglo .)
    OR              reduce using rule 141 (expresion -> arreglo .)
    PUNTO           reduce using rule 141 (expresion -> arreglo .)
    PTOYCOMA        reduce using rule 141 (expresion -> arreglo .)
    error           reduce using rule 141 (expresion -> arreglo .)
    FUNCTION        reduce using rule 141 (expresion -> arreglo .)
    COMENTARIO      reduce using rule 141 (expresion -> arreglo .)
    COMENTARIO_MULTILINEA reduce using rule 141 (expresion -> arreglo .)
    LET             reduce using rule 141 (expresion -> arreglo .)
    ID              reduce using rule 141 (expresion -> arreglo .)
    CONSOLE         reduce using rule 141 (expresion -> arreglo .)
    IF              reduce using rule 141 (expresion -> arreglo .)
    WHILE           reduce using rule 141 (expresion -> arreglo .)
    FOR             reduce using rule 141 (expresion -> arreglo .)
    RETURN          reduce using rule 141 (expresion -> arreglo .)
    BREAK           reduce using rule 141 (expresion -> arreglo .)
    CONTINUE        reduce using rule 141 (expresion -> arreglo .)
    INTERFACE       reduce using rule 141 (expresion -> arreglo .)
    DECREMENTO      reduce using rule 141 (expresion -> arreglo .)
    INCREMENTO      reduce using rule 141 (expresion -> arreglo .)
    $end            reduce using rule 141 (expresion -> arreglo .)
    LLADER          reduce using rule 141 (expresion -> arreglo .)
    PARDER          reduce using rule 141 (expresion -> arreglo .)
    COMA            reduce using rule 141 (expresion -> arreglo .)
    CORDER          reduce using rule 141 (expresion -> arreglo .)


state 78

    (144) expresion -> acceso_array .

    MAS             reduce using rule 144 (expresion -> acceso_array .)
    MENOS           reduce using rule 144 (expresion -> acceso_array .)
    POR             reduce using rule 144 (expresion -> acceso_array .)
    DIVIDIDO        reduce using rule 144 (expresion -> acceso_array .)
    MODULO          reduce using rule 144 (expresion -> acceso_array .)
    POTENCIA        reduce using rule 144 (expresion -> acceso_array .)
    MAYOR           reduce using rule 144 (expresion -> acceso_array .)
    MENOR           reduce using rule 144 (expresion -> acceso_array .)
    MAYORIGUAL      reduce using rule 144 (expresion -> acceso_array .)
    MENORIGUAL      reduce using rule 144 (expresion -> acceso_array .)
    IGUALACION      reduce using rule 144 (expresion -> acceso_array .)
    DISTINTO        reduce using rule 144 (expresion -> acceso_array .)
    AND             reduce using rule 144 (expresion -> acceso_array .)
    OR              reduce using rule 144 (expresion -> acceso_array .)
    PUNTO           reduce using rule 144 (expresion -> acceso_array .)
    PTOYCOMA        reduce using rule 144 (expresion -> acceso_array .)
    error           reduce using rule 144 (expresion -> acceso_array .)
    FUNCTION        reduce using rule 144 (expresion -> acceso_array .)
    COMENTARIO      reduce using rule 144 (expresion -> acceso_array .)
    COMENTARIO_MULTILINEA reduce using rule 144 (expresion -> acceso_array .)
    LET             reduce using rule 144 (expresion -> acceso_array .)
    ID              reduce using rule 144 (expresion -> acceso_array .)
    CONSOLE         reduce using rule 144 (expresion -> acceso_array .)
    IF              reduce using rule 144 (expresion -> acceso_array .)
    WHILE           reduce using rule 144 (expresion -> acceso_array .)
    FOR             reduce using rule 144 (expresion -> acceso_array .)
    RETURN          reduce using rule 144 (expresion -> acceso_array .)
    BREAK           reduce using rule 144 (expresion -> acceso_array .)
    CONTINUE        reduce using rule 144 (expresion -> acceso_array .)
    INTERFACE       reduce using rule 144 (expresion -> acceso_array .)
    DECREMENTO      reduce using rule 144 (expresion -> acceso_array .)
    INCREMENTO      reduce using rule 144 (expresion -> acceso_array .)
    $end            reduce using rule 144 (expresion -> acceso_array .)
    LLADER          reduce using rule 144 (expresion -> acceso_array .)
    PARDER          reduce using rule 144 (expresion -> acceso_array .)
    COMA            reduce using rule 144 (expresion -> acceso_array .)
    CORDER          reduce using rule 144 (expresion -> acceso_array .)


state 79

    (114) casteo -> CAST_STRING . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 124


state 80

    (100) booleano -> TRUE .

    MAS             reduce using rule 100 (booleano -> TRUE .)
    MENOS           reduce using rule 100 (booleano -> TRUE .)
    POR             reduce using rule 100 (booleano -> TRUE .)
    DIVIDIDO        reduce using rule 100 (booleano -> TRUE .)
    MODULO          reduce using rule 100 (booleano -> TRUE .)
    POTENCIA        reduce using rule 100 (booleano -> TRUE .)
    MAYOR           reduce using rule 100 (booleano -> TRUE .)
    MENOR           reduce using rule 100 (booleano -> TRUE .)
    MAYORIGUAL      reduce using rule 100 (booleano -> TRUE .)
    MENORIGUAL      reduce using rule 100 (booleano -> TRUE .)
    IGUALACION      reduce using rule 100 (booleano -> TRUE .)
    DISTINTO        reduce using rule 100 (booleano -> TRUE .)
    AND             reduce using rule 100 (booleano -> TRUE .)
    OR              reduce using rule 100 (booleano -> TRUE .)
    PUNTO           reduce using rule 100 (booleano -> TRUE .)
    PTOYCOMA        reduce using rule 100 (booleano -> TRUE .)
    error           reduce using rule 100 (booleano -> TRUE .)
    FUNCTION        reduce using rule 100 (booleano -> TRUE .)
    COMENTARIO      reduce using rule 100 (booleano -> TRUE .)
    COMENTARIO_MULTILINEA reduce using rule 100 (booleano -> TRUE .)
    LET             reduce using rule 100 (booleano -> TRUE .)
    ID              reduce using rule 100 (booleano -> TRUE .)
    CONSOLE         reduce using rule 100 (booleano -> TRUE .)
    IF              reduce using rule 100 (booleano -> TRUE .)
    WHILE           reduce using rule 100 (booleano -> TRUE .)
    FOR             reduce using rule 100 (booleano -> TRUE .)
    RETURN          reduce using rule 100 (booleano -> TRUE .)
    BREAK           reduce using rule 100 (booleano -> TRUE .)
    CONTINUE        reduce using rule 100 (booleano -> TRUE .)
    INTERFACE       reduce using rule 100 (booleano -> TRUE .)
    DECREMENTO      reduce using rule 100 (booleano -> TRUE .)
    INCREMENTO      reduce using rule 100 (booleano -> TRUE .)
    $end            reduce using rule 100 (booleano -> TRUE .)
    LLADER          reduce using rule 100 (booleano -> TRUE .)
    PARDER          reduce using rule 100 (booleano -> TRUE .)
    COMA            reduce using rule 100 (booleano -> TRUE .)
    CORDER          reduce using rule 100 (booleano -> TRUE .)


state 81

    (101) booleano -> FALSE .

    MAS             reduce using rule 101 (booleano -> FALSE .)
    MENOS           reduce using rule 101 (booleano -> FALSE .)
    POR             reduce using rule 101 (booleano -> FALSE .)
    DIVIDIDO        reduce using rule 101 (booleano -> FALSE .)
    MODULO          reduce using rule 101 (booleano -> FALSE .)
    POTENCIA        reduce using rule 101 (booleano -> FALSE .)
    MAYOR           reduce using rule 101 (booleano -> FALSE .)
    MENOR           reduce using rule 101 (booleano -> FALSE .)
    MAYORIGUAL      reduce using rule 101 (booleano -> FALSE .)
    MENORIGUAL      reduce using rule 101 (booleano -> FALSE .)
    IGUALACION      reduce using rule 101 (booleano -> FALSE .)
    DISTINTO        reduce using rule 101 (booleano -> FALSE .)
    AND             reduce using rule 101 (booleano -> FALSE .)
    OR              reduce using rule 101 (booleano -> FALSE .)
    PUNTO           reduce using rule 101 (booleano -> FALSE .)
    PTOYCOMA        reduce using rule 101 (booleano -> FALSE .)
    error           reduce using rule 101 (booleano -> FALSE .)
    FUNCTION        reduce using rule 101 (booleano -> FALSE .)
    COMENTARIO      reduce using rule 101 (booleano -> FALSE .)
    COMENTARIO_MULTILINEA reduce using rule 101 (booleano -> FALSE .)
    LET             reduce using rule 101 (booleano -> FALSE .)
    ID              reduce using rule 101 (booleano -> FALSE .)
    CONSOLE         reduce using rule 101 (booleano -> FALSE .)
    IF              reduce using rule 101 (booleano -> FALSE .)
    WHILE           reduce using rule 101 (booleano -> FALSE .)
    FOR             reduce using rule 101 (booleano -> FALSE .)
    RETURN          reduce using rule 101 (booleano -> FALSE .)
    BREAK           reduce using rule 101 (booleano -> FALSE .)
    CONTINUE        reduce using rule 101 (booleano -> FALSE .)
    INTERFACE       reduce using rule 101 (booleano -> FALSE .)
    DECREMENTO      reduce using rule 101 (booleano -> FALSE .)
    INCREMENTO      reduce using rule 101 (booleano -> FALSE .)
    $end            reduce using rule 101 (booleano -> FALSE .)
    LLADER          reduce using rule 101 (booleano -> FALSE .)
    PARDER          reduce using rule 101 (booleano -> FALSE .)
    COMA            reduce using rule 101 (booleano -> FALSE .)
    CORDER          reduce using rule 101 (booleano -> FALSE .)


state 82

    (142) arreglo -> CORIZQ . lista_exp CORDER
    (143) arreglo -> CORIZQ . CORDER
    (139) lista_exp -> . lista_exp COMA expresion
    (140) lista_exp -> . expresion
    (64) expresion -> . llamada_funcion
    (74) expresion -> . expresion MAS expresion
    (75) expresion -> . expresion MENOS expresion
    (76) expresion -> . expresion POR expresion
    (77) expresion -> . expresion DIVIDIDO expresion
    (78) expresion -> . expresion MODULO expresion
    (79) expresion -> . expresion POTENCIA expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . expresion MAYOR expresion
    (82) expresion -> . expresion MENOR expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORIGUAL expresion
    (85) expresion -> . expresion IGUALACION expresion
    (86) expresion -> . expresion DISTINTO expresion
    (87) expresion -> . expresion AND expresion
    (88) expresion -> . expresion OR expresion
    (89) expresion -> . NOT expresion
    (90) expresion -> . dec
    (91) expresion -> . inc
    (92) expresion -> . casteo
    (93) expresion -> . PARIZQ expresion PARDER
    (94) expresion -> . ENTERO
    (95) expresion -> . DECIMAL
    (96) expresion -> . CADENA
    (97) expresion -> . NULL
    (98) expresion -> . booleano
    (99) expresion -> . ID
    (102) expresion -> . aproximacion
    (103) expresion -> . exponencial
    (104) expresion -> . separador
    (105) expresion -> . concatenacion
    (106) expresion -> . to_minusculas
    (109) expresion -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (128) expresion -> . ID PUNTO ID
    (141) expresion -> . arreglo
    (144) expresion -> . acceso_array
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (113) casteo -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (114) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (100) booleano -> . TRUE
    (101) booleano -> . FALSE
    (107) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (110) to_minusculas -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (142) arreglo -> . CORIZQ lista_exp CORDER
    (143) arreglo -> . CORIZQ CORDER
    (145) acceso_array -> . ID lista_acceso_array

    CORDER          shift and go to state 126
    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    CADENA          shift and go to state 68
    NULL            shift and go to state 69
    ID              shift and go to state 71
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40
    CAST_STRING     shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    CORIZQ          shift and go to state 82

    lista_exp                      shift and go to state 125
    expresion                      shift and go to state 127
    llamada_funcion                shift and go to state 59
    dec                            shift and go to state 62
    inc                            shift and go to state 63
    casteo                         shift and go to state 64
    booleano                       shift and go to state 70
    aproximacion                   shift and go to state 72
    exponencial                    shift and go to state 73
    separador                      shift and go to state 74
    concatenacion                  shift and go to state 75
    to_minusculas                  shift and go to state 76
    arreglo                        shift and go to state 77
    acceso_array                   shift and go to state 78

state 83

    (119) instanciar -> INTERFACE ID . bloquestruct
    (120) bloquestruct -> . LLAIZQ lista_params_struct LLADER

    LLAIZQ          shift and go to state 129

    bloquestruct                   shift and go to state 128

state 84

    (39) dec -> DECREMENTO ID .

    PTOYCOMA        reduce using rule 39 (dec -> DECREMENTO ID .)
    error           reduce using rule 39 (dec -> DECREMENTO ID .)
    FUNCTION        reduce using rule 39 (dec -> DECREMENTO ID .)
    COMENTARIO      reduce using rule 39 (dec -> DECREMENTO ID .)
    COMENTARIO_MULTILINEA reduce using rule 39 (dec -> DECREMENTO ID .)
    LET             reduce using rule 39 (dec -> DECREMENTO ID .)
    ID              reduce using rule 39 (dec -> DECREMENTO ID .)
    CONSOLE         reduce using rule 39 (dec -> DECREMENTO ID .)
    IF              reduce using rule 39 (dec -> DECREMENTO ID .)
    WHILE           reduce using rule 39 (dec -> DECREMENTO ID .)
    FOR             reduce using rule 39 (dec -> DECREMENTO ID .)
    RETURN          reduce using rule 39 (dec -> DECREMENTO ID .)
    BREAK           reduce using rule 39 (dec -> DECREMENTO ID .)
    CONTINUE        reduce using rule 39 (dec -> DECREMENTO ID .)
    INTERFACE       reduce using rule 39 (dec -> DECREMENTO ID .)
    DECREMENTO      reduce using rule 39 (dec -> DECREMENTO ID .)
    INCREMENTO      reduce using rule 39 (dec -> DECREMENTO ID .)
    $end            reduce using rule 39 (dec -> DECREMENTO ID .)
    MAS             reduce using rule 39 (dec -> DECREMENTO ID .)
    MENOS           reduce using rule 39 (dec -> DECREMENTO ID .)
    POR             reduce using rule 39 (dec -> DECREMENTO ID .)
    DIVIDIDO        reduce using rule 39 (dec -> DECREMENTO ID .)
    MODULO          reduce using rule 39 (dec -> DECREMENTO ID .)
    POTENCIA        reduce using rule 39 (dec -> DECREMENTO ID .)
    MAYOR           reduce using rule 39 (dec -> DECREMENTO ID .)
    MENOR           reduce using rule 39 (dec -> DECREMENTO ID .)
    MAYORIGUAL      reduce using rule 39 (dec -> DECREMENTO ID .)
    MENORIGUAL      reduce using rule 39 (dec -> DECREMENTO ID .)
    IGUALACION      reduce using rule 39 (dec -> DECREMENTO ID .)
    DISTINTO        reduce using rule 39 (dec -> DECREMENTO ID .)
    AND             reduce using rule 39 (dec -> DECREMENTO ID .)
    OR              reduce using rule 39 (dec -> DECREMENTO ID .)
    PUNTO           reduce using rule 39 (dec -> DECREMENTO ID .)
    LLADER          reduce using rule 39 (dec -> DECREMENTO ID .)
    PARDER          reduce using rule 39 (dec -> DECREMENTO ID .)
    COMA            reduce using rule 39 (dec -> DECREMENTO ID .)
    CORDER          reduce using rule 39 (dec -> DECREMENTO ID .)


state 85

    (41) inc -> INCREMENTO ID .

    PTOYCOMA        reduce using rule 41 (inc -> INCREMENTO ID .)
    error           reduce using rule 41 (inc -> INCREMENTO ID .)
    FUNCTION        reduce using rule 41 (inc -> INCREMENTO ID .)
    COMENTARIO      reduce using rule 41 (inc -> INCREMENTO ID .)
    COMENTARIO_MULTILINEA reduce using rule 41 (inc -> INCREMENTO ID .)
    LET             reduce using rule 41 (inc -> INCREMENTO ID .)
    ID              reduce using rule 41 (inc -> INCREMENTO ID .)
    CONSOLE         reduce using rule 41 (inc -> INCREMENTO ID .)
    IF              reduce using rule 41 (inc -> INCREMENTO ID .)
    WHILE           reduce using rule 41 (inc -> INCREMENTO ID .)
    FOR             reduce using rule 41 (inc -> INCREMENTO ID .)
    RETURN          reduce using rule 41 (inc -> INCREMENTO ID .)
    BREAK           reduce using rule 41 (inc -> INCREMENTO ID .)
    CONTINUE        reduce using rule 41 (inc -> INCREMENTO ID .)
    INTERFACE       reduce using rule 41 (inc -> INCREMENTO ID .)
    DECREMENTO      reduce using rule 41 (inc -> INCREMENTO ID .)
    INCREMENTO      reduce using rule 41 (inc -> INCREMENTO ID .)
    $end            reduce using rule 41 (inc -> INCREMENTO ID .)
    MAS             reduce using rule 41 (inc -> INCREMENTO ID .)
    MENOS           reduce using rule 41 (inc -> INCREMENTO ID .)
    POR             reduce using rule 41 (inc -> INCREMENTO ID .)
    DIVIDIDO        reduce using rule 41 (inc -> INCREMENTO ID .)
    MODULO          reduce using rule 41 (inc -> INCREMENTO ID .)
    POTENCIA        reduce using rule 41 (inc -> INCREMENTO ID .)
    MAYOR           reduce using rule 41 (inc -> INCREMENTO ID .)
    MENOR           reduce using rule 41 (inc -> INCREMENTO ID .)
    MAYORIGUAL      reduce using rule 41 (inc -> INCREMENTO ID .)
    MENORIGUAL      reduce using rule 41 (inc -> INCREMENTO ID .)
    IGUALACION      reduce using rule 41 (inc -> INCREMENTO ID .)
    DISTINTO        reduce using rule 41 (inc -> INCREMENTO ID .)
    AND             reduce using rule 41 (inc -> INCREMENTO ID .)
    OR              reduce using rule 41 (inc -> INCREMENTO ID .)
    PUNTO           reduce using rule 41 (inc -> INCREMENTO ID .)
    LLADER          reduce using rule 41 (inc -> INCREMENTO ID .)
    PARDER          reduce using rule 41 (inc -> INCREMENTO ID .)
    COMA            reduce using rule 41 (inc -> INCREMENTO ID .)
    CORDER          reduce using rule 41 (inc -> INCREMENTO ID .)


state 86

    (55) funcion -> FUNCTION ID PARIZQ . lista_parametros PARDER bloque
    (56) funcion -> FUNCTION ID PARIZQ . lista_parametros PARDER DOSPUNTOS tipo bloque
    (57) funcion -> FUNCTION ID PARIZQ . PARDER bloque
    (58) funcion -> FUNCTION ID PARIZQ . PARDER DOSPUNTOS tipo bloque
    (59) funcion -> FUNCTION ID PARIZQ . lista_parametros PARDER DOSPUNTOS tipo CORIZQ CORDER bloque
    (60) lista_parametros -> . lista_parametros COMA parametro
    (61) lista_parametros -> . parametro
    (62) parametro -> . ID DOSPUNTOS tipo
    (63) parametro -> . ID DOSPUNTOS tipo CORIZQ CORDER

    PARDER          shift and go to state 132
    ID              shift and go to state 130

    lista_parametros               shift and go to state 131
    parametro                      shift and go to state 133

state 87

    (34) asignacion -> ID IGUAL expresion .
    (74) expresion -> expresion . MAS expresion
    (75) expresion -> expresion . MENOS expresion
    (76) expresion -> expresion . POR expresion
    (77) expresion -> expresion . DIVIDIDO expresion
    (78) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MAYOR expresion
    (82) expresion -> expresion . MENOR expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORIGUAL expresion
    (85) expresion -> expresion . IGUALACION expresion
    (86) expresion -> expresion . DISTINTO expresion
    (87) expresion -> expresion . AND expresion
    (88) expresion -> expresion . OR expresion
    (113) casteo -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (107) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PTOYCOMA        reduce using rule 34 (asignacion -> ID IGUAL expresion .)
    error           reduce using rule 34 (asignacion -> ID IGUAL expresion .)
    FUNCTION        reduce using rule 34 (asignacion -> ID IGUAL expresion .)
    COMENTARIO      reduce using rule 34 (asignacion -> ID IGUAL expresion .)
    COMENTARIO_MULTILINEA reduce using rule 34 (asignacion -> ID IGUAL expresion .)
    LET             reduce using rule 34 (asignacion -> ID IGUAL expresion .)
    ID              reduce using rule 34 (asignacion -> ID IGUAL expresion .)
    CONSOLE         reduce using rule 34 (asignacion -> ID IGUAL expresion .)
    IF              reduce using rule 34 (asignacion -> ID IGUAL expresion .)
    WHILE           reduce using rule 34 (asignacion -> ID IGUAL expresion .)
    FOR             reduce using rule 34 (asignacion -> ID IGUAL expresion .)
    RETURN          reduce using rule 34 (asignacion -> ID IGUAL expresion .)
    BREAK           reduce using rule 34 (asignacion -> ID IGUAL expresion .)
    CONTINUE        reduce using rule 34 (asignacion -> ID IGUAL expresion .)
    INTERFACE       reduce using rule 34 (asignacion -> ID IGUAL expresion .)
    DECREMENTO      reduce using rule 34 (asignacion -> ID IGUAL expresion .)
    INCREMENTO      reduce using rule 34 (asignacion -> ID IGUAL expresion .)
    $end            reduce using rule 34 (asignacion -> ID IGUAL expresion .)
    LLADER          reduce using rule 34 (asignacion -> ID IGUAL expresion .)
    PARDER          reduce using rule 34 (asignacion -> ID IGUAL expresion .)
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIVIDIDO        shift and go to state 107
    MODULO          shift and go to state 108
    POTENCIA        shift and go to state 109
    MAYOR           shift and go to state 110
    MENOR           shift and go to state 111
    MAYORIGUAL      shift and go to state 112
    MENORIGUAL      shift and go to state 113
    IGUALACION      shift and go to state 114
    DISTINTO        shift and go to state 115
    AND             shift and go to state 116
    OR              shift and go to state 117
    PUNTO           shift and go to state 118


state 88

    (65) llamada_funcion -> ID PARIZQ lista_argumentos . PARDER
    (67) lista_argumentos -> lista_argumentos . COMA expresion

    PARDER          shift and go to state 134
    COMA            shift and go to state 135


state 89

    (66) llamada_funcion -> ID PARIZQ PARDER .

    PTOYCOMA        reduce using rule 66 (llamada_funcion -> ID PARIZQ PARDER .)
    error           reduce using rule 66 (llamada_funcion -> ID PARIZQ PARDER .)
    FUNCTION        reduce using rule 66 (llamada_funcion -> ID PARIZQ PARDER .)
    COMENTARIO      reduce using rule 66 (llamada_funcion -> ID PARIZQ PARDER .)
    COMENTARIO_MULTILINEA reduce using rule 66 (llamada_funcion -> ID PARIZQ PARDER .)
    LET             reduce using rule 66 (llamada_funcion -> ID PARIZQ PARDER .)
    ID              reduce using rule 66 (llamada_funcion -> ID PARIZQ PARDER .)
    CONSOLE         reduce using rule 66 (llamada_funcion -> ID PARIZQ PARDER .)
    IF              reduce using rule 66 (llamada_funcion -> ID PARIZQ PARDER .)
    WHILE           reduce using rule 66 (llamada_funcion -> ID PARIZQ PARDER .)
    FOR             reduce using rule 66 (llamada_funcion -> ID PARIZQ PARDER .)
    RETURN          reduce using rule 66 (llamada_funcion -> ID PARIZQ PARDER .)
    BREAK           reduce using rule 66 (llamada_funcion -> ID PARIZQ PARDER .)
    CONTINUE        reduce using rule 66 (llamada_funcion -> ID PARIZQ PARDER .)
    INTERFACE       reduce using rule 66 (llamada_funcion -> ID PARIZQ PARDER .)
    DECREMENTO      reduce using rule 66 (llamada_funcion -> ID PARIZQ PARDER .)
    INCREMENTO      reduce using rule 66 (llamada_funcion -> ID PARIZQ PARDER .)
    $end            reduce using rule 66 (llamada_funcion -> ID PARIZQ PARDER .)
    MAS             reduce using rule 66 (llamada_funcion -> ID PARIZQ PARDER .)
    MENOS           reduce using rule 66 (llamada_funcion -> ID PARIZQ PARDER .)
    POR             reduce using rule 66 (llamada_funcion -> ID PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 66 (llamada_funcion -> ID PARIZQ PARDER .)
    MODULO          reduce using rule 66 (llamada_funcion -> ID PARIZQ PARDER .)
    POTENCIA        reduce using rule 66 (llamada_funcion -> ID PARIZQ PARDER .)
    MAYOR           reduce using rule 66 (llamada_funcion -> ID PARIZQ PARDER .)
    MENOR           reduce using rule 66 (llamada_funcion -> ID PARIZQ PARDER .)
    MAYORIGUAL      reduce using rule 66 (llamada_funcion -> ID PARIZQ PARDER .)
    MENORIGUAL      reduce using rule 66 (llamada_funcion -> ID PARIZQ PARDER .)
    IGUALACION      reduce using rule 66 (llamada_funcion -> ID PARIZQ PARDER .)
    DISTINTO        reduce using rule 66 (llamada_funcion -> ID PARIZQ PARDER .)
    AND             reduce using rule 66 (llamada_funcion -> ID PARIZQ PARDER .)
    OR              reduce using rule 66 (llamada_funcion -> ID PARIZQ PARDER .)
    PUNTO           reduce using rule 66 (llamada_funcion -> ID PARIZQ PARDER .)
    LLADER          reduce using rule 66 (llamada_funcion -> ID PARIZQ PARDER .)
    PARDER          reduce using rule 66 (llamada_funcion -> ID PARIZQ PARDER .)
    COMA            reduce using rule 66 (llamada_funcion -> ID PARIZQ PARDER .)
    CORDER          reduce using rule 66 (llamada_funcion -> ID PARIZQ PARDER .)


state 90

    (68) lista_argumentos -> expresion .
    (74) expresion -> expresion . MAS expresion
    (75) expresion -> expresion . MENOS expresion
    (76) expresion -> expresion . POR expresion
    (77) expresion -> expresion . DIVIDIDO expresion
    (78) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MAYOR expresion
    (82) expresion -> expresion . MENOR expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORIGUAL expresion
    (85) expresion -> expresion . IGUALACION expresion
    (86) expresion -> expresion . DISTINTO expresion
    (87) expresion -> expresion . AND expresion
    (88) expresion -> expresion . OR expresion
    (113) casteo -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (107) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          reduce using rule 68 (lista_argumentos -> expresion .)
    COMA            reduce using rule 68 (lista_argumentos -> expresion .)
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIVIDIDO        shift and go to state 107
    MODULO          shift and go to state 108
    POTENCIA        shift and go to state 109
    MAYOR           shift and go to state 110
    MENOR           shift and go to state 111
    MAYORIGUAL      shift and go to state 112
    MENORIGUAL      shift and go to state 113
    IGUALACION      shift and go to state 114
    DISTINTO        shift and go to state 115
    AND             shift and go to state 116
    OR              shift and go to state 117
    PUNTO           shift and go to state 118


state 91

    (149) asignacion_array -> ID lista_acceso_array IGUAL . expresion
    (64) expresion -> . llamada_funcion
    (74) expresion -> . expresion MAS expresion
    (75) expresion -> . expresion MENOS expresion
    (76) expresion -> . expresion POR expresion
    (77) expresion -> . expresion DIVIDIDO expresion
    (78) expresion -> . expresion MODULO expresion
    (79) expresion -> . expresion POTENCIA expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . expresion MAYOR expresion
    (82) expresion -> . expresion MENOR expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORIGUAL expresion
    (85) expresion -> . expresion IGUALACION expresion
    (86) expresion -> . expresion DISTINTO expresion
    (87) expresion -> . expresion AND expresion
    (88) expresion -> . expresion OR expresion
    (89) expresion -> . NOT expresion
    (90) expresion -> . dec
    (91) expresion -> . inc
    (92) expresion -> . casteo
    (93) expresion -> . PARIZQ expresion PARDER
    (94) expresion -> . ENTERO
    (95) expresion -> . DECIMAL
    (96) expresion -> . CADENA
    (97) expresion -> . NULL
    (98) expresion -> . booleano
    (99) expresion -> . ID
    (102) expresion -> . aproximacion
    (103) expresion -> . exponencial
    (104) expresion -> . separador
    (105) expresion -> . concatenacion
    (106) expresion -> . to_minusculas
    (109) expresion -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (128) expresion -> . ID PUNTO ID
    (141) expresion -> . arreglo
    (144) expresion -> . acceso_array
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (113) casteo -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (114) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (100) booleano -> . TRUE
    (101) booleano -> . FALSE
    (107) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (110) to_minusculas -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (142) arreglo -> . CORIZQ lista_exp CORDER
    (143) arreglo -> . CORIZQ CORDER
    (145) acceso_array -> . ID lista_acceso_array

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    CADENA          shift and go to state 68
    NULL            shift and go to state 69
    ID              shift and go to state 71
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40
    CAST_STRING     shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    CORIZQ          shift and go to state 82

    expresion                      shift and go to state 136
    llamada_funcion                shift and go to state 59
    dec                            shift and go to state 62
    inc                            shift and go to state 63
    casteo                         shift and go to state 64
    booleano                       shift and go to state 70
    aproximacion                   shift and go to state 72
    exponencial                    shift and go to state 73
    separador                      shift and go to state 74
    concatenacion                  shift and go to state 75
    to_minusculas                  shift and go to state 76
    arreglo                        shift and go to state 77
    acceso_array                   shift and go to state 78

state 92

    (146) lista_acceso_array -> lista_acceso_array acceso_array_exp .

    IGUAL           reduce using rule 146 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    CORIZQ          reduce using rule 146 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    MAS             reduce using rule 146 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    MENOS           reduce using rule 146 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    POR             reduce using rule 146 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    DIVIDIDO        reduce using rule 146 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    MODULO          reduce using rule 146 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    POTENCIA        reduce using rule 146 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    MAYOR           reduce using rule 146 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    MENOR           reduce using rule 146 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    MAYORIGUAL      reduce using rule 146 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    MENORIGUAL      reduce using rule 146 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    IGUALACION      reduce using rule 146 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    DISTINTO        reduce using rule 146 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    AND             reduce using rule 146 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    OR              reduce using rule 146 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    PUNTO           reduce using rule 146 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    PTOYCOMA        reduce using rule 146 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    error           reduce using rule 146 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    FUNCTION        reduce using rule 146 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    COMENTARIO      reduce using rule 146 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    COMENTARIO_MULTILINEA reduce using rule 146 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    LET             reduce using rule 146 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    ID              reduce using rule 146 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    CONSOLE         reduce using rule 146 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    IF              reduce using rule 146 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    WHILE           reduce using rule 146 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    FOR             reduce using rule 146 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    RETURN          reduce using rule 146 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    BREAK           reduce using rule 146 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    CONTINUE        reduce using rule 146 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    INTERFACE       reduce using rule 146 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    DECREMENTO      reduce using rule 146 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    INCREMENTO      reduce using rule 146 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    $end            reduce using rule 146 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    LLADER          reduce using rule 146 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    PARDER          reduce using rule 146 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    COMA            reduce using rule 146 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    CORDER          reduce using rule 146 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)


state 93

    (129) asignacionInterface -> ID PUNTO ID . IGUAL expresion

    IGUAL           shift and go to state 137


state 94

    (148) acceso_array_exp -> CORIZQ expresion . CORDER
    (74) expresion -> expresion . MAS expresion
    (75) expresion -> expresion . MENOS expresion
    (76) expresion -> expresion . POR expresion
    (77) expresion -> expresion . DIVIDIDO expresion
    (78) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MAYOR expresion
    (82) expresion -> expresion . MENOR expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORIGUAL expresion
    (85) expresion -> expresion . IGUALACION expresion
    (86) expresion -> expresion . DISTINTO expresion
    (87) expresion -> expresion . AND expresion
    (88) expresion -> expresion . OR expresion
    (113) casteo -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (107) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    CORDER          shift and go to state 138
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIVIDIDO        shift and go to state 107
    MODULO          shift and go to state 108
    POTENCIA        shift and go to state 109
    MAYOR           shift and go to state 110
    MENOR           shift and go to state 111
    MAYORIGUAL      shift and go to state 112
    MENORIGUAL      shift and go to state 113
    IGUALACION      shift and go to state 114
    DISTINTO        shift and go to state 115
    AND             shift and go to state 116
    OR              shift and go to state 117
    PUNTO           shift and go to state 118


state 95

    (30) declaracion -> LET ID IGUAL . expresion
    (136) declaracionArray -> LET ID IGUAL . CORIZQ CORDER
    (138) declaracionArray -> LET ID IGUAL . CORIZQ lista_exp CORDER
    (64) expresion -> . llamada_funcion
    (74) expresion -> . expresion MAS expresion
    (75) expresion -> . expresion MENOS expresion
    (76) expresion -> . expresion POR expresion
    (77) expresion -> . expresion DIVIDIDO expresion
    (78) expresion -> . expresion MODULO expresion
    (79) expresion -> . expresion POTENCIA expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . expresion MAYOR expresion
    (82) expresion -> . expresion MENOR expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORIGUAL expresion
    (85) expresion -> . expresion IGUALACION expresion
    (86) expresion -> . expresion DISTINTO expresion
    (87) expresion -> . expresion AND expresion
    (88) expresion -> . expresion OR expresion
    (89) expresion -> . NOT expresion
    (90) expresion -> . dec
    (91) expresion -> . inc
    (92) expresion -> . casteo
    (93) expresion -> . PARIZQ expresion PARDER
    (94) expresion -> . ENTERO
    (95) expresion -> . DECIMAL
    (96) expresion -> . CADENA
    (97) expresion -> . NULL
    (98) expresion -> . booleano
    (99) expresion -> . ID
    (102) expresion -> . aproximacion
    (103) expresion -> . exponencial
    (104) expresion -> . separador
    (105) expresion -> . concatenacion
    (106) expresion -> . to_minusculas
    (109) expresion -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (128) expresion -> . ID PUNTO ID
    (141) expresion -> . arreglo
    (144) expresion -> . acceso_array
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (113) casteo -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (114) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (100) booleano -> . TRUE
    (101) booleano -> . FALSE
    (107) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (110) to_minusculas -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (142) arreglo -> . CORIZQ lista_exp CORDER
    (143) arreglo -> . CORIZQ CORDER
    (145) acceso_array -> . ID lista_acceso_array

    CORIZQ          shift and go to state 140
    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    CADENA          shift and go to state 68
    NULL            shift and go to state 69
    ID              shift and go to state 71
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40
    CAST_STRING     shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81

    expresion                      shift and go to state 139
    llamada_funcion                shift and go to state 59
    dec                            shift and go to state 62
    inc                            shift and go to state 63
    casteo                         shift and go to state 64
    booleano                       shift and go to state 70
    aproximacion                   shift and go to state 72
    exponencial                    shift and go to state 73
    separador                      shift and go to state 74
    concatenacion                  shift and go to state 75
    to_minusculas                  shift and go to state 76
    arreglo                        shift and go to state 77
    acceso_array                   shift and go to state 78

state 96

    (32) declaracion -> LET ID DOSPUNTOS . tipo IGUAL expresion
    (33) declaracion -> LET ID DOSPUNTOS . tipo
    (124) declaracionInterface -> LET ID DOSPUNTOS . ID IGUAL LLAIZQ lista_d LLADER
    (130) declaracionArray -> LET ID DOSPUNTOS . ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER
    (131) declaracionArray -> LET ID DOSPUNTOS . ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER
    (132) declaracionArray -> LET ID DOSPUNTOS . ARRAY MENOR tipo MAYOR
    (133) declaracionArray -> LET ID DOSPUNTOS . tipo CORIZQ CORDER
    (134) declaracionArray -> LET ID DOSPUNTOS . tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER
    (135) declaracionArray -> LET ID DOSPUNTOS . tipo CORIZQ CORDER IGUAL CORIZQ CORDER
    (137) declaracionArray -> LET ID DOSPUNTOS . tipo CORIZQ CORDER IGUAL expresion
    (69) tipo -> . NUMBER
    (70) tipo -> . STRING
    (71) tipo -> . BOOLEAN
    (72) tipo -> . ANY
    (73) tipo -> . NULL

    ID              shift and go to state 141
    ARRAY           shift and go to state 143
    NUMBER          shift and go to state 144
    STRING          shift and go to state 145
    BOOLEAN         shift and go to state 146
    ANY             shift and go to state 147
    NULL            shift and go to state 148

    tipo                           shift and go to state 142

state 97

    (42) impresion -> CONSOLE PUNTO LOG . PARIZQ expresion PARDER
    (43) impresion -> CONSOLE PUNTO LOG . PARIZQ lista_argumentos PARDER

    PARIZQ          shift and go to state 149


state 98

    (44) condicional -> IF PARIZQ expresion . PARDER bloque
    (45) condicional -> IF PARIZQ expresion . PARDER bloque ELSE bloque
    (46) condicional -> IF PARIZQ expresion . PARDER bloque lista_elif
    (47) condicional -> IF PARIZQ expresion . PARDER bloque lista_elif ELSE bloque
    (74) expresion -> expresion . MAS expresion
    (75) expresion -> expresion . MENOS expresion
    (76) expresion -> expresion . POR expresion
    (77) expresion -> expresion . DIVIDIDO expresion
    (78) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MAYOR expresion
    (82) expresion -> expresion . MENOR expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORIGUAL expresion
    (85) expresion -> expresion . IGUALACION expresion
    (86) expresion -> expresion . DISTINTO expresion
    (87) expresion -> expresion . AND expresion
    (88) expresion -> expresion . OR expresion
    (113) casteo -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (107) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 150
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIVIDIDO        shift and go to state 107
    MODULO          shift and go to state 108
    POTENCIA        shift and go to state 109
    MAYOR           shift and go to state 110
    MENOR           shift and go to state 111
    MAYORIGUAL      shift and go to state 112
    MENORIGUAL      shift and go to state 113
    IGUALACION      shift and go to state 114
    DISTINTO        shift and go to state 115
    AND             shift and go to state 116
    OR              shift and go to state 117
    PUNTO           shift and go to state 118


state 99

    (51) ciclo_while -> WHILE PARIZQ expresion . PARDER bloque
    (74) expresion -> expresion . MAS expresion
    (75) expresion -> expresion . MENOS expresion
    (76) expresion -> expresion . POR expresion
    (77) expresion -> expresion . DIVIDIDO expresion
    (78) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MAYOR expresion
    (82) expresion -> expresion . MENOR expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORIGUAL expresion
    (85) expresion -> expresion . IGUALACION expresion
    (86) expresion -> expresion . DISTINTO expresion
    (87) expresion -> expresion . AND expresion
    (88) expresion -> expresion . OR expresion
    (113) casteo -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (107) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 151
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIVIDIDO        shift and go to state 107
    MODULO          shift and go to state 108
    POTENCIA        shift and go to state 109
    MAYOR           shift and go to state 110
    MENOR           shift and go to state 111
    MAYORIGUAL      shift and go to state 112
    MENORIGUAL      shift and go to state 113
    IGUALACION      shift and go to state 114
    DISTINTO        shift and go to state 115
    AND             shift and go to state 116
    OR              shift and go to state 117
    PUNTO           shift and go to state 118


state 100

    (52) ciclo_for -> FOR PARIZQ declaracion . PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque

    PTOYCOMA        shift and go to state 152


state 101

    (53) ciclo_for -> FOR PARIZQ asignacion . PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque

    PTOYCOMA        shift and go to state 153


state 102

    (54) ciclo_for_of -> FOR PARIZQ LET . ID OF expresion PARDER bloque
    (30) declaracion -> LET . ID IGUAL expresion
    (31) declaracion -> LET . ID
    (32) declaracion -> LET . ID DOSPUNTOS tipo IGUAL expresion
    (33) declaracion -> LET . ID DOSPUNTOS tipo

    ID              shift and go to state 154


state 103

    (34) asignacion -> ID . IGUAL expresion
    (38) dec -> ID . DECREMENTO
    (40) inc -> ID . INCREMENTO
    (129) asignacionInterface -> ID . PUNTO ID IGUAL expresion

    IGUAL           shift and go to state 45
    DECREMENTO      shift and go to state 48
    INCREMENTO      shift and go to state 49
    PUNTO           shift and go to state 50


state 104

    (74) expresion -> expresion MAS . expresion
    (64) expresion -> . llamada_funcion
    (74) expresion -> . expresion MAS expresion
    (75) expresion -> . expresion MENOS expresion
    (76) expresion -> . expresion POR expresion
    (77) expresion -> . expresion DIVIDIDO expresion
    (78) expresion -> . expresion MODULO expresion
    (79) expresion -> . expresion POTENCIA expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . expresion MAYOR expresion
    (82) expresion -> . expresion MENOR expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORIGUAL expresion
    (85) expresion -> . expresion IGUALACION expresion
    (86) expresion -> . expresion DISTINTO expresion
    (87) expresion -> . expresion AND expresion
    (88) expresion -> . expresion OR expresion
    (89) expresion -> . NOT expresion
    (90) expresion -> . dec
    (91) expresion -> . inc
    (92) expresion -> . casteo
    (93) expresion -> . PARIZQ expresion PARDER
    (94) expresion -> . ENTERO
    (95) expresion -> . DECIMAL
    (96) expresion -> . CADENA
    (97) expresion -> . NULL
    (98) expresion -> . booleano
    (99) expresion -> . ID
    (102) expresion -> . aproximacion
    (103) expresion -> . exponencial
    (104) expresion -> . separador
    (105) expresion -> . concatenacion
    (106) expresion -> . to_minusculas
    (109) expresion -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (128) expresion -> . ID PUNTO ID
    (141) expresion -> . arreglo
    (144) expresion -> . acceso_array
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (113) casteo -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (114) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (100) booleano -> . TRUE
    (101) booleano -> . FALSE
    (107) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (110) to_minusculas -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (142) arreglo -> . CORIZQ lista_exp CORDER
    (143) arreglo -> . CORIZQ CORDER
    (145) acceso_array -> . ID lista_acceso_array

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    CADENA          shift and go to state 68
    NULL            shift and go to state 69
    ID              shift and go to state 71
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40
    CAST_STRING     shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    CORIZQ          shift and go to state 82

    expresion                      shift and go to state 155
    llamada_funcion                shift and go to state 59
    dec                            shift and go to state 62
    inc                            shift and go to state 63
    casteo                         shift and go to state 64
    booleano                       shift and go to state 70
    aproximacion                   shift and go to state 72
    exponencial                    shift and go to state 73
    separador                      shift and go to state 74
    concatenacion                  shift and go to state 75
    to_minusculas                  shift and go to state 76
    arreglo                        shift and go to state 77
    acceso_array                   shift and go to state 78

state 105

    (75) expresion -> expresion MENOS . expresion
    (64) expresion -> . llamada_funcion
    (74) expresion -> . expresion MAS expresion
    (75) expresion -> . expresion MENOS expresion
    (76) expresion -> . expresion POR expresion
    (77) expresion -> . expresion DIVIDIDO expresion
    (78) expresion -> . expresion MODULO expresion
    (79) expresion -> . expresion POTENCIA expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . expresion MAYOR expresion
    (82) expresion -> . expresion MENOR expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORIGUAL expresion
    (85) expresion -> . expresion IGUALACION expresion
    (86) expresion -> . expresion DISTINTO expresion
    (87) expresion -> . expresion AND expresion
    (88) expresion -> . expresion OR expresion
    (89) expresion -> . NOT expresion
    (90) expresion -> . dec
    (91) expresion -> . inc
    (92) expresion -> . casteo
    (93) expresion -> . PARIZQ expresion PARDER
    (94) expresion -> . ENTERO
    (95) expresion -> . DECIMAL
    (96) expresion -> . CADENA
    (97) expresion -> . NULL
    (98) expresion -> . booleano
    (99) expresion -> . ID
    (102) expresion -> . aproximacion
    (103) expresion -> . exponencial
    (104) expresion -> . separador
    (105) expresion -> . concatenacion
    (106) expresion -> . to_minusculas
    (109) expresion -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (128) expresion -> . ID PUNTO ID
    (141) expresion -> . arreglo
    (144) expresion -> . acceso_array
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (113) casteo -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (114) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (100) booleano -> . TRUE
    (101) booleano -> . FALSE
    (107) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (110) to_minusculas -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (142) arreglo -> . CORIZQ lista_exp CORDER
    (143) arreglo -> . CORIZQ CORDER
    (145) acceso_array -> . ID lista_acceso_array

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    CADENA          shift and go to state 68
    NULL            shift and go to state 69
    ID              shift and go to state 71
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40
    CAST_STRING     shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    CORIZQ          shift and go to state 82

    expresion                      shift and go to state 156
    llamada_funcion                shift and go to state 59
    dec                            shift and go to state 62
    inc                            shift and go to state 63
    casteo                         shift and go to state 64
    booleano                       shift and go to state 70
    aproximacion                   shift and go to state 72
    exponencial                    shift and go to state 73
    separador                      shift and go to state 74
    concatenacion                  shift and go to state 75
    to_minusculas                  shift and go to state 76
    arreglo                        shift and go to state 77
    acceso_array                   shift and go to state 78

state 106

    (76) expresion -> expresion POR . expresion
    (64) expresion -> . llamada_funcion
    (74) expresion -> . expresion MAS expresion
    (75) expresion -> . expresion MENOS expresion
    (76) expresion -> . expresion POR expresion
    (77) expresion -> . expresion DIVIDIDO expresion
    (78) expresion -> . expresion MODULO expresion
    (79) expresion -> . expresion POTENCIA expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . expresion MAYOR expresion
    (82) expresion -> . expresion MENOR expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORIGUAL expresion
    (85) expresion -> . expresion IGUALACION expresion
    (86) expresion -> . expresion DISTINTO expresion
    (87) expresion -> . expresion AND expresion
    (88) expresion -> . expresion OR expresion
    (89) expresion -> . NOT expresion
    (90) expresion -> . dec
    (91) expresion -> . inc
    (92) expresion -> . casteo
    (93) expresion -> . PARIZQ expresion PARDER
    (94) expresion -> . ENTERO
    (95) expresion -> . DECIMAL
    (96) expresion -> . CADENA
    (97) expresion -> . NULL
    (98) expresion -> . booleano
    (99) expresion -> . ID
    (102) expresion -> . aproximacion
    (103) expresion -> . exponencial
    (104) expresion -> . separador
    (105) expresion -> . concatenacion
    (106) expresion -> . to_minusculas
    (109) expresion -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (128) expresion -> . ID PUNTO ID
    (141) expresion -> . arreglo
    (144) expresion -> . acceso_array
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (113) casteo -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (114) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (100) booleano -> . TRUE
    (101) booleano -> . FALSE
    (107) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (110) to_minusculas -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (142) arreglo -> . CORIZQ lista_exp CORDER
    (143) arreglo -> . CORIZQ CORDER
    (145) acceso_array -> . ID lista_acceso_array

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    CADENA          shift and go to state 68
    NULL            shift and go to state 69
    ID              shift and go to state 71
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40
    CAST_STRING     shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    CORIZQ          shift and go to state 82

    expresion                      shift and go to state 157
    llamada_funcion                shift and go to state 59
    dec                            shift and go to state 62
    inc                            shift and go to state 63
    casteo                         shift and go to state 64
    booleano                       shift and go to state 70
    aproximacion                   shift and go to state 72
    exponencial                    shift and go to state 73
    separador                      shift and go to state 74
    concatenacion                  shift and go to state 75
    to_minusculas                  shift and go to state 76
    arreglo                        shift and go to state 77
    acceso_array                   shift and go to state 78

state 107

    (77) expresion -> expresion DIVIDIDO . expresion
    (64) expresion -> . llamada_funcion
    (74) expresion -> . expresion MAS expresion
    (75) expresion -> . expresion MENOS expresion
    (76) expresion -> . expresion POR expresion
    (77) expresion -> . expresion DIVIDIDO expresion
    (78) expresion -> . expresion MODULO expresion
    (79) expresion -> . expresion POTENCIA expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . expresion MAYOR expresion
    (82) expresion -> . expresion MENOR expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORIGUAL expresion
    (85) expresion -> . expresion IGUALACION expresion
    (86) expresion -> . expresion DISTINTO expresion
    (87) expresion -> . expresion AND expresion
    (88) expresion -> . expresion OR expresion
    (89) expresion -> . NOT expresion
    (90) expresion -> . dec
    (91) expresion -> . inc
    (92) expresion -> . casteo
    (93) expresion -> . PARIZQ expresion PARDER
    (94) expresion -> . ENTERO
    (95) expresion -> . DECIMAL
    (96) expresion -> . CADENA
    (97) expresion -> . NULL
    (98) expresion -> . booleano
    (99) expresion -> . ID
    (102) expresion -> . aproximacion
    (103) expresion -> . exponencial
    (104) expresion -> . separador
    (105) expresion -> . concatenacion
    (106) expresion -> . to_minusculas
    (109) expresion -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (128) expresion -> . ID PUNTO ID
    (141) expresion -> . arreglo
    (144) expresion -> . acceso_array
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (113) casteo -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (114) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (100) booleano -> . TRUE
    (101) booleano -> . FALSE
    (107) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (110) to_minusculas -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (142) arreglo -> . CORIZQ lista_exp CORDER
    (143) arreglo -> . CORIZQ CORDER
    (145) acceso_array -> . ID lista_acceso_array

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    CADENA          shift and go to state 68
    NULL            shift and go to state 69
    ID              shift and go to state 71
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40
    CAST_STRING     shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    CORIZQ          shift and go to state 82

    expresion                      shift and go to state 158
    llamada_funcion                shift and go to state 59
    dec                            shift and go to state 62
    inc                            shift and go to state 63
    casteo                         shift and go to state 64
    booleano                       shift and go to state 70
    aproximacion                   shift and go to state 72
    exponencial                    shift and go to state 73
    separador                      shift and go to state 74
    concatenacion                  shift and go to state 75
    to_minusculas                  shift and go to state 76
    arreglo                        shift and go to state 77
    acceso_array                   shift and go to state 78

state 108

    (78) expresion -> expresion MODULO . expresion
    (64) expresion -> . llamada_funcion
    (74) expresion -> . expresion MAS expresion
    (75) expresion -> . expresion MENOS expresion
    (76) expresion -> . expresion POR expresion
    (77) expresion -> . expresion DIVIDIDO expresion
    (78) expresion -> . expresion MODULO expresion
    (79) expresion -> . expresion POTENCIA expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . expresion MAYOR expresion
    (82) expresion -> . expresion MENOR expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORIGUAL expresion
    (85) expresion -> . expresion IGUALACION expresion
    (86) expresion -> . expresion DISTINTO expresion
    (87) expresion -> . expresion AND expresion
    (88) expresion -> . expresion OR expresion
    (89) expresion -> . NOT expresion
    (90) expresion -> . dec
    (91) expresion -> . inc
    (92) expresion -> . casteo
    (93) expresion -> . PARIZQ expresion PARDER
    (94) expresion -> . ENTERO
    (95) expresion -> . DECIMAL
    (96) expresion -> . CADENA
    (97) expresion -> . NULL
    (98) expresion -> . booleano
    (99) expresion -> . ID
    (102) expresion -> . aproximacion
    (103) expresion -> . exponencial
    (104) expresion -> . separador
    (105) expresion -> . concatenacion
    (106) expresion -> . to_minusculas
    (109) expresion -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (128) expresion -> . ID PUNTO ID
    (141) expresion -> . arreglo
    (144) expresion -> . acceso_array
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (113) casteo -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (114) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (100) booleano -> . TRUE
    (101) booleano -> . FALSE
    (107) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (110) to_minusculas -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (142) arreglo -> . CORIZQ lista_exp CORDER
    (143) arreglo -> . CORIZQ CORDER
    (145) acceso_array -> . ID lista_acceso_array

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    CADENA          shift and go to state 68
    NULL            shift and go to state 69
    ID              shift and go to state 71
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40
    CAST_STRING     shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    CORIZQ          shift and go to state 82

    expresion                      shift and go to state 159
    llamada_funcion                shift and go to state 59
    dec                            shift and go to state 62
    inc                            shift and go to state 63
    casteo                         shift and go to state 64
    booleano                       shift and go to state 70
    aproximacion                   shift and go to state 72
    exponencial                    shift and go to state 73
    separador                      shift and go to state 74
    concatenacion                  shift and go to state 75
    to_minusculas                  shift and go to state 76
    arreglo                        shift and go to state 77
    acceso_array                   shift and go to state 78

state 109

    (79) expresion -> expresion POTENCIA . expresion
    (64) expresion -> . llamada_funcion
    (74) expresion -> . expresion MAS expresion
    (75) expresion -> . expresion MENOS expresion
    (76) expresion -> . expresion POR expresion
    (77) expresion -> . expresion DIVIDIDO expresion
    (78) expresion -> . expresion MODULO expresion
    (79) expresion -> . expresion POTENCIA expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . expresion MAYOR expresion
    (82) expresion -> . expresion MENOR expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORIGUAL expresion
    (85) expresion -> . expresion IGUALACION expresion
    (86) expresion -> . expresion DISTINTO expresion
    (87) expresion -> . expresion AND expresion
    (88) expresion -> . expresion OR expresion
    (89) expresion -> . NOT expresion
    (90) expresion -> . dec
    (91) expresion -> . inc
    (92) expresion -> . casteo
    (93) expresion -> . PARIZQ expresion PARDER
    (94) expresion -> . ENTERO
    (95) expresion -> . DECIMAL
    (96) expresion -> . CADENA
    (97) expresion -> . NULL
    (98) expresion -> . booleano
    (99) expresion -> . ID
    (102) expresion -> . aproximacion
    (103) expresion -> . exponencial
    (104) expresion -> . separador
    (105) expresion -> . concatenacion
    (106) expresion -> . to_minusculas
    (109) expresion -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (128) expresion -> . ID PUNTO ID
    (141) expresion -> . arreglo
    (144) expresion -> . acceso_array
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (113) casteo -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (114) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (100) booleano -> . TRUE
    (101) booleano -> . FALSE
    (107) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (110) to_minusculas -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (142) arreglo -> . CORIZQ lista_exp CORDER
    (143) arreglo -> . CORIZQ CORDER
    (145) acceso_array -> . ID lista_acceso_array

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    CADENA          shift and go to state 68
    NULL            shift and go to state 69
    ID              shift and go to state 71
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40
    CAST_STRING     shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    CORIZQ          shift and go to state 82

    expresion                      shift and go to state 160
    llamada_funcion                shift and go to state 59
    dec                            shift and go to state 62
    inc                            shift and go to state 63
    casteo                         shift and go to state 64
    booleano                       shift and go to state 70
    aproximacion                   shift and go to state 72
    exponencial                    shift and go to state 73
    separador                      shift and go to state 74
    concatenacion                  shift and go to state 75
    to_minusculas                  shift and go to state 76
    arreglo                        shift and go to state 77
    acceso_array                   shift and go to state 78

state 110

    (81) expresion -> expresion MAYOR . expresion
    (64) expresion -> . llamada_funcion
    (74) expresion -> . expresion MAS expresion
    (75) expresion -> . expresion MENOS expresion
    (76) expresion -> . expresion POR expresion
    (77) expresion -> . expresion DIVIDIDO expresion
    (78) expresion -> . expresion MODULO expresion
    (79) expresion -> . expresion POTENCIA expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . expresion MAYOR expresion
    (82) expresion -> . expresion MENOR expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORIGUAL expresion
    (85) expresion -> . expresion IGUALACION expresion
    (86) expresion -> . expresion DISTINTO expresion
    (87) expresion -> . expresion AND expresion
    (88) expresion -> . expresion OR expresion
    (89) expresion -> . NOT expresion
    (90) expresion -> . dec
    (91) expresion -> . inc
    (92) expresion -> . casteo
    (93) expresion -> . PARIZQ expresion PARDER
    (94) expresion -> . ENTERO
    (95) expresion -> . DECIMAL
    (96) expresion -> . CADENA
    (97) expresion -> . NULL
    (98) expresion -> . booleano
    (99) expresion -> . ID
    (102) expresion -> . aproximacion
    (103) expresion -> . exponencial
    (104) expresion -> . separador
    (105) expresion -> . concatenacion
    (106) expresion -> . to_minusculas
    (109) expresion -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (128) expresion -> . ID PUNTO ID
    (141) expresion -> . arreglo
    (144) expresion -> . acceso_array
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (113) casteo -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (114) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (100) booleano -> . TRUE
    (101) booleano -> . FALSE
    (107) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (110) to_minusculas -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (142) arreglo -> . CORIZQ lista_exp CORDER
    (143) arreglo -> . CORIZQ CORDER
    (145) acceso_array -> . ID lista_acceso_array

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    CADENA          shift and go to state 68
    NULL            shift and go to state 69
    ID              shift and go to state 71
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40
    CAST_STRING     shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    CORIZQ          shift and go to state 82

    expresion                      shift and go to state 161
    llamada_funcion                shift and go to state 59
    dec                            shift and go to state 62
    inc                            shift and go to state 63
    casteo                         shift and go to state 64
    booleano                       shift and go to state 70
    aproximacion                   shift and go to state 72
    exponencial                    shift and go to state 73
    separador                      shift and go to state 74
    concatenacion                  shift and go to state 75
    to_minusculas                  shift and go to state 76
    arreglo                        shift and go to state 77
    acceso_array                   shift and go to state 78

state 111

    (82) expresion -> expresion MENOR . expresion
    (64) expresion -> . llamada_funcion
    (74) expresion -> . expresion MAS expresion
    (75) expresion -> . expresion MENOS expresion
    (76) expresion -> . expresion POR expresion
    (77) expresion -> . expresion DIVIDIDO expresion
    (78) expresion -> . expresion MODULO expresion
    (79) expresion -> . expresion POTENCIA expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . expresion MAYOR expresion
    (82) expresion -> . expresion MENOR expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORIGUAL expresion
    (85) expresion -> . expresion IGUALACION expresion
    (86) expresion -> . expresion DISTINTO expresion
    (87) expresion -> . expresion AND expresion
    (88) expresion -> . expresion OR expresion
    (89) expresion -> . NOT expresion
    (90) expresion -> . dec
    (91) expresion -> . inc
    (92) expresion -> . casteo
    (93) expresion -> . PARIZQ expresion PARDER
    (94) expresion -> . ENTERO
    (95) expresion -> . DECIMAL
    (96) expresion -> . CADENA
    (97) expresion -> . NULL
    (98) expresion -> . booleano
    (99) expresion -> . ID
    (102) expresion -> . aproximacion
    (103) expresion -> . exponencial
    (104) expresion -> . separador
    (105) expresion -> . concatenacion
    (106) expresion -> . to_minusculas
    (109) expresion -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (128) expresion -> . ID PUNTO ID
    (141) expresion -> . arreglo
    (144) expresion -> . acceso_array
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (113) casteo -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (114) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (100) booleano -> . TRUE
    (101) booleano -> . FALSE
    (107) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (110) to_minusculas -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (142) arreglo -> . CORIZQ lista_exp CORDER
    (143) arreglo -> . CORIZQ CORDER
    (145) acceso_array -> . ID lista_acceso_array

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    CADENA          shift and go to state 68
    NULL            shift and go to state 69
    ID              shift and go to state 71
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40
    CAST_STRING     shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    CORIZQ          shift and go to state 82

    expresion                      shift and go to state 162
    llamada_funcion                shift and go to state 59
    dec                            shift and go to state 62
    inc                            shift and go to state 63
    casteo                         shift and go to state 64
    booleano                       shift and go to state 70
    aproximacion                   shift and go to state 72
    exponencial                    shift and go to state 73
    separador                      shift and go to state 74
    concatenacion                  shift and go to state 75
    to_minusculas                  shift and go to state 76
    arreglo                        shift and go to state 77
    acceso_array                   shift and go to state 78

state 112

    (83) expresion -> expresion MAYORIGUAL . expresion
    (64) expresion -> . llamada_funcion
    (74) expresion -> . expresion MAS expresion
    (75) expresion -> . expresion MENOS expresion
    (76) expresion -> . expresion POR expresion
    (77) expresion -> . expresion DIVIDIDO expresion
    (78) expresion -> . expresion MODULO expresion
    (79) expresion -> . expresion POTENCIA expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . expresion MAYOR expresion
    (82) expresion -> . expresion MENOR expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORIGUAL expresion
    (85) expresion -> . expresion IGUALACION expresion
    (86) expresion -> . expresion DISTINTO expresion
    (87) expresion -> . expresion AND expresion
    (88) expresion -> . expresion OR expresion
    (89) expresion -> . NOT expresion
    (90) expresion -> . dec
    (91) expresion -> . inc
    (92) expresion -> . casteo
    (93) expresion -> . PARIZQ expresion PARDER
    (94) expresion -> . ENTERO
    (95) expresion -> . DECIMAL
    (96) expresion -> . CADENA
    (97) expresion -> . NULL
    (98) expresion -> . booleano
    (99) expresion -> . ID
    (102) expresion -> . aproximacion
    (103) expresion -> . exponencial
    (104) expresion -> . separador
    (105) expresion -> . concatenacion
    (106) expresion -> . to_minusculas
    (109) expresion -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (128) expresion -> . ID PUNTO ID
    (141) expresion -> . arreglo
    (144) expresion -> . acceso_array
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (113) casteo -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (114) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (100) booleano -> . TRUE
    (101) booleano -> . FALSE
    (107) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (110) to_minusculas -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (142) arreglo -> . CORIZQ lista_exp CORDER
    (143) arreglo -> . CORIZQ CORDER
    (145) acceso_array -> . ID lista_acceso_array

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    CADENA          shift and go to state 68
    NULL            shift and go to state 69
    ID              shift and go to state 71
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40
    CAST_STRING     shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    CORIZQ          shift and go to state 82

    expresion                      shift and go to state 163
    llamada_funcion                shift and go to state 59
    dec                            shift and go to state 62
    inc                            shift and go to state 63
    casteo                         shift and go to state 64
    booleano                       shift and go to state 70
    aproximacion                   shift and go to state 72
    exponencial                    shift and go to state 73
    separador                      shift and go to state 74
    concatenacion                  shift and go to state 75
    to_minusculas                  shift and go to state 76
    arreglo                        shift and go to state 77
    acceso_array                   shift and go to state 78

state 113

    (84) expresion -> expresion MENORIGUAL . expresion
    (64) expresion -> . llamada_funcion
    (74) expresion -> . expresion MAS expresion
    (75) expresion -> . expresion MENOS expresion
    (76) expresion -> . expresion POR expresion
    (77) expresion -> . expresion DIVIDIDO expresion
    (78) expresion -> . expresion MODULO expresion
    (79) expresion -> . expresion POTENCIA expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . expresion MAYOR expresion
    (82) expresion -> . expresion MENOR expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORIGUAL expresion
    (85) expresion -> . expresion IGUALACION expresion
    (86) expresion -> . expresion DISTINTO expresion
    (87) expresion -> . expresion AND expresion
    (88) expresion -> . expresion OR expresion
    (89) expresion -> . NOT expresion
    (90) expresion -> . dec
    (91) expresion -> . inc
    (92) expresion -> . casteo
    (93) expresion -> . PARIZQ expresion PARDER
    (94) expresion -> . ENTERO
    (95) expresion -> . DECIMAL
    (96) expresion -> . CADENA
    (97) expresion -> . NULL
    (98) expresion -> . booleano
    (99) expresion -> . ID
    (102) expresion -> . aproximacion
    (103) expresion -> . exponencial
    (104) expresion -> . separador
    (105) expresion -> . concatenacion
    (106) expresion -> . to_minusculas
    (109) expresion -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (128) expresion -> . ID PUNTO ID
    (141) expresion -> . arreglo
    (144) expresion -> . acceso_array
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (113) casteo -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (114) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (100) booleano -> . TRUE
    (101) booleano -> . FALSE
    (107) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (110) to_minusculas -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (142) arreglo -> . CORIZQ lista_exp CORDER
    (143) arreglo -> . CORIZQ CORDER
    (145) acceso_array -> . ID lista_acceso_array

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    CADENA          shift and go to state 68
    NULL            shift and go to state 69
    ID              shift and go to state 71
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40
    CAST_STRING     shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    CORIZQ          shift and go to state 82

    expresion                      shift and go to state 164
    llamada_funcion                shift and go to state 59
    dec                            shift and go to state 62
    inc                            shift and go to state 63
    casteo                         shift and go to state 64
    booleano                       shift and go to state 70
    aproximacion                   shift and go to state 72
    exponencial                    shift and go to state 73
    separador                      shift and go to state 74
    concatenacion                  shift and go to state 75
    to_minusculas                  shift and go to state 76
    arreglo                        shift and go to state 77
    acceso_array                   shift and go to state 78

state 114

    (85) expresion -> expresion IGUALACION . expresion
    (64) expresion -> . llamada_funcion
    (74) expresion -> . expresion MAS expresion
    (75) expresion -> . expresion MENOS expresion
    (76) expresion -> . expresion POR expresion
    (77) expresion -> . expresion DIVIDIDO expresion
    (78) expresion -> . expresion MODULO expresion
    (79) expresion -> . expresion POTENCIA expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . expresion MAYOR expresion
    (82) expresion -> . expresion MENOR expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORIGUAL expresion
    (85) expresion -> . expresion IGUALACION expresion
    (86) expresion -> . expresion DISTINTO expresion
    (87) expresion -> . expresion AND expresion
    (88) expresion -> . expresion OR expresion
    (89) expresion -> . NOT expresion
    (90) expresion -> . dec
    (91) expresion -> . inc
    (92) expresion -> . casteo
    (93) expresion -> . PARIZQ expresion PARDER
    (94) expresion -> . ENTERO
    (95) expresion -> . DECIMAL
    (96) expresion -> . CADENA
    (97) expresion -> . NULL
    (98) expresion -> . booleano
    (99) expresion -> . ID
    (102) expresion -> . aproximacion
    (103) expresion -> . exponencial
    (104) expresion -> . separador
    (105) expresion -> . concatenacion
    (106) expresion -> . to_minusculas
    (109) expresion -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (128) expresion -> . ID PUNTO ID
    (141) expresion -> . arreglo
    (144) expresion -> . acceso_array
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (113) casteo -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (114) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (100) booleano -> . TRUE
    (101) booleano -> . FALSE
    (107) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (110) to_minusculas -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (142) arreglo -> . CORIZQ lista_exp CORDER
    (143) arreglo -> . CORIZQ CORDER
    (145) acceso_array -> . ID lista_acceso_array

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    CADENA          shift and go to state 68
    NULL            shift and go to state 69
    ID              shift and go to state 71
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40
    CAST_STRING     shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    CORIZQ          shift and go to state 82

    expresion                      shift and go to state 165
    llamada_funcion                shift and go to state 59
    dec                            shift and go to state 62
    inc                            shift and go to state 63
    casteo                         shift and go to state 64
    booleano                       shift and go to state 70
    aproximacion                   shift and go to state 72
    exponencial                    shift and go to state 73
    separador                      shift and go to state 74
    concatenacion                  shift and go to state 75
    to_minusculas                  shift and go to state 76
    arreglo                        shift and go to state 77
    acceso_array                   shift and go to state 78

state 115

    (86) expresion -> expresion DISTINTO . expresion
    (64) expresion -> . llamada_funcion
    (74) expresion -> . expresion MAS expresion
    (75) expresion -> . expresion MENOS expresion
    (76) expresion -> . expresion POR expresion
    (77) expresion -> . expresion DIVIDIDO expresion
    (78) expresion -> . expresion MODULO expresion
    (79) expresion -> . expresion POTENCIA expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . expresion MAYOR expresion
    (82) expresion -> . expresion MENOR expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORIGUAL expresion
    (85) expresion -> . expresion IGUALACION expresion
    (86) expresion -> . expresion DISTINTO expresion
    (87) expresion -> . expresion AND expresion
    (88) expresion -> . expresion OR expresion
    (89) expresion -> . NOT expresion
    (90) expresion -> . dec
    (91) expresion -> . inc
    (92) expresion -> . casteo
    (93) expresion -> . PARIZQ expresion PARDER
    (94) expresion -> . ENTERO
    (95) expresion -> . DECIMAL
    (96) expresion -> . CADENA
    (97) expresion -> . NULL
    (98) expresion -> . booleano
    (99) expresion -> . ID
    (102) expresion -> . aproximacion
    (103) expresion -> . exponencial
    (104) expresion -> . separador
    (105) expresion -> . concatenacion
    (106) expresion -> . to_minusculas
    (109) expresion -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (128) expresion -> . ID PUNTO ID
    (141) expresion -> . arreglo
    (144) expresion -> . acceso_array
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (113) casteo -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (114) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (100) booleano -> . TRUE
    (101) booleano -> . FALSE
    (107) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (110) to_minusculas -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (142) arreglo -> . CORIZQ lista_exp CORDER
    (143) arreglo -> . CORIZQ CORDER
    (145) acceso_array -> . ID lista_acceso_array

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    CADENA          shift and go to state 68
    NULL            shift and go to state 69
    ID              shift and go to state 71
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40
    CAST_STRING     shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    CORIZQ          shift and go to state 82

    expresion                      shift and go to state 166
    llamada_funcion                shift and go to state 59
    dec                            shift and go to state 62
    inc                            shift and go to state 63
    casteo                         shift and go to state 64
    booleano                       shift and go to state 70
    aproximacion                   shift and go to state 72
    exponencial                    shift and go to state 73
    separador                      shift and go to state 74
    concatenacion                  shift and go to state 75
    to_minusculas                  shift and go to state 76
    arreglo                        shift and go to state 77
    acceso_array                   shift and go to state 78

state 116

    (87) expresion -> expresion AND . expresion
    (64) expresion -> . llamada_funcion
    (74) expresion -> . expresion MAS expresion
    (75) expresion -> . expresion MENOS expresion
    (76) expresion -> . expresion POR expresion
    (77) expresion -> . expresion DIVIDIDO expresion
    (78) expresion -> . expresion MODULO expresion
    (79) expresion -> . expresion POTENCIA expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . expresion MAYOR expresion
    (82) expresion -> . expresion MENOR expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORIGUAL expresion
    (85) expresion -> . expresion IGUALACION expresion
    (86) expresion -> . expresion DISTINTO expresion
    (87) expresion -> . expresion AND expresion
    (88) expresion -> . expresion OR expresion
    (89) expresion -> . NOT expresion
    (90) expresion -> . dec
    (91) expresion -> . inc
    (92) expresion -> . casteo
    (93) expresion -> . PARIZQ expresion PARDER
    (94) expresion -> . ENTERO
    (95) expresion -> . DECIMAL
    (96) expresion -> . CADENA
    (97) expresion -> . NULL
    (98) expresion -> . booleano
    (99) expresion -> . ID
    (102) expresion -> . aproximacion
    (103) expresion -> . exponencial
    (104) expresion -> . separador
    (105) expresion -> . concatenacion
    (106) expresion -> . to_minusculas
    (109) expresion -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (128) expresion -> . ID PUNTO ID
    (141) expresion -> . arreglo
    (144) expresion -> . acceso_array
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (113) casteo -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (114) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (100) booleano -> . TRUE
    (101) booleano -> . FALSE
    (107) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (110) to_minusculas -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (142) arreglo -> . CORIZQ lista_exp CORDER
    (143) arreglo -> . CORIZQ CORDER
    (145) acceso_array -> . ID lista_acceso_array

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    CADENA          shift and go to state 68
    NULL            shift and go to state 69
    ID              shift and go to state 71
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40
    CAST_STRING     shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    CORIZQ          shift and go to state 82

    expresion                      shift and go to state 167
    llamada_funcion                shift and go to state 59
    dec                            shift and go to state 62
    inc                            shift and go to state 63
    casteo                         shift and go to state 64
    booleano                       shift and go to state 70
    aproximacion                   shift and go to state 72
    exponencial                    shift and go to state 73
    separador                      shift and go to state 74
    concatenacion                  shift and go to state 75
    to_minusculas                  shift and go to state 76
    arreglo                        shift and go to state 77
    acceso_array                   shift and go to state 78

state 117

    (88) expresion -> expresion OR . expresion
    (64) expresion -> . llamada_funcion
    (74) expresion -> . expresion MAS expresion
    (75) expresion -> . expresion MENOS expresion
    (76) expresion -> . expresion POR expresion
    (77) expresion -> . expresion DIVIDIDO expresion
    (78) expresion -> . expresion MODULO expresion
    (79) expresion -> . expresion POTENCIA expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . expresion MAYOR expresion
    (82) expresion -> . expresion MENOR expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORIGUAL expresion
    (85) expresion -> . expresion IGUALACION expresion
    (86) expresion -> . expresion DISTINTO expresion
    (87) expresion -> . expresion AND expresion
    (88) expresion -> . expresion OR expresion
    (89) expresion -> . NOT expresion
    (90) expresion -> . dec
    (91) expresion -> . inc
    (92) expresion -> . casteo
    (93) expresion -> . PARIZQ expresion PARDER
    (94) expresion -> . ENTERO
    (95) expresion -> . DECIMAL
    (96) expresion -> . CADENA
    (97) expresion -> . NULL
    (98) expresion -> . booleano
    (99) expresion -> . ID
    (102) expresion -> . aproximacion
    (103) expresion -> . exponencial
    (104) expresion -> . separador
    (105) expresion -> . concatenacion
    (106) expresion -> . to_minusculas
    (109) expresion -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (128) expresion -> . ID PUNTO ID
    (141) expresion -> . arreglo
    (144) expresion -> . acceso_array
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (113) casteo -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (114) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (100) booleano -> . TRUE
    (101) booleano -> . FALSE
    (107) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (110) to_minusculas -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (142) arreglo -> . CORIZQ lista_exp CORDER
    (143) arreglo -> . CORIZQ CORDER
    (145) acceso_array -> . ID lista_acceso_array

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    CADENA          shift and go to state 68
    NULL            shift and go to state 69
    ID              shift and go to state 71
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40
    CAST_STRING     shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    CORIZQ          shift and go to state 82

    expresion                      shift and go to state 168
    llamada_funcion                shift and go to state 59
    dec                            shift and go to state 62
    inc                            shift and go to state 63
    casteo                         shift and go to state 64
    booleano                       shift and go to state 70
    aproximacion                   shift and go to state 72
    exponencial                    shift and go to state 73
    separador                      shift and go to state 74
    concatenacion                  shift and go to state 75
    to_minusculas                  shift and go to state 76
    arreglo                        shift and go to state 77
    acceso_array                   shift and go to state 78

state 118

    (113) casteo -> expresion PUNTO . TOSTRING PARIZQ PARDER
    (107) aproximacion -> expresion PUNTO . TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> expresion PUNTO . TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> expresion PUNTO . SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> expresion PUNTO . CONCAT PARIZQ expresion PARDER

    TOSTRING        shift and go to state 169
    TOFIXED         shift and go to state 170
    TOEXPONENTIAL   shift and go to state 171
    SPLIT           shift and go to state 172
    CONCAT          shift and go to state 173


state 119

    (80) expresion -> MENOS expresion .
    (74) expresion -> expresion . MAS expresion
    (75) expresion -> expresion . MENOS expresion
    (76) expresion -> expresion . POR expresion
    (77) expresion -> expresion . DIVIDIDO expresion
    (78) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MAYOR expresion
    (82) expresion -> expresion . MENOR expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORIGUAL expresion
    (85) expresion -> expresion . IGUALACION expresion
    (86) expresion -> expresion . DISTINTO expresion
    (87) expresion -> expresion . AND expresion
    (88) expresion -> expresion . OR expresion
    (113) casteo -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (107) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAS             reduce using rule 80 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 80 (expresion -> MENOS expresion .)
    POR             reduce using rule 80 (expresion -> MENOS expresion .)
    DIVIDIDO        reduce using rule 80 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 80 (expresion -> MENOS expresion .)
    POTENCIA        reduce using rule 80 (expresion -> MENOS expresion .)
    MAYOR           reduce using rule 80 (expresion -> MENOS expresion .)
    MENOR           reduce using rule 80 (expresion -> MENOS expresion .)
    MAYORIGUAL      reduce using rule 80 (expresion -> MENOS expresion .)
    MENORIGUAL      reduce using rule 80 (expresion -> MENOS expresion .)
    IGUALACION      reduce using rule 80 (expresion -> MENOS expresion .)
    DISTINTO        reduce using rule 80 (expresion -> MENOS expresion .)
    AND             reduce using rule 80 (expresion -> MENOS expresion .)
    OR              reduce using rule 80 (expresion -> MENOS expresion .)
    PUNTO           reduce using rule 80 (expresion -> MENOS expresion .)
    PTOYCOMA        reduce using rule 80 (expresion -> MENOS expresion .)
    error           reduce using rule 80 (expresion -> MENOS expresion .)
    FUNCTION        reduce using rule 80 (expresion -> MENOS expresion .)
    COMENTARIO      reduce using rule 80 (expresion -> MENOS expresion .)
    COMENTARIO_MULTILINEA reduce using rule 80 (expresion -> MENOS expresion .)
    LET             reduce using rule 80 (expresion -> MENOS expresion .)
    ID              reduce using rule 80 (expresion -> MENOS expresion .)
    CONSOLE         reduce using rule 80 (expresion -> MENOS expresion .)
    IF              reduce using rule 80 (expresion -> MENOS expresion .)
    WHILE           reduce using rule 80 (expresion -> MENOS expresion .)
    FOR             reduce using rule 80 (expresion -> MENOS expresion .)
    RETURN          reduce using rule 80 (expresion -> MENOS expresion .)
    BREAK           reduce using rule 80 (expresion -> MENOS expresion .)
    CONTINUE        reduce using rule 80 (expresion -> MENOS expresion .)
    INTERFACE       reduce using rule 80 (expresion -> MENOS expresion .)
    DECREMENTO      reduce using rule 80 (expresion -> MENOS expresion .)
    INCREMENTO      reduce using rule 80 (expresion -> MENOS expresion .)
    $end            reduce using rule 80 (expresion -> MENOS expresion .)
    LLADER          reduce using rule 80 (expresion -> MENOS expresion .)
    PARDER          reduce using rule 80 (expresion -> MENOS expresion .)
    COMA            reduce using rule 80 (expresion -> MENOS expresion .)
    CORDER          reduce using rule 80 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 104 ]
  ! MENOS           [ shift and go to state 105 ]
  ! POR             [ shift and go to state 106 ]
  ! DIVIDIDO        [ shift and go to state 107 ]
  ! MODULO          [ shift and go to state 108 ]
  ! POTENCIA        [ shift and go to state 109 ]
  ! MAYOR           [ shift and go to state 110 ]
  ! MENOR           [ shift and go to state 111 ]
  ! MAYORIGUAL      [ shift and go to state 112 ]
  ! MENORIGUAL      [ shift and go to state 113 ]
  ! IGUALACION      [ shift and go to state 114 ]
  ! DISTINTO        [ shift and go to state 115 ]
  ! AND             [ shift and go to state 116 ]
  ! OR              [ shift and go to state 117 ]
  ! PUNTO           [ shift and go to state 118 ]


state 120

    (89) expresion -> NOT expresion .
    (74) expresion -> expresion . MAS expresion
    (75) expresion -> expresion . MENOS expresion
    (76) expresion -> expresion . POR expresion
    (77) expresion -> expresion . DIVIDIDO expresion
    (78) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MAYOR expresion
    (82) expresion -> expresion . MENOR expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORIGUAL expresion
    (85) expresion -> expresion . IGUALACION expresion
    (86) expresion -> expresion . DISTINTO expresion
    (87) expresion -> expresion . AND expresion
    (88) expresion -> expresion . OR expresion
    (113) casteo -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (107) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    AND             reduce using rule 89 (expresion -> NOT expresion .)
    OR              reduce using rule 89 (expresion -> NOT expresion .)
    PUNTO           reduce using rule 89 (expresion -> NOT expresion .)
    PTOYCOMA        reduce using rule 89 (expresion -> NOT expresion .)
    error           reduce using rule 89 (expresion -> NOT expresion .)
    FUNCTION        reduce using rule 89 (expresion -> NOT expresion .)
    COMENTARIO      reduce using rule 89 (expresion -> NOT expresion .)
    COMENTARIO_MULTILINEA reduce using rule 89 (expresion -> NOT expresion .)
    LET             reduce using rule 89 (expresion -> NOT expresion .)
    ID              reduce using rule 89 (expresion -> NOT expresion .)
    CONSOLE         reduce using rule 89 (expresion -> NOT expresion .)
    IF              reduce using rule 89 (expresion -> NOT expresion .)
    WHILE           reduce using rule 89 (expresion -> NOT expresion .)
    FOR             reduce using rule 89 (expresion -> NOT expresion .)
    RETURN          reduce using rule 89 (expresion -> NOT expresion .)
    BREAK           reduce using rule 89 (expresion -> NOT expresion .)
    CONTINUE        reduce using rule 89 (expresion -> NOT expresion .)
    INTERFACE       reduce using rule 89 (expresion -> NOT expresion .)
    DECREMENTO      reduce using rule 89 (expresion -> NOT expresion .)
    INCREMENTO      reduce using rule 89 (expresion -> NOT expresion .)
    $end            reduce using rule 89 (expresion -> NOT expresion .)
    LLADER          reduce using rule 89 (expresion -> NOT expresion .)
    PARDER          reduce using rule 89 (expresion -> NOT expresion .)
    COMA            reduce using rule 89 (expresion -> NOT expresion .)
    CORDER          reduce using rule 89 (expresion -> NOT expresion .)
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIVIDIDO        shift and go to state 107
    MODULO          shift and go to state 108
    POTENCIA        shift and go to state 109
    MAYOR           shift and go to state 110
    MENOR           shift and go to state 111
    MAYORIGUAL      shift and go to state 112
    MENORIGUAL      shift and go to state 113
    IGUALACION      shift and go to state 114
    DISTINTO        shift and go to state 115

  ! MAS             [ reduce using rule 89 (expresion -> NOT expresion .) ]
  ! MENOS           [ reduce using rule 89 (expresion -> NOT expresion .) ]
  ! POR             [ reduce using rule 89 (expresion -> NOT expresion .) ]
  ! DIVIDIDO        [ reduce using rule 89 (expresion -> NOT expresion .) ]
  ! MODULO          [ reduce using rule 89 (expresion -> NOT expresion .) ]
  ! POTENCIA        [ reduce using rule 89 (expresion -> NOT expresion .) ]
  ! MAYOR           [ reduce using rule 89 (expresion -> NOT expresion .) ]
  ! MENOR           [ reduce using rule 89 (expresion -> NOT expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 89 (expresion -> NOT expresion .) ]
  ! MENORIGUAL      [ reduce using rule 89 (expresion -> NOT expresion .) ]
  ! IGUALACION      [ reduce using rule 89 (expresion -> NOT expresion .) ]
  ! DISTINTO        [ reduce using rule 89 (expresion -> NOT expresion .) ]
  ! AND             [ shift and go to state 116 ]
  ! OR              [ shift and go to state 117 ]
  ! PUNTO           [ shift and go to state 118 ]


state 121

    (93) expresion -> PARIZQ expresion . PARDER
    (74) expresion -> expresion . MAS expresion
    (75) expresion -> expresion . MENOS expresion
    (76) expresion -> expresion . POR expresion
    (77) expresion -> expresion . DIVIDIDO expresion
    (78) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MAYOR expresion
    (82) expresion -> expresion . MENOR expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORIGUAL expresion
    (85) expresion -> expresion . IGUALACION expresion
    (86) expresion -> expresion . DISTINTO expresion
    (87) expresion -> expresion . AND expresion
    (88) expresion -> expresion . OR expresion
    (113) casteo -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (107) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 174
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIVIDIDO        shift and go to state 107
    MODULO          shift and go to state 108
    POTENCIA        shift and go to state 109
    MAYOR           shift and go to state 110
    MENOR           shift and go to state 111
    MAYORIGUAL      shift and go to state 112
    MENORIGUAL      shift and go to state 113
    IGUALACION      shift and go to state 114
    DISTINTO        shift and go to state 115
    AND             shift and go to state 116
    OR              shift and go to state 117
    PUNTO           shift and go to state 118


state 122

    (109) expresion -> ID PUNTO . TOUPPERCASE PARIZQ PARDER
    (128) expresion -> ID PUNTO . ID
    (110) to_minusculas -> ID PUNTO . TOLOWERCASE PARIZQ PARDER

    TOUPPERCASE     shift and go to state 176
    ID              shift and go to state 175
    TOLOWERCASE     shift and go to state 177


state 123

    (145) acceso_array -> ID lista_acceso_array .
    (146) lista_acceso_array -> lista_acceso_array . acceso_array_exp
    (148) acceso_array_exp -> . CORIZQ expresion CORDER

    MAS             reduce using rule 145 (acceso_array -> ID lista_acceso_array .)
    MENOS           reduce using rule 145 (acceso_array -> ID lista_acceso_array .)
    POR             reduce using rule 145 (acceso_array -> ID lista_acceso_array .)
    DIVIDIDO        reduce using rule 145 (acceso_array -> ID lista_acceso_array .)
    MODULO          reduce using rule 145 (acceso_array -> ID lista_acceso_array .)
    POTENCIA        reduce using rule 145 (acceso_array -> ID lista_acceso_array .)
    MAYOR           reduce using rule 145 (acceso_array -> ID lista_acceso_array .)
    MENOR           reduce using rule 145 (acceso_array -> ID lista_acceso_array .)
    MAYORIGUAL      reduce using rule 145 (acceso_array -> ID lista_acceso_array .)
    MENORIGUAL      reduce using rule 145 (acceso_array -> ID lista_acceso_array .)
    IGUALACION      reduce using rule 145 (acceso_array -> ID lista_acceso_array .)
    DISTINTO        reduce using rule 145 (acceso_array -> ID lista_acceso_array .)
    AND             reduce using rule 145 (acceso_array -> ID lista_acceso_array .)
    OR              reduce using rule 145 (acceso_array -> ID lista_acceso_array .)
    PUNTO           reduce using rule 145 (acceso_array -> ID lista_acceso_array .)
    PTOYCOMA        reduce using rule 145 (acceso_array -> ID lista_acceso_array .)
    error           reduce using rule 145 (acceso_array -> ID lista_acceso_array .)
    FUNCTION        reduce using rule 145 (acceso_array -> ID lista_acceso_array .)
    COMENTARIO      reduce using rule 145 (acceso_array -> ID lista_acceso_array .)
    COMENTARIO_MULTILINEA reduce using rule 145 (acceso_array -> ID lista_acceso_array .)
    LET             reduce using rule 145 (acceso_array -> ID lista_acceso_array .)
    ID              reduce using rule 145 (acceso_array -> ID lista_acceso_array .)
    CONSOLE         reduce using rule 145 (acceso_array -> ID lista_acceso_array .)
    IF              reduce using rule 145 (acceso_array -> ID lista_acceso_array .)
    WHILE           reduce using rule 145 (acceso_array -> ID lista_acceso_array .)
    FOR             reduce using rule 145 (acceso_array -> ID lista_acceso_array .)
    RETURN          reduce using rule 145 (acceso_array -> ID lista_acceso_array .)
    BREAK           reduce using rule 145 (acceso_array -> ID lista_acceso_array .)
    CONTINUE        reduce using rule 145 (acceso_array -> ID lista_acceso_array .)
    INTERFACE       reduce using rule 145 (acceso_array -> ID lista_acceso_array .)
    DECREMENTO      reduce using rule 145 (acceso_array -> ID lista_acceso_array .)
    INCREMENTO      reduce using rule 145 (acceso_array -> ID lista_acceso_array .)
    $end            reduce using rule 145 (acceso_array -> ID lista_acceso_array .)
    LLADER          reduce using rule 145 (acceso_array -> ID lista_acceso_array .)
    PARDER          reduce using rule 145 (acceso_array -> ID lista_acceso_array .)
    COMA            reduce using rule 145 (acceso_array -> ID lista_acceso_array .)
    CORDER          reduce using rule 145 (acceso_array -> ID lista_acceso_array .)
    CORIZQ          shift and go to state 52

    acceso_array_exp               shift and go to state 92

state 124

    (114) casteo -> CAST_STRING PARIZQ . expresion PARDER
    (64) expresion -> . llamada_funcion
    (74) expresion -> . expresion MAS expresion
    (75) expresion -> . expresion MENOS expresion
    (76) expresion -> . expresion POR expresion
    (77) expresion -> . expresion DIVIDIDO expresion
    (78) expresion -> . expresion MODULO expresion
    (79) expresion -> . expresion POTENCIA expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . expresion MAYOR expresion
    (82) expresion -> . expresion MENOR expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORIGUAL expresion
    (85) expresion -> . expresion IGUALACION expresion
    (86) expresion -> . expresion DISTINTO expresion
    (87) expresion -> . expresion AND expresion
    (88) expresion -> . expresion OR expresion
    (89) expresion -> . NOT expresion
    (90) expresion -> . dec
    (91) expresion -> . inc
    (92) expresion -> . casteo
    (93) expresion -> . PARIZQ expresion PARDER
    (94) expresion -> . ENTERO
    (95) expresion -> . DECIMAL
    (96) expresion -> . CADENA
    (97) expresion -> . NULL
    (98) expresion -> . booleano
    (99) expresion -> . ID
    (102) expresion -> . aproximacion
    (103) expresion -> . exponencial
    (104) expresion -> . separador
    (105) expresion -> . concatenacion
    (106) expresion -> . to_minusculas
    (109) expresion -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (128) expresion -> . ID PUNTO ID
    (141) expresion -> . arreglo
    (144) expresion -> . acceso_array
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (113) casteo -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (114) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (100) booleano -> . TRUE
    (101) booleano -> . FALSE
    (107) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (110) to_minusculas -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (142) arreglo -> . CORIZQ lista_exp CORDER
    (143) arreglo -> . CORIZQ CORDER
    (145) acceso_array -> . ID lista_acceso_array

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    CADENA          shift and go to state 68
    NULL            shift and go to state 69
    ID              shift and go to state 71
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40
    CAST_STRING     shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    CORIZQ          shift and go to state 82

    expresion                      shift and go to state 178
    llamada_funcion                shift and go to state 59
    dec                            shift and go to state 62
    inc                            shift and go to state 63
    casteo                         shift and go to state 64
    booleano                       shift and go to state 70
    aproximacion                   shift and go to state 72
    exponencial                    shift and go to state 73
    separador                      shift and go to state 74
    concatenacion                  shift and go to state 75
    to_minusculas                  shift and go to state 76
    arreglo                        shift and go to state 77
    acceso_array                   shift and go to state 78

state 125

    (142) arreglo -> CORIZQ lista_exp . CORDER
    (139) lista_exp -> lista_exp . COMA expresion

    CORDER          shift and go to state 179
    COMA            shift and go to state 180


state 126

    (143) arreglo -> CORIZQ CORDER .

    MAS             reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    MENOS           reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    POR             reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    DIVIDIDO        reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    MODULO          reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    POTENCIA        reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    MAYOR           reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    MENOR           reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    MAYORIGUAL      reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    MENORIGUAL      reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    IGUALACION      reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    DISTINTO        reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    AND             reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    OR              reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    PUNTO           reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    PTOYCOMA        reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    error           reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    FUNCTION        reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    COMENTARIO      reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    COMENTARIO_MULTILINEA reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    LET             reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    ID              reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    CONSOLE         reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    IF              reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    WHILE           reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    FOR             reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    RETURN          reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    BREAK           reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    CONTINUE        reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    INTERFACE       reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    DECREMENTO      reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    INCREMENTO      reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    $end            reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    LLADER          reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    PARDER          reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    COMA            reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    CORDER          reduce using rule 143 (arreglo -> CORIZQ CORDER .)


state 127

    (140) lista_exp -> expresion .
    (74) expresion -> expresion . MAS expresion
    (75) expresion -> expresion . MENOS expresion
    (76) expresion -> expresion . POR expresion
    (77) expresion -> expresion . DIVIDIDO expresion
    (78) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MAYOR expresion
    (82) expresion -> expresion . MENOR expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORIGUAL expresion
    (85) expresion -> expresion . IGUALACION expresion
    (86) expresion -> expresion . DISTINTO expresion
    (87) expresion -> expresion . AND expresion
    (88) expresion -> expresion . OR expresion
    (113) casteo -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (107) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    CORDER          reduce using rule 140 (lista_exp -> expresion .)
    COMA            reduce using rule 140 (lista_exp -> expresion .)
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIVIDIDO        shift and go to state 107
    MODULO          shift and go to state 108
    POTENCIA        shift and go to state 109
    MAYOR           shift and go to state 110
    MENOR           shift and go to state 111
    MAYORIGUAL      shift and go to state 112
    MENORIGUAL      shift and go to state 113
    IGUALACION      shift and go to state 114
    DISTINTO        shift and go to state 115
    AND             shift and go to state 116
    OR              shift and go to state 117
    PUNTO           shift and go to state 118


state 128

    (119) instanciar -> INTERFACE ID bloquestruct .

    PTOYCOMA        reduce using rule 119 (instanciar -> INTERFACE ID bloquestruct .)
    error           reduce using rule 119 (instanciar -> INTERFACE ID bloquestruct .)
    FUNCTION        reduce using rule 119 (instanciar -> INTERFACE ID bloquestruct .)
    COMENTARIO      reduce using rule 119 (instanciar -> INTERFACE ID bloquestruct .)
    COMENTARIO_MULTILINEA reduce using rule 119 (instanciar -> INTERFACE ID bloquestruct .)
    LET             reduce using rule 119 (instanciar -> INTERFACE ID bloquestruct .)
    ID              reduce using rule 119 (instanciar -> INTERFACE ID bloquestruct .)
    CONSOLE         reduce using rule 119 (instanciar -> INTERFACE ID bloquestruct .)
    IF              reduce using rule 119 (instanciar -> INTERFACE ID bloquestruct .)
    WHILE           reduce using rule 119 (instanciar -> INTERFACE ID bloquestruct .)
    FOR             reduce using rule 119 (instanciar -> INTERFACE ID bloquestruct .)
    RETURN          reduce using rule 119 (instanciar -> INTERFACE ID bloquestruct .)
    BREAK           reduce using rule 119 (instanciar -> INTERFACE ID bloquestruct .)
    CONTINUE        reduce using rule 119 (instanciar -> INTERFACE ID bloquestruct .)
    INTERFACE       reduce using rule 119 (instanciar -> INTERFACE ID bloquestruct .)
    DECREMENTO      reduce using rule 119 (instanciar -> INTERFACE ID bloquestruct .)
    INCREMENTO      reduce using rule 119 (instanciar -> INTERFACE ID bloquestruct .)
    $end            reduce using rule 119 (instanciar -> INTERFACE ID bloquestruct .)
    LLADER          reduce using rule 119 (instanciar -> INTERFACE ID bloquestruct .)


state 129

    (120) bloquestruct -> LLAIZQ . lista_params_struct LLADER
    (121) lista_params_struct -> . lista_params_struct param_struct
    (122) lista_params_struct -> . param_struct
    (123) param_struct -> . ID DOSPUNTOS tipo PTOYCOMA

    ID              shift and go to state 183

    lista_params_struct            shift and go to state 181
    param_struct                   shift and go to state 182

state 130

    (62) parametro -> ID . DOSPUNTOS tipo
    (63) parametro -> ID . DOSPUNTOS tipo CORIZQ CORDER

    DOSPUNTOS       shift and go to state 184


state 131

    (55) funcion -> FUNCTION ID PARIZQ lista_parametros . PARDER bloque
    (56) funcion -> FUNCTION ID PARIZQ lista_parametros . PARDER DOSPUNTOS tipo bloque
    (59) funcion -> FUNCTION ID PARIZQ lista_parametros . PARDER DOSPUNTOS tipo CORIZQ CORDER bloque
    (60) lista_parametros -> lista_parametros . COMA parametro

    PARDER          shift and go to state 185
    COMA            shift and go to state 186


state 132

    (57) funcion -> FUNCTION ID PARIZQ PARDER . bloque
    (58) funcion -> FUNCTION ID PARIZQ PARDER . DOSPUNTOS tipo bloque
    (10) bloque -> . LLAIZQ instruccion4 LLADER
    (11) bloque -> . LLAIZQ LLADER

    DOSPUNTOS       shift and go to state 188
    LLAIZQ          shift and go to state 189

    bloque                         shift and go to state 187

state 133

    (61) lista_parametros -> parametro .

    PARDER          reduce using rule 61 (lista_parametros -> parametro .)
    COMA            reduce using rule 61 (lista_parametros -> parametro .)


state 134

    (65) llamada_funcion -> ID PARIZQ lista_argumentos PARDER .

    PTOYCOMA        reduce using rule 65 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    error           reduce using rule 65 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    FUNCTION        reduce using rule 65 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    COMENTARIO      reduce using rule 65 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    COMENTARIO_MULTILINEA reduce using rule 65 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    LET             reduce using rule 65 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    ID              reduce using rule 65 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    CONSOLE         reduce using rule 65 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    IF              reduce using rule 65 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    WHILE           reduce using rule 65 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    FOR             reduce using rule 65 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    RETURN          reduce using rule 65 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    BREAK           reduce using rule 65 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    CONTINUE        reduce using rule 65 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    INTERFACE       reduce using rule 65 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    DECREMENTO      reduce using rule 65 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    INCREMENTO      reduce using rule 65 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    $end            reduce using rule 65 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    MAS             reduce using rule 65 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    MENOS           reduce using rule 65 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    POR             reduce using rule 65 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    DIVIDIDO        reduce using rule 65 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    MODULO          reduce using rule 65 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    POTENCIA        reduce using rule 65 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    MAYOR           reduce using rule 65 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    MENOR           reduce using rule 65 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    MAYORIGUAL      reduce using rule 65 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    MENORIGUAL      reduce using rule 65 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    IGUALACION      reduce using rule 65 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    DISTINTO        reduce using rule 65 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    AND             reduce using rule 65 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    OR              reduce using rule 65 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    PUNTO           reduce using rule 65 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    LLADER          reduce using rule 65 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    PARDER          reduce using rule 65 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    COMA            reduce using rule 65 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    CORDER          reduce using rule 65 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)


state 135

    (67) lista_argumentos -> lista_argumentos COMA . expresion
    (64) expresion -> . llamada_funcion
    (74) expresion -> . expresion MAS expresion
    (75) expresion -> . expresion MENOS expresion
    (76) expresion -> . expresion POR expresion
    (77) expresion -> . expresion DIVIDIDO expresion
    (78) expresion -> . expresion MODULO expresion
    (79) expresion -> . expresion POTENCIA expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . expresion MAYOR expresion
    (82) expresion -> . expresion MENOR expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORIGUAL expresion
    (85) expresion -> . expresion IGUALACION expresion
    (86) expresion -> . expresion DISTINTO expresion
    (87) expresion -> . expresion AND expresion
    (88) expresion -> . expresion OR expresion
    (89) expresion -> . NOT expresion
    (90) expresion -> . dec
    (91) expresion -> . inc
    (92) expresion -> . casteo
    (93) expresion -> . PARIZQ expresion PARDER
    (94) expresion -> . ENTERO
    (95) expresion -> . DECIMAL
    (96) expresion -> . CADENA
    (97) expresion -> . NULL
    (98) expresion -> . booleano
    (99) expresion -> . ID
    (102) expresion -> . aproximacion
    (103) expresion -> . exponencial
    (104) expresion -> . separador
    (105) expresion -> . concatenacion
    (106) expresion -> . to_minusculas
    (109) expresion -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (128) expresion -> . ID PUNTO ID
    (141) expresion -> . arreglo
    (144) expresion -> . acceso_array
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (113) casteo -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (114) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (100) booleano -> . TRUE
    (101) booleano -> . FALSE
    (107) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (110) to_minusculas -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (142) arreglo -> . CORIZQ lista_exp CORDER
    (143) arreglo -> . CORIZQ CORDER
    (145) acceso_array -> . ID lista_acceso_array

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    CADENA          shift and go to state 68
    NULL            shift and go to state 69
    ID              shift and go to state 71
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40
    CAST_STRING     shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    CORIZQ          shift and go to state 82

    expresion                      shift and go to state 190
    llamada_funcion                shift and go to state 59
    dec                            shift and go to state 62
    inc                            shift and go to state 63
    casteo                         shift and go to state 64
    booleano                       shift and go to state 70
    aproximacion                   shift and go to state 72
    exponencial                    shift and go to state 73
    separador                      shift and go to state 74
    concatenacion                  shift and go to state 75
    to_minusculas                  shift and go to state 76
    arreglo                        shift and go to state 77
    acceso_array                   shift and go to state 78

state 136

    (149) asignacion_array -> ID lista_acceso_array IGUAL expresion .
    (74) expresion -> expresion . MAS expresion
    (75) expresion -> expresion . MENOS expresion
    (76) expresion -> expresion . POR expresion
    (77) expresion -> expresion . DIVIDIDO expresion
    (78) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MAYOR expresion
    (82) expresion -> expresion . MENOR expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORIGUAL expresion
    (85) expresion -> expresion . IGUALACION expresion
    (86) expresion -> expresion . DISTINTO expresion
    (87) expresion -> expresion . AND expresion
    (88) expresion -> expresion . OR expresion
    (113) casteo -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (107) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PTOYCOMA        reduce using rule 149 (asignacion_array -> ID lista_acceso_array IGUAL expresion .)
    error           reduce using rule 149 (asignacion_array -> ID lista_acceso_array IGUAL expresion .)
    FUNCTION        reduce using rule 149 (asignacion_array -> ID lista_acceso_array IGUAL expresion .)
    COMENTARIO      reduce using rule 149 (asignacion_array -> ID lista_acceso_array IGUAL expresion .)
    COMENTARIO_MULTILINEA reduce using rule 149 (asignacion_array -> ID lista_acceso_array IGUAL expresion .)
    LET             reduce using rule 149 (asignacion_array -> ID lista_acceso_array IGUAL expresion .)
    ID              reduce using rule 149 (asignacion_array -> ID lista_acceso_array IGUAL expresion .)
    CONSOLE         reduce using rule 149 (asignacion_array -> ID lista_acceso_array IGUAL expresion .)
    IF              reduce using rule 149 (asignacion_array -> ID lista_acceso_array IGUAL expresion .)
    WHILE           reduce using rule 149 (asignacion_array -> ID lista_acceso_array IGUAL expresion .)
    FOR             reduce using rule 149 (asignacion_array -> ID lista_acceso_array IGUAL expresion .)
    RETURN          reduce using rule 149 (asignacion_array -> ID lista_acceso_array IGUAL expresion .)
    BREAK           reduce using rule 149 (asignacion_array -> ID lista_acceso_array IGUAL expresion .)
    CONTINUE        reduce using rule 149 (asignacion_array -> ID lista_acceso_array IGUAL expresion .)
    INTERFACE       reduce using rule 149 (asignacion_array -> ID lista_acceso_array IGUAL expresion .)
    DECREMENTO      reduce using rule 149 (asignacion_array -> ID lista_acceso_array IGUAL expresion .)
    INCREMENTO      reduce using rule 149 (asignacion_array -> ID lista_acceso_array IGUAL expresion .)
    $end            reduce using rule 149 (asignacion_array -> ID lista_acceso_array IGUAL expresion .)
    LLADER          reduce using rule 149 (asignacion_array -> ID lista_acceso_array IGUAL expresion .)
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIVIDIDO        shift and go to state 107
    MODULO          shift and go to state 108
    POTENCIA        shift and go to state 109
    MAYOR           shift and go to state 110
    MENOR           shift and go to state 111
    MAYORIGUAL      shift and go to state 112
    MENORIGUAL      shift and go to state 113
    IGUALACION      shift and go to state 114
    DISTINTO        shift and go to state 115
    AND             shift and go to state 116
    OR              shift and go to state 117
    PUNTO           shift and go to state 118


state 137

    (129) asignacionInterface -> ID PUNTO ID IGUAL . expresion
    (64) expresion -> . llamada_funcion
    (74) expresion -> . expresion MAS expresion
    (75) expresion -> . expresion MENOS expresion
    (76) expresion -> . expresion POR expresion
    (77) expresion -> . expresion DIVIDIDO expresion
    (78) expresion -> . expresion MODULO expresion
    (79) expresion -> . expresion POTENCIA expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . expresion MAYOR expresion
    (82) expresion -> . expresion MENOR expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORIGUAL expresion
    (85) expresion -> . expresion IGUALACION expresion
    (86) expresion -> . expresion DISTINTO expresion
    (87) expresion -> . expresion AND expresion
    (88) expresion -> . expresion OR expresion
    (89) expresion -> . NOT expresion
    (90) expresion -> . dec
    (91) expresion -> . inc
    (92) expresion -> . casteo
    (93) expresion -> . PARIZQ expresion PARDER
    (94) expresion -> . ENTERO
    (95) expresion -> . DECIMAL
    (96) expresion -> . CADENA
    (97) expresion -> . NULL
    (98) expresion -> . booleano
    (99) expresion -> . ID
    (102) expresion -> . aproximacion
    (103) expresion -> . exponencial
    (104) expresion -> . separador
    (105) expresion -> . concatenacion
    (106) expresion -> . to_minusculas
    (109) expresion -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (128) expresion -> . ID PUNTO ID
    (141) expresion -> . arreglo
    (144) expresion -> . acceso_array
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (113) casteo -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (114) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (100) booleano -> . TRUE
    (101) booleano -> . FALSE
    (107) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (110) to_minusculas -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (142) arreglo -> . CORIZQ lista_exp CORDER
    (143) arreglo -> . CORIZQ CORDER
    (145) acceso_array -> . ID lista_acceso_array

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    CADENA          shift and go to state 68
    NULL            shift and go to state 69
    ID              shift and go to state 71
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40
    CAST_STRING     shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    CORIZQ          shift and go to state 82

    expresion                      shift and go to state 191
    llamada_funcion                shift and go to state 59
    dec                            shift and go to state 62
    inc                            shift and go to state 63
    casteo                         shift and go to state 64
    booleano                       shift and go to state 70
    aproximacion                   shift and go to state 72
    exponencial                    shift and go to state 73
    separador                      shift and go to state 74
    concatenacion                  shift and go to state 75
    to_minusculas                  shift and go to state 76
    arreglo                        shift and go to state 77
    acceso_array                   shift and go to state 78

state 138

    (148) acceso_array_exp -> CORIZQ expresion CORDER .

    IGUAL           reduce using rule 148 (acceso_array_exp -> CORIZQ expresion CORDER .)
    CORIZQ          reduce using rule 148 (acceso_array_exp -> CORIZQ expresion CORDER .)
    MAS             reduce using rule 148 (acceso_array_exp -> CORIZQ expresion CORDER .)
    MENOS           reduce using rule 148 (acceso_array_exp -> CORIZQ expresion CORDER .)
    POR             reduce using rule 148 (acceso_array_exp -> CORIZQ expresion CORDER .)
    DIVIDIDO        reduce using rule 148 (acceso_array_exp -> CORIZQ expresion CORDER .)
    MODULO          reduce using rule 148 (acceso_array_exp -> CORIZQ expresion CORDER .)
    POTENCIA        reduce using rule 148 (acceso_array_exp -> CORIZQ expresion CORDER .)
    MAYOR           reduce using rule 148 (acceso_array_exp -> CORIZQ expresion CORDER .)
    MENOR           reduce using rule 148 (acceso_array_exp -> CORIZQ expresion CORDER .)
    MAYORIGUAL      reduce using rule 148 (acceso_array_exp -> CORIZQ expresion CORDER .)
    MENORIGUAL      reduce using rule 148 (acceso_array_exp -> CORIZQ expresion CORDER .)
    IGUALACION      reduce using rule 148 (acceso_array_exp -> CORIZQ expresion CORDER .)
    DISTINTO        reduce using rule 148 (acceso_array_exp -> CORIZQ expresion CORDER .)
    AND             reduce using rule 148 (acceso_array_exp -> CORIZQ expresion CORDER .)
    OR              reduce using rule 148 (acceso_array_exp -> CORIZQ expresion CORDER .)
    PUNTO           reduce using rule 148 (acceso_array_exp -> CORIZQ expresion CORDER .)
    PTOYCOMA        reduce using rule 148 (acceso_array_exp -> CORIZQ expresion CORDER .)
    error           reduce using rule 148 (acceso_array_exp -> CORIZQ expresion CORDER .)
    FUNCTION        reduce using rule 148 (acceso_array_exp -> CORIZQ expresion CORDER .)
    COMENTARIO      reduce using rule 148 (acceso_array_exp -> CORIZQ expresion CORDER .)
    COMENTARIO_MULTILINEA reduce using rule 148 (acceso_array_exp -> CORIZQ expresion CORDER .)
    LET             reduce using rule 148 (acceso_array_exp -> CORIZQ expresion CORDER .)
    ID              reduce using rule 148 (acceso_array_exp -> CORIZQ expresion CORDER .)
    CONSOLE         reduce using rule 148 (acceso_array_exp -> CORIZQ expresion CORDER .)
    IF              reduce using rule 148 (acceso_array_exp -> CORIZQ expresion CORDER .)
    WHILE           reduce using rule 148 (acceso_array_exp -> CORIZQ expresion CORDER .)
    FOR             reduce using rule 148 (acceso_array_exp -> CORIZQ expresion CORDER .)
    RETURN          reduce using rule 148 (acceso_array_exp -> CORIZQ expresion CORDER .)
    BREAK           reduce using rule 148 (acceso_array_exp -> CORIZQ expresion CORDER .)
    CONTINUE        reduce using rule 148 (acceso_array_exp -> CORIZQ expresion CORDER .)
    INTERFACE       reduce using rule 148 (acceso_array_exp -> CORIZQ expresion CORDER .)
    DECREMENTO      reduce using rule 148 (acceso_array_exp -> CORIZQ expresion CORDER .)
    INCREMENTO      reduce using rule 148 (acceso_array_exp -> CORIZQ expresion CORDER .)
    $end            reduce using rule 148 (acceso_array_exp -> CORIZQ expresion CORDER .)
    LLADER          reduce using rule 148 (acceso_array_exp -> CORIZQ expresion CORDER .)
    PARDER          reduce using rule 148 (acceso_array_exp -> CORIZQ expresion CORDER .)
    COMA            reduce using rule 148 (acceso_array_exp -> CORIZQ expresion CORDER .)
    CORDER          reduce using rule 148 (acceso_array_exp -> CORIZQ expresion CORDER .)


state 139

    (30) declaracion -> LET ID IGUAL expresion .
    (74) expresion -> expresion . MAS expresion
    (75) expresion -> expresion . MENOS expresion
    (76) expresion -> expresion . POR expresion
    (77) expresion -> expresion . DIVIDIDO expresion
    (78) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MAYOR expresion
    (82) expresion -> expresion . MENOR expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORIGUAL expresion
    (85) expresion -> expresion . IGUALACION expresion
    (86) expresion -> expresion . DISTINTO expresion
    (87) expresion -> expresion . AND expresion
    (88) expresion -> expresion . OR expresion
    (113) casteo -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (107) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PTOYCOMA        reduce using rule 30 (declaracion -> LET ID IGUAL expresion .)
    error           reduce using rule 30 (declaracion -> LET ID IGUAL expresion .)
    FUNCTION        reduce using rule 30 (declaracion -> LET ID IGUAL expresion .)
    COMENTARIO      reduce using rule 30 (declaracion -> LET ID IGUAL expresion .)
    COMENTARIO_MULTILINEA reduce using rule 30 (declaracion -> LET ID IGUAL expresion .)
    LET             reduce using rule 30 (declaracion -> LET ID IGUAL expresion .)
    ID              reduce using rule 30 (declaracion -> LET ID IGUAL expresion .)
    CONSOLE         reduce using rule 30 (declaracion -> LET ID IGUAL expresion .)
    IF              reduce using rule 30 (declaracion -> LET ID IGUAL expresion .)
    WHILE           reduce using rule 30 (declaracion -> LET ID IGUAL expresion .)
    FOR             reduce using rule 30 (declaracion -> LET ID IGUAL expresion .)
    RETURN          reduce using rule 30 (declaracion -> LET ID IGUAL expresion .)
    BREAK           reduce using rule 30 (declaracion -> LET ID IGUAL expresion .)
    CONTINUE        reduce using rule 30 (declaracion -> LET ID IGUAL expresion .)
    INTERFACE       reduce using rule 30 (declaracion -> LET ID IGUAL expresion .)
    DECREMENTO      reduce using rule 30 (declaracion -> LET ID IGUAL expresion .)
    INCREMENTO      reduce using rule 30 (declaracion -> LET ID IGUAL expresion .)
    $end            reduce using rule 30 (declaracion -> LET ID IGUAL expresion .)
    LLADER          reduce using rule 30 (declaracion -> LET ID IGUAL expresion .)
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIVIDIDO        shift and go to state 107
    MODULO          shift and go to state 108
    POTENCIA        shift and go to state 109
    MAYOR           shift and go to state 110
    MENOR           shift and go to state 111
    MAYORIGUAL      shift and go to state 112
    MENORIGUAL      shift and go to state 113
    IGUALACION      shift and go to state 114
    DISTINTO        shift and go to state 115
    AND             shift and go to state 116
    OR              shift and go to state 117
    PUNTO           shift and go to state 118


state 140

    (136) declaracionArray -> LET ID IGUAL CORIZQ . CORDER
    (138) declaracionArray -> LET ID IGUAL CORIZQ . lista_exp CORDER
    (142) arreglo -> CORIZQ . lista_exp CORDER
    (143) arreglo -> CORIZQ . CORDER
    (139) lista_exp -> . lista_exp COMA expresion
    (140) lista_exp -> . expresion
    (64) expresion -> . llamada_funcion
    (74) expresion -> . expresion MAS expresion
    (75) expresion -> . expresion MENOS expresion
    (76) expresion -> . expresion POR expresion
    (77) expresion -> . expresion DIVIDIDO expresion
    (78) expresion -> . expresion MODULO expresion
    (79) expresion -> . expresion POTENCIA expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . expresion MAYOR expresion
    (82) expresion -> . expresion MENOR expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORIGUAL expresion
    (85) expresion -> . expresion IGUALACION expresion
    (86) expresion -> . expresion DISTINTO expresion
    (87) expresion -> . expresion AND expresion
    (88) expresion -> . expresion OR expresion
    (89) expresion -> . NOT expresion
    (90) expresion -> . dec
    (91) expresion -> . inc
    (92) expresion -> . casteo
    (93) expresion -> . PARIZQ expresion PARDER
    (94) expresion -> . ENTERO
    (95) expresion -> . DECIMAL
    (96) expresion -> . CADENA
    (97) expresion -> . NULL
    (98) expresion -> . booleano
    (99) expresion -> . ID
    (102) expresion -> . aproximacion
    (103) expresion -> . exponencial
    (104) expresion -> . separador
    (105) expresion -> . concatenacion
    (106) expresion -> . to_minusculas
    (109) expresion -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (128) expresion -> . ID PUNTO ID
    (141) expresion -> . arreglo
    (144) expresion -> . acceso_array
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (113) casteo -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (114) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (100) booleano -> . TRUE
    (101) booleano -> . FALSE
    (107) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (110) to_minusculas -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (142) arreglo -> . CORIZQ lista_exp CORDER
    (143) arreglo -> . CORIZQ CORDER
    (145) acceso_array -> . ID lista_acceso_array

    CORDER          shift and go to state 192
    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    CADENA          shift and go to state 68
    NULL            shift and go to state 69
    ID              shift and go to state 71
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40
    CAST_STRING     shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    CORIZQ          shift and go to state 82

    lista_exp                      shift and go to state 193
    expresion                      shift and go to state 127
    llamada_funcion                shift and go to state 59
    dec                            shift and go to state 62
    inc                            shift and go to state 63
    casteo                         shift and go to state 64
    booleano                       shift and go to state 70
    aproximacion                   shift and go to state 72
    exponencial                    shift and go to state 73
    separador                      shift and go to state 74
    concatenacion                  shift and go to state 75
    to_minusculas                  shift and go to state 76
    arreglo                        shift and go to state 77
    acceso_array                   shift and go to state 78

state 141

    (124) declaracionInterface -> LET ID DOSPUNTOS ID . IGUAL LLAIZQ lista_d LLADER

    IGUAL           shift and go to state 194


state 142

    (32) declaracion -> LET ID DOSPUNTOS tipo . IGUAL expresion
    (33) declaracion -> LET ID DOSPUNTOS tipo .
    (133) declaracionArray -> LET ID DOSPUNTOS tipo . CORIZQ CORDER
    (134) declaracionArray -> LET ID DOSPUNTOS tipo . CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER
    (135) declaracionArray -> LET ID DOSPUNTOS tipo . CORIZQ CORDER IGUAL CORIZQ CORDER
    (137) declaracionArray -> LET ID DOSPUNTOS tipo . CORIZQ CORDER IGUAL expresion

    IGUAL           shift and go to state 195
    PTOYCOMA        reduce using rule 33 (declaracion -> LET ID DOSPUNTOS tipo .)
    error           reduce using rule 33 (declaracion -> LET ID DOSPUNTOS tipo .)
    FUNCTION        reduce using rule 33 (declaracion -> LET ID DOSPUNTOS tipo .)
    COMENTARIO      reduce using rule 33 (declaracion -> LET ID DOSPUNTOS tipo .)
    COMENTARIO_MULTILINEA reduce using rule 33 (declaracion -> LET ID DOSPUNTOS tipo .)
    LET             reduce using rule 33 (declaracion -> LET ID DOSPUNTOS tipo .)
    ID              reduce using rule 33 (declaracion -> LET ID DOSPUNTOS tipo .)
    CONSOLE         reduce using rule 33 (declaracion -> LET ID DOSPUNTOS tipo .)
    IF              reduce using rule 33 (declaracion -> LET ID DOSPUNTOS tipo .)
    WHILE           reduce using rule 33 (declaracion -> LET ID DOSPUNTOS tipo .)
    FOR             reduce using rule 33 (declaracion -> LET ID DOSPUNTOS tipo .)
    RETURN          reduce using rule 33 (declaracion -> LET ID DOSPUNTOS tipo .)
    BREAK           reduce using rule 33 (declaracion -> LET ID DOSPUNTOS tipo .)
    CONTINUE        reduce using rule 33 (declaracion -> LET ID DOSPUNTOS tipo .)
    INTERFACE       reduce using rule 33 (declaracion -> LET ID DOSPUNTOS tipo .)
    DECREMENTO      reduce using rule 33 (declaracion -> LET ID DOSPUNTOS tipo .)
    INCREMENTO      reduce using rule 33 (declaracion -> LET ID DOSPUNTOS tipo .)
    $end            reduce using rule 33 (declaracion -> LET ID DOSPUNTOS tipo .)
    LLADER          reduce using rule 33 (declaracion -> LET ID DOSPUNTOS tipo .)
    CORIZQ          shift and go to state 196


state 143

    (130) declaracionArray -> LET ID DOSPUNTOS ARRAY . MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER
    (131) declaracionArray -> LET ID DOSPUNTOS ARRAY . MENOR tipo MAYOR IGUAL CORIZQ CORDER
    (132) declaracionArray -> LET ID DOSPUNTOS ARRAY . MENOR tipo MAYOR

    MENOR           shift and go to state 197


state 144

    (69) tipo -> NUMBER .

    IGUAL           reduce using rule 69 (tipo -> NUMBER .)
    CORIZQ          reduce using rule 69 (tipo -> NUMBER .)
    PTOYCOMA        reduce using rule 69 (tipo -> NUMBER .)
    error           reduce using rule 69 (tipo -> NUMBER .)
    FUNCTION        reduce using rule 69 (tipo -> NUMBER .)
    COMENTARIO      reduce using rule 69 (tipo -> NUMBER .)
    COMENTARIO_MULTILINEA reduce using rule 69 (tipo -> NUMBER .)
    LET             reduce using rule 69 (tipo -> NUMBER .)
    ID              reduce using rule 69 (tipo -> NUMBER .)
    CONSOLE         reduce using rule 69 (tipo -> NUMBER .)
    IF              reduce using rule 69 (tipo -> NUMBER .)
    WHILE           reduce using rule 69 (tipo -> NUMBER .)
    FOR             reduce using rule 69 (tipo -> NUMBER .)
    RETURN          reduce using rule 69 (tipo -> NUMBER .)
    BREAK           reduce using rule 69 (tipo -> NUMBER .)
    CONTINUE        reduce using rule 69 (tipo -> NUMBER .)
    INTERFACE       reduce using rule 69 (tipo -> NUMBER .)
    DECREMENTO      reduce using rule 69 (tipo -> NUMBER .)
    INCREMENTO      reduce using rule 69 (tipo -> NUMBER .)
    $end            reduce using rule 69 (tipo -> NUMBER .)
    LLADER          reduce using rule 69 (tipo -> NUMBER .)
    PARDER          reduce using rule 69 (tipo -> NUMBER .)
    COMA            reduce using rule 69 (tipo -> NUMBER .)
    LLAIZQ          reduce using rule 69 (tipo -> NUMBER .)
    MAYOR           reduce using rule 69 (tipo -> NUMBER .)


state 145

    (70) tipo -> STRING .

    IGUAL           reduce using rule 70 (tipo -> STRING .)
    CORIZQ          reduce using rule 70 (tipo -> STRING .)
    PTOYCOMA        reduce using rule 70 (tipo -> STRING .)
    error           reduce using rule 70 (tipo -> STRING .)
    FUNCTION        reduce using rule 70 (tipo -> STRING .)
    COMENTARIO      reduce using rule 70 (tipo -> STRING .)
    COMENTARIO_MULTILINEA reduce using rule 70 (tipo -> STRING .)
    LET             reduce using rule 70 (tipo -> STRING .)
    ID              reduce using rule 70 (tipo -> STRING .)
    CONSOLE         reduce using rule 70 (tipo -> STRING .)
    IF              reduce using rule 70 (tipo -> STRING .)
    WHILE           reduce using rule 70 (tipo -> STRING .)
    FOR             reduce using rule 70 (tipo -> STRING .)
    RETURN          reduce using rule 70 (tipo -> STRING .)
    BREAK           reduce using rule 70 (tipo -> STRING .)
    CONTINUE        reduce using rule 70 (tipo -> STRING .)
    INTERFACE       reduce using rule 70 (tipo -> STRING .)
    DECREMENTO      reduce using rule 70 (tipo -> STRING .)
    INCREMENTO      reduce using rule 70 (tipo -> STRING .)
    $end            reduce using rule 70 (tipo -> STRING .)
    LLADER          reduce using rule 70 (tipo -> STRING .)
    PARDER          reduce using rule 70 (tipo -> STRING .)
    COMA            reduce using rule 70 (tipo -> STRING .)
    LLAIZQ          reduce using rule 70 (tipo -> STRING .)
    MAYOR           reduce using rule 70 (tipo -> STRING .)


state 146

    (71) tipo -> BOOLEAN .

    IGUAL           reduce using rule 71 (tipo -> BOOLEAN .)
    CORIZQ          reduce using rule 71 (tipo -> BOOLEAN .)
    PTOYCOMA        reduce using rule 71 (tipo -> BOOLEAN .)
    error           reduce using rule 71 (tipo -> BOOLEAN .)
    FUNCTION        reduce using rule 71 (tipo -> BOOLEAN .)
    COMENTARIO      reduce using rule 71 (tipo -> BOOLEAN .)
    COMENTARIO_MULTILINEA reduce using rule 71 (tipo -> BOOLEAN .)
    LET             reduce using rule 71 (tipo -> BOOLEAN .)
    ID              reduce using rule 71 (tipo -> BOOLEAN .)
    CONSOLE         reduce using rule 71 (tipo -> BOOLEAN .)
    IF              reduce using rule 71 (tipo -> BOOLEAN .)
    WHILE           reduce using rule 71 (tipo -> BOOLEAN .)
    FOR             reduce using rule 71 (tipo -> BOOLEAN .)
    RETURN          reduce using rule 71 (tipo -> BOOLEAN .)
    BREAK           reduce using rule 71 (tipo -> BOOLEAN .)
    CONTINUE        reduce using rule 71 (tipo -> BOOLEAN .)
    INTERFACE       reduce using rule 71 (tipo -> BOOLEAN .)
    DECREMENTO      reduce using rule 71 (tipo -> BOOLEAN .)
    INCREMENTO      reduce using rule 71 (tipo -> BOOLEAN .)
    $end            reduce using rule 71 (tipo -> BOOLEAN .)
    LLADER          reduce using rule 71 (tipo -> BOOLEAN .)
    PARDER          reduce using rule 71 (tipo -> BOOLEAN .)
    COMA            reduce using rule 71 (tipo -> BOOLEAN .)
    LLAIZQ          reduce using rule 71 (tipo -> BOOLEAN .)
    MAYOR           reduce using rule 71 (tipo -> BOOLEAN .)


state 147

    (72) tipo -> ANY .

    IGUAL           reduce using rule 72 (tipo -> ANY .)
    CORIZQ          reduce using rule 72 (tipo -> ANY .)
    PTOYCOMA        reduce using rule 72 (tipo -> ANY .)
    error           reduce using rule 72 (tipo -> ANY .)
    FUNCTION        reduce using rule 72 (tipo -> ANY .)
    COMENTARIO      reduce using rule 72 (tipo -> ANY .)
    COMENTARIO_MULTILINEA reduce using rule 72 (tipo -> ANY .)
    LET             reduce using rule 72 (tipo -> ANY .)
    ID              reduce using rule 72 (tipo -> ANY .)
    CONSOLE         reduce using rule 72 (tipo -> ANY .)
    IF              reduce using rule 72 (tipo -> ANY .)
    WHILE           reduce using rule 72 (tipo -> ANY .)
    FOR             reduce using rule 72 (tipo -> ANY .)
    RETURN          reduce using rule 72 (tipo -> ANY .)
    BREAK           reduce using rule 72 (tipo -> ANY .)
    CONTINUE        reduce using rule 72 (tipo -> ANY .)
    INTERFACE       reduce using rule 72 (tipo -> ANY .)
    DECREMENTO      reduce using rule 72 (tipo -> ANY .)
    INCREMENTO      reduce using rule 72 (tipo -> ANY .)
    $end            reduce using rule 72 (tipo -> ANY .)
    LLADER          reduce using rule 72 (tipo -> ANY .)
    PARDER          reduce using rule 72 (tipo -> ANY .)
    COMA            reduce using rule 72 (tipo -> ANY .)
    LLAIZQ          reduce using rule 72 (tipo -> ANY .)
    MAYOR           reduce using rule 72 (tipo -> ANY .)


state 148

    (73) tipo -> NULL .

    IGUAL           reduce using rule 73 (tipo -> NULL .)
    CORIZQ          reduce using rule 73 (tipo -> NULL .)
    PTOYCOMA        reduce using rule 73 (tipo -> NULL .)
    error           reduce using rule 73 (tipo -> NULL .)
    FUNCTION        reduce using rule 73 (tipo -> NULL .)
    COMENTARIO      reduce using rule 73 (tipo -> NULL .)
    COMENTARIO_MULTILINEA reduce using rule 73 (tipo -> NULL .)
    LET             reduce using rule 73 (tipo -> NULL .)
    ID              reduce using rule 73 (tipo -> NULL .)
    CONSOLE         reduce using rule 73 (tipo -> NULL .)
    IF              reduce using rule 73 (tipo -> NULL .)
    WHILE           reduce using rule 73 (tipo -> NULL .)
    FOR             reduce using rule 73 (tipo -> NULL .)
    RETURN          reduce using rule 73 (tipo -> NULL .)
    BREAK           reduce using rule 73 (tipo -> NULL .)
    CONTINUE        reduce using rule 73 (tipo -> NULL .)
    INTERFACE       reduce using rule 73 (tipo -> NULL .)
    DECREMENTO      reduce using rule 73 (tipo -> NULL .)
    INCREMENTO      reduce using rule 73 (tipo -> NULL .)
    $end            reduce using rule 73 (tipo -> NULL .)
    LLADER          reduce using rule 73 (tipo -> NULL .)
    PARDER          reduce using rule 73 (tipo -> NULL .)
    COMA            reduce using rule 73 (tipo -> NULL .)
    LLAIZQ          reduce using rule 73 (tipo -> NULL .)
    MAYOR           reduce using rule 73 (tipo -> NULL .)


state 149

    (42) impresion -> CONSOLE PUNTO LOG PARIZQ . expresion PARDER
    (43) impresion -> CONSOLE PUNTO LOG PARIZQ . lista_argumentos PARDER
    (64) expresion -> . llamada_funcion
    (74) expresion -> . expresion MAS expresion
    (75) expresion -> . expresion MENOS expresion
    (76) expresion -> . expresion POR expresion
    (77) expresion -> . expresion DIVIDIDO expresion
    (78) expresion -> . expresion MODULO expresion
    (79) expresion -> . expresion POTENCIA expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . expresion MAYOR expresion
    (82) expresion -> . expresion MENOR expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORIGUAL expresion
    (85) expresion -> . expresion IGUALACION expresion
    (86) expresion -> . expresion DISTINTO expresion
    (87) expresion -> . expresion AND expresion
    (88) expresion -> . expresion OR expresion
    (89) expresion -> . NOT expresion
    (90) expresion -> . dec
    (91) expresion -> . inc
    (92) expresion -> . casteo
    (93) expresion -> . PARIZQ expresion PARDER
    (94) expresion -> . ENTERO
    (95) expresion -> . DECIMAL
    (96) expresion -> . CADENA
    (97) expresion -> . NULL
    (98) expresion -> . booleano
    (99) expresion -> . ID
    (102) expresion -> . aproximacion
    (103) expresion -> . exponencial
    (104) expresion -> . separador
    (105) expresion -> . concatenacion
    (106) expresion -> . to_minusculas
    (109) expresion -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (128) expresion -> . ID PUNTO ID
    (141) expresion -> . arreglo
    (144) expresion -> . acceso_array
    (67) lista_argumentos -> . lista_argumentos COMA expresion
    (68) lista_argumentos -> . expresion
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (113) casteo -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (114) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (100) booleano -> . TRUE
    (101) booleano -> . FALSE
    (107) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (110) to_minusculas -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (142) arreglo -> . CORIZQ lista_exp CORDER
    (143) arreglo -> . CORIZQ CORDER
    (145) acceso_array -> . ID lista_acceso_array

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    CADENA          shift and go to state 68
    NULL            shift and go to state 69
    ID              shift and go to state 71
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40
    CAST_STRING     shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    CORIZQ          shift and go to state 82

    expresion                      shift and go to state 198
    lista_argumentos               shift and go to state 199
    llamada_funcion                shift and go to state 59
    dec                            shift and go to state 62
    inc                            shift and go to state 63
    casteo                         shift and go to state 64
    booleano                       shift and go to state 70
    aproximacion                   shift and go to state 72
    exponencial                    shift and go to state 73
    separador                      shift and go to state 74
    concatenacion                  shift and go to state 75
    to_minusculas                  shift and go to state 76
    arreglo                        shift and go to state 77
    acceso_array                   shift and go to state 78

state 150

    (44) condicional -> IF PARIZQ expresion PARDER . bloque
    (45) condicional -> IF PARIZQ expresion PARDER . bloque ELSE bloque
    (46) condicional -> IF PARIZQ expresion PARDER . bloque lista_elif
    (47) condicional -> IF PARIZQ expresion PARDER . bloque lista_elif ELSE bloque
    (10) bloque -> . LLAIZQ instruccion4 LLADER
    (11) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 189

    bloque                         shift and go to state 200

state 151

    (51) ciclo_while -> WHILE PARIZQ expresion PARDER . bloque
    (10) bloque -> . LLAIZQ instruccion4 LLADER
    (11) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 189

    bloque                         shift and go to state 201

state 152

    (52) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA . expresion PTOYCOMA asignacion PARDER bloque
    (64) expresion -> . llamada_funcion
    (74) expresion -> . expresion MAS expresion
    (75) expresion -> . expresion MENOS expresion
    (76) expresion -> . expresion POR expresion
    (77) expresion -> . expresion DIVIDIDO expresion
    (78) expresion -> . expresion MODULO expresion
    (79) expresion -> . expresion POTENCIA expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . expresion MAYOR expresion
    (82) expresion -> . expresion MENOR expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORIGUAL expresion
    (85) expresion -> . expresion IGUALACION expresion
    (86) expresion -> . expresion DISTINTO expresion
    (87) expresion -> . expresion AND expresion
    (88) expresion -> . expresion OR expresion
    (89) expresion -> . NOT expresion
    (90) expresion -> . dec
    (91) expresion -> . inc
    (92) expresion -> . casteo
    (93) expresion -> . PARIZQ expresion PARDER
    (94) expresion -> . ENTERO
    (95) expresion -> . DECIMAL
    (96) expresion -> . CADENA
    (97) expresion -> . NULL
    (98) expresion -> . booleano
    (99) expresion -> . ID
    (102) expresion -> . aproximacion
    (103) expresion -> . exponencial
    (104) expresion -> . separador
    (105) expresion -> . concatenacion
    (106) expresion -> . to_minusculas
    (109) expresion -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (128) expresion -> . ID PUNTO ID
    (141) expresion -> . arreglo
    (144) expresion -> . acceso_array
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (113) casteo -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (114) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (100) booleano -> . TRUE
    (101) booleano -> . FALSE
    (107) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (110) to_minusculas -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (142) arreglo -> . CORIZQ lista_exp CORDER
    (143) arreglo -> . CORIZQ CORDER
    (145) acceso_array -> . ID lista_acceso_array

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    CADENA          shift and go to state 68
    NULL            shift and go to state 69
    ID              shift and go to state 71
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40
    CAST_STRING     shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    CORIZQ          shift and go to state 82

    expresion                      shift and go to state 202
    llamada_funcion                shift and go to state 59
    dec                            shift and go to state 62
    inc                            shift and go to state 63
    casteo                         shift and go to state 64
    booleano                       shift and go to state 70
    aproximacion                   shift and go to state 72
    exponencial                    shift and go to state 73
    separador                      shift and go to state 74
    concatenacion                  shift and go to state 75
    to_minusculas                  shift and go to state 76
    arreglo                        shift and go to state 77
    acceso_array                   shift and go to state 78

state 153

    (53) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA . expresion PTOYCOMA asignacion PARDER bloque
    (64) expresion -> . llamada_funcion
    (74) expresion -> . expresion MAS expresion
    (75) expresion -> . expresion MENOS expresion
    (76) expresion -> . expresion POR expresion
    (77) expresion -> . expresion DIVIDIDO expresion
    (78) expresion -> . expresion MODULO expresion
    (79) expresion -> . expresion POTENCIA expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . expresion MAYOR expresion
    (82) expresion -> . expresion MENOR expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORIGUAL expresion
    (85) expresion -> . expresion IGUALACION expresion
    (86) expresion -> . expresion DISTINTO expresion
    (87) expresion -> . expresion AND expresion
    (88) expresion -> . expresion OR expresion
    (89) expresion -> . NOT expresion
    (90) expresion -> . dec
    (91) expresion -> . inc
    (92) expresion -> . casteo
    (93) expresion -> . PARIZQ expresion PARDER
    (94) expresion -> . ENTERO
    (95) expresion -> . DECIMAL
    (96) expresion -> . CADENA
    (97) expresion -> . NULL
    (98) expresion -> . booleano
    (99) expresion -> . ID
    (102) expresion -> . aproximacion
    (103) expresion -> . exponencial
    (104) expresion -> . separador
    (105) expresion -> . concatenacion
    (106) expresion -> . to_minusculas
    (109) expresion -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (128) expresion -> . ID PUNTO ID
    (141) expresion -> . arreglo
    (144) expresion -> . acceso_array
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (113) casteo -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (114) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (100) booleano -> . TRUE
    (101) booleano -> . FALSE
    (107) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (110) to_minusculas -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (142) arreglo -> . CORIZQ lista_exp CORDER
    (143) arreglo -> . CORIZQ CORDER
    (145) acceso_array -> . ID lista_acceso_array

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    CADENA          shift and go to state 68
    NULL            shift and go to state 69
    ID              shift and go to state 71
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40
    CAST_STRING     shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    CORIZQ          shift and go to state 82

    expresion                      shift and go to state 203
    llamada_funcion                shift and go to state 59
    dec                            shift and go to state 62
    inc                            shift and go to state 63
    casteo                         shift and go to state 64
    booleano                       shift and go to state 70
    aproximacion                   shift and go to state 72
    exponencial                    shift and go to state 73
    separador                      shift and go to state 74
    concatenacion                  shift and go to state 75
    to_minusculas                  shift and go to state 76
    arreglo                        shift and go to state 77
    acceso_array                   shift and go to state 78

state 154

    (54) ciclo_for_of -> FOR PARIZQ LET ID . OF expresion PARDER bloque
    (30) declaracion -> LET ID . IGUAL expresion
    (31) declaracion -> LET ID .
    (32) declaracion -> LET ID . DOSPUNTOS tipo IGUAL expresion
    (33) declaracion -> LET ID . DOSPUNTOS tipo

    OF              shift and go to state 204
    IGUAL           shift and go to state 205
    PTOYCOMA        reduce using rule 31 (declaracion -> LET ID .)
    DOSPUNTOS       shift and go to state 206


state 155

    (74) expresion -> expresion MAS expresion .
    (74) expresion -> expresion . MAS expresion
    (75) expresion -> expresion . MENOS expresion
    (76) expresion -> expresion . POR expresion
    (77) expresion -> expresion . DIVIDIDO expresion
    (78) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MAYOR expresion
    (82) expresion -> expresion . MENOR expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORIGUAL expresion
    (85) expresion -> expresion . IGUALACION expresion
    (86) expresion -> expresion . DISTINTO expresion
    (87) expresion -> expresion . AND expresion
    (88) expresion -> expresion . OR expresion
    (113) casteo -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (107) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAS             reduce using rule 74 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 74 (expresion -> expresion MAS expresion .)
    MAYOR           reduce using rule 74 (expresion -> expresion MAS expresion .)
    MENOR           reduce using rule 74 (expresion -> expresion MAS expresion .)
    MAYORIGUAL      reduce using rule 74 (expresion -> expresion MAS expresion .)
    MENORIGUAL      reduce using rule 74 (expresion -> expresion MAS expresion .)
    IGUALACION      reduce using rule 74 (expresion -> expresion MAS expresion .)
    DISTINTO        reduce using rule 74 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 74 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 74 (expresion -> expresion MAS expresion .)
    PUNTO           reduce using rule 74 (expresion -> expresion MAS expresion .)
    PTOYCOMA        reduce using rule 74 (expresion -> expresion MAS expresion .)
    error           reduce using rule 74 (expresion -> expresion MAS expresion .)
    FUNCTION        reduce using rule 74 (expresion -> expresion MAS expresion .)
    COMENTARIO      reduce using rule 74 (expresion -> expresion MAS expresion .)
    COMENTARIO_MULTILINEA reduce using rule 74 (expresion -> expresion MAS expresion .)
    LET             reduce using rule 74 (expresion -> expresion MAS expresion .)
    ID              reduce using rule 74 (expresion -> expresion MAS expresion .)
    CONSOLE         reduce using rule 74 (expresion -> expresion MAS expresion .)
    IF              reduce using rule 74 (expresion -> expresion MAS expresion .)
    WHILE           reduce using rule 74 (expresion -> expresion MAS expresion .)
    FOR             reduce using rule 74 (expresion -> expresion MAS expresion .)
    RETURN          reduce using rule 74 (expresion -> expresion MAS expresion .)
    BREAK           reduce using rule 74 (expresion -> expresion MAS expresion .)
    CONTINUE        reduce using rule 74 (expresion -> expresion MAS expresion .)
    INTERFACE       reduce using rule 74 (expresion -> expresion MAS expresion .)
    DECREMENTO      reduce using rule 74 (expresion -> expresion MAS expresion .)
    INCREMENTO      reduce using rule 74 (expresion -> expresion MAS expresion .)
    $end            reduce using rule 74 (expresion -> expresion MAS expresion .)
    LLADER          reduce using rule 74 (expresion -> expresion MAS expresion .)
    PARDER          reduce using rule 74 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 74 (expresion -> expresion MAS expresion .)
    CORDER          reduce using rule 74 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 106
    DIVIDIDO        shift and go to state 107
    MODULO          shift and go to state 108
    POTENCIA        shift and go to state 109

  ! POR             [ reduce using rule 74 (expresion -> expresion MAS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 74 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 74 (expresion -> expresion MAS expresion .) ]
  ! POTENCIA        [ reduce using rule 74 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 104 ]
  ! MENOS           [ shift and go to state 105 ]
  ! MAYOR           [ shift and go to state 110 ]
  ! MENOR           [ shift and go to state 111 ]
  ! MAYORIGUAL      [ shift and go to state 112 ]
  ! MENORIGUAL      [ shift and go to state 113 ]
  ! IGUALACION      [ shift and go to state 114 ]
  ! DISTINTO        [ shift and go to state 115 ]
  ! AND             [ shift and go to state 116 ]
  ! OR              [ shift and go to state 117 ]
  ! PUNTO           [ shift and go to state 118 ]


state 156

    (75) expresion -> expresion MENOS expresion .
    (74) expresion -> expresion . MAS expresion
    (75) expresion -> expresion . MENOS expresion
    (76) expresion -> expresion . POR expresion
    (77) expresion -> expresion . DIVIDIDO expresion
    (78) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MAYOR expresion
    (82) expresion -> expresion . MENOR expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORIGUAL expresion
    (85) expresion -> expresion . IGUALACION expresion
    (86) expresion -> expresion . DISTINTO expresion
    (87) expresion -> expresion . AND expresion
    (88) expresion -> expresion . OR expresion
    (113) casteo -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (107) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAS             reduce using rule 75 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 75 (expresion -> expresion MENOS expresion .)
    MAYOR           reduce using rule 75 (expresion -> expresion MENOS expresion .)
    MENOR           reduce using rule 75 (expresion -> expresion MENOS expresion .)
    MAYORIGUAL      reduce using rule 75 (expresion -> expresion MENOS expresion .)
    MENORIGUAL      reduce using rule 75 (expresion -> expresion MENOS expresion .)
    IGUALACION      reduce using rule 75 (expresion -> expresion MENOS expresion .)
    DISTINTO        reduce using rule 75 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 75 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 75 (expresion -> expresion MENOS expresion .)
    PUNTO           reduce using rule 75 (expresion -> expresion MENOS expresion .)
    PTOYCOMA        reduce using rule 75 (expresion -> expresion MENOS expresion .)
    error           reduce using rule 75 (expresion -> expresion MENOS expresion .)
    FUNCTION        reduce using rule 75 (expresion -> expresion MENOS expresion .)
    COMENTARIO      reduce using rule 75 (expresion -> expresion MENOS expresion .)
    COMENTARIO_MULTILINEA reduce using rule 75 (expresion -> expresion MENOS expresion .)
    LET             reduce using rule 75 (expresion -> expresion MENOS expresion .)
    ID              reduce using rule 75 (expresion -> expresion MENOS expresion .)
    CONSOLE         reduce using rule 75 (expresion -> expresion MENOS expresion .)
    IF              reduce using rule 75 (expresion -> expresion MENOS expresion .)
    WHILE           reduce using rule 75 (expresion -> expresion MENOS expresion .)
    FOR             reduce using rule 75 (expresion -> expresion MENOS expresion .)
    RETURN          reduce using rule 75 (expresion -> expresion MENOS expresion .)
    BREAK           reduce using rule 75 (expresion -> expresion MENOS expresion .)
    CONTINUE        reduce using rule 75 (expresion -> expresion MENOS expresion .)
    INTERFACE       reduce using rule 75 (expresion -> expresion MENOS expresion .)
    DECREMENTO      reduce using rule 75 (expresion -> expresion MENOS expresion .)
    INCREMENTO      reduce using rule 75 (expresion -> expresion MENOS expresion .)
    $end            reduce using rule 75 (expresion -> expresion MENOS expresion .)
    LLADER          reduce using rule 75 (expresion -> expresion MENOS expresion .)
    PARDER          reduce using rule 75 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 75 (expresion -> expresion MENOS expresion .)
    CORDER          reduce using rule 75 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 106
    DIVIDIDO        shift and go to state 107
    MODULO          shift and go to state 108
    POTENCIA        shift and go to state 109

  ! POR             [ reduce using rule 75 (expresion -> expresion MENOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 75 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 75 (expresion -> expresion MENOS expresion .) ]
  ! POTENCIA        [ reduce using rule 75 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 104 ]
  ! MENOS           [ shift and go to state 105 ]
  ! MAYOR           [ shift and go to state 110 ]
  ! MENOR           [ shift and go to state 111 ]
  ! MAYORIGUAL      [ shift and go to state 112 ]
  ! MENORIGUAL      [ shift and go to state 113 ]
  ! IGUALACION      [ shift and go to state 114 ]
  ! DISTINTO        [ shift and go to state 115 ]
  ! AND             [ shift and go to state 116 ]
  ! OR              [ shift and go to state 117 ]
  ! PUNTO           [ shift and go to state 118 ]


state 157

    (76) expresion -> expresion POR expresion .
    (74) expresion -> expresion . MAS expresion
    (75) expresion -> expresion . MENOS expresion
    (76) expresion -> expresion . POR expresion
    (77) expresion -> expresion . DIVIDIDO expresion
    (78) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MAYOR expresion
    (82) expresion -> expresion . MENOR expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORIGUAL expresion
    (85) expresion -> expresion . IGUALACION expresion
    (86) expresion -> expresion . DISTINTO expresion
    (87) expresion -> expresion . AND expresion
    (88) expresion -> expresion . OR expresion
    (113) casteo -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (107) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAS             reduce using rule 76 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 76 (expresion -> expresion POR expresion .)
    POR             reduce using rule 76 (expresion -> expresion POR expresion .)
    DIVIDIDO        reduce using rule 76 (expresion -> expresion POR expresion .)
    MODULO          reduce using rule 76 (expresion -> expresion POR expresion .)
    MAYOR           reduce using rule 76 (expresion -> expresion POR expresion .)
    MENOR           reduce using rule 76 (expresion -> expresion POR expresion .)
    MAYORIGUAL      reduce using rule 76 (expresion -> expresion POR expresion .)
    MENORIGUAL      reduce using rule 76 (expresion -> expresion POR expresion .)
    IGUALACION      reduce using rule 76 (expresion -> expresion POR expresion .)
    DISTINTO        reduce using rule 76 (expresion -> expresion POR expresion .)
    AND             reduce using rule 76 (expresion -> expresion POR expresion .)
    OR              reduce using rule 76 (expresion -> expresion POR expresion .)
    PUNTO           reduce using rule 76 (expresion -> expresion POR expresion .)
    PTOYCOMA        reduce using rule 76 (expresion -> expresion POR expresion .)
    error           reduce using rule 76 (expresion -> expresion POR expresion .)
    FUNCTION        reduce using rule 76 (expresion -> expresion POR expresion .)
    COMENTARIO      reduce using rule 76 (expresion -> expresion POR expresion .)
    COMENTARIO_MULTILINEA reduce using rule 76 (expresion -> expresion POR expresion .)
    LET             reduce using rule 76 (expresion -> expresion POR expresion .)
    ID              reduce using rule 76 (expresion -> expresion POR expresion .)
    CONSOLE         reduce using rule 76 (expresion -> expresion POR expresion .)
    IF              reduce using rule 76 (expresion -> expresion POR expresion .)
    WHILE           reduce using rule 76 (expresion -> expresion POR expresion .)
    FOR             reduce using rule 76 (expresion -> expresion POR expresion .)
    RETURN          reduce using rule 76 (expresion -> expresion POR expresion .)
    BREAK           reduce using rule 76 (expresion -> expresion POR expresion .)
    CONTINUE        reduce using rule 76 (expresion -> expresion POR expresion .)
    INTERFACE       reduce using rule 76 (expresion -> expresion POR expresion .)
    DECREMENTO      reduce using rule 76 (expresion -> expresion POR expresion .)
    INCREMENTO      reduce using rule 76 (expresion -> expresion POR expresion .)
    $end            reduce using rule 76 (expresion -> expresion POR expresion .)
    LLADER          reduce using rule 76 (expresion -> expresion POR expresion .)
    PARDER          reduce using rule 76 (expresion -> expresion POR expresion .)
    COMA            reduce using rule 76 (expresion -> expresion POR expresion .)
    CORDER          reduce using rule 76 (expresion -> expresion POR expresion .)
    POTENCIA        shift and go to state 109

  ! POTENCIA        [ reduce using rule 76 (expresion -> expresion POR expresion .) ]
  ! MAS             [ shift and go to state 104 ]
  ! MENOS           [ shift and go to state 105 ]
  ! POR             [ shift and go to state 106 ]
  ! DIVIDIDO        [ shift and go to state 107 ]
  ! MODULO          [ shift and go to state 108 ]
  ! MAYOR           [ shift and go to state 110 ]
  ! MENOR           [ shift and go to state 111 ]
  ! MAYORIGUAL      [ shift and go to state 112 ]
  ! MENORIGUAL      [ shift and go to state 113 ]
  ! IGUALACION      [ shift and go to state 114 ]
  ! DISTINTO        [ shift and go to state 115 ]
  ! AND             [ shift and go to state 116 ]
  ! OR              [ shift and go to state 117 ]
  ! PUNTO           [ shift and go to state 118 ]


state 158

    (77) expresion -> expresion DIVIDIDO expresion .
    (74) expresion -> expresion . MAS expresion
    (75) expresion -> expresion . MENOS expresion
    (76) expresion -> expresion . POR expresion
    (77) expresion -> expresion . DIVIDIDO expresion
    (78) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MAYOR expresion
    (82) expresion -> expresion . MENOR expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORIGUAL expresion
    (85) expresion -> expresion . IGUALACION expresion
    (86) expresion -> expresion . DISTINTO expresion
    (87) expresion -> expresion . AND expresion
    (88) expresion -> expresion . OR expresion
    (113) casteo -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (107) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAS             reduce using rule 77 (expresion -> expresion DIVIDIDO expresion .)
    MENOS           reduce using rule 77 (expresion -> expresion DIVIDIDO expresion .)
    POR             reduce using rule 77 (expresion -> expresion DIVIDIDO expresion .)
    DIVIDIDO        reduce using rule 77 (expresion -> expresion DIVIDIDO expresion .)
    MODULO          reduce using rule 77 (expresion -> expresion DIVIDIDO expresion .)
    MAYOR           reduce using rule 77 (expresion -> expresion DIVIDIDO expresion .)
    MENOR           reduce using rule 77 (expresion -> expresion DIVIDIDO expresion .)
    MAYORIGUAL      reduce using rule 77 (expresion -> expresion DIVIDIDO expresion .)
    MENORIGUAL      reduce using rule 77 (expresion -> expresion DIVIDIDO expresion .)
    IGUALACION      reduce using rule 77 (expresion -> expresion DIVIDIDO expresion .)
    DISTINTO        reduce using rule 77 (expresion -> expresion DIVIDIDO expresion .)
    AND             reduce using rule 77 (expresion -> expresion DIVIDIDO expresion .)
    OR              reduce using rule 77 (expresion -> expresion DIVIDIDO expresion .)
    PUNTO           reduce using rule 77 (expresion -> expresion DIVIDIDO expresion .)
    PTOYCOMA        reduce using rule 77 (expresion -> expresion DIVIDIDO expresion .)
    error           reduce using rule 77 (expresion -> expresion DIVIDIDO expresion .)
    FUNCTION        reduce using rule 77 (expresion -> expresion DIVIDIDO expresion .)
    COMENTARIO      reduce using rule 77 (expresion -> expresion DIVIDIDO expresion .)
    COMENTARIO_MULTILINEA reduce using rule 77 (expresion -> expresion DIVIDIDO expresion .)
    LET             reduce using rule 77 (expresion -> expresion DIVIDIDO expresion .)
    ID              reduce using rule 77 (expresion -> expresion DIVIDIDO expresion .)
    CONSOLE         reduce using rule 77 (expresion -> expresion DIVIDIDO expresion .)
    IF              reduce using rule 77 (expresion -> expresion DIVIDIDO expresion .)
    WHILE           reduce using rule 77 (expresion -> expresion DIVIDIDO expresion .)
    FOR             reduce using rule 77 (expresion -> expresion DIVIDIDO expresion .)
    RETURN          reduce using rule 77 (expresion -> expresion DIVIDIDO expresion .)
    BREAK           reduce using rule 77 (expresion -> expresion DIVIDIDO expresion .)
    CONTINUE        reduce using rule 77 (expresion -> expresion DIVIDIDO expresion .)
    INTERFACE       reduce using rule 77 (expresion -> expresion DIVIDIDO expresion .)
    DECREMENTO      reduce using rule 77 (expresion -> expresion DIVIDIDO expresion .)
    INCREMENTO      reduce using rule 77 (expresion -> expresion DIVIDIDO expresion .)
    $end            reduce using rule 77 (expresion -> expresion DIVIDIDO expresion .)
    LLADER          reduce using rule 77 (expresion -> expresion DIVIDIDO expresion .)
    PARDER          reduce using rule 77 (expresion -> expresion DIVIDIDO expresion .)
    COMA            reduce using rule 77 (expresion -> expresion DIVIDIDO expresion .)
    CORDER          reduce using rule 77 (expresion -> expresion DIVIDIDO expresion .)
    POTENCIA        shift and go to state 109

  ! POTENCIA        [ reduce using rule 77 (expresion -> expresion DIVIDIDO expresion .) ]
  ! MAS             [ shift and go to state 104 ]
  ! MENOS           [ shift and go to state 105 ]
  ! POR             [ shift and go to state 106 ]
  ! DIVIDIDO        [ shift and go to state 107 ]
  ! MODULO          [ shift and go to state 108 ]
  ! MAYOR           [ shift and go to state 110 ]
  ! MENOR           [ shift and go to state 111 ]
  ! MAYORIGUAL      [ shift and go to state 112 ]
  ! MENORIGUAL      [ shift and go to state 113 ]
  ! IGUALACION      [ shift and go to state 114 ]
  ! DISTINTO        [ shift and go to state 115 ]
  ! AND             [ shift and go to state 116 ]
  ! OR              [ shift and go to state 117 ]
  ! PUNTO           [ shift and go to state 118 ]


state 159

    (78) expresion -> expresion MODULO expresion .
    (74) expresion -> expresion . MAS expresion
    (75) expresion -> expresion . MENOS expresion
    (76) expresion -> expresion . POR expresion
    (77) expresion -> expresion . DIVIDIDO expresion
    (78) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MAYOR expresion
    (82) expresion -> expresion . MENOR expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORIGUAL expresion
    (85) expresion -> expresion . IGUALACION expresion
    (86) expresion -> expresion . DISTINTO expresion
    (87) expresion -> expresion . AND expresion
    (88) expresion -> expresion . OR expresion
    (113) casteo -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (107) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAS             reduce using rule 78 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 78 (expresion -> expresion MODULO expresion .)
    POR             reduce using rule 78 (expresion -> expresion MODULO expresion .)
    DIVIDIDO        reduce using rule 78 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 78 (expresion -> expresion MODULO expresion .)
    MAYOR           reduce using rule 78 (expresion -> expresion MODULO expresion .)
    MENOR           reduce using rule 78 (expresion -> expresion MODULO expresion .)
    MAYORIGUAL      reduce using rule 78 (expresion -> expresion MODULO expresion .)
    MENORIGUAL      reduce using rule 78 (expresion -> expresion MODULO expresion .)
    IGUALACION      reduce using rule 78 (expresion -> expresion MODULO expresion .)
    DISTINTO        reduce using rule 78 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 78 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 78 (expresion -> expresion MODULO expresion .)
    PUNTO           reduce using rule 78 (expresion -> expresion MODULO expresion .)
    PTOYCOMA        reduce using rule 78 (expresion -> expresion MODULO expresion .)
    error           reduce using rule 78 (expresion -> expresion MODULO expresion .)
    FUNCTION        reduce using rule 78 (expresion -> expresion MODULO expresion .)
    COMENTARIO      reduce using rule 78 (expresion -> expresion MODULO expresion .)
    COMENTARIO_MULTILINEA reduce using rule 78 (expresion -> expresion MODULO expresion .)
    LET             reduce using rule 78 (expresion -> expresion MODULO expresion .)
    ID              reduce using rule 78 (expresion -> expresion MODULO expresion .)
    CONSOLE         reduce using rule 78 (expresion -> expresion MODULO expresion .)
    IF              reduce using rule 78 (expresion -> expresion MODULO expresion .)
    WHILE           reduce using rule 78 (expresion -> expresion MODULO expresion .)
    FOR             reduce using rule 78 (expresion -> expresion MODULO expresion .)
    RETURN          reduce using rule 78 (expresion -> expresion MODULO expresion .)
    BREAK           reduce using rule 78 (expresion -> expresion MODULO expresion .)
    CONTINUE        reduce using rule 78 (expresion -> expresion MODULO expresion .)
    INTERFACE       reduce using rule 78 (expresion -> expresion MODULO expresion .)
    DECREMENTO      reduce using rule 78 (expresion -> expresion MODULO expresion .)
    INCREMENTO      reduce using rule 78 (expresion -> expresion MODULO expresion .)
    $end            reduce using rule 78 (expresion -> expresion MODULO expresion .)
    LLADER          reduce using rule 78 (expresion -> expresion MODULO expresion .)
    PARDER          reduce using rule 78 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 78 (expresion -> expresion MODULO expresion .)
    CORDER          reduce using rule 78 (expresion -> expresion MODULO expresion .)
    POTENCIA        shift and go to state 109

  ! POTENCIA        [ reduce using rule 78 (expresion -> expresion MODULO expresion .) ]
  ! MAS             [ shift and go to state 104 ]
  ! MENOS           [ shift and go to state 105 ]
  ! POR             [ shift and go to state 106 ]
  ! DIVIDIDO        [ shift and go to state 107 ]
  ! MODULO          [ shift and go to state 108 ]
  ! MAYOR           [ shift and go to state 110 ]
  ! MENOR           [ shift and go to state 111 ]
  ! MAYORIGUAL      [ shift and go to state 112 ]
  ! MENORIGUAL      [ shift and go to state 113 ]
  ! IGUALACION      [ shift and go to state 114 ]
  ! DISTINTO        [ shift and go to state 115 ]
  ! AND             [ shift and go to state 116 ]
  ! OR              [ shift and go to state 117 ]
  ! PUNTO           [ shift and go to state 118 ]


state 160

    (79) expresion -> expresion POTENCIA expresion .
    (74) expresion -> expresion . MAS expresion
    (75) expresion -> expresion . MENOS expresion
    (76) expresion -> expresion . POR expresion
    (77) expresion -> expresion . DIVIDIDO expresion
    (78) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MAYOR expresion
    (82) expresion -> expresion . MENOR expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORIGUAL expresion
    (85) expresion -> expresion . IGUALACION expresion
    (86) expresion -> expresion . DISTINTO expresion
    (87) expresion -> expresion . AND expresion
    (88) expresion -> expresion . OR expresion
    (113) casteo -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (107) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAS             reduce using rule 79 (expresion -> expresion POTENCIA expresion .)
    MENOS           reduce using rule 79 (expresion -> expresion POTENCIA expresion .)
    POR             reduce using rule 79 (expresion -> expresion POTENCIA expresion .)
    DIVIDIDO        reduce using rule 79 (expresion -> expresion POTENCIA expresion .)
    MODULO          reduce using rule 79 (expresion -> expresion POTENCIA expresion .)
    MAYOR           reduce using rule 79 (expresion -> expresion POTENCIA expresion .)
    MENOR           reduce using rule 79 (expresion -> expresion POTENCIA expresion .)
    MAYORIGUAL      reduce using rule 79 (expresion -> expresion POTENCIA expresion .)
    MENORIGUAL      reduce using rule 79 (expresion -> expresion POTENCIA expresion .)
    IGUALACION      reduce using rule 79 (expresion -> expresion POTENCIA expresion .)
    DISTINTO        reduce using rule 79 (expresion -> expresion POTENCIA expresion .)
    AND             reduce using rule 79 (expresion -> expresion POTENCIA expresion .)
    OR              reduce using rule 79 (expresion -> expresion POTENCIA expresion .)
    PUNTO           reduce using rule 79 (expresion -> expresion POTENCIA expresion .)
    PTOYCOMA        reduce using rule 79 (expresion -> expresion POTENCIA expresion .)
    error           reduce using rule 79 (expresion -> expresion POTENCIA expresion .)
    FUNCTION        reduce using rule 79 (expresion -> expresion POTENCIA expresion .)
    COMENTARIO      reduce using rule 79 (expresion -> expresion POTENCIA expresion .)
    COMENTARIO_MULTILINEA reduce using rule 79 (expresion -> expresion POTENCIA expresion .)
    LET             reduce using rule 79 (expresion -> expresion POTENCIA expresion .)
    ID              reduce using rule 79 (expresion -> expresion POTENCIA expresion .)
    CONSOLE         reduce using rule 79 (expresion -> expresion POTENCIA expresion .)
    IF              reduce using rule 79 (expresion -> expresion POTENCIA expresion .)
    WHILE           reduce using rule 79 (expresion -> expresion POTENCIA expresion .)
    FOR             reduce using rule 79 (expresion -> expresion POTENCIA expresion .)
    RETURN          reduce using rule 79 (expresion -> expresion POTENCIA expresion .)
    BREAK           reduce using rule 79 (expresion -> expresion POTENCIA expresion .)
    CONTINUE        reduce using rule 79 (expresion -> expresion POTENCIA expresion .)
    INTERFACE       reduce using rule 79 (expresion -> expresion POTENCIA expresion .)
    DECREMENTO      reduce using rule 79 (expresion -> expresion POTENCIA expresion .)
    INCREMENTO      reduce using rule 79 (expresion -> expresion POTENCIA expresion .)
    $end            reduce using rule 79 (expresion -> expresion POTENCIA expresion .)
    LLADER          reduce using rule 79 (expresion -> expresion POTENCIA expresion .)
    PARDER          reduce using rule 79 (expresion -> expresion POTENCIA expresion .)
    COMA            reduce using rule 79 (expresion -> expresion POTENCIA expresion .)
    CORDER          reduce using rule 79 (expresion -> expresion POTENCIA expresion .)
    POTENCIA        shift and go to state 109

  ! POTENCIA        [ reduce using rule 79 (expresion -> expresion POTENCIA expresion .) ]
  ! MAS             [ shift and go to state 104 ]
  ! MENOS           [ shift and go to state 105 ]
  ! POR             [ shift and go to state 106 ]
  ! DIVIDIDO        [ shift and go to state 107 ]
  ! MODULO          [ shift and go to state 108 ]
  ! MAYOR           [ shift and go to state 110 ]
  ! MENOR           [ shift and go to state 111 ]
  ! MAYORIGUAL      [ shift and go to state 112 ]
  ! MENORIGUAL      [ shift and go to state 113 ]
  ! IGUALACION      [ shift and go to state 114 ]
  ! DISTINTO        [ shift and go to state 115 ]
  ! AND             [ shift and go to state 116 ]
  ! OR              [ shift and go to state 117 ]
  ! PUNTO           [ shift and go to state 118 ]


state 161

    (81) expresion -> expresion MAYOR expresion .
    (74) expresion -> expresion . MAS expresion
    (75) expresion -> expresion . MENOS expresion
    (76) expresion -> expresion . POR expresion
    (77) expresion -> expresion . DIVIDIDO expresion
    (78) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MAYOR expresion
    (82) expresion -> expresion . MENOR expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORIGUAL expresion
    (85) expresion -> expresion . IGUALACION expresion
    (86) expresion -> expresion . DISTINTO expresion
    (87) expresion -> expresion . AND expresion
    (88) expresion -> expresion . OR expresion
    (113) casteo -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (107) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAYOR           reduce using rule 81 (expresion -> expresion MAYOR expresion .)
    MENOR           reduce using rule 81 (expresion -> expresion MAYOR expresion .)
    MAYORIGUAL      reduce using rule 81 (expresion -> expresion MAYOR expresion .)
    MENORIGUAL      reduce using rule 81 (expresion -> expresion MAYOR expresion .)
    IGUALACION      reduce using rule 81 (expresion -> expresion MAYOR expresion .)
    DISTINTO        reduce using rule 81 (expresion -> expresion MAYOR expresion .)
    AND             reduce using rule 81 (expresion -> expresion MAYOR expresion .)
    OR              reduce using rule 81 (expresion -> expresion MAYOR expresion .)
    PUNTO           reduce using rule 81 (expresion -> expresion MAYOR expresion .)
    PTOYCOMA        reduce using rule 81 (expresion -> expresion MAYOR expresion .)
    error           reduce using rule 81 (expresion -> expresion MAYOR expresion .)
    FUNCTION        reduce using rule 81 (expresion -> expresion MAYOR expresion .)
    COMENTARIO      reduce using rule 81 (expresion -> expresion MAYOR expresion .)
    COMENTARIO_MULTILINEA reduce using rule 81 (expresion -> expresion MAYOR expresion .)
    LET             reduce using rule 81 (expresion -> expresion MAYOR expresion .)
    ID              reduce using rule 81 (expresion -> expresion MAYOR expresion .)
    CONSOLE         reduce using rule 81 (expresion -> expresion MAYOR expresion .)
    IF              reduce using rule 81 (expresion -> expresion MAYOR expresion .)
    WHILE           reduce using rule 81 (expresion -> expresion MAYOR expresion .)
    FOR             reduce using rule 81 (expresion -> expresion MAYOR expresion .)
    RETURN          reduce using rule 81 (expresion -> expresion MAYOR expresion .)
    BREAK           reduce using rule 81 (expresion -> expresion MAYOR expresion .)
    CONTINUE        reduce using rule 81 (expresion -> expresion MAYOR expresion .)
    INTERFACE       reduce using rule 81 (expresion -> expresion MAYOR expresion .)
    DECREMENTO      reduce using rule 81 (expresion -> expresion MAYOR expresion .)
    INCREMENTO      reduce using rule 81 (expresion -> expresion MAYOR expresion .)
    $end            reduce using rule 81 (expresion -> expresion MAYOR expresion .)
    LLADER          reduce using rule 81 (expresion -> expresion MAYOR expresion .)
    PARDER          reduce using rule 81 (expresion -> expresion MAYOR expresion .)
    COMA            reduce using rule 81 (expresion -> expresion MAYOR expresion .)
    CORDER          reduce using rule 81 (expresion -> expresion MAYOR expresion .)
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIVIDIDO        shift and go to state 107
    MODULO          shift and go to state 108
    POTENCIA        shift and go to state 109

  ! MAS             [ reduce using rule 81 (expresion -> expresion MAYOR expresion .) ]
  ! MENOS           [ reduce using rule 81 (expresion -> expresion MAYOR expresion .) ]
  ! POR             [ reduce using rule 81 (expresion -> expresion MAYOR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 81 (expresion -> expresion MAYOR expresion .) ]
  ! MODULO          [ reduce using rule 81 (expresion -> expresion MAYOR expresion .) ]
  ! POTENCIA        [ reduce using rule 81 (expresion -> expresion MAYOR expresion .) ]
  ! MAYOR           [ shift and go to state 110 ]
  ! MENOR           [ shift and go to state 111 ]
  ! MAYORIGUAL      [ shift and go to state 112 ]
  ! MENORIGUAL      [ shift and go to state 113 ]
  ! IGUALACION      [ shift and go to state 114 ]
  ! DISTINTO        [ shift and go to state 115 ]
  ! AND             [ shift and go to state 116 ]
  ! OR              [ shift and go to state 117 ]
  ! PUNTO           [ shift and go to state 118 ]


state 162

    (82) expresion -> expresion MENOR expresion .
    (74) expresion -> expresion . MAS expresion
    (75) expresion -> expresion . MENOS expresion
    (76) expresion -> expresion . POR expresion
    (77) expresion -> expresion . DIVIDIDO expresion
    (78) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MAYOR expresion
    (82) expresion -> expresion . MENOR expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORIGUAL expresion
    (85) expresion -> expresion . IGUALACION expresion
    (86) expresion -> expresion . DISTINTO expresion
    (87) expresion -> expresion . AND expresion
    (88) expresion -> expresion . OR expresion
    (113) casteo -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (107) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAYOR           reduce using rule 82 (expresion -> expresion MENOR expresion .)
    MENOR           reduce using rule 82 (expresion -> expresion MENOR expresion .)
    MAYORIGUAL      reduce using rule 82 (expresion -> expresion MENOR expresion .)
    MENORIGUAL      reduce using rule 82 (expresion -> expresion MENOR expresion .)
    IGUALACION      reduce using rule 82 (expresion -> expresion MENOR expresion .)
    DISTINTO        reduce using rule 82 (expresion -> expresion MENOR expresion .)
    AND             reduce using rule 82 (expresion -> expresion MENOR expresion .)
    OR              reduce using rule 82 (expresion -> expresion MENOR expresion .)
    PUNTO           reduce using rule 82 (expresion -> expresion MENOR expresion .)
    PTOYCOMA        reduce using rule 82 (expresion -> expresion MENOR expresion .)
    error           reduce using rule 82 (expresion -> expresion MENOR expresion .)
    FUNCTION        reduce using rule 82 (expresion -> expresion MENOR expresion .)
    COMENTARIO      reduce using rule 82 (expresion -> expresion MENOR expresion .)
    COMENTARIO_MULTILINEA reduce using rule 82 (expresion -> expresion MENOR expresion .)
    LET             reduce using rule 82 (expresion -> expresion MENOR expresion .)
    ID              reduce using rule 82 (expresion -> expresion MENOR expresion .)
    CONSOLE         reduce using rule 82 (expresion -> expresion MENOR expresion .)
    IF              reduce using rule 82 (expresion -> expresion MENOR expresion .)
    WHILE           reduce using rule 82 (expresion -> expresion MENOR expresion .)
    FOR             reduce using rule 82 (expresion -> expresion MENOR expresion .)
    RETURN          reduce using rule 82 (expresion -> expresion MENOR expresion .)
    BREAK           reduce using rule 82 (expresion -> expresion MENOR expresion .)
    CONTINUE        reduce using rule 82 (expresion -> expresion MENOR expresion .)
    INTERFACE       reduce using rule 82 (expresion -> expresion MENOR expresion .)
    DECREMENTO      reduce using rule 82 (expresion -> expresion MENOR expresion .)
    INCREMENTO      reduce using rule 82 (expresion -> expresion MENOR expresion .)
    $end            reduce using rule 82 (expresion -> expresion MENOR expresion .)
    LLADER          reduce using rule 82 (expresion -> expresion MENOR expresion .)
    PARDER          reduce using rule 82 (expresion -> expresion MENOR expresion .)
    COMA            reduce using rule 82 (expresion -> expresion MENOR expresion .)
    CORDER          reduce using rule 82 (expresion -> expresion MENOR expresion .)
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIVIDIDO        shift and go to state 107
    MODULO          shift and go to state 108
    POTENCIA        shift and go to state 109

  ! MAS             [ reduce using rule 82 (expresion -> expresion MENOR expresion .) ]
  ! MENOS           [ reduce using rule 82 (expresion -> expresion MENOR expresion .) ]
  ! POR             [ reduce using rule 82 (expresion -> expresion MENOR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 82 (expresion -> expresion MENOR expresion .) ]
  ! MODULO          [ reduce using rule 82 (expresion -> expresion MENOR expresion .) ]
  ! POTENCIA        [ reduce using rule 82 (expresion -> expresion MENOR expresion .) ]
  ! MAYOR           [ shift and go to state 110 ]
  ! MENOR           [ shift and go to state 111 ]
  ! MAYORIGUAL      [ shift and go to state 112 ]
  ! MENORIGUAL      [ shift and go to state 113 ]
  ! IGUALACION      [ shift and go to state 114 ]
  ! DISTINTO        [ shift and go to state 115 ]
  ! AND             [ shift and go to state 116 ]
  ! OR              [ shift and go to state 117 ]
  ! PUNTO           [ shift and go to state 118 ]


state 163

    (83) expresion -> expresion MAYORIGUAL expresion .
    (74) expresion -> expresion . MAS expresion
    (75) expresion -> expresion . MENOS expresion
    (76) expresion -> expresion . POR expresion
    (77) expresion -> expresion . DIVIDIDO expresion
    (78) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MAYOR expresion
    (82) expresion -> expresion . MENOR expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORIGUAL expresion
    (85) expresion -> expresion . IGUALACION expresion
    (86) expresion -> expresion . DISTINTO expresion
    (87) expresion -> expresion . AND expresion
    (88) expresion -> expresion . OR expresion
    (113) casteo -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (107) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAYOR           reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    MENOR           reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    MENORIGUAL      reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    IGUALACION      reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    DISTINTO        reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    AND             reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    OR              reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    PUNTO           reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    PTOYCOMA        reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    error           reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    FUNCTION        reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    COMENTARIO      reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    COMENTARIO_MULTILINEA reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    LET             reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    ID              reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    CONSOLE         reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    IF              reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    WHILE           reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    FOR             reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    RETURN          reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    BREAK           reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    CONTINUE        reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    INTERFACE       reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    DECREMENTO      reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    INCREMENTO      reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    $end            reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    LLADER          reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    PARDER          reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    COMA            reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    CORDER          reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .)
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIVIDIDO        shift and go to state 107
    MODULO          shift and go to state 108
    POTENCIA        shift and go to state 109

  ! MAS             [ reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! POR             [ reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! DIVIDIDO        [ reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! POTENCIA        [ reduce using rule 83 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MAYOR           [ shift and go to state 110 ]
  ! MENOR           [ shift and go to state 111 ]
  ! MAYORIGUAL      [ shift and go to state 112 ]
  ! MENORIGUAL      [ shift and go to state 113 ]
  ! IGUALACION      [ shift and go to state 114 ]
  ! DISTINTO        [ shift and go to state 115 ]
  ! AND             [ shift and go to state 116 ]
  ! OR              [ shift and go to state 117 ]
  ! PUNTO           [ shift and go to state 118 ]


state 164

    (84) expresion -> expresion MENORIGUAL expresion .
    (74) expresion -> expresion . MAS expresion
    (75) expresion -> expresion . MENOS expresion
    (76) expresion -> expresion . POR expresion
    (77) expresion -> expresion . DIVIDIDO expresion
    (78) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MAYOR expresion
    (82) expresion -> expresion . MENOR expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORIGUAL expresion
    (85) expresion -> expresion . IGUALACION expresion
    (86) expresion -> expresion . DISTINTO expresion
    (87) expresion -> expresion . AND expresion
    (88) expresion -> expresion . OR expresion
    (113) casteo -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (107) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAYOR           reduce using rule 84 (expresion -> expresion MENORIGUAL expresion .)
    MENOR           reduce using rule 84 (expresion -> expresion MENORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 84 (expresion -> expresion MENORIGUAL expresion .)
    MENORIGUAL      reduce using rule 84 (expresion -> expresion MENORIGUAL expresion .)
    IGUALACION      reduce using rule 84 (expresion -> expresion MENORIGUAL expresion .)
    DISTINTO        reduce using rule 84 (expresion -> expresion MENORIGUAL expresion .)
    AND             reduce using rule 84 (expresion -> expresion MENORIGUAL expresion .)
    OR              reduce using rule 84 (expresion -> expresion MENORIGUAL expresion .)
    PUNTO           reduce using rule 84 (expresion -> expresion MENORIGUAL expresion .)
    PTOYCOMA        reduce using rule 84 (expresion -> expresion MENORIGUAL expresion .)
    error           reduce using rule 84 (expresion -> expresion MENORIGUAL expresion .)
    FUNCTION        reduce using rule 84 (expresion -> expresion MENORIGUAL expresion .)
    COMENTARIO      reduce using rule 84 (expresion -> expresion MENORIGUAL expresion .)
    COMENTARIO_MULTILINEA reduce using rule 84 (expresion -> expresion MENORIGUAL expresion .)
    LET             reduce using rule 84 (expresion -> expresion MENORIGUAL expresion .)
    ID              reduce using rule 84 (expresion -> expresion MENORIGUAL expresion .)
    CONSOLE         reduce using rule 84 (expresion -> expresion MENORIGUAL expresion .)
    IF              reduce using rule 84 (expresion -> expresion MENORIGUAL expresion .)
    WHILE           reduce using rule 84 (expresion -> expresion MENORIGUAL expresion .)
    FOR             reduce using rule 84 (expresion -> expresion MENORIGUAL expresion .)
    RETURN          reduce using rule 84 (expresion -> expresion MENORIGUAL expresion .)
    BREAK           reduce using rule 84 (expresion -> expresion MENORIGUAL expresion .)
    CONTINUE        reduce using rule 84 (expresion -> expresion MENORIGUAL expresion .)
    INTERFACE       reduce using rule 84 (expresion -> expresion MENORIGUAL expresion .)
    DECREMENTO      reduce using rule 84 (expresion -> expresion MENORIGUAL expresion .)
    INCREMENTO      reduce using rule 84 (expresion -> expresion MENORIGUAL expresion .)
    $end            reduce using rule 84 (expresion -> expresion MENORIGUAL expresion .)
    LLADER          reduce using rule 84 (expresion -> expresion MENORIGUAL expresion .)
    PARDER          reduce using rule 84 (expresion -> expresion MENORIGUAL expresion .)
    COMA            reduce using rule 84 (expresion -> expresion MENORIGUAL expresion .)
    CORDER          reduce using rule 84 (expresion -> expresion MENORIGUAL expresion .)
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIVIDIDO        shift and go to state 107
    MODULO          shift and go to state 108
    POTENCIA        shift and go to state 109

  ! MAS             [ reduce using rule 84 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 84 (expresion -> expresion MENORIGUAL expresion .) ]
  ! POR             [ reduce using rule 84 (expresion -> expresion MENORIGUAL expresion .) ]
  ! DIVIDIDO        [ reduce using rule 84 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 84 (expresion -> expresion MENORIGUAL expresion .) ]
  ! POTENCIA        [ reduce using rule 84 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MAYOR           [ shift and go to state 110 ]
  ! MENOR           [ shift and go to state 111 ]
  ! MAYORIGUAL      [ shift and go to state 112 ]
  ! MENORIGUAL      [ shift and go to state 113 ]
  ! IGUALACION      [ shift and go to state 114 ]
  ! DISTINTO        [ shift and go to state 115 ]
  ! AND             [ shift and go to state 116 ]
  ! OR              [ shift and go to state 117 ]
  ! PUNTO           [ shift and go to state 118 ]


state 165

    (85) expresion -> expresion IGUALACION expresion .
    (74) expresion -> expresion . MAS expresion
    (75) expresion -> expresion . MENOS expresion
    (76) expresion -> expresion . POR expresion
    (77) expresion -> expresion . DIVIDIDO expresion
    (78) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MAYOR expresion
    (82) expresion -> expresion . MENOR expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORIGUAL expresion
    (85) expresion -> expresion . IGUALACION expresion
    (86) expresion -> expresion . DISTINTO expresion
    (87) expresion -> expresion . AND expresion
    (88) expresion -> expresion . OR expresion
    (113) casteo -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (107) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAYOR           reduce using rule 85 (expresion -> expresion IGUALACION expresion .)
    MENOR           reduce using rule 85 (expresion -> expresion IGUALACION expresion .)
    MAYORIGUAL      reduce using rule 85 (expresion -> expresion IGUALACION expresion .)
    MENORIGUAL      reduce using rule 85 (expresion -> expresion IGUALACION expresion .)
    IGUALACION      reduce using rule 85 (expresion -> expresion IGUALACION expresion .)
    DISTINTO        reduce using rule 85 (expresion -> expresion IGUALACION expresion .)
    AND             reduce using rule 85 (expresion -> expresion IGUALACION expresion .)
    OR              reduce using rule 85 (expresion -> expresion IGUALACION expresion .)
    PUNTO           reduce using rule 85 (expresion -> expresion IGUALACION expresion .)
    PTOYCOMA        reduce using rule 85 (expresion -> expresion IGUALACION expresion .)
    error           reduce using rule 85 (expresion -> expresion IGUALACION expresion .)
    FUNCTION        reduce using rule 85 (expresion -> expresion IGUALACION expresion .)
    COMENTARIO      reduce using rule 85 (expresion -> expresion IGUALACION expresion .)
    COMENTARIO_MULTILINEA reduce using rule 85 (expresion -> expresion IGUALACION expresion .)
    LET             reduce using rule 85 (expresion -> expresion IGUALACION expresion .)
    ID              reduce using rule 85 (expresion -> expresion IGUALACION expresion .)
    CONSOLE         reduce using rule 85 (expresion -> expresion IGUALACION expresion .)
    IF              reduce using rule 85 (expresion -> expresion IGUALACION expresion .)
    WHILE           reduce using rule 85 (expresion -> expresion IGUALACION expresion .)
    FOR             reduce using rule 85 (expresion -> expresion IGUALACION expresion .)
    RETURN          reduce using rule 85 (expresion -> expresion IGUALACION expresion .)
    BREAK           reduce using rule 85 (expresion -> expresion IGUALACION expresion .)
    CONTINUE        reduce using rule 85 (expresion -> expresion IGUALACION expresion .)
    INTERFACE       reduce using rule 85 (expresion -> expresion IGUALACION expresion .)
    DECREMENTO      reduce using rule 85 (expresion -> expresion IGUALACION expresion .)
    INCREMENTO      reduce using rule 85 (expresion -> expresion IGUALACION expresion .)
    $end            reduce using rule 85 (expresion -> expresion IGUALACION expresion .)
    LLADER          reduce using rule 85 (expresion -> expresion IGUALACION expresion .)
    PARDER          reduce using rule 85 (expresion -> expresion IGUALACION expresion .)
    COMA            reduce using rule 85 (expresion -> expresion IGUALACION expresion .)
    CORDER          reduce using rule 85 (expresion -> expresion IGUALACION expresion .)
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIVIDIDO        shift and go to state 107
    MODULO          shift and go to state 108
    POTENCIA        shift and go to state 109

  ! MAS             [ reduce using rule 85 (expresion -> expresion IGUALACION expresion .) ]
  ! MENOS           [ reduce using rule 85 (expresion -> expresion IGUALACION expresion .) ]
  ! POR             [ reduce using rule 85 (expresion -> expresion IGUALACION expresion .) ]
  ! DIVIDIDO        [ reduce using rule 85 (expresion -> expresion IGUALACION expresion .) ]
  ! MODULO          [ reduce using rule 85 (expresion -> expresion IGUALACION expresion .) ]
  ! POTENCIA        [ reduce using rule 85 (expresion -> expresion IGUALACION expresion .) ]
  ! MAYOR           [ shift and go to state 110 ]
  ! MENOR           [ shift and go to state 111 ]
  ! MAYORIGUAL      [ shift and go to state 112 ]
  ! MENORIGUAL      [ shift and go to state 113 ]
  ! IGUALACION      [ shift and go to state 114 ]
  ! DISTINTO        [ shift and go to state 115 ]
  ! AND             [ shift and go to state 116 ]
  ! OR              [ shift and go to state 117 ]
  ! PUNTO           [ shift and go to state 118 ]


state 166

    (86) expresion -> expresion DISTINTO expresion .
    (74) expresion -> expresion . MAS expresion
    (75) expresion -> expresion . MENOS expresion
    (76) expresion -> expresion . POR expresion
    (77) expresion -> expresion . DIVIDIDO expresion
    (78) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MAYOR expresion
    (82) expresion -> expresion . MENOR expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORIGUAL expresion
    (85) expresion -> expresion . IGUALACION expresion
    (86) expresion -> expresion . DISTINTO expresion
    (87) expresion -> expresion . AND expresion
    (88) expresion -> expresion . OR expresion
    (113) casteo -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (107) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAYOR           reduce using rule 86 (expresion -> expresion DISTINTO expresion .)
    MENOR           reduce using rule 86 (expresion -> expresion DISTINTO expresion .)
    MAYORIGUAL      reduce using rule 86 (expresion -> expresion DISTINTO expresion .)
    MENORIGUAL      reduce using rule 86 (expresion -> expresion DISTINTO expresion .)
    IGUALACION      reduce using rule 86 (expresion -> expresion DISTINTO expresion .)
    DISTINTO        reduce using rule 86 (expresion -> expresion DISTINTO expresion .)
    AND             reduce using rule 86 (expresion -> expresion DISTINTO expresion .)
    OR              reduce using rule 86 (expresion -> expresion DISTINTO expresion .)
    PUNTO           reduce using rule 86 (expresion -> expresion DISTINTO expresion .)
    PTOYCOMA        reduce using rule 86 (expresion -> expresion DISTINTO expresion .)
    error           reduce using rule 86 (expresion -> expresion DISTINTO expresion .)
    FUNCTION        reduce using rule 86 (expresion -> expresion DISTINTO expresion .)
    COMENTARIO      reduce using rule 86 (expresion -> expresion DISTINTO expresion .)
    COMENTARIO_MULTILINEA reduce using rule 86 (expresion -> expresion DISTINTO expresion .)
    LET             reduce using rule 86 (expresion -> expresion DISTINTO expresion .)
    ID              reduce using rule 86 (expresion -> expresion DISTINTO expresion .)
    CONSOLE         reduce using rule 86 (expresion -> expresion DISTINTO expresion .)
    IF              reduce using rule 86 (expresion -> expresion DISTINTO expresion .)
    WHILE           reduce using rule 86 (expresion -> expresion DISTINTO expresion .)
    FOR             reduce using rule 86 (expresion -> expresion DISTINTO expresion .)
    RETURN          reduce using rule 86 (expresion -> expresion DISTINTO expresion .)
    BREAK           reduce using rule 86 (expresion -> expresion DISTINTO expresion .)
    CONTINUE        reduce using rule 86 (expresion -> expresion DISTINTO expresion .)
    INTERFACE       reduce using rule 86 (expresion -> expresion DISTINTO expresion .)
    DECREMENTO      reduce using rule 86 (expresion -> expresion DISTINTO expresion .)
    INCREMENTO      reduce using rule 86 (expresion -> expresion DISTINTO expresion .)
    $end            reduce using rule 86 (expresion -> expresion DISTINTO expresion .)
    LLADER          reduce using rule 86 (expresion -> expresion DISTINTO expresion .)
    PARDER          reduce using rule 86 (expresion -> expresion DISTINTO expresion .)
    COMA            reduce using rule 86 (expresion -> expresion DISTINTO expresion .)
    CORDER          reduce using rule 86 (expresion -> expresion DISTINTO expresion .)
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIVIDIDO        shift and go to state 107
    MODULO          shift and go to state 108
    POTENCIA        shift and go to state 109

  ! MAS             [ reduce using rule 86 (expresion -> expresion DISTINTO expresion .) ]
  ! MENOS           [ reduce using rule 86 (expresion -> expresion DISTINTO expresion .) ]
  ! POR             [ reduce using rule 86 (expresion -> expresion DISTINTO expresion .) ]
  ! DIVIDIDO        [ reduce using rule 86 (expresion -> expresion DISTINTO expresion .) ]
  ! MODULO          [ reduce using rule 86 (expresion -> expresion DISTINTO expresion .) ]
  ! POTENCIA        [ reduce using rule 86 (expresion -> expresion DISTINTO expresion .) ]
  ! MAYOR           [ shift and go to state 110 ]
  ! MENOR           [ shift and go to state 111 ]
  ! MAYORIGUAL      [ shift and go to state 112 ]
  ! MENORIGUAL      [ shift and go to state 113 ]
  ! IGUALACION      [ shift and go to state 114 ]
  ! DISTINTO        [ shift and go to state 115 ]
  ! AND             [ shift and go to state 116 ]
  ! OR              [ shift and go to state 117 ]
  ! PUNTO           [ shift and go to state 118 ]


state 167

    (87) expresion -> expresion AND expresion .
    (74) expresion -> expresion . MAS expresion
    (75) expresion -> expresion . MENOS expresion
    (76) expresion -> expresion . POR expresion
    (77) expresion -> expresion . DIVIDIDO expresion
    (78) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MAYOR expresion
    (82) expresion -> expresion . MENOR expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORIGUAL expresion
    (85) expresion -> expresion . IGUALACION expresion
    (86) expresion -> expresion . DISTINTO expresion
    (87) expresion -> expresion . AND expresion
    (88) expresion -> expresion . OR expresion
    (113) casteo -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (107) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    AND             reduce using rule 87 (expresion -> expresion AND expresion .)
    OR              reduce using rule 87 (expresion -> expresion AND expresion .)
    PUNTO           reduce using rule 87 (expresion -> expresion AND expresion .)
    PTOYCOMA        reduce using rule 87 (expresion -> expresion AND expresion .)
    error           reduce using rule 87 (expresion -> expresion AND expresion .)
    FUNCTION        reduce using rule 87 (expresion -> expresion AND expresion .)
    COMENTARIO      reduce using rule 87 (expresion -> expresion AND expresion .)
    COMENTARIO_MULTILINEA reduce using rule 87 (expresion -> expresion AND expresion .)
    LET             reduce using rule 87 (expresion -> expresion AND expresion .)
    ID              reduce using rule 87 (expresion -> expresion AND expresion .)
    CONSOLE         reduce using rule 87 (expresion -> expresion AND expresion .)
    IF              reduce using rule 87 (expresion -> expresion AND expresion .)
    WHILE           reduce using rule 87 (expresion -> expresion AND expresion .)
    FOR             reduce using rule 87 (expresion -> expresion AND expresion .)
    RETURN          reduce using rule 87 (expresion -> expresion AND expresion .)
    BREAK           reduce using rule 87 (expresion -> expresion AND expresion .)
    CONTINUE        reduce using rule 87 (expresion -> expresion AND expresion .)
    INTERFACE       reduce using rule 87 (expresion -> expresion AND expresion .)
    DECREMENTO      reduce using rule 87 (expresion -> expresion AND expresion .)
    INCREMENTO      reduce using rule 87 (expresion -> expresion AND expresion .)
    $end            reduce using rule 87 (expresion -> expresion AND expresion .)
    LLADER          reduce using rule 87 (expresion -> expresion AND expresion .)
    PARDER          reduce using rule 87 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 87 (expresion -> expresion AND expresion .)
    CORDER          reduce using rule 87 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIVIDIDO        shift and go to state 107
    MODULO          shift and go to state 108
    POTENCIA        shift and go to state 109
    MAYOR           shift and go to state 110
    MENOR           shift and go to state 111
    MAYORIGUAL      shift and go to state 112
    MENORIGUAL      shift and go to state 113
    IGUALACION      shift and go to state 114
    DISTINTO        shift and go to state 115

  ! MAS             [ reduce using rule 87 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 87 (expresion -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 87 (expresion -> expresion AND expresion .) ]
  ! DIVIDIDO        [ reduce using rule 87 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 87 (expresion -> expresion AND expresion .) ]
  ! POTENCIA        [ reduce using rule 87 (expresion -> expresion AND expresion .) ]
  ! MAYOR           [ reduce using rule 87 (expresion -> expresion AND expresion .) ]
  ! MENOR           [ reduce using rule 87 (expresion -> expresion AND expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 87 (expresion -> expresion AND expresion .) ]
  ! MENORIGUAL      [ reduce using rule 87 (expresion -> expresion AND expresion .) ]
  ! IGUALACION      [ reduce using rule 87 (expresion -> expresion AND expresion .) ]
  ! DISTINTO        [ reduce using rule 87 (expresion -> expresion AND expresion .) ]
  ! AND             [ shift and go to state 116 ]
  ! OR              [ shift and go to state 117 ]
  ! PUNTO           [ shift and go to state 118 ]


state 168

    (88) expresion -> expresion OR expresion .
    (74) expresion -> expresion . MAS expresion
    (75) expresion -> expresion . MENOS expresion
    (76) expresion -> expresion . POR expresion
    (77) expresion -> expresion . DIVIDIDO expresion
    (78) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MAYOR expresion
    (82) expresion -> expresion . MENOR expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORIGUAL expresion
    (85) expresion -> expresion . IGUALACION expresion
    (86) expresion -> expresion . DISTINTO expresion
    (87) expresion -> expresion . AND expresion
    (88) expresion -> expresion . OR expresion
    (113) casteo -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (107) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    OR              reduce using rule 88 (expresion -> expresion OR expresion .)
    PUNTO           reduce using rule 88 (expresion -> expresion OR expresion .)
    PTOYCOMA        reduce using rule 88 (expresion -> expresion OR expresion .)
    error           reduce using rule 88 (expresion -> expresion OR expresion .)
    FUNCTION        reduce using rule 88 (expresion -> expresion OR expresion .)
    COMENTARIO      reduce using rule 88 (expresion -> expresion OR expresion .)
    COMENTARIO_MULTILINEA reduce using rule 88 (expresion -> expresion OR expresion .)
    LET             reduce using rule 88 (expresion -> expresion OR expresion .)
    ID              reduce using rule 88 (expresion -> expresion OR expresion .)
    CONSOLE         reduce using rule 88 (expresion -> expresion OR expresion .)
    IF              reduce using rule 88 (expresion -> expresion OR expresion .)
    WHILE           reduce using rule 88 (expresion -> expresion OR expresion .)
    FOR             reduce using rule 88 (expresion -> expresion OR expresion .)
    RETURN          reduce using rule 88 (expresion -> expresion OR expresion .)
    BREAK           reduce using rule 88 (expresion -> expresion OR expresion .)
    CONTINUE        reduce using rule 88 (expresion -> expresion OR expresion .)
    INTERFACE       reduce using rule 88 (expresion -> expresion OR expresion .)
    DECREMENTO      reduce using rule 88 (expresion -> expresion OR expresion .)
    INCREMENTO      reduce using rule 88 (expresion -> expresion OR expresion .)
    $end            reduce using rule 88 (expresion -> expresion OR expresion .)
    LLADER          reduce using rule 88 (expresion -> expresion OR expresion .)
    PARDER          reduce using rule 88 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 88 (expresion -> expresion OR expresion .)
    CORDER          reduce using rule 88 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIVIDIDO        shift and go to state 107
    MODULO          shift and go to state 108
    POTENCIA        shift and go to state 109
    MAYOR           shift and go to state 110
    MENOR           shift and go to state 111
    MAYORIGUAL      shift and go to state 112
    MENORIGUAL      shift and go to state 113
    IGUALACION      shift and go to state 114
    DISTINTO        shift and go to state 115
    AND             shift and go to state 116

  ! MAS             [ reduce using rule 88 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 88 (expresion -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 88 (expresion -> expresion OR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 88 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 88 (expresion -> expresion OR expresion .) ]
  ! POTENCIA        [ reduce using rule 88 (expresion -> expresion OR expresion .) ]
  ! MAYOR           [ reduce using rule 88 (expresion -> expresion OR expresion .) ]
  ! MENOR           [ reduce using rule 88 (expresion -> expresion OR expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 88 (expresion -> expresion OR expresion .) ]
  ! MENORIGUAL      [ reduce using rule 88 (expresion -> expresion OR expresion .) ]
  ! IGUALACION      [ reduce using rule 88 (expresion -> expresion OR expresion .) ]
  ! DISTINTO        [ reduce using rule 88 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 88 (expresion -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 117 ]
  ! PUNTO           [ shift and go to state 118 ]


state 169

    (113) casteo -> expresion PUNTO TOSTRING . PARIZQ PARDER

    PARIZQ          shift and go to state 207


state 170

    (107) aproximacion -> expresion PUNTO TOFIXED . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 208


state 171

    (108) exponencial -> expresion PUNTO TOEXPONENTIAL . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 209


state 172

    (111) separador -> expresion PUNTO SPLIT . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 210


state 173

    (112) concatenacion -> expresion PUNTO CONCAT . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 211


state 174

    (93) expresion -> PARIZQ expresion PARDER .

    MAS             reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    POR             reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    MODULO          reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    MENOR           reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    IGUALACION      reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    DISTINTO        reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    AND             reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    OR              reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    PTOYCOMA        reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    error           reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    FUNCTION        reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    COMENTARIO      reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    COMENTARIO_MULTILINEA reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    LET             reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    ID              reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    IF              reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    WHILE           reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    FOR             reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    RETURN          reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    BREAK           reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    INTERFACE       reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    DECREMENTO      reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    INCREMENTO      reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    $end            reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    LLADER          reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    COMA            reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)
    CORDER          reduce using rule 93 (expresion -> PARIZQ expresion PARDER .)


state 175

    (128) expresion -> ID PUNTO ID .

    MAS             reduce using rule 128 (expresion -> ID PUNTO ID .)
    MENOS           reduce using rule 128 (expresion -> ID PUNTO ID .)
    POR             reduce using rule 128 (expresion -> ID PUNTO ID .)
    DIVIDIDO        reduce using rule 128 (expresion -> ID PUNTO ID .)
    MODULO          reduce using rule 128 (expresion -> ID PUNTO ID .)
    POTENCIA        reduce using rule 128 (expresion -> ID PUNTO ID .)
    MAYOR           reduce using rule 128 (expresion -> ID PUNTO ID .)
    MENOR           reduce using rule 128 (expresion -> ID PUNTO ID .)
    MAYORIGUAL      reduce using rule 128 (expresion -> ID PUNTO ID .)
    MENORIGUAL      reduce using rule 128 (expresion -> ID PUNTO ID .)
    IGUALACION      reduce using rule 128 (expresion -> ID PUNTO ID .)
    DISTINTO        reduce using rule 128 (expresion -> ID PUNTO ID .)
    AND             reduce using rule 128 (expresion -> ID PUNTO ID .)
    OR              reduce using rule 128 (expresion -> ID PUNTO ID .)
    PUNTO           reduce using rule 128 (expresion -> ID PUNTO ID .)
    PTOYCOMA        reduce using rule 128 (expresion -> ID PUNTO ID .)
    error           reduce using rule 128 (expresion -> ID PUNTO ID .)
    FUNCTION        reduce using rule 128 (expresion -> ID PUNTO ID .)
    COMENTARIO      reduce using rule 128 (expresion -> ID PUNTO ID .)
    COMENTARIO_MULTILINEA reduce using rule 128 (expresion -> ID PUNTO ID .)
    LET             reduce using rule 128 (expresion -> ID PUNTO ID .)
    ID              reduce using rule 128 (expresion -> ID PUNTO ID .)
    CONSOLE         reduce using rule 128 (expresion -> ID PUNTO ID .)
    IF              reduce using rule 128 (expresion -> ID PUNTO ID .)
    WHILE           reduce using rule 128 (expresion -> ID PUNTO ID .)
    FOR             reduce using rule 128 (expresion -> ID PUNTO ID .)
    RETURN          reduce using rule 128 (expresion -> ID PUNTO ID .)
    BREAK           reduce using rule 128 (expresion -> ID PUNTO ID .)
    CONTINUE        reduce using rule 128 (expresion -> ID PUNTO ID .)
    INTERFACE       reduce using rule 128 (expresion -> ID PUNTO ID .)
    DECREMENTO      reduce using rule 128 (expresion -> ID PUNTO ID .)
    INCREMENTO      reduce using rule 128 (expresion -> ID PUNTO ID .)
    $end            reduce using rule 128 (expresion -> ID PUNTO ID .)
    LLADER          reduce using rule 128 (expresion -> ID PUNTO ID .)
    PARDER          reduce using rule 128 (expresion -> ID PUNTO ID .)
    COMA            reduce using rule 128 (expresion -> ID PUNTO ID .)
    CORDER          reduce using rule 128 (expresion -> ID PUNTO ID .)


state 176

    (109) expresion -> ID PUNTO TOUPPERCASE . PARIZQ PARDER

    PARIZQ          shift and go to state 212


state 177

    (110) to_minusculas -> ID PUNTO TOLOWERCASE . PARIZQ PARDER

    PARIZQ          shift and go to state 213


state 178

    (114) casteo -> CAST_STRING PARIZQ expresion . PARDER
    (74) expresion -> expresion . MAS expresion
    (75) expresion -> expresion . MENOS expresion
    (76) expresion -> expresion . POR expresion
    (77) expresion -> expresion . DIVIDIDO expresion
    (78) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MAYOR expresion
    (82) expresion -> expresion . MENOR expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORIGUAL expresion
    (85) expresion -> expresion . IGUALACION expresion
    (86) expresion -> expresion . DISTINTO expresion
    (87) expresion -> expresion . AND expresion
    (88) expresion -> expresion . OR expresion
    (113) casteo -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (107) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 214
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIVIDIDO        shift and go to state 107
    MODULO          shift and go to state 108
    POTENCIA        shift and go to state 109
    MAYOR           shift and go to state 110
    MENOR           shift and go to state 111
    MAYORIGUAL      shift and go to state 112
    MENORIGUAL      shift and go to state 113
    IGUALACION      shift and go to state 114
    DISTINTO        shift and go to state 115
    AND             shift and go to state 116
    OR              shift and go to state 117
    PUNTO           shift and go to state 118


state 179

    (142) arreglo -> CORIZQ lista_exp CORDER .

    MAS             reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    MENOS           reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    POR             reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    DIVIDIDO        reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    MODULO          reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    POTENCIA        reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    MAYOR           reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    MENOR           reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    MAYORIGUAL      reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    MENORIGUAL      reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    IGUALACION      reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    DISTINTO        reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    AND             reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    OR              reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    PUNTO           reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    PTOYCOMA        reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    error           reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    FUNCTION        reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    COMENTARIO      reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    COMENTARIO_MULTILINEA reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    LET             reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    ID              reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    CONSOLE         reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    IF              reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    WHILE           reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    FOR             reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    RETURN          reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    BREAK           reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    CONTINUE        reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    INTERFACE       reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    DECREMENTO      reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    INCREMENTO      reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    $end            reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    LLADER          reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    PARDER          reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    COMA            reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    CORDER          reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)


state 180

    (139) lista_exp -> lista_exp COMA . expresion
    (64) expresion -> . llamada_funcion
    (74) expresion -> . expresion MAS expresion
    (75) expresion -> . expresion MENOS expresion
    (76) expresion -> . expresion POR expresion
    (77) expresion -> . expresion DIVIDIDO expresion
    (78) expresion -> . expresion MODULO expresion
    (79) expresion -> . expresion POTENCIA expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . expresion MAYOR expresion
    (82) expresion -> . expresion MENOR expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORIGUAL expresion
    (85) expresion -> . expresion IGUALACION expresion
    (86) expresion -> . expresion DISTINTO expresion
    (87) expresion -> . expresion AND expresion
    (88) expresion -> . expresion OR expresion
    (89) expresion -> . NOT expresion
    (90) expresion -> . dec
    (91) expresion -> . inc
    (92) expresion -> . casteo
    (93) expresion -> . PARIZQ expresion PARDER
    (94) expresion -> . ENTERO
    (95) expresion -> . DECIMAL
    (96) expresion -> . CADENA
    (97) expresion -> . NULL
    (98) expresion -> . booleano
    (99) expresion -> . ID
    (102) expresion -> . aproximacion
    (103) expresion -> . exponencial
    (104) expresion -> . separador
    (105) expresion -> . concatenacion
    (106) expresion -> . to_minusculas
    (109) expresion -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (128) expresion -> . ID PUNTO ID
    (141) expresion -> . arreglo
    (144) expresion -> . acceso_array
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (113) casteo -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (114) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (100) booleano -> . TRUE
    (101) booleano -> . FALSE
    (107) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (110) to_minusculas -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (142) arreglo -> . CORIZQ lista_exp CORDER
    (143) arreglo -> . CORIZQ CORDER
    (145) acceso_array -> . ID lista_acceso_array

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    CADENA          shift and go to state 68
    NULL            shift and go to state 69
    ID              shift and go to state 71
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40
    CAST_STRING     shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    CORIZQ          shift and go to state 82

    expresion                      shift and go to state 215
    llamada_funcion                shift and go to state 59
    dec                            shift and go to state 62
    inc                            shift and go to state 63
    casteo                         shift and go to state 64
    booleano                       shift and go to state 70
    aproximacion                   shift and go to state 72
    exponencial                    shift and go to state 73
    separador                      shift and go to state 74
    concatenacion                  shift and go to state 75
    to_minusculas                  shift and go to state 76
    arreglo                        shift and go to state 77
    acceso_array                   shift and go to state 78

state 181

    (120) bloquestruct -> LLAIZQ lista_params_struct . LLADER
    (121) lista_params_struct -> lista_params_struct . param_struct
    (123) param_struct -> . ID DOSPUNTOS tipo PTOYCOMA

    LLADER          shift and go to state 216
    ID              shift and go to state 183

    param_struct                   shift and go to state 217

state 182

    (122) lista_params_struct -> param_struct .

    LLADER          reduce using rule 122 (lista_params_struct -> param_struct .)
    ID              reduce using rule 122 (lista_params_struct -> param_struct .)


state 183

    (123) param_struct -> ID . DOSPUNTOS tipo PTOYCOMA

    DOSPUNTOS       shift and go to state 218


state 184

    (62) parametro -> ID DOSPUNTOS . tipo
    (63) parametro -> ID DOSPUNTOS . tipo CORIZQ CORDER
    (69) tipo -> . NUMBER
    (70) tipo -> . STRING
    (71) tipo -> . BOOLEAN
    (72) tipo -> . ANY
    (73) tipo -> . NULL

    NUMBER          shift and go to state 144
    STRING          shift and go to state 145
    BOOLEAN         shift and go to state 146
    ANY             shift and go to state 147
    NULL            shift and go to state 148

    tipo                           shift and go to state 219

state 185

    (55) funcion -> FUNCTION ID PARIZQ lista_parametros PARDER . bloque
    (56) funcion -> FUNCTION ID PARIZQ lista_parametros PARDER . DOSPUNTOS tipo bloque
    (59) funcion -> FUNCTION ID PARIZQ lista_parametros PARDER . DOSPUNTOS tipo CORIZQ CORDER bloque
    (10) bloque -> . LLAIZQ instruccion4 LLADER
    (11) bloque -> . LLAIZQ LLADER

    DOSPUNTOS       shift and go to state 221
    LLAIZQ          shift and go to state 189

    bloque                         shift and go to state 220

state 186

    (60) lista_parametros -> lista_parametros COMA . parametro
    (62) parametro -> . ID DOSPUNTOS tipo
    (63) parametro -> . ID DOSPUNTOS tipo CORIZQ CORDER

    ID              shift and go to state 130

    parametro                      shift and go to state 222

state 187

    (57) funcion -> FUNCTION ID PARIZQ PARDER bloque .

    error           reduce using rule 57 (funcion -> FUNCTION ID PARIZQ PARDER bloque .)
    FUNCTION        reduce using rule 57 (funcion -> FUNCTION ID PARIZQ PARDER bloque .)
    COMENTARIO      reduce using rule 57 (funcion -> FUNCTION ID PARIZQ PARDER bloque .)
    COMENTARIO_MULTILINEA reduce using rule 57 (funcion -> FUNCTION ID PARIZQ PARDER bloque .)
    LET             reduce using rule 57 (funcion -> FUNCTION ID PARIZQ PARDER bloque .)
    ID              reduce using rule 57 (funcion -> FUNCTION ID PARIZQ PARDER bloque .)
    CONSOLE         reduce using rule 57 (funcion -> FUNCTION ID PARIZQ PARDER bloque .)
    IF              reduce using rule 57 (funcion -> FUNCTION ID PARIZQ PARDER bloque .)
    WHILE           reduce using rule 57 (funcion -> FUNCTION ID PARIZQ PARDER bloque .)
    FOR             reduce using rule 57 (funcion -> FUNCTION ID PARIZQ PARDER bloque .)
    RETURN          reduce using rule 57 (funcion -> FUNCTION ID PARIZQ PARDER bloque .)
    BREAK           reduce using rule 57 (funcion -> FUNCTION ID PARIZQ PARDER bloque .)
    CONTINUE        reduce using rule 57 (funcion -> FUNCTION ID PARIZQ PARDER bloque .)
    INTERFACE       reduce using rule 57 (funcion -> FUNCTION ID PARIZQ PARDER bloque .)
    DECREMENTO      reduce using rule 57 (funcion -> FUNCTION ID PARIZQ PARDER bloque .)
    INCREMENTO      reduce using rule 57 (funcion -> FUNCTION ID PARIZQ PARDER bloque .)
    $end            reduce using rule 57 (funcion -> FUNCTION ID PARIZQ PARDER bloque .)


state 188

    (58) funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS . tipo bloque
    (69) tipo -> . NUMBER
    (70) tipo -> . STRING
    (71) tipo -> . BOOLEAN
    (72) tipo -> . ANY
    (73) tipo -> . NULL

    NUMBER          shift and go to state 144
    STRING          shift and go to state 145
    BOOLEAN         shift and go to state 146
    ANY             shift and go to state 147
    NULL            shift and go to state 148

    tipo                           shift and go to state 223

state 189

    (10) bloque -> LLAIZQ . instruccion4 LLADER
    (11) bloque -> LLAIZQ . LLADER
    (8) instruccion4 -> . instruccion4 instruccion2
    (9) instruccion4 -> . instruccion2
    (6) instruccion2 -> . instruccion3 PTOYCOMA
    (7) instruccion2 -> . instruccion3
    (12) instruccion3 -> . declaracion
    (13) instruccion3 -> . asignacion
    (14) instruccion3 -> . impresion
    (15) instruccion3 -> . condicional
    (16) instruccion3 -> . ciclo_while
    (17) instruccion3 -> . ciclo_for
    (18) instruccion3 -> . ciclo_for_of
    (19) instruccion3 -> . llamada_funcion
    (20) instruccion3 -> . return
    (21) instruccion3 -> . break
    (22) instruccion3 -> . continue
    (23) instruccion3 -> . comentarios
    (24) instruccion3 -> . instanciar
    (25) instruccion3 -> . declaracionInterface
    (26) instruccion3 -> . declaracionArray
    (27) instruccion3 -> . asignacion_array
    (30) declaracion -> . LET ID IGUAL expresion
    (31) declaracion -> . LET ID
    (32) declaracion -> . LET ID DOSPUNTOS tipo IGUAL expresion
    (33) declaracion -> . LET ID DOSPUNTOS tipo
    (34) asignacion -> . ID IGUAL expresion
    (35) asignacion -> . dec
    (36) asignacion -> . inc
    (37) asignacion -> . asignacionInterface
    (42) impresion -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER
    (43) impresion -> . CONSOLE PUNTO LOG PARIZQ lista_argumentos PARDER
    (44) condicional -> . IF PARIZQ expresion PARDER bloque
    (45) condicional -> . IF PARIZQ expresion PARDER bloque ELSE bloque
    (46) condicional -> . IF PARIZQ expresion PARDER bloque lista_elif
    (47) condicional -> . IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque
    (51) ciclo_while -> . WHILE PARIZQ expresion PARDER bloque
    (52) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (53) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (54) ciclo_for_of -> . FOR PARIZQ LET ID OF expresion PARDER bloque
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (115) return -> . RETURN expresion
    (116) return -> . RETURN
    (117) break -> . BREAK
    (118) continue -> . CONTINUE
    (28) comentarios -> . COMENTARIO
    (29) comentarios -> . COMENTARIO_MULTILINEA
    (119) instanciar -> . INTERFACE ID bloquestruct
    (124) declaracionInterface -> . LET ID DOSPUNTOS ID IGUAL LLAIZQ lista_d LLADER
    (130) declaracionArray -> . LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER
    (131) declaracionArray -> . LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER
    (132) declaracionArray -> . LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR
    (133) declaracionArray -> . LET ID DOSPUNTOS tipo CORIZQ CORDER
    (134) declaracionArray -> . LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER
    (135) declaracionArray -> . LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER
    (136) declaracionArray -> . LET ID IGUAL CORIZQ CORDER
    (137) declaracionArray -> . LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion
    (138) declaracionArray -> . LET ID IGUAL CORIZQ lista_exp CORDER
    (149) asignacion_array -> . ID lista_acceso_array IGUAL expresion
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (129) asignacionInterface -> . ID PUNTO ID IGUAL expresion

    LLADER          shift and go to state 225
    LET             shift and go to state 27
    ID              shift and go to state 9
    CONSOLE         shift and go to state 31
    IF              shift and go to state 32
    WHILE           shift and go to state 33
    FOR             shift and go to state 34
    RETURN          shift and go to state 35
    BREAK           shift and go to state 36
    CONTINUE        shift and go to state 37
    COMENTARIO      shift and go to state 10
    COMENTARIO_MULTILINEA shift and go to state 11
    INTERFACE       shift and go to state 38
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40

    instruccion4                   shift and go to state 224
    instruccion2                   shift and go to state 226
    instruccion3                   shift and go to state 7
    declaracion                    shift and go to state 12
    asignacion                     shift and go to state 13
    impresion                      shift and go to state 14
    condicional                    shift and go to state 15
    ciclo_while                    shift and go to state 16
    ciclo_for                      shift and go to state 17
    ciclo_for_of                   shift and go to state 18
    llamada_funcion                shift and go to state 19
    return                         shift and go to state 20
    break                          shift and go to state 21
    continue                       shift and go to state 22
    comentarios                    shift and go to state 227
    instanciar                     shift and go to state 23
    declaracionInterface           shift and go to state 24
    declaracionArray               shift and go to state 25
    asignacion_array               shift and go to state 26
    dec                            shift and go to state 28
    inc                            shift and go to state 29
    asignacionInterface            shift and go to state 30

state 190

    (67) lista_argumentos -> lista_argumentos COMA expresion .
    (74) expresion -> expresion . MAS expresion
    (75) expresion -> expresion . MENOS expresion
    (76) expresion -> expresion . POR expresion
    (77) expresion -> expresion . DIVIDIDO expresion
    (78) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MAYOR expresion
    (82) expresion -> expresion . MENOR expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORIGUAL expresion
    (85) expresion -> expresion . IGUALACION expresion
    (86) expresion -> expresion . DISTINTO expresion
    (87) expresion -> expresion . AND expresion
    (88) expresion -> expresion . OR expresion
    (113) casteo -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (107) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          reduce using rule 67 (lista_argumentos -> lista_argumentos COMA expresion .)
    COMA            reduce using rule 67 (lista_argumentos -> lista_argumentos COMA expresion .)
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIVIDIDO        shift and go to state 107
    MODULO          shift and go to state 108
    POTENCIA        shift and go to state 109
    MAYOR           shift and go to state 110
    MENOR           shift and go to state 111
    MAYORIGUAL      shift and go to state 112
    MENORIGUAL      shift and go to state 113
    IGUALACION      shift and go to state 114
    DISTINTO        shift and go to state 115
    AND             shift and go to state 116
    OR              shift and go to state 117
    PUNTO           shift and go to state 118


state 191

    (129) asignacionInterface -> ID PUNTO ID IGUAL expresion .
    (74) expresion -> expresion . MAS expresion
    (75) expresion -> expresion . MENOS expresion
    (76) expresion -> expresion . POR expresion
    (77) expresion -> expresion . DIVIDIDO expresion
    (78) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MAYOR expresion
    (82) expresion -> expresion . MENOR expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORIGUAL expresion
    (85) expresion -> expresion . IGUALACION expresion
    (86) expresion -> expresion . DISTINTO expresion
    (87) expresion -> expresion . AND expresion
    (88) expresion -> expresion . OR expresion
    (113) casteo -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (107) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PTOYCOMA        reduce using rule 129 (asignacionInterface -> ID PUNTO ID IGUAL expresion .)
    error           reduce using rule 129 (asignacionInterface -> ID PUNTO ID IGUAL expresion .)
    FUNCTION        reduce using rule 129 (asignacionInterface -> ID PUNTO ID IGUAL expresion .)
    COMENTARIO      reduce using rule 129 (asignacionInterface -> ID PUNTO ID IGUAL expresion .)
    COMENTARIO_MULTILINEA reduce using rule 129 (asignacionInterface -> ID PUNTO ID IGUAL expresion .)
    LET             reduce using rule 129 (asignacionInterface -> ID PUNTO ID IGUAL expresion .)
    ID              reduce using rule 129 (asignacionInterface -> ID PUNTO ID IGUAL expresion .)
    CONSOLE         reduce using rule 129 (asignacionInterface -> ID PUNTO ID IGUAL expresion .)
    IF              reduce using rule 129 (asignacionInterface -> ID PUNTO ID IGUAL expresion .)
    WHILE           reduce using rule 129 (asignacionInterface -> ID PUNTO ID IGUAL expresion .)
    FOR             reduce using rule 129 (asignacionInterface -> ID PUNTO ID IGUAL expresion .)
    RETURN          reduce using rule 129 (asignacionInterface -> ID PUNTO ID IGUAL expresion .)
    BREAK           reduce using rule 129 (asignacionInterface -> ID PUNTO ID IGUAL expresion .)
    CONTINUE        reduce using rule 129 (asignacionInterface -> ID PUNTO ID IGUAL expresion .)
    INTERFACE       reduce using rule 129 (asignacionInterface -> ID PUNTO ID IGUAL expresion .)
    DECREMENTO      reduce using rule 129 (asignacionInterface -> ID PUNTO ID IGUAL expresion .)
    INCREMENTO      reduce using rule 129 (asignacionInterface -> ID PUNTO ID IGUAL expresion .)
    $end            reduce using rule 129 (asignacionInterface -> ID PUNTO ID IGUAL expresion .)
    LLADER          reduce using rule 129 (asignacionInterface -> ID PUNTO ID IGUAL expresion .)
    PARDER          reduce using rule 129 (asignacionInterface -> ID PUNTO ID IGUAL expresion .)
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIVIDIDO        shift and go to state 107
    MODULO          shift and go to state 108
    POTENCIA        shift and go to state 109
    MAYOR           shift and go to state 110
    MENOR           shift and go to state 111
    MAYORIGUAL      shift and go to state 112
    MENORIGUAL      shift and go to state 113
    IGUALACION      shift and go to state 114
    DISTINTO        shift and go to state 115
    AND             shift and go to state 116
    OR              shift and go to state 117
    PUNTO           shift and go to state 118


state 192

    (136) declaracionArray -> LET ID IGUAL CORIZQ CORDER .
    (143) arreglo -> CORIZQ CORDER .

  ! reduce/reduce conflict for PTOYCOMA resolved using rule 136 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for error resolved using rule 136 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 136 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for COMENTARIO resolved using rule 136 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for COMENTARIO_MULTILINEA resolved using rule 136 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for LET resolved using rule 136 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for ID resolved using rule 136 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for CONSOLE resolved using rule 136 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for IF resolved using rule 136 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for WHILE resolved using rule 136 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for FOR resolved using rule 136 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for RETURN resolved using rule 136 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for BREAK resolved using rule 136 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 136 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for INTERFACE resolved using rule 136 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for DECREMENTO resolved using rule 136 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for INCREMENTO resolved using rule 136 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for $end resolved using rule 136 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for LLADER resolved using rule 136 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
    PTOYCOMA        reduce using rule 136 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
    error           reduce using rule 136 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
    FUNCTION        reduce using rule 136 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
    COMENTARIO      reduce using rule 136 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
    COMENTARIO_MULTILINEA reduce using rule 136 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
    LET             reduce using rule 136 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
    ID              reduce using rule 136 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
    CONSOLE         reduce using rule 136 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
    IF              reduce using rule 136 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
    WHILE           reduce using rule 136 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
    FOR             reduce using rule 136 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
    RETURN          reduce using rule 136 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
    BREAK           reduce using rule 136 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
    CONTINUE        reduce using rule 136 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
    INTERFACE       reduce using rule 136 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
    DECREMENTO      reduce using rule 136 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
    INCREMENTO      reduce using rule 136 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
    $end            reduce using rule 136 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
    LLADER          reduce using rule 136 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
    MAS             reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    MENOS           reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    POR             reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    DIVIDIDO        reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    MODULO          reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    POTENCIA        reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    MAYOR           reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    MENOR           reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    MAYORIGUAL      reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    MENORIGUAL      reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    IGUALACION      reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    DISTINTO        reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    AND             reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    OR              reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    PUNTO           reduce using rule 143 (arreglo -> CORIZQ CORDER .)

  ! PTOYCOMA        [ reduce using rule 143 (arreglo -> CORIZQ CORDER .) ]
  ! error           [ reduce using rule 143 (arreglo -> CORIZQ CORDER .) ]
  ! FUNCTION        [ reduce using rule 143 (arreglo -> CORIZQ CORDER .) ]
  ! COMENTARIO      [ reduce using rule 143 (arreglo -> CORIZQ CORDER .) ]
  ! COMENTARIO_MULTILINEA [ reduce using rule 143 (arreglo -> CORIZQ CORDER .) ]
  ! LET             [ reduce using rule 143 (arreglo -> CORIZQ CORDER .) ]
  ! ID              [ reduce using rule 143 (arreglo -> CORIZQ CORDER .) ]
  ! CONSOLE         [ reduce using rule 143 (arreglo -> CORIZQ CORDER .) ]
  ! IF              [ reduce using rule 143 (arreglo -> CORIZQ CORDER .) ]
  ! WHILE           [ reduce using rule 143 (arreglo -> CORIZQ CORDER .) ]
  ! FOR             [ reduce using rule 143 (arreglo -> CORIZQ CORDER .) ]
  ! RETURN          [ reduce using rule 143 (arreglo -> CORIZQ CORDER .) ]
  ! BREAK           [ reduce using rule 143 (arreglo -> CORIZQ CORDER .) ]
  ! CONTINUE        [ reduce using rule 143 (arreglo -> CORIZQ CORDER .) ]
  ! INTERFACE       [ reduce using rule 143 (arreglo -> CORIZQ CORDER .) ]
  ! DECREMENTO      [ reduce using rule 143 (arreglo -> CORIZQ CORDER .) ]
  ! INCREMENTO      [ reduce using rule 143 (arreglo -> CORIZQ CORDER .) ]
  ! $end            [ reduce using rule 143 (arreglo -> CORIZQ CORDER .) ]
  ! LLADER          [ reduce using rule 143 (arreglo -> CORIZQ CORDER .) ]


state 193

    (138) declaracionArray -> LET ID IGUAL CORIZQ lista_exp . CORDER
    (142) arreglo -> CORIZQ lista_exp . CORDER
    (139) lista_exp -> lista_exp . COMA expresion

    CORDER          shift and go to state 228
    COMA            shift and go to state 180


state 194

    (124) declaracionInterface -> LET ID DOSPUNTOS ID IGUAL . LLAIZQ lista_d LLADER

    LLAIZQ          shift and go to state 229


state 195

    (32) declaracion -> LET ID DOSPUNTOS tipo IGUAL . expresion
    (64) expresion -> . llamada_funcion
    (74) expresion -> . expresion MAS expresion
    (75) expresion -> . expresion MENOS expresion
    (76) expresion -> . expresion POR expresion
    (77) expresion -> . expresion DIVIDIDO expresion
    (78) expresion -> . expresion MODULO expresion
    (79) expresion -> . expresion POTENCIA expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . expresion MAYOR expresion
    (82) expresion -> . expresion MENOR expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORIGUAL expresion
    (85) expresion -> . expresion IGUALACION expresion
    (86) expresion -> . expresion DISTINTO expresion
    (87) expresion -> . expresion AND expresion
    (88) expresion -> . expresion OR expresion
    (89) expresion -> . NOT expresion
    (90) expresion -> . dec
    (91) expresion -> . inc
    (92) expresion -> . casteo
    (93) expresion -> . PARIZQ expresion PARDER
    (94) expresion -> . ENTERO
    (95) expresion -> . DECIMAL
    (96) expresion -> . CADENA
    (97) expresion -> . NULL
    (98) expresion -> . booleano
    (99) expresion -> . ID
    (102) expresion -> . aproximacion
    (103) expresion -> . exponencial
    (104) expresion -> . separador
    (105) expresion -> . concatenacion
    (106) expresion -> . to_minusculas
    (109) expresion -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (128) expresion -> . ID PUNTO ID
    (141) expresion -> . arreglo
    (144) expresion -> . acceso_array
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (113) casteo -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (114) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (100) booleano -> . TRUE
    (101) booleano -> . FALSE
    (107) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (110) to_minusculas -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (142) arreglo -> . CORIZQ lista_exp CORDER
    (143) arreglo -> . CORIZQ CORDER
    (145) acceso_array -> . ID lista_acceso_array

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    CADENA          shift and go to state 68
    NULL            shift and go to state 69
    ID              shift and go to state 71
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40
    CAST_STRING     shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    CORIZQ          shift and go to state 82

    expresion                      shift and go to state 230
    llamada_funcion                shift and go to state 59
    dec                            shift and go to state 62
    inc                            shift and go to state 63
    casteo                         shift and go to state 64
    booleano                       shift and go to state 70
    aproximacion                   shift and go to state 72
    exponencial                    shift and go to state 73
    separador                      shift and go to state 74
    concatenacion                  shift and go to state 75
    to_minusculas                  shift and go to state 76
    arreglo                        shift and go to state 77
    acceso_array                   shift and go to state 78

state 196

    (133) declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ . CORDER
    (134) declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ . CORDER IGUAL CORIZQ lista_exp CORDER
    (135) declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ . CORDER IGUAL CORIZQ CORDER
    (137) declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ . CORDER IGUAL expresion

    CORDER          shift and go to state 231


state 197

    (130) declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR . tipo MAYOR IGUAL CORIZQ lista_exp CORDER
    (131) declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR . tipo MAYOR IGUAL CORIZQ CORDER
    (132) declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR . tipo MAYOR
    (69) tipo -> . NUMBER
    (70) tipo -> . STRING
    (71) tipo -> . BOOLEAN
    (72) tipo -> . ANY
    (73) tipo -> . NULL

    NUMBER          shift and go to state 144
    STRING          shift and go to state 145
    BOOLEAN         shift and go to state 146
    ANY             shift and go to state 147
    NULL            shift and go to state 148

    tipo                           shift and go to state 232

state 198

    (42) impresion -> CONSOLE PUNTO LOG PARIZQ expresion . PARDER
    (74) expresion -> expresion . MAS expresion
    (75) expresion -> expresion . MENOS expresion
    (76) expresion -> expresion . POR expresion
    (77) expresion -> expresion . DIVIDIDO expresion
    (78) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MAYOR expresion
    (82) expresion -> expresion . MENOR expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORIGUAL expresion
    (85) expresion -> expresion . IGUALACION expresion
    (86) expresion -> expresion . DISTINTO expresion
    (87) expresion -> expresion . AND expresion
    (88) expresion -> expresion . OR expresion
    (68) lista_argumentos -> expresion .
    (113) casteo -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (107) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

  ! shift/reduce conflict for PARDER resolved as shift
    PARDER          shift and go to state 233
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIVIDIDO        shift and go to state 107
    MODULO          shift and go to state 108
    POTENCIA        shift and go to state 109
    MAYOR           shift and go to state 110
    MENOR           shift and go to state 111
    MAYORIGUAL      shift and go to state 112
    MENORIGUAL      shift and go to state 113
    IGUALACION      shift and go to state 114
    DISTINTO        shift and go to state 115
    AND             shift and go to state 116
    OR              shift and go to state 117
    COMA            reduce using rule 68 (lista_argumentos -> expresion .)
    PUNTO           shift and go to state 118

  ! PARDER          [ reduce using rule 68 (lista_argumentos -> expresion .) ]


state 199

    (43) impresion -> CONSOLE PUNTO LOG PARIZQ lista_argumentos . PARDER
    (67) lista_argumentos -> lista_argumentos . COMA expresion

    PARDER          shift and go to state 234
    COMA            shift and go to state 135


state 200

    (44) condicional -> IF PARIZQ expresion PARDER bloque .
    (45) condicional -> IF PARIZQ expresion PARDER bloque . ELSE bloque
    (46) condicional -> IF PARIZQ expresion PARDER bloque . lista_elif
    (47) condicional -> IF PARIZQ expresion PARDER bloque . lista_elif ELSE bloque
    (48) lista_elif -> . lista_elif elseif
    (49) lista_elif -> . elseif
    (50) elseif -> . ELSE IF PARIZQ expresion PARDER bloque

    PTOYCOMA        reduce using rule 44 (condicional -> IF PARIZQ expresion PARDER bloque .)
    error           reduce using rule 44 (condicional -> IF PARIZQ expresion PARDER bloque .)
    FUNCTION        reduce using rule 44 (condicional -> IF PARIZQ expresion PARDER bloque .)
    COMENTARIO      reduce using rule 44 (condicional -> IF PARIZQ expresion PARDER bloque .)
    COMENTARIO_MULTILINEA reduce using rule 44 (condicional -> IF PARIZQ expresion PARDER bloque .)
    LET             reduce using rule 44 (condicional -> IF PARIZQ expresion PARDER bloque .)
    ID              reduce using rule 44 (condicional -> IF PARIZQ expresion PARDER bloque .)
    CONSOLE         reduce using rule 44 (condicional -> IF PARIZQ expresion PARDER bloque .)
    IF              reduce using rule 44 (condicional -> IF PARIZQ expresion PARDER bloque .)
    WHILE           reduce using rule 44 (condicional -> IF PARIZQ expresion PARDER bloque .)
    FOR             reduce using rule 44 (condicional -> IF PARIZQ expresion PARDER bloque .)
    RETURN          reduce using rule 44 (condicional -> IF PARIZQ expresion PARDER bloque .)
    BREAK           reduce using rule 44 (condicional -> IF PARIZQ expresion PARDER bloque .)
    CONTINUE        reduce using rule 44 (condicional -> IF PARIZQ expresion PARDER bloque .)
    INTERFACE       reduce using rule 44 (condicional -> IF PARIZQ expresion PARDER bloque .)
    DECREMENTO      reduce using rule 44 (condicional -> IF PARIZQ expresion PARDER bloque .)
    INCREMENTO      reduce using rule 44 (condicional -> IF PARIZQ expresion PARDER bloque .)
    $end            reduce using rule 44 (condicional -> IF PARIZQ expresion PARDER bloque .)
    LLADER          reduce using rule 44 (condicional -> IF PARIZQ expresion PARDER bloque .)
    ELSE            shift and go to state 235

    lista_elif                     shift and go to state 236
    elseif                         shift and go to state 237

state 201

    (51) ciclo_while -> WHILE PARIZQ expresion PARDER bloque .

    PTOYCOMA        reduce using rule 51 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    error           reduce using rule 51 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    FUNCTION        reduce using rule 51 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    COMENTARIO      reduce using rule 51 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    COMENTARIO_MULTILINEA reduce using rule 51 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    LET             reduce using rule 51 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    ID              reduce using rule 51 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    CONSOLE         reduce using rule 51 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    IF              reduce using rule 51 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    WHILE           reduce using rule 51 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    FOR             reduce using rule 51 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    RETURN          reduce using rule 51 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    BREAK           reduce using rule 51 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    CONTINUE        reduce using rule 51 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    INTERFACE       reduce using rule 51 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    DECREMENTO      reduce using rule 51 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    INCREMENTO      reduce using rule 51 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    $end            reduce using rule 51 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    LLADER          reduce using rule 51 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)


state 202

    (52) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion . PTOYCOMA asignacion PARDER bloque
    (74) expresion -> expresion . MAS expresion
    (75) expresion -> expresion . MENOS expresion
    (76) expresion -> expresion . POR expresion
    (77) expresion -> expresion . DIVIDIDO expresion
    (78) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MAYOR expresion
    (82) expresion -> expresion . MENOR expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORIGUAL expresion
    (85) expresion -> expresion . IGUALACION expresion
    (86) expresion -> expresion . DISTINTO expresion
    (87) expresion -> expresion . AND expresion
    (88) expresion -> expresion . OR expresion
    (113) casteo -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (107) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PTOYCOMA        shift and go to state 238
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIVIDIDO        shift and go to state 107
    MODULO          shift and go to state 108
    POTENCIA        shift and go to state 109
    MAYOR           shift and go to state 110
    MENOR           shift and go to state 111
    MAYORIGUAL      shift and go to state 112
    MENORIGUAL      shift and go to state 113
    IGUALACION      shift and go to state 114
    DISTINTO        shift and go to state 115
    AND             shift and go to state 116
    OR              shift and go to state 117
    PUNTO           shift and go to state 118


state 203

    (53) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion . PTOYCOMA asignacion PARDER bloque
    (74) expresion -> expresion . MAS expresion
    (75) expresion -> expresion . MENOS expresion
    (76) expresion -> expresion . POR expresion
    (77) expresion -> expresion . DIVIDIDO expresion
    (78) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MAYOR expresion
    (82) expresion -> expresion . MENOR expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORIGUAL expresion
    (85) expresion -> expresion . IGUALACION expresion
    (86) expresion -> expresion . DISTINTO expresion
    (87) expresion -> expresion . AND expresion
    (88) expresion -> expresion . OR expresion
    (113) casteo -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (107) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PTOYCOMA        shift and go to state 239
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIVIDIDO        shift and go to state 107
    MODULO          shift and go to state 108
    POTENCIA        shift and go to state 109
    MAYOR           shift and go to state 110
    MENOR           shift and go to state 111
    MAYORIGUAL      shift and go to state 112
    MENORIGUAL      shift and go to state 113
    IGUALACION      shift and go to state 114
    DISTINTO        shift and go to state 115
    AND             shift and go to state 116
    OR              shift and go to state 117
    PUNTO           shift and go to state 118


state 204

    (54) ciclo_for_of -> FOR PARIZQ LET ID OF . expresion PARDER bloque
    (64) expresion -> . llamada_funcion
    (74) expresion -> . expresion MAS expresion
    (75) expresion -> . expresion MENOS expresion
    (76) expresion -> . expresion POR expresion
    (77) expresion -> . expresion DIVIDIDO expresion
    (78) expresion -> . expresion MODULO expresion
    (79) expresion -> . expresion POTENCIA expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . expresion MAYOR expresion
    (82) expresion -> . expresion MENOR expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORIGUAL expresion
    (85) expresion -> . expresion IGUALACION expresion
    (86) expresion -> . expresion DISTINTO expresion
    (87) expresion -> . expresion AND expresion
    (88) expresion -> . expresion OR expresion
    (89) expresion -> . NOT expresion
    (90) expresion -> . dec
    (91) expresion -> . inc
    (92) expresion -> . casteo
    (93) expresion -> . PARIZQ expresion PARDER
    (94) expresion -> . ENTERO
    (95) expresion -> . DECIMAL
    (96) expresion -> . CADENA
    (97) expresion -> . NULL
    (98) expresion -> . booleano
    (99) expresion -> . ID
    (102) expresion -> . aproximacion
    (103) expresion -> . exponencial
    (104) expresion -> . separador
    (105) expresion -> . concatenacion
    (106) expresion -> . to_minusculas
    (109) expresion -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (128) expresion -> . ID PUNTO ID
    (141) expresion -> . arreglo
    (144) expresion -> . acceso_array
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (113) casteo -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (114) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (100) booleano -> . TRUE
    (101) booleano -> . FALSE
    (107) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (110) to_minusculas -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (142) arreglo -> . CORIZQ lista_exp CORDER
    (143) arreglo -> . CORIZQ CORDER
    (145) acceso_array -> . ID lista_acceso_array

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    CADENA          shift and go to state 68
    NULL            shift and go to state 69
    ID              shift and go to state 71
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40
    CAST_STRING     shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    CORIZQ          shift and go to state 82

    expresion                      shift and go to state 240
    llamada_funcion                shift and go to state 59
    dec                            shift and go to state 62
    inc                            shift and go to state 63
    casteo                         shift and go to state 64
    booleano                       shift and go to state 70
    aproximacion                   shift and go to state 72
    exponencial                    shift and go to state 73
    separador                      shift and go to state 74
    concatenacion                  shift and go to state 75
    to_minusculas                  shift and go to state 76
    arreglo                        shift and go to state 77
    acceso_array                   shift and go to state 78

state 205

    (30) declaracion -> LET ID IGUAL . expresion
    (64) expresion -> . llamada_funcion
    (74) expresion -> . expresion MAS expresion
    (75) expresion -> . expresion MENOS expresion
    (76) expresion -> . expresion POR expresion
    (77) expresion -> . expresion DIVIDIDO expresion
    (78) expresion -> . expresion MODULO expresion
    (79) expresion -> . expresion POTENCIA expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . expresion MAYOR expresion
    (82) expresion -> . expresion MENOR expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORIGUAL expresion
    (85) expresion -> . expresion IGUALACION expresion
    (86) expresion -> . expresion DISTINTO expresion
    (87) expresion -> . expresion AND expresion
    (88) expresion -> . expresion OR expresion
    (89) expresion -> . NOT expresion
    (90) expresion -> . dec
    (91) expresion -> . inc
    (92) expresion -> . casteo
    (93) expresion -> . PARIZQ expresion PARDER
    (94) expresion -> . ENTERO
    (95) expresion -> . DECIMAL
    (96) expresion -> . CADENA
    (97) expresion -> . NULL
    (98) expresion -> . booleano
    (99) expresion -> . ID
    (102) expresion -> . aproximacion
    (103) expresion -> . exponencial
    (104) expresion -> . separador
    (105) expresion -> . concatenacion
    (106) expresion -> . to_minusculas
    (109) expresion -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (128) expresion -> . ID PUNTO ID
    (141) expresion -> . arreglo
    (144) expresion -> . acceso_array
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (113) casteo -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (114) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (100) booleano -> . TRUE
    (101) booleano -> . FALSE
    (107) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (110) to_minusculas -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (142) arreglo -> . CORIZQ lista_exp CORDER
    (143) arreglo -> . CORIZQ CORDER
    (145) acceso_array -> . ID lista_acceso_array

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    CADENA          shift and go to state 68
    NULL            shift and go to state 69
    ID              shift and go to state 71
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40
    CAST_STRING     shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    CORIZQ          shift and go to state 82

    expresion                      shift and go to state 139
    llamada_funcion                shift and go to state 59
    dec                            shift and go to state 62
    inc                            shift and go to state 63
    casteo                         shift and go to state 64
    booleano                       shift and go to state 70
    aproximacion                   shift and go to state 72
    exponencial                    shift and go to state 73
    separador                      shift and go to state 74
    concatenacion                  shift and go to state 75
    to_minusculas                  shift and go to state 76
    arreglo                        shift and go to state 77
    acceso_array                   shift and go to state 78

state 206

    (32) declaracion -> LET ID DOSPUNTOS . tipo IGUAL expresion
    (33) declaracion -> LET ID DOSPUNTOS . tipo
    (69) tipo -> . NUMBER
    (70) tipo -> . STRING
    (71) tipo -> . BOOLEAN
    (72) tipo -> . ANY
    (73) tipo -> . NULL

    NUMBER          shift and go to state 144
    STRING          shift and go to state 145
    BOOLEAN         shift and go to state 146
    ANY             shift and go to state 147
    NULL            shift and go to state 148

    tipo                           shift and go to state 241

state 207

    (113) casteo -> expresion PUNTO TOSTRING PARIZQ . PARDER

    PARDER          shift and go to state 242


state 208

    (107) aproximacion -> expresion PUNTO TOFIXED PARIZQ . expresion PARDER
    (64) expresion -> . llamada_funcion
    (74) expresion -> . expresion MAS expresion
    (75) expresion -> . expresion MENOS expresion
    (76) expresion -> . expresion POR expresion
    (77) expresion -> . expresion DIVIDIDO expresion
    (78) expresion -> . expresion MODULO expresion
    (79) expresion -> . expresion POTENCIA expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . expresion MAYOR expresion
    (82) expresion -> . expresion MENOR expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORIGUAL expresion
    (85) expresion -> . expresion IGUALACION expresion
    (86) expresion -> . expresion DISTINTO expresion
    (87) expresion -> . expresion AND expresion
    (88) expresion -> . expresion OR expresion
    (89) expresion -> . NOT expresion
    (90) expresion -> . dec
    (91) expresion -> . inc
    (92) expresion -> . casteo
    (93) expresion -> . PARIZQ expresion PARDER
    (94) expresion -> . ENTERO
    (95) expresion -> . DECIMAL
    (96) expresion -> . CADENA
    (97) expresion -> . NULL
    (98) expresion -> . booleano
    (99) expresion -> . ID
    (102) expresion -> . aproximacion
    (103) expresion -> . exponencial
    (104) expresion -> . separador
    (105) expresion -> . concatenacion
    (106) expresion -> . to_minusculas
    (109) expresion -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (128) expresion -> . ID PUNTO ID
    (141) expresion -> . arreglo
    (144) expresion -> . acceso_array
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (113) casteo -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (114) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (100) booleano -> . TRUE
    (101) booleano -> . FALSE
    (107) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (110) to_minusculas -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (142) arreglo -> . CORIZQ lista_exp CORDER
    (143) arreglo -> . CORIZQ CORDER
    (145) acceso_array -> . ID lista_acceso_array

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    CADENA          shift and go to state 68
    NULL            shift and go to state 69
    ID              shift and go to state 71
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40
    CAST_STRING     shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    CORIZQ          shift and go to state 82

    expresion                      shift and go to state 243
    llamada_funcion                shift and go to state 59
    dec                            shift and go to state 62
    inc                            shift and go to state 63
    casteo                         shift and go to state 64
    booleano                       shift and go to state 70
    aproximacion                   shift and go to state 72
    exponencial                    shift and go to state 73
    separador                      shift and go to state 74
    concatenacion                  shift and go to state 75
    to_minusculas                  shift and go to state 76
    arreglo                        shift and go to state 77
    acceso_array                   shift and go to state 78

state 209

    (108) exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ . expresion PARDER
    (64) expresion -> . llamada_funcion
    (74) expresion -> . expresion MAS expresion
    (75) expresion -> . expresion MENOS expresion
    (76) expresion -> . expresion POR expresion
    (77) expresion -> . expresion DIVIDIDO expresion
    (78) expresion -> . expresion MODULO expresion
    (79) expresion -> . expresion POTENCIA expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . expresion MAYOR expresion
    (82) expresion -> . expresion MENOR expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORIGUAL expresion
    (85) expresion -> . expresion IGUALACION expresion
    (86) expresion -> . expresion DISTINTO expresion
    (87) expresion -> . expresion AND expresion
    (88) expresion -> . expresion OR expresion
    (89) expresion -> . NOT expresion
    (90) expresion -> . dec
    (91) expresion -> . inc
    (92) expresion -> . casteo
    (93) expresion -> . PARIZQ expresion PARDER
    (94) expresion -> . ENTERO
    (95) expresion -> . DECIMAL
    (96) expresion -> . CADENA
    (97) expresion -> . NULL
    (98) expresion -> . booleano
    (99) expresion -> . ID
    (102) expresion -> . aproximacion
    (103) expresion -> . exponencial
    (104) expresion -> . separador
    (105) expresion -> . concatenacion
    (106) expresion -> . to_minusculas
    (109) expresion -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (128) expresion -> . ID PUNTO ID
    (141) expresion -> . arreglo
    (144) expresion -> . acceso_array
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (113) casteo -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (114) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (100) booleano -> . TRUE
    (101) booleano -> . FALSE
    (107) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (110) to_minusculas -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (142) arreglo -> . CORIZQ lista_exp CORDER
    (143) arreglo -> . CORIZQ CORDER
    (145) acceso_array -> . ID lista_acceso_array

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    CADENA          shift and go to state 68
    NULL            shift and go to state 69
    ID              shift and go to state 71
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40
    CAST_STRING     shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    CORIZQ          shift and go to state 82

    expresion                      shift and go to state 244
    llamada_funcion                shift and go to state 59
    dec                            shift and go to state 62
    inc                            shift and go to state 63
    casteo                         shift and go to state 64
    booleano                       shift and go to state 70
    aproximacion                   shift and go to state 72
    exponencial                    shift and go to state 73
    separador                      shift and go to state 74
    concatenacion                  shift and go to state 75
    to_minusculas                  shift and go to state 76
    arreglo                        shift and go to state 77
    acceso_array                   shift and go to state 78

state 210

    (111) separador -> expresion PUNTO SPLIT PARIZQ . expresion PARDER
    (64) expresion -> . llamada_funcion
    (74) expresion -> . expresion MAS expresion
    (75) expresion -> . expresion MENOS expresion
    (76) expresion -> . expresion POR expresion
    (77) expresion -> . expresion DIVIDIDO expresion
    (78) expresion -> . expresion MODULO expresion
    (79) expresion -> . expresion POTENCIA expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . expresion MAYOR expresion
    (82) expresion -> . expresion MENOR expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORIGUAL expresion
    (85) expresion -> . expresion IGUALACION expresion
    (86) expresion -> . expresion DISTINTO expresion
    (87) expresion -> . expresion AND expresion
    (88) expresion -> . expresion OR expresion
    (89) expresion -> . NOT expresion
    (90) expresion -> . dec
    (91) expresion -> . inc
    (92) expresion -> . casteo
    (93) expresion -> . PARIZQ expresion PARDER
    (94) expresion -> . ENTERO
    (95) expresion -> . DECIMAL
    (96) expresion -> . CADENA
    (97) expresion -> . NULL
    (98) expresion -> . booleano
    (99) expresion -> . ID
    (102) expresion -> . aproximacion
    (103) expresion -> . exponencial
    (104) expresion -> . separador
    (105) expresion -> . concatenacion
    (106) expresion -> . to_minusculas
    (109) expresion -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (128) expresion -> . ID PUNTO ID
    (141) expresion -> . arreglo
    (144) expresion -> . acceso_array
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (113) casteo -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (114) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (100) booleano -> . TRUE
    (101) booleano -> . FALSE
    (107) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (110) to_minusculas -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (142) arreglo -> . CORIZQ lista_exp CORDER
    (143) arreglo -> . CORIZQ CORDER
    (145) acceso_array -> . ID lista_acceso_array

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    CADENA          shift and go to state 68
    NULL            shift and go to state 69
    ID              shift and go to state 71
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40
    CAST_STRING     shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    CORIZQ          shift and go to state 82

    expresion                      shift and go to state 245
    llamada_funcion                shift and go to state 59
    dec                            shift and go to state 62
    inc                            shift and go to state 63
    casteo                         shift and go to state 64
    booleano                       shift and go to state 70
    aproximacion                   shift and go to state 72
    exponencial                    shift and go to state 73
    separador                      shift and go to state 74
    concatenacion                  shift and go to state 75
    to_minusculas                  shift and go to state 76
    arreglo                        shift and go to state 77
    acceso_array                   shift and go to state 78

state 211

    (112) concatenacion -> expresion PUNTO CONCAT PARIZQ . expresion PARDER
    (64) expresion -> . llamada_funcion
    (74) expresion -> . expresion MAS expresion
    (75) expresion -> . expresion MENOS expresion
    (76) expresion -> . expresion POR expresion
    (77) expresion -> . expresion DIVIDIDO expresion
    (78) expresion -> . expresion MODULO expresion
    (79) expresion -> . expresion POTENCIA expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . expresion MAYOR expresion
    (82) expresion -> . expresion MENOR expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORIGUAL expresion
    (85) expresion -> . expresion IGUALACION expresion
    (86) expresion -> . expresion DISTINTO expresion
    (87) expresion -> . expresion AND expresion
    (88) expresion -> . expresion OR expresion
    (89) expresion -> . NOT expresion
    (90) expresion -> . dec
    (91) expresion -> . inc
    (92) expresion -> . casteo
    (93) expresion -> . PARIZQ expresion PARDER
    (94) expresion -> . ENTERO
    (95) expresion -> . DECIMAL
    (96) expresion -> . CADENA
    (97) expresion -> . NULL
    (98) expresion -> . booleano
    (99) expresion -> . ID
    (102) expresion -> . aproximacion
    (103) expresion -> . exponencial
    (104) expresion -> . separador
    (105) expresion -> . concatenacion
    (106) expresion -> . to_minusculas
    (109) expresion -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (128) expresion -> . ID PUNTO ID
    (141) expresion -> . arreglo
    (144) expresion -> . acceso_array
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (113) casteo -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (114) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (100) booleano -> . TRUE
    (101) booleano -> . FALSE
    (107) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (110) to_minusculas -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (142) arreglo -> . CORIZQ lista_exp CORDER
    (143) arreglo -> . CORIZQ CORDER
    (145) acceso_array -> . ID lista_acceso_array

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    CADENA          shift and go to state 68
    NULL            shift and go to state 69
    ID              shift and go to state 71
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40
    CAST_STRING     shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    CORIZQ          shift and go to state 82

    expresion                      shift and go to state 246
    llamada_funcion                shift and go to state 59
    dec                            shift and go to state 62
    inc                            shift and go to state 63
    casteo                         shift and go to state 64
    booleano                       shift and go to state 70
    aproximacion                   shift and go to state 72
    exponencial                    shift and go to state 73
    separador                      shift and go to state 74
    concatenacion                  shift and go to state 75
    to_minusculas                  shift and go to state 76
    arreglo                        shift and go to state 77
    acceso_array                   shift and go to state 78

state 212

    (109) expresion -> ID PUNTO TOUPPERCASE PARIZQ . PARDER

    PARDER          shift and go to state 247


state 213

    (110) to_minusculas -> ID PUNTO TOLOWERCASE PARIZQ . PARDER

    PARDER          shift and go to state 248


state 214

    (114) casteo -> CAST_STRING PARIZQ expresion PARDER .

    MAS             reduce using rule 114 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    MENOS           reduce using rule 114 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    POR             reduce using rule 114 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 114 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    MODULO          reduce using rule 114 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 114 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 114 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    MENOR           reduce using rule 114 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 114 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 114 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    IGUALACION      reduce using rule 114 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    DISTINTO        reduce using rule 114 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    AND             reduce using rule 114 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    OR              reduce using rule 114 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 114 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    PTOYCOMA        reduce using rule 114 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    error           reduce using rule 114 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    FUNCTION        reduce using rule 114 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    COMENTARIO      reduce using rule 114 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    COMENTARIO_MULTILINEA reduce using rule 114 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    LET             reduce using rule 114 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    ID              reduce using rule 114 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 114 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    IF              reduce using rule 114 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    WHILE           reduce using rule 114 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    FOR             reduce using rule 114 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    RETURN          reduce using rule 114 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    BREAK           reduce using rule 114 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 114 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    INTERFACE       reduce using rule 114 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    DECREMENTO      reduce using rule 114 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    INCREMENTO      reduce using rule 114 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    $end            reduce using rule 114 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    LLADER          reduce using rule 114 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    PARDER          reduce using rule 114 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    COMA            reduce using rule 114 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    CORDER          reduce using rule 114 (casteo -> CAST_STRING PARIZQ expresion PARDER .)


state 215

    (139) lista_exp -> lista_exp COMA expresion .
    (74) expresion -> expresion . MAS expresion
    (75) expresion -> expresion . MENOS expresion
    (76) expresion -> expresion . POR expresion
    (77) expresion -> expresion . DIVIDIDO expresion
    (78) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MAYOR expresion
    (82) expresion -> expresion . MENOR expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORIGUAL expresion
    (85) expresion -> expresion . IGUALACION expresion
    (86) expresion -> expresion . DISTINTO expresion
    (87) expresion -> expresion . AND expresion
    (88) expresion -> expresion . OR expresion
    (113) casteo -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (107) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    CORDER          reduce using rule 139 (lista_exp -> lista_exp COMA expresion .)
    COMA            reduce using rule 139 (lista_exp -> lista_exp COMA expresion .)
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIVIDIDO        shift and go to state 107
    MODULO          shift and go to state 108
    POTENCIA        shift and go to state 109
    MAYOR           shift and go to state 110
    MENOR           shift and go to state 111
    MAYORIGUAL      shift and go to state 112
    MENORIGUAL      shift and go to state 113
    IGUALACION      shift and go to state 114
    DISTINTO        shift and go to state 115
    AND             shift and go to state 116
    OR              shift and go to state 117
    PUNTO           shift and go to state 118


state 216

    (120) bloquestruct -> LLAIZQ lista_params_struct LLADER .

    PTOYCOMA        reduce using rule 120 (bloquestruct -> LLAIZQ lista_params_struct LLADER .)
    error           reduce using rule 120 (bloquestruct -> LLAIZQ lista_params_struct LLADER .)
    FUNCTION        reduce using rule 120 (bloquestruct -> LLAIZQ lista_params_struct LLADER .)
    COMENTARIO      reduce using rule 120 (bloquestruct -> LLAIZQ lista_params_struct LLADER .)
    COMENTARIO_MULTILINEA reduce using rule 120 (bloquestruct -> LLAIZQ lista_params_struct LLADER .)
    LET             reduce using rule 120 (bloquestruct -> LLAIZQ lista_params_struct LLADER .)
    ID              reduce using rule 120 (bloquestruct -> LLAIZQ lista_params_struct LLADER .)
    CONSOLE         reduce using rule 120 (bloquestruct -> LLAIZQ lista_params_struct LLADER .)
    IF              reduce using rule 120 (bloquestruct -> LLAIZQ lista_params_struct LLADER .)
    WHILE           reduce using rule 120 (bloquestruct -> LLAIZQ lista_params_struct LLADER .)
    FOR             reduce using rule 120 (bloquestruct -> LLAIZQ lista_params_struct LLADER .)
    RETURN          reduce using rule 120 (bloquestruct -> LLAIZQ lista_params_struct LLADER .)
    BREAK           reduce using rule 120 (bloquestruct -> LLAIZQ lista_params_struct LLADER .)
    CONTINUE        reduce using rule 120 (bloquestruct -> LLAIZQ lista_params_struct LLADER .)
    INTERFACE       reduce using rule 120 (bloquestruct -> LLAIZQ lista_params_struct LLADER .)
    DECREMENTO      reduce using rule 120 (bloquestruct -> LLAIZQ lista_params_struct LLADER .)
    INCREMENTO      reduce using rule 120 (bloquestruct -> LLAIZQ lista_params_struct LLADER .)
    $end            reduce using rule 120 (bloquestruct -> LLAIZQ lista_params_struct LLADER .)
    LLADER          reduce using rule 120 (bloquestruct -> LLAIZQ lista_params_struct LLADER .)


state 217

    (121) lista_params_struct -> lista_params_struct param_struct .

    LLADER          reduce using rule 121 (lista_params_struct -> lista_params_struct param_struct .)
    ID              reduce using rule 121 (lista_params_struct -> lista_params_struct param_struct .)


state 218

    (123) param_struct -> ID DOSPUNTOS . tipo PTOYCOMA
    (69) tipo -> . NUMBER
    (70) tipo -> . STRING
    (71) tipo -> . BOOLEAN
    (72) tipo -> . ANY
    (73) tipo -> . NULL

    NUMBER          shift and go to state 144
    STRING          shift and go to state 145
    BOOLEAN         shift and go to state 146
    ANY             shift and go to state 147
    NULL            shift and go to state 148

    tipo                           shift and go to state 249

state 219

    (62) parametro -> ID DOSPUNTOS tipo .
    (63) parametro -> ID DOSPUNTOS tipo . CORIZQ CORDER

    PARDER          reduce using rule 62 (parametro -> ID DOSPUNTOS tipo .)
    COMA            reduce using rule 62 (parametro -> ID DOSPUNTOS tipo .)
    CORIZQ          shift and go to state 250


state 220

    (55) funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .

    error           reduce using rule 55 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .)
    FUNCTION        reduce using rule 55 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .)
    COMENTARIO      reduce using rule 55 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .)
    COMENTARIO_MULTILINEA reduce using rule 55 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .)
    LET             reduce using rule 55 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .)
    ID              reduce using rule 55 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .)
    CONSOLE         reduce using rule 55 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .)
    IF              reduce using rule 55 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .)
    WHILE           reduce using rule 55 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .)
    FOR             reduce using rule 55 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .)
    RETURN          reduce using rule 55 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .)
    BREAK           reduce using rule 55 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .)
    CONTINUE        reduce using rule 55 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .)
    INTERFACE       reduce using rule 55 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .)
    DECREMENTO      reduce using rule 55 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .)
    INCREMENTO      reduce using rule 55 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .)
    $end            reduce using rule 55 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .)


state 221

    (56) funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS . tipo bloque
    (59) funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS . tipo CORIZQ CORDER bloque
    (69) tipo -> . NUMBER
    (70) tipo -> . STRING
    (71) tipo -> . BOOLEAN
    (72) tipo -> . ANY
    (73) tipo -> . NULL

    NUMBER          shift and go to state 144
    STRING          shift and go to state 145
    BOOLEAN         shift and go to state 146
    ANY             shift and go to state 147
    NULL            shift and go to state 148

    tipo                           shift and go to state 251

state 222

    (60) lista_parametros -> lista_parametros COMA parametro .

    PARDER          reduce using rule 60 (lista_parametros -> lista_parametros COMA parametro .)
    COMA            reduce using rule 60 (lista_parametros -> lista_parametros COMA parametro .)


state 223

    (58) funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS tipo . bloque
    (10) bloque -> . LLAIZQ instruccion4 LLADER
    (11) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 189

    bloque                         shift and go to state 252

state 224

    (10) bloque -> LLAIZQ instruccion4 . LLADER
    (8) instruccion4 -> instruccion4 . instruccion2
    (6) instruccion2 -> . instruccion3 PTOYCOMA
    (7) instruccion2 -> . instruccion3
    (12) instruccion3 -> . declaracion
    (13) instruccion3 -> . asignacion
    (14) instruccion3 -> . impresion
    (15) instruccion3 -> . condicional
    (16) instruccion3 -> . ciclo_while
    (17) instruccion3 -> . ciclo_for
    (18) instruccion3 -> . ciclo_for_of
    (19) instruccion3 -> . llamada_funcion
    (20) instruccion3 -> . return
    (21) instruccion3 -> . break
    (22) instruccion3 -> . continue
    (23) instruccion3 -> . comentarios
    (24) instruccion3 -> . instanciar
    (25) instruccion3 -> . declaracionInterface
    (26) instruccion3 -> . declaracionArray
    (27) instruccion3 -> . asignacion_array
    (30) declaracion -> . LET ID IGUAL expresion
    (31) declaracion -> . LET ID
    (32) declaracion -> . LET ID DOSPUNTOS tipo IGUAL expresion
    (33) declaracion -> . LET ID DOSPUNTOS tipo
    (34) asignacion -> . ID IGUAL expresion
    (35) asignacion -> . dec
    (36) asignacion -> . inc
    (37) asignacion -> . asignacionInterface
    (42) impresion -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER
    (43) impresion -> . CONSOLE PUNTO LOG PARIZQ lista_argumentos PARDER
    (44) condicional -> . IF PARIZQ expresion PARDER bloque
    (45) condicional -> . IF PARIZQ expresion PARDER bloque ELSE bloque
    (46) condicional -> . IF PARIZQ expresion PARDER bloque lista_elif
    (47) condicional -> . IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque
    (51) ciclo_while -> . WHILE PARIZQ expresion PARDER bloque
    (52) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (53) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (54) ciclo_for_of -> . FOR PARIZQ LET ID OF expresion PARDER bloque
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (115) return -> . RETURN expresion
    (116) return -> . RETURN
    (117) break -> . BREAK
    (118) continue -> . CONTINUE
    (28) comentarios -> . COMENTARIO
    (29) comentarios -> . COMENTARIO_MULTILINEA
    (119) instanciar -> . INTERFACE ID bloquestruct
    (124) declaracionInterface -> . LET ID DOSPUNTOS ID IGUAL LLAIZQ lista_d LLADER
    (130) declaracionArray -> . LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER
    (131) declaracionArray -> . LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER
    (132) declaracionArray -> . LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR
    (133) declaracionArray -> . LET ID DOSPUNTOS tipo CORIZQ CORDER
    (134) declaracionArray -> . LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER
    (135) declaracionArray -> . LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER
    (136) declaracionArray -> . LET ID IGUAL CORIZQ CORDER
    (137) declaracionArray -> . LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion
    (138) declaracionArray -> . LET ID IGUAL CORIZQ lista_exp CORDER
    (149) asignacion_array -> . ID lista_acceso_array IGUAL expresion
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (129) asignacionInterface -> . ID PUNTO ID IGUAL expresion

    LLADER          shift and go to state 253
    LET             shift and go to state 27
    ID              shift and go to state 9
    CONSOLE         shift and go to state 31
    IF              shift and go to state 32
    WHILE           shift and go to state 33
    FOR             shift and go to state 34
    RETURN          shift and go to state 35
    BREAK           shift and go to state 36
    CONTINUE        shift and go to state 37
    COMENTARIO      shift and go to state 10
    COMENTARIO_MULTILINEA shift and go to state 11
    INTERFACE       shift and go to state 38
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40

    instruccion2                   shift and go to state 254
    instruccion3                   shift and go to state 7
    declaracion                    shift and go to state 12
    asignacion                     shift and go to state 13
    impresion                      shift and go to state 14
    condicional                    shift and go to state 15
    ciclo_while                    shift and go to state 16
    ciclo_for                      shift and go to state 17
    ciclo_for_of                   shift and go to state 18
    llamada_funcion                shift and go to state 19
    return                         shift and go to state 20
    break                          shift and go to state 21
    continue                       shift and go to state 22
    comentarios                    shift and go to state 227
    instanciar                     shift and go to state 23
    declaracionInterface           shift and go to state 24
    declaracionArray               shift and go to state 25
    asignacion_array               shift and go to state 26
    dec                            shift and go to state 28
    inc                            shift and go to state 29
    asignacionInterface            shift and go to state 30

state 225

    (11) bloque -> LLAIZQ LLADER .

    error           reduce using rule 11 (bloque -> LLAIZQ LLADER .)
    FUNCTION        reduce using rule 11 (bloque -> LLAIZQ LLADER .)
    COMENTARIO      reduce using rule 11 (bloque -> LLAIZQ LLADER .)
    COMENTARIO_MULTILINEA reduce using rule 11 (bloque -> LLAIZQ LLADER .)
    LET             reduce using rule 11 (bloque -> LLAIZQ LLADER .)
    ID              reduce using rule 11 (bloque -> LLAIZQ LLADER .)
    CONSOLE         reduce using rule 11 (bloque -> LLAIZQ LLADER .)
    IF              reduce using rule 11 (bloque -> LLAIZQ LLADER .)
    WHILE           reduce using rule 11 (bloque -> LLAIZQ LLADER .)
    FOR             reduce using rule 11 (bloque -> LLAIZQ LLADER .)
    RETURN          reduce using rule 11 (bloque -> LLAIZQ LLADER .)
    BREAK           reduce using rule 11 (bloque -> LLAIZQ LLADER .)
    CONTINUE        reduce using rule 11 (bloque -> LLAIZQ LLADER .)
    INTERFACE       reduce using rule 11 (bloque -> LLAIZQ LLADER .)
    DECREMENTO      reduce using rule 11 (bloque -> LLAIZQ LLADER .)
    INCREMENTO      reduce using rule 11 (bloque -> LLAIZQ LLADER .)
    $end            reduce using rule 11 (bloque -> LLAIZQ LLADER .)
    ELSE            reduce using rule 11 (bloque -> LLAIZQ LLADER .)
    PTOYCOMA        reduce using rule 11 (bloque -> LLAIZQ LLADER .)
    LLADER          reduce using rule 11 (bloque -> LLAIZQ LLADER .)


state 226

    (9) instruccion4 -> instruccion2 .

    LLADER          reduce using rule 9 (instruccion4 -> instruccion2 .)
    LET             reduce using rule 9 (instruccion4 -> instruccion2 .)
    ID              reduce using rule 9 (instruccion4 -> instruccion2 .)
    CONSOLE         reduce using rule 9 (instruccion4 -> instruccion2 .)
    IF              reduce using rule 9 (instruccion4 -> instruccion2 .)
    WHILE           reduce using rule 9 (instruccion4 -> instruccion2 .)
    FOR             reduce using rule 9 (instruccion4 -> instruccion2 .)
    RETURN          reduce using rule 9 (instruccion4 -> instruccion2 .)
    BREAK           reduce using rule 9 (instruccion4 -> instruccion2 .)
    CONTINUE        reduce using rule 9 (instruccion4 -> instruccion2 .)
    COMENTARIO      reduce using rule 9 (instruccion4 -> instruccion2 .)
    COMENTARIO_MULTILINEA reduce using rule 9 (instruccion4 -> instruccion2 .)
    INTERFACE       reduce using rule 9 (instruccion4 -> instruccion2 .)
    DECREMENTO      reduce using rule 9 (instruccion4 -> instruccion2 .)
    INCREMENTO      reduce using rule 9 (instruccion4 -> instruccion2 .)


state 227

    (23) instruccion3 -> comentarios .

    PTOYCOMA        reduce using rule 23 (instruccion3 -> comentarios .)
    LLADER          reduce using rule 23 (instruccion3 -> comentarios .)
    LET             reduce using rule 23 (instruccion3 -> comentarios .)
    ID              reduce using rule 23 (instruccion3 -> comentarios .)
    CONSOLE         reduce using rule 23 (instruccion3 -> comentarios .)
    IF              reduce using rule 23 (instruccion3 -> comentarios .)
    WHILE           reduce using rule 23 (instruccion3 -> comentarios .)
    FOR             reduce using rule 23 (instruccion3 -> comentarios .)
    RETURN          reduce using rule 23 (instruccion3 -> comentarios .)
    BREAK           reduce using rule 23 (instruccion3 -> comentarios .)
    CONTINUE        reduce using rule 23 (instruccion3 -> comentarios .)
    COMENTARIO      reduce using rule 23 (instruccion3 -> comentarios .)
    COMENTARIO_MULTILINEA reduce using rule 23 (instruccion3 -> comentarios .)
    INTERFACE       reduce using rule 23 (instruccion3 -> comentarios .)
    DECREMENTO      reduce using rule 23 (instruccion3 -> comentarios .)
    INCREMENTO      reduce using rule 23 (instruccion3 -> comentarios .)


state 228

    (138) declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .
    (142) arreglo -> CORIZQ lista_exp CORDER .

  ! reduce/reduce conflict for PTOYCOMA resolved using rule 138 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for error resolved using rule 138 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 138 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for COMENTARIO resolved using rule 138 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for COMENTARIO_MULTILINEA resolved using rule 138 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for LET resolved using rule 138 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for ID resolved using rule 138 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for CONSOLE resolved using rule 138 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for IF resolved using rule 138 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for WHILE resolved using rule 138 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for FOR resolved using rule 138 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for RETURN resolved using rule 138 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for BREAK resolved using rule 138 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 138 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for INTERFACE resolved using rule 138 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for DECREMENTO resolved using rule 138 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for INCREMENTO resolved using rule 138 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for $end resolved using rule 138 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for LLADER resolved using rule 138 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
    PTOYCOMA        reduce using rule 138 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
    error           reduce using rule 138 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
    FUNCTION        reduce using rule 138 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
    COMENTARIO      reduce using rule 138 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
    COMENTARIO_MULTILINEA reduce using rule 138 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
    LET             reduce using rule 138 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
    ID              reduce using rule 138 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
    CONSOLE         reduce using rule 138 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
    IF              reduce using rule 138 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
    WHILE           reduce using rule 138 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
    FOR             reduce using rule 138 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
    RETURN          reduce using rule 138 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
    BREAK           reduce using rule 138 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
    CONTINUE        reduce using rule 138 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
    INTERFACE       reduce using rule 138 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
    DECREMENTO      reduce using rule 138 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
    INCREMENTO      reduce using rule 138 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
    $end            reduce using rule 138 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
    LLADER          reduce using rule 138 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
    MAS             reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    MENOS           reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    POR             reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    DIVIDIDO        reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    MODULO          reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    POTENCIA        reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    MAYOR           reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    MENOR           reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    MAYORIGUAL      reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    MENORIGUAL      reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    IGUALACION      reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    DISTINTO        reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    AND             reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    OR              reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    PUNTO           reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)

  ! PTOYCOMA        [ reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! error           [ reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! FUNCTION        [ reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! COMENTARIO      [ reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! COMENTARIO_MULTILINEA [ reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! LET             [ reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! ID              [ reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! CONSOLE         [ reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! IF              [ reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! WHILE           [ reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! FOR             [ reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! RETURN          [ reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! BREAK           [ reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! CONTINUE        [ reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! INTERFACE       [ reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! DECREMENTO      [ reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! INCREMENTO      [ reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! $end            [ reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! LLADER          [ reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .) ]


state 229

    (124) declaracionInterface -> LET ID DOSPUNTOS ID IGUAL LLAIZQ . lista_d LLADER
    (125) lista_d -> . lista_d COMA parDecl
    (126) lista_d -> . parDecl
    (127) parDecl -> . ID DOSPUNTOS expresion

    ID              shift and go to state 255

    lista_d                        shift and go to state 256
    parDecl                        shift and go to state 257

state 230

    (32) declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .
    (74) expresion -> expresion . MAS expresion
    (75) expresion -> expresion . MENOS expresion
    (76) expresion -> expresion . POR expresion
    (77) expresion -> expresion . DIVIDIDO expresion
    (78) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MAYOR expresion
    (82) expresion -> expresion . MENOR expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORIGUAL expresion
    (85) expresion -> expresion . IGUALACION expresion
    (86) expresion -> expresion . DISTINTO expresion
    (87) expresion -> expresion . AND expresion
    (88) expresion -> expresion . OR expresion
    (113) casteo -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (107) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PTOYCOMA        reduce using rule 32 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    error           reduce using rule 32 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    FUNCTION        reduce using rule 32 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    COMENTARIO      reduce using rule 32 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    COMENTARIO_MULTILINEA reduce using rule 32 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    LET             reduce using rule 32 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    ID              reduce using rule 32 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    CONSOLE         reduce using rule 32 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    IF              reduce using rule 32 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    WHILE           reduce using rule 32 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    FOR             reduce using rule 32 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    RETURN          reduce using rule 32 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    BREAK           reduce using rule 32 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    CONTINUE        reduce using rule 32 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    INTERFACE       reduce using rule 32 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    DECREMENTO      reduce using rule 32 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    INCREMENTO      reduce using rule 32 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    $end            reduce using rule 32 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    LLADER          reduce using rule 32 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIVIDIDO        shift and go to state 107
    MODULO          shift and go to state 108
    POTENCIA        shift and go to state 109
    MAYOR           shift and go to state 110
    MENOR           shift and go to state 111
    MAYORIGUAL      shift and go to state 112
    MENORIGUAL      shift and go to state 113
    IGUALACION      shift and go to state 114
    DISTINTO        shift and go to state 115
    AND             shift and go to state 116
    OR              shift and go to state 117
    PUNTO           shift and go to state 118


state 231

    (133) declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER .
    (134) declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER . IGUAL CORIZQ lista_exp CORDER
    (135) declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER . IGUAL CORIZQ CORDER
    (137) declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER . IGUAL expresion

    PTOYCOMA        reduce using rule 133 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER .)
    error           reduce using rule 133 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER .)
    FUNCTION        reduce using rule 133 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER .)
    COMENTARIO      reduce using rule 133 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER .)
    COMENTARIO_MULTILINEA reduce using rule 133 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER .)
    LET             reduce using rule 133 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER .)
    ID              reduce using rule 133 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER .)
    CONSOLE         reduce using rule 133 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER .)
    IF              reduce using rule 133 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER .)
    WHILE           reduce using rule 133 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER .)
    FOR             reduce using rule 133 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER .)
    RETURN          reduce using rule 133 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER .)
    BREAK           reduce using rule 133 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER .)
    CONTINUE        reduce using rule 133 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER .)
    INTERFACE       reduce using rule 133 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER .)
    DECREMENTO      reduce using rule 133 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER .)
    INCREMENTO      reduce using rule 133 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER .)
    $end            reduce using rule 133 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER .)
    LLADER          reduce using rule 133 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER .)
    IGUAL           shift and go to state 258


state 232

    (130) declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo . MAYOR IGUAL CORIZQ lista_exp CORDER
    (131) declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo . MAYOR IGUAL CORIZQ CORDER
    (132) declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo . MAYOR

    MAYOR           shift and go to state 259


state 233

    (42) impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .

    PTOYCOMA        reduce using rule 42 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    error           reduce using rule 42 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    FUNCTION        reduce using rule 42 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    COMENTARIO      reduce using rule 42 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    COMENTARIO_MULTILINEA reduce using rule 42 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    LET             reduce using rule 42 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    ID              reduce using rule 42 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 42 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    IF              reduce using rule 42 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    WHILE           reduce using rule 42 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    FOR             reduce using rule 42 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    RETURN          reduce using rule 42 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    BREAK           reduce using rule 42 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 42 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    INTERFACE       reduce using rule 42 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    DECREMENTO      reduce using rule 42 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    INCREMENTO      reduce using rule 42 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    $end            reduce using rule 42 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    LLADER          reduce using rule 42 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)


state 234

    (43) impresion -> CONSOLE PUNTO LOG PARIZQ lista_argumentos PARDER .

    PTOYCOMA        reduce using rule 43 (impresion -> CONSOLE PUNTO LOG PARIZQ lista_argumentos PARDER .)
    error           reduce using rule 43 (impresion -> CONSOLE PUNTO LOG PARIZQ lista_argumentos PARDER .)
    FUNCTION        reduce using rule 43 (impresion -> CONSOLE PUNTO LOG PARIZQ lista_argumentos PARDER .)
    COMENTARIO      reduce using rule 43 (impresion -> CONSOLE PUNTO LOG PARIZQ lista_argumentos PARDER .)
    COMENTARIO_MULTILINEA reduce using rule 43 (impresion -> CONSOLE PUNTO LOG PARIZQ lista_argumentos PARDER .)
    LET             reduce using rule 43 (impresion -> CONSOLE PUNTO LOG PARIZQ lista_argumentos PARDER .)
    ID              reduce using rule 43 (impresion -> CONSOLE PUNTO LOG PARIZQ lista_argumentos PARDER .)
    CONSOLE         reduce using rule 43 (impresion -> CONSOLE PUNTO LOG PARIZQ lista_argumentos PARDER .)
    IF              reduce using rule 43 (impresion -> CONSOLE PUNTO LOG PARIZQ lista_argumentos PARDER .)
    WHILE           reduce using rule 43 (impresion -> CONSOLE PUNTO LOG PARIZQ lista_argumentos PARDER .)
    FOR             reduce using rule 43 (impresion -> CONSOLE PUNTO LOG PARIZQ lista_argumentos PARDER .)
    RETURN          reduce using rule 43 (impresion -> CONSOLE PUNTO LOG PARIZQ lista_argumentos PARDER .)
    BREAK           reduce using rule 43 (impresion -> CONSOLE PUNTO LOG PARIZQ lista_argumentos PARDER .)
    CONTINUE        reduce using rule 43 (impresion -> CONSOLE PUNTO LOG PARIZQ lista_argumentos PARDER .)
    INTERFACE       reduce using rule 43 (impresion -> CONSOLE PUNTO LOG PARIZQ lista_argumentos PARDER .)
    DECREMENTO      reduce using rule 43 (impresion -> CONSOLE PUNTO LOG PARIZQ lista_argumentos PARDER .)
    INCREMENTO      reduce using rule 43 (impresion -> CONSOLE PUNTO LOG PARIZQ lista_argumentos PARDER .)
    $end            reduce using rule 43 (impresion -> CONSOLE PUNTO LOG PARIZQ lista_argumentos PARDER .)
    LLADER          reduce using rule 43 (impresion -> CONSOLE PUNTO LOG PARIZQ lista_argumentos PARDER .)


state 235

    (45) condicional -> IF PARIZQ expresion PARDER bloque ELSE . bloque
    (50) elseif -> ELSE . IF PARIZQ expresion PARDER bloque
    (10) bloque -> . LLAIZQ instruccion4 LLADER
    (11) bloque -> . LLAIZQ LLADER

    IF              shift and go to state 260
    LLAIZQ          shift and go to state 189

    bloque                         shift and go to state 261

state 236

    (46) condicional -> IF PARIZQ expresion PARDER bloque lista_elif .
    (47) condicional -> IF PARIZQ expresion PARDER bloque lista_elif . ELSE bloque
    (48) lista_elif -> lista_elif . elseif
    (50) elseif -> . ELSE IF PARIZQ expresion PARDER bloque

    PTOYCOMA        reduce using rule 46 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif .)
    error           reduce using rule 46 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif .)
    FUNCTION        reduce using rule 46 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif .)
    COMENTARIO      reduce using rule 46 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif .)
    COMENTARIO_MULTILINEA reduce using rule 46 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif .)
    LET             reduce using rule 46 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif .)
    ID              reduce using rule 46 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif .)
    CONSOLE         reduce using rule 46 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif .)
    IF              reduce using rule 46 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif .)
    WHILE           reduce using rule 46 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif .)
    FOR             reduce using rule 46 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif .)
    RETURN          reduce using rule 46 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif .)
    BREAK           reduce using rule 46 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif .)
    CONTINUE        reduce using rule 46 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif .)
    INTERFACE       reduce using rule 46 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif .)
    DECREMENTO      reduce using rule 46 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif .)
    INCREMENTO      reduce using rule 46 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif .)
    $end            reduce using rule 46 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif .)
    LLADER          reduce using rule 46 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif .)
    ELSE            shift and go to state 262

    elseif                         shift and go to state 263

state 237

    (49) lista_elif -> elseif .

    ELSE            reduce using rule 49 (lista_elif -> elseif .)
    PTOYCOMA        reduce using rule 49 (lista_elif -> elseif .)
    error           reduce using rule 49 (lista_elif -> elseif .)
    FUNCTION        reduce using rule 49 (lista_elif -> elseif .)
    COMENTARIO      reduce using rule 49 (lista_elif -> elseif .)
    COMENTARIO_MULTILINEA reduce using rule 49 (lista_elif -> elseif .)
    LET             reduce using rule 49 (lista_elif -> elseif .)
    ID              reduce using rule 49 (lista_elif -> elseif .)
    CONSOLE         reduce using rule 49 (lista_elif -> elseif .)
    IF              reduce using rule 49 (lista_elif -> elseif .)
    WHILE           reduce using rule 49 (lista_elif -> elseif .)
    FOR             reduce using rule 49 (lista_elif -> elseif .)
    RETURN          reduce using rule 49 (lista_elif -> elseif .)
    BREAK           reduce using rule 49 (lista_elif -> elseif .)
    CONTINUE        reduce using rule 49 (lista_elif -> elseif .)
    INTERFACE       reduce using rule 49 (lista_elif -> elseif .)
    DECREMENTO      reduce using rule 49 (lista_elif -> elseif .)
    INCREMENTO      reduce using rule 49 (lista_elif -> elseif .)
    $end            reduce using rule 49 (lista_elif -> elseif .)
    LLADER          reduce using rule 49 (lista_elif -> elseif .)


state 238

    (52) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA . asignacion PARDER bloque
    (34) asignacion -> . ID IGUAL expresion
    (35) asignacion -> . dec
    (36) asignacion -> . inc
    (37) asignacion -> . asignacionInterface
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (129) asignacionInterface -> . ID PUNTO ID IGUAL expresion

    ID              shift and go to state 103
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40

    asignacion                     shift and go to state 264
    dec                            shift and go to state 28
    inc                            shift and go to state 29
    asignacionInterface            shift and go to state 30

state 239

    (53) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA . asignacion PARDER bloque
    (34) asignacion -> . ID IGUAL expresion
    (35) asignacion -> . dec
    (36) asignacion -> . inc
    (37) asignacion -> . asignacionInterface
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (129) asignacionInterface -> . ID PUNTO ID IGUAL expresion

    ID              shift and go to state 103
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40

    asignacion                     shift and go to state 265
    dec                            shift and go to state 28
    inc                            shift and go to state 29
    asignacionInterface            shift and go to state 30

state 240

    (54) ciclo_for_of -> FOR PARIZQ LET ID OF expresion . PARDER bloque
    (74) expresion -> expresion . MAS expresion
    (75) expresion -> expresion . MENOS expresion
    (76) expresion -> expresion . POR expresion
    (77) expresion -> expresion . DIVIDIDO expresion
    (78) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MAYOR expresion
    (82) expresion -> expresion . MENOR expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORIGUAL expresion
    (85) expresion -> expresion . IGUALACION expresion
    (86) expresion -> expresion . DISTINTO expresion
    (87) expresion -> expresion . AND expresion
    (88) expresion -> expresion . OR expresion
    (113) casteo -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (107) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 266
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIVIDIDO        shift and go to state 107
    MODULO          shift and go to state 108
    POTENCIA        shift and go to state 109
    MAYOR           shift and go to state 110
    MENOR           shift and go to state 111
    MAYORIGUAL      shift and go to state 112
    MENORIGUAL      shift and go to state 113
    IGUALACION      shift and go to state 114
    DISTINTO        shift and go to state 115
    AND             shift and go to state 116
    OR              shift and go to state 117
    PUNTO           shift and go to state 118


state 241

    (32) declaracion -> LET ID DOSPUNTOS tipo . IGUAL expresion
    (33) declaracion -> LET ID DOSPUNTOS tipo .

    IGUAL           shift and go to state 195
    PTOYCOMA        reduce using rule 33 (declaracion -> LET ID DOSPUNTOS tipo .)


state 242

    (113) casteo -> expresion PUNTO TOSTRING PARIZQ PARDER .

    MAS             reduce using rule 113 (casteo -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    MENOS           reduce using rule 113 (casteo -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    POR             reduce using rule 113 (casteo -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 113 (casteo -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    MODULO          reduce using rule 113 (casteo -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    POTENCIA        reduce using rule 113 (casteo -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    MAYOR           reduce using rule 113 (casteo -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    MENOR           reduce using rule 113 (casteo -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    MAYORIGUAL      reduce using rule 113 (casteo -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    MENORIGUAL      reduce using rule 113 (casteo -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    IGUALACION      reduce using rule 113 (casteo -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    DISTINTO        reduce using rule 113 (casteo -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    AND             reduce using rule 113 (casteo -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    OR              reduce using rule 113 (casteo -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    PUNTO           reduce using rule 113 (casteo -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    PTOYCOMA        reduce using rule 113 (casteo -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    error           reduce using rule 113 (casteo -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    FUNCTION        reduce using rule 113 (casteo -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    COMENTARIO      reduce using rule 113 (casteo -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    COMENTARIO_MULTILINEA reduce using rule 113 (casteo -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    LET             reduce using rule 113 (casteo -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    ID              reduce using rule 113 (casteo -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    CONSOLE         reduce using rule 113 (casteo -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    IF              reduce using rule 113 (casteo -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    WHILE           reduce using rule 113 (casteo -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    FOR             reduce using rule 113 (casteo -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    RETURN          reduce using rule 113 (casteo -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    BREAK           reduce using rule 113 (casteo -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    CONTINUE        reduce using rule 113 (casteo -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    INTERFACE       reduce using rule 113 (casteo -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    DECREMENTO      reduce using rule 113 (casteo -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    INCREMENTO      reduce using rule 113 (casteo -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    $end            reduce using rule 113 (casteo -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    LLADER          reduce using rule 113 (casteo -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    PARDER          reduce using rule 113 (casteo -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    COMA            reduce using rule 113 (casteo -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    CORDER          reduce using rule 113 (casteo -> expresion PUNTO TOSTRING PARIZQ PARDER .)


state 243

    (107) aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion . PARDER
    (74) expresion -> expresion . MAS expresion
    (75) expresion -> expresion . MENOS expresion
    (76) expresion -> expresion . POR expresion
    (77) expresion -> expresion . DIVIDIDO expresion
    (78) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MAYOR expresion
    (82) expresion -> expresion . MENOR expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORIGUAL expresion
    (85) expresion -> expresion . IGUALACION expresion
    (86) expresion -> expresion . DISTINTO expresion
    (87) expresion -> expresion . AND expresion
    (88) expresion -> expresion . OR expresion
    (113) casteo -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (107) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 267
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIVIDIDO        shift and go to state 107
    MODULO          shift and go to state 108
    POTENCIA        shift and go to state 109
    MAYOR           shift and go to state 110
    MENOR           shift and go to state 111
    MAYORIGUAL      shift and go to state 112
    MENORIGUAL      shift and go to state 113
    IGUALACION      shift and go to state 114
    DISTINTO        shift and go to state 115
    AND             shift and go to state 116
    OR              shift and go to state 117
    PUNTO           shift and go to state 118


state 244

    (108) exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion . PARDER
    (74) expresion -> expresion . MAS expresion
    (75) expresion -> expresion . MENOS expresion
    (76) expresion -> expresion . POR expresion
    (77) expresion -> expresion . DIVIDIDO expresion
    (78) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MAYOR expresion
    (82) expresion -> expresion . MENOR expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORIGUAL expresion
    (85) expresion -> expresion . IGUALACION expresion
    (86) expresion -> expresion . DISTINTO expresion
    (87) expresion -> expresion . AND expresion
    (88) expresion -> expresion . OR expresion
    (113) casteo -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (107) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 268
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIVIDIDO        shift and go to state 107
    MODULO          shift and go to state 108
    POTENCIA        shift and go to state 109
    MAYOR           shift and go to state 110
    MENOR           shift and go to state 111
    MAYORIGUAL      shift and go to state 112
    MENORIGUAL      shift and go to state 113
    IGUALACION      shift and go to state 114
    DISTINTO        shift and go to state 115
    AND             shift and go to state 116
    OR              shift and go to state 117
    PUNTO           shift and go to state 118


state 245

    (111) separador -> expresion PUNTO SPLIT PARIZQ expresion . PARDER
    (74) expresion -> expresion . MAS expresion
    (75) expresion -> expresion . MENOS expresion
    (76) expresion -> expresion . POR expresion
    (77) expresion -> expresion . DIVIDIDO expresion
    (78) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MAYOR expresion
    (82) expresion -> expresion . MENOR expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORIGUAL expresion
    (85) expresion -> expresion . IGUALACION expresion
    (86) expresion -> expresion . DISTINTO expresion
    (87) expresion -> expresion . AND expresion
    (88) expresion -> expresion . OR expresion
    (113) casteo -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (107) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 269
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIVIDIDO        shift and go to state 107
    MODULO          shift and go to state 108
    POTENCIA        shift and go to state 109
    MAYOR           shift and go to state 110
    MENOR           shift and go to state 111
    MAYORIGUAL      shift and go to state 112
    MENORIGUAL      shift and go to state 113
    IGUALACION      shift and go to state 114
    DISTINTO        shift and go to state 115
    AND             shift and go to state 116
    OR              shift and go to state 117
    PUNTO           shift and go to state 118


state 246

    (112) concatenacion -> expresion PUNTO CONCAT PARIZQ expresion . PARDER
    (74) expresion -> expresion . MAS expresion
    (75) expresion -> expresion . MENOS expresion
    (76) expresion -> expresion . POR expresion
    (77) expresion -> expresion . DIVIDIDO expresion
    (78) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MAYOR expresion
    (82) expresion -> expresion . MENOR expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORIGUAL expresion
    (85) expresion -> expresion . IGUALACION expresion
    (86) expresion -> expresion . DISTINTO expresion
    (87) expresion -> expresion . AND expresion
    (88) expresion -> expresion . OR expresion
    (113) casteo -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (107) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 270
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIVIDIDO        shift and go to state 107
    MODULO          shift and go to state 108
    POTENCIA        shift and go to state 109
    MAYOR           shift and go to state 110
    MENOR           shift and go to state 111
    MAYORIGUAL      shift and go to state 112
    MENORIGUAL      shift and go to state 113
    IGUALACION      shift and go to state 114
    DISTINTO        shift and go to state 115
    AND             shift and go to state 116
    OR              shift and go to state 117
    PUNTO           shift and go to state 118


state 247

    (109) expresion -> ID PUNTO TOUPPERCASE PARIZQ PARDER .

    MAS             reduce using rule 109 (expresion -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    MENOS           reduce using rule 109 (expresion -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    POR             reduce using rule 109 (expresion -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 109 (expresion -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    MODULO          reduce using rule 109 (expresion -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    POTENCIA        reduce using rule 109 (expresion -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    MAYOR           reduce using rule 109 (expresion -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    MENOR           reduce using rule 109 (expresion -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    MAYORIGUAL      reduce using rule 109 (expresion -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    MENORIGUAL      reduce using rule 109 (expresion -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    IGUALACION      reduce using rule 109 (expresion -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    DISTINTO        reduce using rule 109 (expresion -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    AND             reduce using rule 109 (expresion -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    OR              reduce using rule 109 (expresion -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    PUNTO           reduce using rule 109 (expresion -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    PTOYCOMA        reduce using rule 109 (expresion -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    error           reduce using rule 109 (expresion -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    FUNCTION        reduce using rule 109 (expresion -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    COMENTARIO      reduce using rule 109 (expresion -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    COMENTARIO_MULTILINEA reduce using rule 109 (expresion -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    LET             reduce using rule 109 (expresion -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    ID              reduce using rule 109 (expresion -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    CONSOLE         reduce using rule 109 (expresion -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    IF              reduce using rule 109 (expresion -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    WHILE           reduce using rule 109 (expresion -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    FOR             reduce using rule 109 (expresion -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    RETURN          reduce using rule 109 (expresion -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    BREAK           reduce using rule 109 (expresion -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    CONTINUE        reduce using rule 109 (expresion -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    INTERFACE       reduce using rule 109 (expresion -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    DECREMENTO      reduce using rule 109 (expresion -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    INCREMENTO      reduce using rule 109 (expresion -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    $end            reduce using rule 109 (expresion -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    LLADER          reduce using rule 109 (expresion -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    PARDER          reduce using rule 109 (expresion -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    COMA            reduce using rule 109 (expresion -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    CORDER          reduce using rule 109 (expresion -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)


state 248

    (110) to_minusculas -> ID PUNTO TOLOWERCASE PARIZQ PARDER .

    MAS             reduce using rule 110 (to_minusculas -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    MENOS           reduce using rule 110 (to_minusculas -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    POR             reduce using rule 110 (to_minusculas -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 110 (to_minusculas -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    MODULO          reduce using rule 110 (to_minusculas -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    POTENCIA        reduce using rule 110 (to_minusculas -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    MAYOR           reduce using rule 110 (to_minusculas -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    MENOR           reduce using rule 110 (to_minusculas -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    MAYORIGUAL      reduce using rule 110 (to_minusculas -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    MENORIGUAL      reduce using rule 110 (to_minusculas -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    IGUALACION      reduce using rule 110 (to_minusculas -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    DISTINTO        reduce using rule 110 (to_minusculas -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    AND             reduce using rule 110 (to_minusculas -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    OR              reduce using rule 110 (to_minusculas -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    PUNTO           reduce using rule 110 (to_minusculas -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    PTOYCOMA        reduce using rule 110 (to_minusculas -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    error           reduce using rule 110 (to_minusculas -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    FUNCTION        reduce using rule 110 (to_minusculas -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    COMENTARIO      reduce using rule 110 (to_minusculas -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    COMENTARIO_MULTILINEA reduce using rule 110 (to_minusculas -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    LET             reduce using rule 110 (to_minusculas -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    ID              reduce using rule 110 (to_minusculas -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    CONSOLE         reduce using rule 110 (to_minusculas -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    IF              reduce using rule 110 (to_minusculas -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    WHILE           reduce using rule 110 (to_minusculas -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    FOR             reduce using rule 110 (to_minusculas -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    RETURN          reduce using rule 110 (to_minusculas -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    BREAK           reduce using rule 110 (to_minusculas -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    CONTINUE        reduce using rule 110 (to_minusculas -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    INTERFACE       reduce using rule 110 (to_minusculas -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    DECREMENTO      reduce using rule 110 (to_minusculas -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    INCREMENTO      reduce using rule 110 (to_minusculas -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    $end            reduce using rule 110 (to_minusculas -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    LLADER          reduce using rule 110 (to_minusculas -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    PARDER          reduce using rule 110 (to_minusculas -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    COMA            reduce using rule 110 (to_minusculas -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    CORDER          reduce using rule 110 (to_minusculas -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)


state 249

    (123) param_struct -> ID DOSPUNTOS tipo . PTOYCOMA

    PTOYCOMA        shift and go to state 271


state 250

    (63) parametro -> ID DOSPUNTOS tipo CORIZQ . CORDER

    CORDER          shift and go to state 272


state 251

    (56) funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo . bloque
    (59) funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo . CORIZQ CORDER bloque
    (10) bloque -> . LLAIZQ instruccion4 LLADER
    (11) bloque -> . LLAIZQ LLADER

    CORIZQ          shift and go to state 274
    LLAIZQ          shift and go to state 189

    bloque                         shift and go to state 273

state 252

    (58) funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS tipo bloque .

    error           reduce using rule 58 (funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS tipo bloque .)
    FUNCTION        reduce using rule 58 (funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS tipo bloque .)
    COMENTARIO      reduce using rule 58 (funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS tipo bloque .)
    COMENTARIO_MULTILINEA reduce using rule 58 (funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS tipo bloque .)
    LET             reduce using rule 58 (funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS tipo bloque .)
    ID              reduce using rule 58 (funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS tipo bloque .)
    CONSOLE         reduce using rule 58 (funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS tipo bloque .)
    IF              reduce using rule 58 (funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS tipo bloque .)
    WHILE           reduce using rule 58 (funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS tipo bloque .)
    FOR             reduce using rule 58 (funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS tipo bloque .)
    RETURN          reduce using rule 58 (funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS tipo bloque .)
    BREAK           reduce using rule 58 (funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS tipo bloque .)
    CONTINUE        reduce using rule 58 (funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS tipo bloque .)
    INTERFACE       reduce using rule 58 (funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS tipo bloque .)
    DECREMENTO      reduce using rule 58 (funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS tipo bloque .)
    INCREMENTO      reduce using rule 58 (funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS tipo bloque .)
    $end            reduce using rule 58 (funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS tipo bloque .)


state 253

    (10) bloque -> LLAIZQ instruccion4 LLADER .

    error           reduce using rule 10 (bloque -> LLAIZQ instruccion4 LLADER .)
    FUNCTION        reduce using rule 10 (bloque -> LLAIZQ instruccion4 LLADER .)
    COMENTARIO      reduce using rule 10 (bloque -> LLAIZQ instruccion4 LLADER .)
    COMENTARIO_MULTILINEA reduce using rule 10 (bloque -> LLAIZQ instruccion4 LLADER .)
    LET             reduce using rule 10 (bloque -> LLAIZQ instruccion4 LLADER .)
    ID              reduce using rule 10 (bloque -> LLAIZQ instruccion4 LLADER .)
    CONSOLE         reduce using rule 10 (bloque -> LLAIZQ instruccion4 LLADER .)
    IF              reduce using rule 10 (bloque -> LLAIZQ instruccion4 LLADER .)
    WHILE           reduce using rule 10 (bloque -> LLAIZQ instruccion4 LLADER .)
    FOR             reduce using rule 10 (bloque -> LLAIZQ instruccion4 LLADER .)
    RETURN          reduce using rule 10 (bloque -> LLAIZQ instruccion4 LLADER .)
    BREAK           reduce using rule 10 (bloque -> LLAIZQ instruccion4 LLADER .)
    CONTINUE        reduce using rule 10 (bloque -> LLAIZQ instruccion4 LLADER .)
    INTERFACE       reduce using rule 10 (bloque -> LLAIZQ instruccion4 LLADER .)
    DECREMENTO      reduce using rule 10 (bloque -> LLAIZQ instruccion4 LLADER .)
    INCREMENTO      reduce using rule 10 (bloque -> LLAIZQ instruccion4 LLADER .)
    $end            reduce using rule 10 (bloque -> LLAIZQ instruccion4 LLADER .)
    ELSE            reduce using rule 10 (bloque -> LLAIZQ instruccion4 LLADER .)
    PTOYCOMA        reduce using rule 10 (bloque -> LLAIZQ instruccion4 LLADER .)
    LLADER          reduce using rule 10 (bloque -> LLAIZQ instruccion4 LLADER .)


state 254

    (8) instruccion4 -> instruccion4 instruccion2 .

    LLADER          reduce using rule 8 (instruccion4 -> instruccion4 instruccion2 .)
    LET             reduce using rule 8 (instruccion4 -> instruccion4 instruccion2 .)
    ID              reduce using rule 8 (instruccion4 -> instruccion4 instruccion2 .)
    CONSOLE         reduce using rule 8 (instruccion4 -> instruccion4 instruccion2 .)
    IF              reduce using rule 8 (instruccion4 -> instruccion4 instruccion2 .)
    WHILE           reduce using rule 8 (instruccion4 -> instruccion4 instruccion2 .)
    FOR             reduce using rule 8 (instruccion4 -> instruccion4 instruccion2 .)
    RETURN          reduce using rule 8 (instruccion4 -> instruccion4 instruccion2 .)
    BREAK           reduce using rule 8 (instruccion4 -> instruccion4 instruccion2 .)
    CONTINUE        reduce using rule 8 (instruccion4 -> instruccion4 instruccion2 .)
    COMENTARIO      reduce using rule 8 (instruccion4 -> instruccion4 instruccion2 .)
    COMENTARIO_MULTILINEA reduce using rule 8 (instruccion4 -> instruccion4 instruccion2 .)
    INTERFACE       reduce using rule 8 (instruccion4 -> instruccion4 instruccion2 .)
    DECREMENTO      reduce using rule 8 (instruccion4 -> instruccion4 instruccion2 .)
    INCREMENTO      reduce using rule 8 (instruccion4 -> instruccion4 instruccion2 .)


state 255

    (127) parDecl -> ID . DOSPUNTOS expresion

    DOSPUNTOS       shift and go to state 275


state 256

    (124) declaracionInterface -> LET ID DOSPUNTOS ID IGUAL LLAIZQ lista_d . LLADER
    (125) lista_d -> lista_d . COMA parDecl

    LLADER          shift and go to state 276
    COMA            shift and go to state 277


state 257

    (126) lista_d -> parDecl .

    LLADER          reduce using rule 126 (lista_d -> parDecl .)
    COMA            reduce using rule 126 (lista_d -> parDecl .)


state 258

    (134) declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL . CORIZQ lista_exp CORDER
    (135) declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL . CORIZQ CORDER
    (137) declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL . expresion
    (64) expresion -> . llamada_funcion
    (74) expresion -> . expresion MAS expresion
    (75) expresion -> . expresion MENOS expresion
    (76) expresion -> . expresion POR expresion
    (77) expresion -> . expresion DIVIDIDO expresion
    (78) expresion -> . expresion MODULO expresion
    (79) expresion -> . expresion POTENCIA expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . expresion MAYOR expresion
    (82) expresion -> . expresion MENOR expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORIGUAL expresion
    (85) expresion -> . expresion IGUALACION expresion
    (86) expresion -> . expresion DISTINTO expresion
    (87) expresion -> . expresion AND expresion
    (88) expresion -> . expresion OR expresion
    (89) expresion -> . NOT expresion
    (90) expresion -> . dec
    (91) expresion -> . inc
    (92) expresion -> . casteo
    (93) expresion -> . PARIZQ expresion PARDER
    (94) expresion -> . ENTERO
    (95) expresion -> . DECIMAL
    (96) expresion -> . CADENA
    (97) expresion -> . NULL
    (98) expresion -> . booleano
    (99) expresion -> . ID
    (102) expresion -> . aproximacion
    (103) expresion -> . exponencial
    (104) expresion -> . separador
    (105) expresion -> . concatenacion
    (106) expresion -> . to_minusculas
    (109) expresion -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (128) expresion -> . ID PUNTO ID
    (141) expresion -> . arreglo
    (144) expresion -> . acceso_array
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (113) casteo -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (114) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (100) booleano -> . TRUE
    (101) booleano -> . FALSE
    (107) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (110) to_minusculas -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (142) arreglo -> . CORIZQ lista_exp CORDER
    (143) arreglo -> . CORIZQ CORDER
    (145) acceso_array -> . ID lista_acceso_array

    CORIZQ          shift and go to state 278
    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    CADENA          shift and go to state 68
    NULL            shift and go to state 69
    ID              shift and go to state 71
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40
    CAST_STRING     shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81

    expresion                      shift and go to state 279
    llamada_funcion                shift and go to state 59
    dec                            shift and go to state 62
    inc                            shift and go to state 63
    casteo                         shift and go to state 64
    booleano                       shift and go to state 70
    aproximacion                   shift and go to state 72
    exponencial                    shift and go to state 73
    separador                      shift and go to state 74
    concatenacion                  shift and go to state 75
    to_minusculas                  shift and go to state 76
    arreglo                        shift and go to state 77
    acceso_array                   shift and go to state 78

state 259

    (130) declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR . IGUAL CORIZQ lista_exp CORDER
    (131) declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR . IGUAL CORIZQ CORDER
    (132) declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR .

    IGUAL           shift and go to state 280
    PTOYCOMA        reduce using rule 132 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR .)
    error           reduce using rule 132 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR .)
    FUNCTION        reduce using rule 132 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR .)
    COMENTARIO      reduce using rule 132 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR .)
    COMENTARIO_MULTILINEA reduce using rule 132 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR .)
    LET             reduce using rule 132 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR .)
    ID              reduce using rule 132 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR .)
    CONSOLE         reduce using rule 132 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR .)
    IF              reduce using rule 132 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR .)
    WHILE           reduce using rule 132 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR .)
    FOR             reduce using rule 132 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR .)
    RETURN          reduce using rule 132 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR .)
    BREAK           reduce using rule 132 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR .)
    CONTINUE        reduce using rule 132 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR .)
    INTERFACE       reduce using rule 132 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR .)
    DECREMENTO      reduce using rule 132 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR .)
    INCREMENTO      reduce using rule 132 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR .)
    $end            reduce using rule 132 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR .)
    LLADER          reduce using rule 132 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR .)


state 260

    (50) elseif -> ELSE IF . PARIZQ expresion PARDER bloque

    PARIZQ          shift and go to state 281


state 261

    (45) condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .

    PTOYCOMA        reduce using rule 45 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    error           reduce using rule 45 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    FUNCTION        reduce using rule 45 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    COMENTARIO      reduce using rule 45 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    COMENTARIO_MULTILINEA reduce using rule 45 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    LET             reduce using rule 45 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    ID              reduce using rule 45 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    CONSOLE         reduce using rule 45 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    IF              reduce using rule 45 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    WHILE           reduce using rule 45 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    FOR             reduce using rule 45 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    RETURN          reduce using rule 45 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    BREAK           reduce using rule 45 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    CONTINUE        reduce using rule 45 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    INTERFACE       reduce using rule 45 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    DECREMENTO      reduce using rule 45 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    INCREMENTO      reduce using rule 45 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    $end            reduce using rule 45 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    LLADER          reduce using rule 45 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)


state 262

    (47) condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE . bloque
    (50) elseif -> ELSE . IF PARIZQ expresion PARDER bloque
    (10) bloque -> . LLAIZQ instruccion4 LLADER
    (11) bloque -> . LLAIZQ LLADER

    IF              shift and go to state 260
    LLAIZQ          shift and go to state 189

    bloque                         shift and go to state 282

state 263

    (48) lista_elif -> lista_elif elseif .

    ELSE            reduce using rule 48 (lista_elif -> lista_elif elseif .)
    PTOYCOMA        reduce using rule 48 (lista_elif -> lista_elif elseif .)
    error           reduce using rule 48 (lista_elif -> lista_elif elseif .)
    FUNCTION        reduce using rule 48 (lista_elif -> lista_elif elseif .)
    COMENTARIO      reduce using rule 48 (lista_elif -> lista_elif elseif .)
    COMENTARIO_MULTILINEA reduce using rule 48 (lista_elif -> lista_elif elseif .)
    LET             reduce using rule 48 (lista_elif -> lista_elif elseif .)
    ID              reduce using rule 48 (lista_elif -> lista_elif elseif .)
    CONSOLE         reduce using rule 48 (lista_elif -> lista_elif elseif .)
    IF              reduce using rule 48 (lista_elif -> lista_elif elseif .)
    WHILE           reduce using rule 48 (lista_elif -> lista_elif elseif .)
    FOR             reduce using rule 48 (lista_elif -> lista_elif elseif .)
    RETURN          reduce using rule 48 (lista_elif -> lista_elif elseif .)
    BREAK           reduce using rule 48 (lista_elif -> lista_elif elseif .)
    CONTINUE        reduce using rule 48 (lista_elif -> lista_elif elseif .)
    INTERFACE       reduce using rule 48 (lista_elif -> lista_elif elseif .)
    DECREMENTO      reduce using rule 48 (lista_elif -> lista_elif elseif .)
    INCREMENTO      reduce using rule 48 (lista_elif -> lista_elif elseif .)
    $end            reduce using rule 48 (lista_elif -> lista_elif elseif .)
    LLADER          reduce using rule 48 (lista_elif -> lista_elif elseif .)


state 264

    (52) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion . PARDER bloque

    PARDER          shift and go to state 283


state 265

    (53) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion . PARDER bloque

    PARDER          shift and go to state 284


state 266

    (54) ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER . bloque
    (10) bloque -> . LLAIZQ instruccion4 LLADER
    (11) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 189

    bloque                         shift and go to state 285

state 267

    (107) aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .

    MAS             reduce using rule 107 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    MENOS           reduce using rule 107 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    POR             reduce using rule 107 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 107 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    MODULO          reduce using rule 107 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 107 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 107 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    MENOR           reduce using rule 107 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 107 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 107 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    IGUALACION      reduce using rule 107 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    DISTINTO        reduce using rule 107 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    AND             reduce using rule 107 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    OR              reduce using rule 107 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 107 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    PTOYCOMA        reduce using rule 107 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    error           reduce using rule 107 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    FUNCTION        reduce using rule 107 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    COMENTARIO      reduce using rule 107 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    COMENTARIO_MULTILINEA reduce using rule 107 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    LET             reduce using rule 107 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    ID              reduce using rule 107 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 107 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    IF              reduce using rule 107 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    WHILE           reduce using rule 107 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    FOR             reduce using rule 107 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    RETURN          reduce using rule 107 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    BREAK           reduce using rule 107 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 107 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    INTERFACE       reduce using rule 107 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    DECREMENTO      reduce using rule 107 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    INCREMENTO      reduce using rule 107 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    $end            reduce using rule 107 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    LLADER          reduce using rule 107 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    PARDER          reduce using rule 107 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    COMA            reduce using rule 107 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    CORDER          reduce using rule 107 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)


state 268

    (108) exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .

    MAS             reduce using rule 108 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    MENOS           reduce using rule 108 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    POR             reduce using rule 108 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 108 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    MODULO          reduce using rule 108 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 108 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 108 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    MENOR           reduce using rule 108 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 108 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 108 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    IGUALACION      reduce using rule 108 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    DISTINTO        reduce using rule 108 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    AND             reduce using rule 108 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    OR              reduce using rule 108 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 108 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    PTOYCOMA        reduce using rule 108 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    error           reduce using rule 108 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    FUNCTION        reduce using rule 108 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    COMENTARIO      reduce using rule 108 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    COMENTARIO_MULTILINEA reduce using rule 108 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    LET             reduce using rule 108 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    ID              reduce using rule 108 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 108 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    IF              reduce using rule 108 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    WHILE           reduce using rule 108 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    FOR             reduce using rule 108 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    RETURN          reduce using rule 108 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    BREAK           reduce using rule 108 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 108 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    INTERFACE       reduce using rule 108 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    DECREMENTO      reduce using rule 108 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    INCREMENTO      reduce using rule 108 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    $end            reduce using rule 108 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    LLADER          reduce using rule 108 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    PARDER          reduce using rule 108 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    COMA            reduce using rule 108 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    CORDER          reduce using rule 108 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)


state 269

    (111) separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .

    MAS             reduce using rule 111 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    MENOS           reduce using rule 111 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    POR             reduce using rule 111 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 111 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    MODULO          reduce using rule 111 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 111 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 111 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    MENOR           reduce using rule 111 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 111 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 111 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    IGUALACION      reduce using rule 111 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    DISTINTO        reduce using rule 111 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    AND             reduce using rule 111 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    OR              reduce using rule 111 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 111 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    PTOYCOMA        reduce using rule 111 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    error           reduce using rule 111 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    FUNCTION        reduce using rule 111 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    COMENTARIO      reduce using rule 111 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    COMENTARIO_MULTILINEA reduce using rule 111 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    LET             reduce using rule 111 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    ID              reduce using rule 111 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 111 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    IF              reduce using rule 111 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    WHILE           reduce using rule 111 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    FOR             reduce using rule 111 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    RETURN          reduce using rule 111 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    BREAK           reduce using rule 111 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 111 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    INTERFACE       reduce using rule 111 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    DECREMENTO      reduce using rule 111 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    INCREMENTO      reduce using rule 111 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    $end            reduce using rule 111 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    LLADER          reduce using rule 111 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    PARDER          reduce using rule 111 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    COMA            reduce using rule 111 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    CORDER          reduce using rule 111 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)


state 270

    (112) concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .

    MAS             reduce using rule 112 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    MENOS           reduce using rule 112 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    POR             reduce using rule 112 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 112 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    MODULO          reduce using rule 112 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 112 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 112 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    MENOR           reduce using rule 112 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 112 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 112 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    IGUALACION      reduce using rule 112 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    DISTINTO        reduce using rule 112 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    AND             reduce using rule 112 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    OR              reduce using rule 112 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 112 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    PTOYCOMA        reduce using rule 112 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    error           reduce using rule 112 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    FUNCTION        reduce using rule 112 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    COMENTARIO      reduce using rule 112 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    COMENTARIO_MULTILINEA reduce using rule 112 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    LET             reduce using rule 112 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    ID              reduce using rule 112 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 112 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    IF              reduce using rule 112 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    WHILE           reduce using rule 112 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    FOR             reduce using rule 112 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    RETURN          reduce using rule 112 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    BREAK           reduce using rule 112 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 112 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    INTERFACE       reduce using rule 112 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    DECREMENTO      reduce using rule 112 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    INCREMENTO      reduce using rule 112 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    $end            reduce using rule 112 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    LLADER          reduce using rule 112 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    PARDER          reduce using rule 112 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    COMA            reduce using rule 112 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    CORDER          reduce using rule 112 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)


state 271

    (123) param_struct -> ID DOSPUNTOS tipo PTOYCOMA .

    LLADER          reduce using rule 123 (param_struct -> ID DOSPUNTOS tipo PTOYCOMA .)
    ID              reduce using rule 123 (param_struct -> ID DOSPUNTOS tipo PTOYCOMA .)


state 272

    (63) parametro -> ID DOSPUNTOS tipo CORIZQ CORDER .

    PARDER          reduce using rule 63 (parametro -> ID DOSPUNTOS tipo CORIZQ CORDER .)
    COMA            reduce using rule 63 (parametro -> ID DOSPUNTOS tipo CORIZQ CORDER .)


state 273

    (56) funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .

    error           reduce using rule 56 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .)
    FUNCTION        reduce using rule 56 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .)
    COMENTARIO      reduce using rule 56 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .)
    COMENTARIO_MULTILINEA reduce using rule 56 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .)
    LET             reduce using rule 56 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .)
    ID              reduce using rule 56 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .)
    CONSOLE         reduce using rule 56 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .)
    IF              reduce using rule 56 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .)
    WHILE           reduce using rule 56 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .)
    FOR             reduce using rule 56 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .)
    RETURN          reduce using rule 56 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .)
    BREAK           reduce using rule 56 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .)
    CONTINUE        reduce using rule 56 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .)
    INTERFACE       reduce using rule 56 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .)
    DECREMENTO      reduce using rule 56 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .)
    INCREMENTO      reduce using rule 56 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .)
    $end            reduce using rule 56 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .)


state 274

    (59) funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo CORIZQ . CORDER bloque

    CORDER          shift and go to state 286


state 275

    (127) parDecl -> ID DOSPUNTOS . expresion
    (64) expresion -> . llamada_funcion
    (74) expresion -> . expresion MAS expresion
    (75) expresion -> . expresion MENOS expresion
    (76) expresion -> . expresion POR expresion
    (77) expresion -> . expresion DIVIDIDO expresion
    (78) expresion -> . expresion MODULO expresion
    (79) expresion -> . expresion POTENCIA expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . expresion MAYOR expresion
    (82) expresion -> . expresion MENOR expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORIGUAL expresion
    (85) expresion -> . expresion IGUALACION expresion
    (86) expresion -> . expresion DISTINTO expresion
    (87) expresion -> . expresion AND expresion
    (88) expresion -> . expresion OR expresion
    (89) expresion -> . NOT expresion
    (90) expresion -> . dec
    (91) expresion -> . inc
    (92) expresion -> . casteo
    (93) expresion -> . PARIZQ expresion PARDER
    (94) expresion -> . ENTERO
    (95) expresion -> . DECIMAL
    (96) expresion -> . CADENA
    (97) expresion -> . NULL
    (98) expresion -> . booleano
    (99) expresion -> . ID
    (102) expresion -> . aproximacion
    (103) expresion -> . exponencial
    (104) expresion -> . separador
    (105) expresion -> . concatenacion
    (106) expresion -> . to_minusculas
    (109) expresion -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (128) expresion -> . ID PUNTO ID
    (141) expresion -> . arreglo
    (144) expresion -> . acceso_array
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (113) casteo -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (114) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (100) booleano -> . TRUE
    (101) booleano -> . FALSE
    (107) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (110) to_minusculas -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (142) arreglo -> . CORIZQ lista_exp CORDER
    (143) arreglo -> . CORIZQ CORDER
    (145) acceso_array -> . ID lista_acceso_array

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    CADENA          shift and go to state 68
    NULL            shift and go to state 69
    ID              shift and go to state 71
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40
    CAST_STRING     shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    CORIZQ          shift and go to state 82

    expresion                      shift and go to state 287
    llamada_funcion                shift and go to state 59
    dec                            shift and go to state 62
    inc                            shift and go to state 63
    casteo                         shift and go to state 64
    booleano                       shift and go to state 70
    aproximacion                   shift and go to state 72
    exponencial                    shift and go to state 73
    separador                      shift and go to state 74
    concatenacion                  shift and go to state 75
    to_minusculas                  shift and go to state 76
    arreglo                        shift and go to state 77
    acceso_array                   shift and go to state 78

state 276

    (124) declaracionInterface -> LET ID DOSPUNTOS ID IGUAL LLAIZQ lista_d LLADER .

    PTOYCOMA        reduce using rule 124 (declaracionInterface -> LET ID DOSPUNTOS ID IGUAL LLAIZQ lista_d LLADER .)
    error           reduce using rule 124 (declaracionInterface -> LET ID DOSPUNTOS ID IGUAL LLAIZQ lista_d LLADER .)
    FUNCTION        reduce using rule 124 (declaracionInterface -> LET ID DOSPUNTOS ID IGUAL LLAIZQ lista_d LLADER .)
    COMENTARIO      reduce using rule 124 (declaracionInterface -> LET ID DOSPUNTOS ID IGUAL LLAIZQ lista_d LLADER .)
    COMENTARIO_MULTILINEA reduce using rule 124 (declaracionInterface -> LET ID DOSPUNTOS ID IGUAL LLAIZQ lista_d LLADER .)
    LET             reduce using rule 124 (declaracionInterface -> LET ID DOSPUNTOS ID IGUAL LLAIZQ lista_d LLADER .)
    ID              reduce using rule 124 (declaracionInterface -> LET ID DOSPUNTOS ID IGUAL LLAIZQ lista_d LLADER .)
    CONSOLE         reduce using rule 124 (declaracionInterface -> LET ID DOSPUNTOS ID IGUAL LLAIZQ lista_d LLADER .)
    IF              reduce using rule 124 (declaracionInterface -> LET ID DOSPUNTOS ID IGUAL LLAIZQ lista_d LLADER .)
    WHILE           reduce using rule 124 (declaracionInterface -> LET ID DOSPUNTOS ID IGUAL LLAIZQ lista_d LLADER .)
    FOR             reduce using rule 124 (declaracionInterface -> LET ID DOSPUNTOS ID IGUAL LLAIZQ lista_d LLADER .)
    RETURN          reduce using rule 124 (declaracionInterface -> LET ID DOSPUNTOS ID IGUAL LLAIZQ lista_d LLADER .)
    BREAK           reduce using rule 124 (declaracionInterface -> LET ID DOSPUNTOS ID IGUAL LLAIZQ lista_d LLADER .)
    CONTINUE        reduce using rule 124 (declaracionInterface -> LET ID DOSPUNTOS ID IGUAL LLAIZQ lista_d LLADER .)
    INTERFACE       reduce using rule 124 (declaracionInterface -> LET ID DOSPUNTOS ID IGUAL LLAIZQ lista_d LLADER .)
    DECREMENTO      reduce using rule 124 (declaracionInterface -> LET ID DOSPUNTOS ID IGUAL LLAIZQ lista_d LLADER .)
    INCREMENTO      reduce using rule 124 (declaracionInterface -> LET ID DOSPUNTOS ID IGUAL LLAIZQ lista_d LLADER .)
    $end            reduce using rule 124 (declaracionInterface -> LET ID DOSPUNTOS ID IGUAL LLAIZQ lista_d LLADER .)
    LLADER          reduce using rule 124 (declaracionInterface -> LET ID DOSPUNTOS ID IGUAL LLAIZQ lista_d LLADER .)


state 277

    (125) lista_d -> lista_d COMA . parDecl
    (127) parDecl -> . ID DOSPUNTOS expresion

    ID              shift and go to state 255

    parDecl                        shift and go to state 288

state 278

    (134) declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ . lista_exp CORDER
    (135) declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ . CORDER
    (142) arreglo -> CORIZQ . lista_exp CORDER
    (143) arreglo -> CORIZQ . CORDER
    (139) lista_exp -> . lista_exp COMA expresion
    (140) lista_exp -> . expresion
    (64) expresion -> . llamada_funcion
    (74) expresion -> . expresion MAS expresion
    (75) expresion -> . expresion MENOS expresion
    (76) expresion -> . expresion POR expresion
    (77) expresion -> . expresion DIVIDIDO expresion
    (78) expresion -> . expresion MODULO expresion
    (79) expresion -> . expresion POTENCIA expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . expresion MAYOR expresion
    (82) expresion -> . expresion MENOR expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORIGUAL expresion
    (85) expresion -> . expresion IGUALACION expresion
    (86) expresion -> . expresion DISTINTO expresion
    (87) expresion -> . expresion AND expresion
    (88) expresion -> . expresion OR expresion
    (89) expresion -> . NOT expresion
    (90) expresion -> . dec
    (91) expresion -> . inc
    (92) expresion -> . casteo
    (93) expresion -> . PARIZQ expresion PARDER
    (94) expresion -> . ENTERO
    (95) expresion -> . DECIMAL
    (96) expresion -> . CADENA
    (97) expresion -> . NULL
    (98) expresion -> . booleano
    (99) expresion -> . ID
    (102) expresion -> . aproximacion
    (103) expresion -> . exponencial
    (104) expresion -> . separador
    (105) expresion -> . concatenacion
    (106) expresion -> . to_minusculas
    (109) expresion -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (128) expresion -> . ID PUNTO ID
    (141) expresion -> . arreglo
    (144) expresion -> . acceso_array
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (113) casteo -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (114) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (100) booleano -> . TRUE
    (101) booleano -> . FALSE
    (107) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (110) to_minusculas -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (142) arreglo -> . CORIZQ lista_exp CORDER
    (143) arreglo -> . CORIZQ CORDER
    (145) acceso_array -> . ID lista_acceso_array

    CORDER          shift and go to state 289
    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    CADENA          shift and go to state 68
    NULL            shift and go to state 69
    ID              shift and go to state 71
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40
    CAST_STRING     shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    CORIZQ          shift and go to state 82

    lista_exp                      shift and go to state 290
    expresion                      shift and go to state 127
    llamada_funcion                shift and go to state 59
    dec                            shift and go to state 62
    inc                            shift and go to state 63
    casteo                         shift and go to state 64
    booleano                       shift and go to state 70
    aproximacion                   shift and go to state 72
    exponencial                    shift and go to state 73
    separador                      shift and go to state 74
    concatenacion                  shift and go to state 75
    to_minusculas                  shift and go to state 76
    arreglo                        shift and go to state 77
    acceso_array                   shift and go to state 78

state 279

    (137) declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion .
    (74) expresion -> expresion . MAS expresion
    (75) expresion -> expresion . MENOS expresion
    (76) expresion -> expresion . POR expresion
    (77) expresion -> expresion . DIVIDIDO expresion
    (78) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MAYOR expresion
    (82) expresion -> expresion . MENOR expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORIGUAL expresion
    (85) expresion -> expresion . IGUALACION expresion
    (86) expresion -> expresion . DISTINTO expresion
    (87) expresion -> expresion . AND expresion
    (88) expresion -> expresion . OR expresion
    (113) casteo -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (107) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PTOYCOMA        reduce using rule 137 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion .)
    error           reduce using rule 137 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion .)
    FUNCTION        reduce using rule 137 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion .)
    COMENTARIO      reduce using rule 137 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion .)
    COMENTARIO_MULTILINEA reduce using rule 137 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion .)
    LET             reduce using rule 137 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion .)
    ID              reduce using rule 137 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion .)
    CONSOLE         reduce using rule 137 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion .)
    IF              reduce using rule 137 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion .)
    WHILE           reduce using rule 137 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion .)
    FOR             reduce using rule 137 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion .)
    RETURN          reduce using rule 137 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion .)
    BREAK           reduce using rule 137 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion .)
    CONTINUE        reduce using rule 137 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion .)
    INTERFACE       reduce using rule 137 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion .)
    DECREMENTO      reduce using rule 137 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion .)
    INCREMENTO      reduce using rule 137 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion .)
    $end            reduce using rule 137 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion .)
    LLADER          reduce using rule 137 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion .)
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIVIDIDO        shift and go to state 107
    MODULO          shift and go to state 108
    POTENCIA        shift and go to state 109
    MAYOR           shift and go to state 110
    MENOR           shift and go to state 111
    MAYORIGUAL      shift and go to state 112
    MENORIGUAL      shift and go to state 113
    IGUALACION      shift and go to state 114
    DISTINTO        shift and go to state 115
    AND             shift and go to state 116
    OR              shift and go to state 117
    PUNTO           shift and go to state 118


state 280

    (130) declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL . CORIZQ lista_exp CORDER
    (131) declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL . CORIZQ CORDER

    CORIZQ          shift and go to state 291


state 281

    (50) elseif -> ELSE IF PARIZQ . expresion PARDER bloque
    (64) expresion -> . llamada_funcion
    (74) expresion -> . expresion MAS expresion
    (75) expresion -> . expresion MENOS expresion
    (76) expresion -> . expresion POR expresion
    (77) expresion -> . expresion DIVIDIDO expresion
    (78) expresion -> . expresion MODULO expresion
    (79) expresion -> . expresion POTENCIA expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . expresion MAYOR expresion
    (82) expresion -> . expresion MENOR expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORIGUAL expresion
    (85) expresion -> . expresion IGUALACION expresion
    (86) expresion -> . expresion DISTINTO expresion
    (87) expresion -> . expresion AND expresion
    (88) expresion -> . expresion OR expresion
    (89) expresion -> . NOT expresion
    (90) expresion -> . dec
    (91) expresion -> . inc
    (92) expresion -> . casteo
    (93) expresion -> . PARIZQ expresion PARDER
    (94) expresion -> . ENTERO
    (95) expresion -> . DECIMAL
    (96) expresion -> . CADENA
    (97) expresion -> . NULL
    (98) expresion -> . booleano
    (99) expresion -> . ID
    (102) expresion -> . aproximacion
    (103) expresion -> . exponencial
    (104) expresion -> . separador
    (105) expresion -> . concatenacion
    (106) expresion -> . to_minusculas
    (109) expresion -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (128) expresion -> . ID PUNTO ID
    (141) expresion -> . arreglo
    (144) expresion -> . acceso_array
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (113) casteo -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (114) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (100) booleano -> . TRUE
    (101) booleano -> . FALSE
    (107) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (110) to_minusculas -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (142) arreglo -> . CORIZQ lista_exp CORDER
    (143) arreglo -> . CORIZQ CORDER
    (145) acceso_array -> . ID lista_acceso_array

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    CADENA          shift and go to state 68
    NULL            shift and go to state 69
    ID              shift and go to state 71
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40
    CAST_STRING     shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    CORIZQ          shift and go to state 82

    expresion                      shift and go to state 292
    llamada_funcion                shift and go to state 59
    dec                            shift and go to state 62
    inc                            shift and go to state 63
    casteo                         shift and go to state 64
    booleano                       shift and go to state 70
    aproximacion                   shift and go to state 72
    exponencial                    shift and go to state 73
    separador                      shift and go to state 74
    concatenacion                  shift and go to state 75
    to_minusculas                  shift and go to state 76
    arreglo                        shift and go to state 77
    acceso_array                   shift and go to state 78

state 282

    (47) condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .

    PTOYCOMA        reduce using rule 47 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    error           reduce using rule 47 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    FUNCTION        reduce using rule 47 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    COMENTARIO      reduce using rule 47 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    COMENTARIO_MULTILINEA reduce using rule 47 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    LET             reduce using rule 47 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    ID              reduce using rule 47 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    CONSOLE         reduce using rule 47 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    IF              reduce using rule 47 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    WHILE           reduce using rule 47 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    FOR             reduce using rule 47 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    RETURN          reduce using rule 47 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    BREAK           reduce using rule 47 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    CONTINUE        reduce using rule 47 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    INTERFACE       reduce using rule 47 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    DECREMENTO      reduce using rule 47 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    INCREMENTO      reduce using rule 47 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    $end            reduce using rule 47 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    LLADER          reduce using rule 47 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)


state 283

    (52) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER . bloque
    (10) bloque -> . LLAIZQ instruccion4 LLADER
    (11) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 189

    bloque                         shift and go to state 293

state 284

    (53) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER . bloque
    (10) bloque -> . LLAIZQ instruccion4 LLADER
    (11) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 189

    bloque                         shift and go to state 294

state 285

    (54) ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .

    PTOYCOMA        reduce using rule 54 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    error           reduce using rule 54 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    FUNCTION        reduce using rule 54 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    COMENTARIO      reduce using rule 54 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    COMENTARIO_MULTILINEA reduce using rule 54 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    LET             reduce using rule 54 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    ID              reduce using rule 54 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    CONSOLE         reduce using rule 54 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    IF              reduce using rule 54 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    WHILE           reduce using rule 54 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    FOR             reduce using rule 54 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    RETURN          reduce using rule 54 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    BREAK           reduce using rule 54 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    CONTINUE        reduce using rule 54 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    INTERFACE       reduce using rule 54 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    DECREMENTO      reduce using rule 54 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    INCREMENTO      reduce using rule 54 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    $end            reduce using rule 54 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    LLADER          reduce using rule 54 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)


state 286

    (59) funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo CORIZQ CORDER . bloque
    (10) bloque -> . LLAIZQ instruccion4 LLADER
    (11) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 189

    bloque                         shift and go to state 295

state 287

    (127) parDecl -> ID DOSPUNTOS expresion .
    (74) expresion -> expresion . MAS expresion
    (75) expresion -> expresion . MENOS expresion
    (76) expresion -> expresion . POR expresion
    (77) expresion -> expresion . DIVIDIDO expresion
    (78) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MAYOR expresion
    (82) expresion -> expresion . MENOR expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORIGUAL expresion
    (85) expresion -> expresion . IGUALACION expresion
    (86) expresion -> expresion . DISTINTO expresion
    (87) expresion -> expresion . AND expresion
    (88) expresion -> expresion . OR expresion
    (113) casteo -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (107) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    LLADER          reduce using rule 127 (parDecl -> ID DOSPUNTOS expresion .)
    COMA            reduce using rule 127 (parDecl -> ID DOSPUNTOS expresion .)
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIVIDIDO        shift and go to state 107
    MODULO          shift and go to state 108
    POTENCIA        shift and go to state 109
    MAYOR           shift and go to state 110
    MENOR           shift and go to state 111
    MAYORIGUAL      shift and go to state 112
    MENORIGUAL      shift and go to state 113
    IGUALACION      shift and go to state 114
    DISTINTO        shift and go to state 115
    AND             shift and go to state 116
    OR              shift and go to state 117
    PUNTO           shift and go to state 118


state 288

    (125) lista_d -> lista_d COMA parDecl .

    LLADER          reduce using rule 125 (lista_d -> lista_d COMA parDecl .)
    COMA            reduce using rule 125 (lista_d -> lista_d COMA parDecl .)


state 289

    (135) declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .
    (143) arreglo -> CORIZQ CORDER .

  ! reduce/reduce conflict for PTOYCOMA resolved using rule 135 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for error resolved using rule 135 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 135 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for COMENTARIO resolved using rule 135 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for COMENTARIO_MULTILINEA resolved using rule 135 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for LET resolved using rule 135 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for ID resolved using rule 135 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for CONSOLE resolved using rule 135 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for IF resolved using rule 135 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for WHILE resolved using rule 135 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for FOR resolved using rule 135 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for RETURN resolved using rule 135 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for BREAK resolved using rule 135 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 135 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for INTERFACE resolved using rule 135 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for DECREMENTO resolved using rule 135 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for INCREMENTO resolved using rule 135 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for $end resolved using rule 135 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for LLADER resolved using rule 135 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
    PTOYCOMA        reduce using rule 135 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
    error           reduce using rule 135 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
    FUNCTION        reduce using rule 135 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
    COMENTARIO      reduce using rule 135 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
    COMENTARIO_MULTILINEA reduce using rule 135 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
    LET             reduce using rule 135 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
    ID              reduce using rule 135 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
    CONSOLE         reduce using rule 135 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
    IF              reduce using rule 135 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
    WHILE           reduce using rule 135 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
    FOR             reduce using rule 135 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
    RETURN          reduce using rule 135 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
    BREAK           reduce using rule 135 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
    CONTINUE        reduce using rule 135 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
    INTERFACE       reduce using rule 135 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
    DECREMENTO      reduce using rule 135 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
    INCREMENTO      reduce using rule 135 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
    $end            reduce using rule 135 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
    LLADER          reduce using rule 135 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
    MAS             reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    MENOS           reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    POR             reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    DIVIDIDO        reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    MODULO          reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    POTENCIA        reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    MAYOR           reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    MENOR           reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    MAYORIGUAL      reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    MENORIGUAL      reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    IGUALACION      reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    DISTINTO        reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    AND             reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    OR              reduce using rule 143 (arreglo -> CORIZQ CORDER .)
    PUNTO           reduce using rule 143 (arreglo -> CORIZQ CORDER .)

  ! PTOYCOMA        [ reduce using rule 143 (arreglo -> CORIZQ CORDER .) ]
  ! error           [ reduce using rule 143 (arreglo -> CORIZQ CORDER .) ]
  ! FUNCTION        [ reduce using rule 143 (arreglo -> CORIZQ CORDER .) ]
  ! COMENTARIO      [ reduce using rule 143 (arreglo -> CORIZQ CORDER .) ]
  ! COMENTARIO_MULTILINEA [ reduce using rule 143 (arreglo -> CORIZQ CORDER .) ]
  ! LET             [ reduce using rule 143 (arreglo -> CORIZQ CORDER .) ]
  ! ID              [ reduce using rule 143 (arreglo -> CORIZQ CORDER .) ]
  ! CONSOLE         [ reduce using rule 143 (arreglo -> CORIZQ CORDER .) ]
  ! IF              [ reduce using rule 143 (arreglo -> CORIZQ CORDER .) ]
  ! WHILE           [ reduce using rule 143 (arreglo -> CORIZQ CORDER .) ]
  ! FOR             [ reduce using rule 143 (arreglo -> CORIZQ CORDER .) ]
  ! RETURN          [ reduce using rule 143 (arreglo -> CORIZQ CORDER .) ]
  ! BREAK           [ reduce using rule 143 (arreglo -> CORIZQ CORDER .) ]
  ! CONTINUE        [ reduce using rule 143 (arreglo -> CORIZQ CORDER .) ]
  ! INTERFACE       [ reduce using rule 143 (arreglo -> CORIZQ CORDER .) ]
  ! DECREMENTO      [ reduce using rule 143 (arreglo -> CORIZQ CORDER .) ]
  ! INCREMENTO      [ reduce using rule 143 (arreglo -> CORIZQ CORDER .) ]
  ! $end            [ reduce using rule 143 (arreglo -> CORIZQ CORDER .) ]
  ! LLADER          [ reduce using rule 143 (arreglo -> CORIZQ CORDER .) ]


state 290

    (134) declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp . CORDER
    (142) arreglo -> CORIZQ lista_exp . CORDER
    (139) lista_exp -> lista_exp . COMA expresion

    CORDER          shift and go to state 296
    COMA            shift and go to state 180


state 291

    (130) declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ . lista_exp CORDER
    (131) declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ . CORDER
    (139) lista_exp -> . lista_exp COMA expresion
    (140) lista_exp -> . expresion
    (64) expresion -> . llamada_funcion
    (74) expresion -> . expresion MAS expresion
    (75) expresion -> . expresion MENOS expresion
    (76) expresion -> . expresion POR expresion
    (77) expresion -> . expresion DIVIDIDO expresion
    (78) expresion -> . expresion MODULO expresion
    (79) expresion -> . expresion POTENCIA expresion
    (80) expresion -> . MENOS expresion
    (81) expresion -> . expresion MAYOR expresion
    (82) expresion -> . expresion MENOR expresion
    (83) expresion -> . expresion MAYORIGUAL expresion
    (84) expresion -> . expresion MENORIGUAL expresion
    (85) expresion -> . expresion IGUALACION expresion
    (86) expresion -> . expresion DISTINTO expresion
    (87) expresion -> . expresion AND expresion
    (88) expresion -> . expresion OR expresion
    (89) expresion -> . NOT expresion
    (90) expresion -> . dec
    (91) expresion -> . inc
    (92) expresion -> . casteo
    (93) expresion -> . PARIZQ expresion PARDER
    (94) expresion -> . ENTERO
    (95) expresion -> . DECIMAL
    (96) expresion -> . CADENA
    (97) expresion -> . NULL
    (98) expresion -> . booleano
    (99) expresion -> . ID
    (102) expresion -> . aproximacion
    (103) expresion -> . exponencial
    (104) expresion -> . separador
    (105) expresion -> . concatenacion
    (106) expresion -> . to_minusculas
    (109) expresion -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (128) expresion -> . ID PUNTO ID
    (141) expresion -> . arreglo
    (144) expresion -> . acceso_array
    (65) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (66) llamada_funcion -> . ID PARIZQ PARDER
    (38) dec -> . ID DECREMENTO
    (39) dec -> . DECREMENTO ID
    (40) inc -> . ID INCREMENTO
    (41) inc -> . INCREMENTO ID
    (113) casteo -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (114) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (100) booleano -> . TRUE
    (101) booleano -> . FALSE
    (107) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (110) to_minusculas -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (142) arreglo -> . CORIZQ lista_exp CORDER
    (143) arreglo -> . CORIZQ CORDER
    (145) acceso_array -> . ID lista_acceso_array

    CORDER          shift and go to state 298
    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    CADENA          shift and go to state 68
    NULL            shift and go to state 69
    ID              shift and go to state 71
    DECREMENTO      shift and go to state 39
    INCREMENTO      shift and go to state 40
    CAST_STRING     shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    CORIZQ          shift and go to state 82

    lista_exp                      shift and go to state 297
    expresion                      shift and go to state 127
    llamada_funcion                shift and go to state 59
    dec                            shift and go to state 62
    inc                            shift and go to state 63
    casteo                         shift and go to state 64
    booleano                       shift and go to state 70
    aproximacion                   shift and go to state 72
    exponencial                    shift and go to state 73
    separador                      shift and go to state 74
    concatenacion                  shift and go to state 75
    to_minusculas                  shift and go to state 76
    arreglo                        shift and go to state 77
    acceso_array                   shift and go to state 78

state 292

    (50) elseif -> ELSE IF PARIZQ expresion . PARDER bloque
    (74) expresion -> expresion . MAS expresion
    (75) expresion -> expresion . MENOS expresion
    (76) expresion -> expresion . POR expresion
    (77) expresion -> expresion . DIVIDIDO expresion
    (78) expresion -> expresion . MODULO expresion
    (79) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MAYOR expresion
    (82) expresion -> expresion . MENOR expresion
    (83) expresion -> expresion . MAYORIGUAL expresion
    (84) expresion -> expresion . MENORIGUAL expresion
    (85) expresion -> expresion . IGUALACION expresion
    (86) expresion -> expresion . DISTINTO expresion
    (87) expresion -> expresion . AND expresion
    (88) expresion -> expresion . OR expresion
    (113) casteo -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (107) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (108) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (111) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (112) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 299
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIVIDIDO        shift and go to state 107
    MODULO          shift and go to state 108
    POTENCIA        shift and go to state 109
    MAYOR           shift and go to state 110
    MENOR           shift and go to state 111
    MAYORIGUAL      shift and go to state 112
    MENORIGUAL      shift and go to state 113
    IGUALACION      shift and go to state 114
    DISTINTO        shift and go to state 115
    AND             shift and go to state 116
    OR              shift and go to state 117
    PUNTO           shift and go to state 118


state 293

    (52) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .

    PTOYCOMA        reduce using rule 52 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    error           reduce using rule 52 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    FUNCTION        reduce using rule 52 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    COMENTARIO      reduce using rule 52 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    COMENTARIO_MULTILINEA reduce using rule 52 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    LET             reduce using rule 52 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    ID              reduce using rule 52 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    CONSOLE         reduce using rule 52 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    IF              reduce using rule 52 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    WHILE           reduce using rule 52 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    FOR             reduce using rule 52 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    RETURN          reduce using rule 52 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    BREAK           reduce using rule 52 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    CONTINUE        reduce using rule 52 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    INTERFACE       reduce using rule 52 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    DECREMENTO      reduce using rule 52 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    INCREMENTO      reduce using rule 52 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    $end            reduce using rule 52 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    LLADER          reduce using rule 52 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)


state 294

    (53) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .

    PTOYCOMA        reduce using rule 53 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    error           reduce using rule 53 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    FUNCTION        reduce using rule 53 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    COMENTARIO      reduce using rule 53 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    COMENTARIO_MULTILINEA reduce using rule 53 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    LET             reduce using rule 53 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    ID              reduce using rule 53 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    CONSOLE         reduce using rule 53 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    IF              reduce using rule 53 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    WHILE           reduce using rule 53 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    FOR             reduce using rule 53 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    RETURN          reduce using rule 53 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    BREAK           reduce using rule 53 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    CONTINUE        reduce using rule 53 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    INTERFACE       reduce using rule 53 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    DECREMENTO      reduce using rule 53 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    INCREMENTO      reduce using rule 53 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    $end            reduce using rule 53 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    LLADER          reduce using rule 53 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)


state 295

    (59) funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo CORIZQ CORDER bloque .

    error           reduce using rule 59 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo CORIZQ CORDER bloque .)
    FUNCTION        reduce using rule 59 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo CORIZQ CORDER bloque .)
    COMENTARIO      reduce using rule 59 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo CORIZQ CORDER bloque .)
    COMENTARIO_MULTILINEA reduce using rule 59 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo CORIZQ CORDER bloque .)
    LET             reduce using rule 59 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo CORIZQ CORDER bloque .)
    ID              reduce using rule 59 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo CORIZQ CORDER bloque .)
    CONSOLE         reduce using rule 59 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo CORIZQ CORDER bloque .)
    IF              reduce using rule 59 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo CORIZQ CORDER bloque .)
    WHILE           reduce using rule 59 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo CORIZQ CORDER bloque .)
    FOR             reduce using rule 59 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo CORIZQ CORDER bloque .)
    RETURN          reduce using rule 59 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo CORIZQ CORDER bloque .)
    BREAK           reduce using rule 59 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo CORIZQ CORDER bloque .)
    CONTINUE        reduce using rule 59 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo CORIZQ CORDER bloque .)
    INTERFACE       reduce using rule 59 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo CORIZQ CORDER bloque .)
    DECREMENTO      reduce using rule 59 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo CORIZQ CORDER bloque .)
    INCREMENTO      reduce using rule 59 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo CORIZQ CORDER bloque .)
    $end            reduce using rule 59 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo CORIZQ CORDER bloque .)


state 296

    (134) declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .
    (142) arreglo -> CORIZQ lista_exp CORDER .

  ! reduce/reduce conflict for PTOYCOMA resolved using rule 134 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for error resolved using rule 134 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 134 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for COMENTARIO resolved using rule 134 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for COMENTARIO_MULTILINEA resolved using rule 134 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for LET resolved using rule 134 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for ID resolved using rule 134 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for CONSOLE resolved using rule 134 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for IF resolved using rule 134 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for WHILE resolved using rule 134 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for FOR resolved using rule 134 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for RETURN resolved using rule 134 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for BREAK resolved using rule 134 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 134 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for INTERFACE resolved using rule 134 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for DECREMENTO resolved using rule 134 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for INCREMENTO resolved using rule 134 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for $end resolved using rule 134 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for LLADER resolved using rule 134 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    PTOYCOMA        reduce using rule 134 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    error           reduce using rule 134 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    FUNCTION        reduce using rule 134 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    COMENTARIO      reduce using rule 134 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    COMENTARIO_MULTILINEA reduce using rule 134 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    LET             reduce using rule 134 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    ID              reduce using rule 134 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    CONSOLE         reduce using rule 134 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    IF              reduce using rule 134 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    WHILE           reduce using rule 134 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    FOR             reduce using rule 134 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    RETURN          reduce using rule 134 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    BREAK           reduce using rule 134 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    CONTINUE        reduce using rule 134 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    INTERFACE       reduce using rule 134 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    DECREMENTO      reduce using rule 134 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    INCREMENTO      reduce using rule 134 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    $end            reduce using rule 134 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    LLADER          reduce using rule 134 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    MAS             reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    MENOS           reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    POR             reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    DIVIDIDO        reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    MODULO          reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    POTENCIA        reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    MAYOR           reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    MENOR           reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    MAYORIGUAL      reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    MENORIGUAL      reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    IGUALACION      reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    DISTINTO        reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    AND             reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    OR              reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)
    PUNTO           reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .)

  ! PTOYCOMA        [ reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! error           [ reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! FUNCTION        [ reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! COMENTARIO      [ reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! COMENTARIO_MULTILINEA [ reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! LET             [ reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! ID              [ reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! CONSOLE         [ reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! IF              [ reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! WHILE           [ reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! FOR             [ reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! RETURN          [ reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! BREAK           [ reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! CONTINUE        [ reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! INTERFACE       [ reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! DECREMENTO      [ reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! INCREMENTO      [ reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! $end            [ reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! LLADER          [ reduce using rule 142 (arreglo -> CORIZQ lista_exp CORDER .) ]


state 297

    (130) declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp . CORDER
    (139) lista_exp -> lista_exp . COMA expresion

    CORDER          shift and go to state 300
    COMA            shift and go to state 180


state 298

    (131) declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER .

    PTOYCOMA        reduce using rule 131 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER .)
    error           reduce using rule 131 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER .)
    FUNCTION        reduce using rule 131 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER .)
    COMENTARIO      reduce using rule 131 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER .)
    COMENTARIO_MULTILINEA reduce using rule 131 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER .)
    LET             reduce using rule 131 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER .)
    ID              reduce using rule 131 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER .)
    CONSOLE         reduce using rule 131 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER .)
    IF              reduce using rule 131 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER .)
    WHILE           reduce using rule 131 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER .)
    FOR             reduce using rule 131 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER .)
    RETURN          reduce using rule 131 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER .)
    BREAK           reduce using rule 131 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER .)
    CONTINUE        reduce using rule 131 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER .)
    INTERFACE       reduce using rule 131 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER .)
    DECREMENTO      reduce using rule 131 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER .)
    INCREMENTO      reduce using rule 131 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER .)
    $end            reduce using rule 131 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER .)
    LLADER          reduce using rule 131 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER .)


state 299

    (50) elseif -> ELSE IF PARIZQ expresion PARDER . bloque
    (10) bloque -> . LLAIZQ instruccion4 LLADER
    (11) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 189

    bloque                         shift and go to state 301

state 300

    (130) declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER .

    PTOYCOMA        reduce using rule 130 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER .)
    error           reduce using rule 130 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER .)
    FUNCTION        reduce using rule 130 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER .)
    COMENTARIO      reduce using rule 130 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER .)
    COMENTARIO_MULTILINEA reduce using rule 130 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER .)
    LET             reduce using rule 130 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER .)
    ID              reduce using rule 130 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER .)
    CONSOLE         reduce using rule 130 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER .)
    IF              reduce using rule 130 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER .)
    WHILE           reduce using rule 130 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER .)
    FOR             reduce using rule 130 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER .)
    RETURN          reduce using rule 130 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER .)
    BREAK           reduce using rule 130 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER .)
    CONTINUE        reduce using rule 130 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER .)
    INTERFACE       reduce using rule 130 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER .)
    DECREMENTO      reduce using rule 130 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER .)
    INCREMENTO      reduce using rule 130 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER .)
    $end            reduce using rule 130 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER .)
    LLADER          reduce using rule 130 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER .)


state 301

    (50) elseif -> ELSE IF PARIZQ expresion PARDER bloque .

    ELSE            reduce using rule 50 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    PTOYCOMA        reduce using rule 50 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    error           reduce using rule 50 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    FUNCTION        reduce using rule 50 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    COMENTARIO      reduce using rule 50 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    COMENTARIO_MULTILINEA reduce using rule 50 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    LET             reduce using rule 50 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    ID              reduce using rule 50 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    CONSOLE         reduce using rule 50 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    IF              reduce using rule 50 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    WHILE           reduce using rule 50 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    FOR             reduce using rule 50 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    RETURN          reduce using rule 50 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    BREAK           reduce using rule 50 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    CONTINUE        reduce using rule 50 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    INTERFACE       reduce using rule 50 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    DECREMENTO      reduce using rule 50 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    INCREMENTO      reduce using rule 50 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    $end            reduce using rule 50 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    LLADER          reduce using rule 50 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 35 resolved as shift
WARNING: shift/reduce conflict for DECREMENTO in state 35 resolved as shift
WARNING: shift/reduce conflict for INCREMENTO in state 35 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 71 resolved as shift
WARNING: shift/reduce conflict for DECREMENTO in state 71 resolved as shift
WARNING: shift/reduce conflict for INCREMENTO in state 71 resolved as shift
WARNING: shift/reduce conflict for PARDER in state 198 resolved as shift
WARNING: reduce/reduce conflict in state 5 resolved using rule (instruccion -> comentarios)
WARNING: rejected rule (instruccion3 -> comentarios) in state 5
WARNING: reduce/reduce conflict in state 192 resolved using rule (declaracionArray -> LET ID IGUAL CORIZQ CORDER)
WARNING: rejected rule (arreglo -> CORIZQ CORDER) in state 192
WARNING: reduce/reduce conflict in state 228 resolved using rule (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER)
WARNING: rejected rule (arreglo -> CORIZQ lista_exp CORDER) in state 228
WARNING: reduce/reduce conflict in state 289 resolved using rule (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER)
WARNING: rejected rule (arreglo -> CORIZQ CORDER) in state 289
WARNING: reduce/reduce conflict in state 296 resolved using rule (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER)
WARNING: rejected rule (arreglo -> CORIZQ lista_exp CORDER) in state 296
