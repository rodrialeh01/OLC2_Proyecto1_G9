Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ARRAY
    CORDER
    CORIZQ
    INTERFACE
    NULL

Grammar

Rule 0     S' -> instrucciones
Rule 1     instrucciones -> instrucciones instruccion
Rule 2     instrucciones -> instruccion
Rule 3     instruccion -> instruccion2 PTOYCOMA
Rule 4     instruccion -> instruccion2
Rule 5     instruccion3 -> instruccion3 instruccion2
Rule 6     instruccion3 -> instruccion3 instruccion2 PTOYCOMA
Rule 7     instruccion3 -> instruccion2
Rule 8     instruccion3 -> instruccion2 PTOYCOMA
Rule 9     bloque -> LLAIZQ instruccion3 LLADER
Rule 10    bloque -> LLAIZQ LLADER
Rule 11    instruccion2 -> declaracion
Rule 12    instruccion2 -> asignacion
Rule 13    instruccion2 -> impresion
Rule 14    instruccion2 -> return
Rule 15    instruccion2 -> break
Rule 16    instruccion2 -> continue
Rule 17    instruccion2 -> condicional_if
Rule 18    instruccion2 -> ciclo_while
Rule 19    instruccion2 -> ciclo_for
Rule 20    instruccion2 -> ciclo_for_of
Rule 21    instruccion2 -> funcion
Rule 22    instruccion2 -> llamada_funcion
Rule 23    declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion
Rule 24    declaracion -> LET ID IGUAL expresion
Rule 25    declaracion -> LET ID DOSPUNTOS tipo
Rule 26    declaracion -> LET ID
Rule 27    asignacion -> ID IGUAL expresion
Rule 28    instruccion2 -> ID INCREMENTO
Rule 29    instruccion2 -> INCREMENTO ID
Rule 30    instruccion2 -> ID DECREMENTO
Rule 31    instruccion2 -> DECREMENTO ID
Rule 32    impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER
Rule 33    expresion -> expresion MAS expresion
Rule 34    expresion -> expresion MENOS expresion
Rule 35    expresion -> expresion POR expresion
Rule 36    expresion -> expresion DIVIDIDO expresion
Rule 37    expresion -> expresion POTENCIA expresion
Rule 38    expresion -> expresion MODULO expresion
Rule 39    expresion -> MENOS expresion
Rule 40    expresion -> PARIZQ expresion PARDER
Rule 41    expresion -> expresion MAYOR expresion
Rule 42    expresion -> expresion MENOR expresion
Rule 43    expresion -> expresion MAYORIGUAL expresion
Rule 44    expresion -> expresion MENORIGUAL expresion
Rule 45    expresion -> expresion IGUALACION expresion
Rule 46    expresion -> expresion DISTINTO expresion
Rule 47    expresion -> expresion AND expresion
Rule 48    expresion -> expresion OR expresion
Rule 49    expresion -> NOT expresion
Rule 50    expresion -> ENTERO
Rule 51    expresion -> DECIMAL
Rule 52    expresion -> CADENA
Rule 53    expresion -> ID
Rule 54    expresion -> TRUE
Rule 55    expresion -> FALSE
Rule 56    expresion -> ID INCREMENTO
Rule 57    expresion -> ID DECREMENTO
Rule 58    expresion -> INCREMENTO ID
Rule 59    expresion -> DECREMENTO ID
Rule 60    expresion -> aproximacion
Rule 61    expresion -> exponencial
Rule 62    expresion -> to_minusculas
Rule 63    expresion -> to_mayusculas
Rule 64    expresion -> separador
Rule 65    expresion -> concatenacion
Rule 66    expresion -> casteo_string
Rule 67    aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER
Rule 68    exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
Rule 69    expresion -> ID PUNTO TOSTRING PARIZQ PARDER
Rule 70    to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER
Rule 71    to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER
Rule 72    separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER
Rule 73    concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER
Rule 74    casteo_string -> CAST_STRING PARIZQ expresion PARDER
Rule 75    tipo -> NUMBER
Rule 76    tipo -> STRING
Rule 77    tipo -> BOOLEAN
Rule 78    tipo -> ANY
Rule 79    return -> RETURN
Rule 80    return -> RETURN expresion
Rule 81    continue -> CONTINUE
Rule 82    break -> BREAK
Rule 83    condicional_if -> IF PARIZQ expresion PARDER bloque
Rule 84    condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque
Rule 85    condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif
Rule 86    condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque
Rule 87    lista_elif -> lista_elif elif
Rule 88    lista_elif -> elif
Rule 89    elif -> ELSE IF PARIZQ expresion PARDER bloque
Rule 90    ciclo_while -> WHILE PARIZQ expresion PARDER bloque
Rule 91    ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
Rule 92    ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
Rule 93    ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
Rule 94    ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
Rule 95    ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque
Rule 96    funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque
Rule 97    funcion -> FUNCTION ID PARIZQ PARDER bloque
Rule 98    lista_parametros -> lista_parametros COMA parametro
Rule 99    lista_parametros -> parametro
Rule 100   parametro -> ID DOSPUNTOS tipo
Rule 101   llamada_funcion -> ID PARIZQ lista_argumentos PARDER
Rule 102   llamada_funcion -> ID PARIZQ PARDER
Rule 103   lista_argumentos -> lista_argumentos COMA expresion
Rule 104   lista_argumentos -> expresion
Rule 105   instruccion -> error PTOYCOMA

Terminals, with rules where they appear

AND                  : 47
ANY                  : 78
ARRAY                : 
BOOLEAN              : 77
BREAK                : 82
CADENA               : 52
CAST_STRING          : 74
COMA                 : 98 103
CONCAT               : 73
CONSOLE              : 32
CONTINUE             : 81
CORDER               : 
CORIZQ               : 
DECIMAL              : 51
DECREMENTO           : 30 31 57 59
DISTINTO             : 46
DIVIDIDO             : 36
DOSPUNTOS            : 23 25 100
ELSE                 : 84 86 89
ENTERO               : 50
FALSE                : 55
FOR                  : 91 92 93 94 95
FUNCTION             : 96 97
ID                   : 23 24 25 26 27 28 29 30 31 53 56 57 58 59 69 95 96 97 100 101 102
IF                   : 83 84 85 86 89
IGUAL                : 23 24 27
IGUALACION           : 45
INCREMENTO           : 28 29 56 58
INTERFACE            : 
LET                  : 23 24 25 26 95
LLADER               : 9 10
LLAIZQ               : 9 10
LOG                  : 32
MAS                  : 33
MAYOR                : 41
MAYORIGUAL           : 43
MENOR                : 42
MENORIGUAL           : 44
MENOS                : 34 39
MODULO               : 38
NOT                  : 49
NULL                 : 
NUMBER               : 75
OF                   : 95
OR                   : 48
PARDER               : 32 40 67 68 69 70 71 72 73 74 83 84 85 86 89 90 91 92 93 94 95 96 97 101 102
PARIZQ               : 32 40 67 68 69 70 71 72 73 74 83 84 85 86 89 90 91 92 93 94 95 96 97 101 102
POR                  : 35
POTENCIA             : 37
PTOYCOMA             : 3 6 8 91 91 92 92 93 93 94 94 105
PUNTO                : 32 67 68 69 70 71 72 73
RETURN               : 79 80
SPLIT                : 72
STRING               : 76
TOEXPONENTIAL        : 68
TOFIXED              : 67
TOLOWERCASE          : 70
TOSTRING             : 69
TOUPPERCASE          : 71
TRUE                 : 54
WHILE                : 90
error                : 105

Nonterminals, with rules where they appear

aproximacion         : 60
asignacion           : 12 91 92 92 94
bloque               : 83 84 84 85 86 86 89 90 91 92 93 94 95 96 97
break                : 15
casteo_string        : 66
ciclo_for            : 19
ciclo_for_of         : 20
ciclo_while          : 18
concatenacion        : 65
condicional_if       : 17
continue             : 16
declaracion          : 11 91 93
elif                 : 87 88
exponencial          : 61
expresion            : 23 24 27 32 33 33 34 34 35 35 36 36 37 37 38 38 39 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 49 67 67 68 68 70 71 72 72 73 73 74 80 83 84 85 86 89 90 91 92 93 93 94 94 95 103 104
funcion              : 21
impresion            : 13
instruccion          : 1 2
instruccion2         : 3 8 9
instruccion3         : 6 7
instruccion4         : 8 10
instrucciones        : 1 0
lista_argumentos     : 101 103
lista_elif           : 85 86 87
lista_parametros     : 96 98
llamada_funcion      : 22
parametro            : 98 99
return               : 14
separador            : 64
tipo                 : 23 25 100
to_mayusculas        : 63
to_minusculas        : 62

Parsing method: LALR

state 0

    (0) S' -> . instrucciones
    (1) instrucciones -> . instrucciones instruccion
    (2) instrucciones -> . instruccion
    (3) instruccion -> . instruccion2 PTOYCOMA
    (4) instruccion -> . instruccion2
    (105) instruccion -> . error PTOYCOMA
    (11) instruccion2 -> . declaracion
    (12) instruccion2 -> . asignacion
    (13) instruccion2 -> . impresion
    (14) instruccion2 -> . return
    (15) instruccion2 -> . break
    (16) instruccion2 -> . continue
    (17) instruccion2 -> . condicional_if
    (18) instruccion2 -> . ciclo_while
    (19) instruccion2 -> . ciclo_for
    (20) instruccion2 -> . ciclo_for_of
    (21) instruccion2 -> . funcion
    (22) instruccion2 -> . llamada_funcion
    (28) instruccion2 -> . ID INCREMENTO
    (29) instruccion2 -> . INCREMENTO ID
    (30) instruccion2 -> . ID DECREMENTO
    (31) instruccion2 -> . DECREMENTO ID
    (23) declaracion -> . LET ID DOSPUNTOS tipo IGUAL expresion
    (24) declaracion -> . LET ID IGUAL expresion
    (25) declaracion -> . LET ID DOSPUNTOS tipo
    (26) declaracion -> . LET ID
    (27) asignacion -> . ID IGUAL expresion
    (32) impresion -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER
    (79) return -> . RETURN
    (80) return -> . RETURN expresion
    (82) break -> . BREAK
    (81) continue -> . CONTINUE
    (83) condicional_if -> . IF PARIZQ expresion PARDER bloque
    (84) condicional_if -> . IF PARIZQ expresion PARDER bloque ELSE bloque
    (85) condicional_if -> . IF PARIZQ expresion PARDER bloque lista_elif
    (86) condicional_if -> . IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque
    (90) ciclo_while -> . WHILE PARIZQ expresion PARDER bloque
    (91) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (92) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (93) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (94) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (95) ciclo_for_of -> . FOR PARIZQ LET ID OF expresion PARDER bloque
    (96) funcion -> . FUNCTION ID PARIZQ lista_parametros PARDER bloque
    (97) funcion -> . FUNCTION ID PARIZQ PARDER bloque
    (101) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (102) llamada_funcion -> . ID PARIZQ PARDER

    error           shift and go to state 4
    ID              shift and go to state 17
    INCREMENTO      shift and go to state 18
    DECREMENTO      shift and go to state 19
    LET             shift and go to state 20
    CONSOLE         shift and go to state 21
    RETURN          shift and go to state 22
    BREAK           shift and go to state 23
    CONTINUE        shift and go to state 24
    IF              shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    FUNCTION        shift and go to state 28

    instrucciones                  shift and go to state 1
    instruccion                    shift and go to state 2
    instruccion2                   shift and go to state 3
    declaracion                    shift and go to state 5
    asignacion                     shift and go to state 6
    impresion                      shift and go to state 7
    return                         shift and go to state 8
    break                          shift and go to state 9
    continue                       shift and go to state 10
    condicional_if                 shift and go to state 11
    ciclo_while                    shift and go to state 12
    ciclo_for                      shift and go to state 13
    ciclo_for_of                   shift and go to state 14
    funcion                        shift and go to state 15
    llamada_funcion                shift and go to state 16

state 1

    (0) S' -> instrucciones .
    (1) instrucciones -> instrucciones . instruccion
    (3) instruccion -> . instruccion2 PTOYCOMA
    (4) instruccion -> . instruccion2
    (105) instruccion -> . error PTOYCOMA
    (11) instruccion2 -> . declaracion
    (12) instruccion2 -> . asignacion
    (13) instruccion2 -> . impresion
    (14) instruccion2 -> . return
    (15) instruccion2 -> . break
    (16) instruccion2 -> . continue
    (17) instruccion2 -> . condicional_if
    (18) instruccion2 -> . ciclo_while
    (19) instruccion2 -> . ciclo_for
    (20) instruccion2 -> . ciclo_for_of
    (21) instruccion2 -> . funcion
    (22) instruccion2 -> . llamada_funcion
    (28) instruccion2 -> . ID INCREMENTO
    (29) instruccion2 -> . INCREMENTO ID
    (30) instruccion2 -> . ID DECREMENTO
    (31) instruccion2 -> . DECREMENTO ID
    (23) declaracion -> . LET ID DOSPUNTOS tipo IGUAL expresion
    (24) declaracion -> . LET ID IGUAL expresion
    (25) declaracion -> . LET ID DOSPUNTOS tipo
    (26) declaracion -> . LET ID
    (27) asignacion -> . ID IGUAL expresion
    (32) impresion -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER
    (79) return -> . RETURN
    (80) return -> . RETURN expresion
    (82) break -> . BREAK
    (81) continue -> . CONTINUE
    (83) condicional_if -> . IF PARIZQ expresion PARDER bloque
    (84) condicional_if -> . IF PARIZQ expresion PARDER bloque ELSE bloque
    (85) condicional_if -> . IF PARIZQ expresion PARDER bloque lista_elif
    (86) condicional_if -> . IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque
    (90) ciclo_while -> . WHILE PARIZQ expresion PARDER bloque
    (91) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (92) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (93) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (94) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (95) ciclo_for_of -> . FOR PARIZQ LET ID OF expresion PARDER bloque
    (96) funcion -> . FUNCTION ID PARIZQ lista_parametros PARDER bloque
    (97) funcion -> . FUNCTION ID PARIZQ PARDER bloque
    (101) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (102) llamada_funcion -> . ID PARIZQ PARDER

    error           shift and go to state 4
    ID              shift and go to state 17
    INCREMENTO      shift and go to state 18
    DECREMENTO      shift and go to state 19
    LET             shift and go to state 20
    CONSOLE         shift and go to state 21
    RETURN          shift and go to state 22
    BREAK           shift and go to state 23
    CONTINUE        shift and go to state 24
    IF              shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    FUNCTION        shift and go to state 28

    instruccion                    shift and go to state 29
    instruccion2                   shift and go to state 3
    declaracion                    shift and go to state 5
    asignacion                     shift and go to state 6
    impresion                      shift and go to state 7
    return                         shift and go to state 8
    break                          shift and go to state 9
    continue                       shift and go to state 10
    condicional_if                 shift and go to state 11
    ciclo_while                    shift and go to state 12
    ciclo_for                      shift and go to state 13
    ciclo_for_of                   shift and go to state 14
    funcion                        shift and go to state 15
    llamada_funcion                shift and go to state 16

state 2

    (2) instrucciones -> instruccion .

    error           reduce using rule 2 (instrucciones -> instruccion .)
    FUNCTION        reduce using rule 2 (instrucciones -> instruccion .)
    COMENTARIO      reduce using rule 2 (instrucciones -> instruccion .)
    COMENTARIO_MULTILINEA reduce using rule 2 (instrucciones -> instruccion .)
    LET             reduce using rule 2 (instrucciones -> instruccion .)
    ID              reduce using rule 2 (instrucciones -> instruccion .)
    CONSOLE         reduce using rule 2 (instrucciones -> instruccion .)
    IF              reduce using rule 2 (instrucciones -> instruccion .)
    WHILE           reduce using rule 2 (instrucciones -> instruccion .)
    FOR             reduce using rule 2 (instrucciones -> instruccion .)
    RETURN          reduce using rule 2 (instrucciones -> instruccion .)
    BREAK           reduce using rule 2 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 2 (instrucciones -> instruccion .)
    IF              reduce using rule 2 (instrucciones -> instruccion .)
    WHILE           reduce using rule 2 (instrucciones -> instruccion .)
    FOR             reduce using rule 2 (instrucciones -> instruccion .)
    FUNCTION        reduce using rule 2 (instrucciones -> instruccion .)
    $end            reduce using rule 2 (instrucciones -> instruccion .)


state 3

    (3) instruccion -> instruccion2 .

    PTOYCOMA        shift and go to state 30
    error           reduce using rule 4 (instruccion -> instruccion2 .)
    ID              reduce using rule 4 (instruccion -> instruccion2 .)
    INCREMENTO      reduce using rule 4 (instruccion -> instruccion2 .)
    DECREMENTO      reduce using rule 4 (instruccion -> instruccion2 .)
    LET             reduce using rule 4 (instruccion -> instruccion2 .)
    CONSOLE         reduce using rule 4 (instruccion -> instruccion2 .)
    RETURN          reduce using rule 4 (instruccion -> instruccion2 .)
    BREAK           reduce using rule 4 (instruccion -> instruccion2 .)
    CONTINUE        reduce using rule 4 (instruccion -> instruccion2 .)
    IF              reduce using rule 4 (instruccion -> instruccion2 .)
    WHILE           reduce using rule 4 (instruccion -> instruccion2 .)
    FOR             reduce using rule 4 (instruccion -> instruccion2 .)
    FUNCTION        reduce using rule 4 (instruccion -> instruccion2 .)
    $end            reduce using rule 4 (instruccion -> instruccion2 .)


state 4

    (105) instruccion -> error . PTOYCOMA

    PTOYCOMA        shift and go to state 31


state 5

    (5) instruccion -> comentarios .
    (23) instruccion3 -> comentarios .

    PTOYCOMA        reduce using rule 11 (instruccion2 -> declaracion .)
    error           reduce using rule 11 (instruccion2 -> declaracion .)
    ID              reduce using rule 11 (instruccion2 -> declaracion .)
    INCREMENTO      reduce using rule 11 (instruccion2 -> declaracion .)
    DECREMENTO      reduce using rule 11 (instruccion2 -> declaracion .)
    LET             reduce using rule 11 (instruccion2 -> declaracion .)
    CONSOLE         reduce using rule 11 (instruccion2 -> declaracion .)
    RETURN          reduce using rule 11 (instruccion2 -> declaracion .)
    BREAK           reduce using rule 11 (instruccion2 -> declaracion .)
    CONTINUE        reduce using rule 11 (instruccion2 -> declaracion .)
    IF              reduce using rule 11 (instruccion2 -> declaracion .)
    WHILE           reduce using rule 11 (instruccion2 -> declaracion .)
    FOR             reduce using rule 11 (instruccion2 -> declaracion .)
    FUNCTION        reduce using rule 11 (instruccion2 -> declaracion .)
    $end            reduce using rule 11 (instruccion2 -> declaracion .)
    LLADER          reduce using rule 11 (instruccion2 -> declaracion .)

  ! error           [ reduce using rule 23 (instruccion3 -> comentarios .) ]
  ! FUNCTION        [ reduce using rule 23 (instruccion3 -> comentarios .) ]
  ! COMENTARIO      [ reduce using rule 23 (instruccion3 -> comentarios .) ]
  ! COMENTARIO_MULTILINEA [ reduce using rule 23 (instruccion3 -> comentarios .) ]
  ! LET             [ reduce using rule 23 (instruccion3 -> comentarios .) ]
  ! ID              [ reduce using rule 23 (instruccion3 -> comentarios .) ]
  ! CONSOLE         [ reduce using rule 23 (instruccion3 -> comentarios .) ]
  ! IF              [ reduce using rule 23 (instruccion3 -> comentarios .) ]
  ! WHILE           [ reduce using rule 23 (instruccion3 -> comentarios .) ]
  ! FOR             [ reduce using rule 23 (instruccion3 -> comentarios .) ]
  ! RETURN          [ reduce using rule 23 (instruccion3 -> comentarios .) ]
  ! BREAK           [ reduce using rule 23 (instruccion3 -> comentarios .) ]
  ! CONTINUE        [ reduce using rule 23 (instruccion3 -> comentarios .) ]
  ! DECREMENTO      [ reduce using rule 23 (instruccion3 -> comentarios .) ]
  ! INCREMENTO      [ reduce using rule 23 (instruccion3 -> comentarios .) ]
  ! $end            [ reduce using rule 23 (instruccion3 -> comentarios .) ]


state 6

    (109) instruccion -> error . PTOYCOMA

    PTOYCOMA        reduce using rule 12 (instruccion2 -> asignacion .)
    error           reduce using rule 12 (instruccion2 -> asignacion .)
    ID              reduce using rule 12 (instruccion2 -> asignacion .)
    INCREMENTO      reduce using rule 12 (instruccion2 -> asignacion .)
    DECREMENTO      reduce using rule 12 (instruccion2 -> asignacion .)
    LET             reduce using rule 12 (instruccion2 -> asignacion .)
    CONSOLE         reduce using rule 12 (instruccion2 -> asignacion .)
    RETURN          reduce using rule 12 (instruccion2 -> asignacion .)
    BREAK           reduce using rule 12 (instruccion2 -> asignacion .)
    CONTINUE        reduce using rule 12 (instruccion2 -> asignacion .)
    IF              reduce using rule 12 (instruccion2 -> asignacion .)
    WHILE           reduce using rule 12 (instruccion2 -> asignacion .)
    FOR             reduce using rule 12 (instruccion2 -> asignacion .)
    FUNCTION        reduce using rule 12 (instruccion2 -> asignacion .)
    $end            reduce using rule 12 (instruccion2 -> asignacion .)
    LLADER          reduce using rule 12 (instruccion2 -> asignacion .)


state 7

    (6) instruccion2 -> instruccion3 . PTOYCOMA
    (7) instruccion2 -> instruccion3 .

    PTOYCOMA        reduce using rule 13 (instruccion2 -> impresion .)
    error           reduce using rule 13 (instruccion2 -> impresion .)
    ID              reduce using rule 13 (instruccion2 -> impresion .)
    INCREMENTO      reduce using rule 13 (instruccion2 -> impresion .)
    DECREMENTO      reduce using rule 13 (instruccion2 -> impresion .)
    LET             reduce using rule 13 (instruccion2 -> impresion .)
    CONSOLE         reduce using rule 13 (instruccion2 -> impresion .)
    RETURN          reduce using rule 13 (instruccion2 -> impresion .)
    BREAK           reduce using rule 13 (instruccion2 -> impresion .)
    CONTINUE        reduce using rule 13 (instruccion2 -> impresion .)
    IF              reduce using rule 13 (instruccion2 -> impresion .)
    WHILE           reduce using rule 13 (instruccion2 -> impresion .)
    FOR             reduce using rule 13 (instruccion2 -> impresion .)
    FUNCTION        reduce using rule 13 (instruccion2 -> impresion .)
    $end            reduce using rule 13 (instruccion2 -> impresion .)
    LLADER          reduce using rule 13 (instruccion2 -> impresion .)


state 8

    (49) funcion -> FUNCTION . ID PARIZQ lista_parametros PARDER bloque
    (50) funcion -> FUNCTION . ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque
    (51) funcion -> FUNCTION . ID PARIZQ PARDER bloque
    (52) funcion -> FUNCTION . ID PARIZQ PARDER DOSPUNTOS tipo bloque

    PTOYCOMA        reduce using rule 14 (instruccion2 -> return .)
    error           reduce using rule 14 (instruccion2 -> return .)
    ID              reduce using rule 14 (instruccion2 -> return .)
    INCREMENTO      reduce using rule 14 (instruccion2 -> return .)
    DECREMENTO      reduce using rule 14 (instruccion2 -> return .)
    LET             reduce using rule 14 (instruccion2 -> return .)
    CONSOLE         reduce using rule 14 (instruccion2 -> return .)
    RETURN          reduce using rule 14 (instruccion2 -> return .)
    BREAK           reduce using rule 14 (instruccion2 -> return .)
    CONTINUE        reduce using rule 14 (instruccion2 -> return .)
    IF              reduce using rule 14 (instruccion2 -> return .)
    WHILE           reduce using rule 14 (instruccion2 -> return .)
    FOR             reduce using rule 14 (instruccion2 -> return .)
    FUNCTION        reduce using rule 14 (instruccion2 -> return .)
    $end            reduce using rule 14 (instruccion2 -> return .)
    LLADER          reduce using rule 14 (instruccion2 -> return .)


state 9

    (30) asignacion -> ID . IGUAL expresion
    (55) llamada_funcion -> ID . PARIZQ lista_argumentos PARDER
    (56) llamada_funcion -> ID . PARIZQ PARDER
    (33) dec -> ID . DECREMENTO
    (35) inc -> ID . INCREMENTO

    PTOYCOMA        reduce using rule 15 (instruccion2 -> break .)
    error           reduce using rule 15 (instruccion2 -> break .)
    ID              reduce using rule 15 (instruccion2 -> break .)
    INCREMENTO      reduce using rule 15 (instruccion2 -> break .)
    DECREMENTO      reduce using rule 15 (instruccion2 -> break .)
    LET             reduce using rule 15 (instruccion2 -> break .)
    CONSOLE         reduce using rule 15 (instruccion2 -> break .)
    RETURN          reduce using rule 15 (instruccion2 -> break .)
    BREAK           reduce using rule 15 (instruccion2 -> break .)
    CONTINUE        reduce using rule 15 (instruccion2 -> break .)
    IF              reduce using rule 15 (instruccion2 -> break .)
    WHILE           reduce using rule 15 (instruccion2 -> break .)
    FOR             reduce using rule 15 (instruccion2 -> break .)
    FUNCTION        reduce using rule 15 (instruccion2 -> break .)
    $end            reduce using rule 15 (instruccion2 -> break .)
    LLADER          reduce using rule 15 (instruccion2 -> break .)


state 10

    (24) comentarios -> COMENTARIO .

    PTOYCOMA        reduce using rule 16 (instruccion2 -> continue .)
    error           reduce using rule 16 (instruccion2 -> continue .)
    ID              reduce using rule 16 (instruccion2 -> continue .)
    INCREMENTO      reduce using rule 16 (instruccion2 -> continue .)
    DECREMENTO      reduce using rule 16 (instruccion2 -> continue .)
    LET             reduce using rule 16 (instruccion2 -> continue .)
    CONSOLE         reduce using rule 16 (instruccion2 -> continue .)
    RETURN          reduce using rule 16 (instruccion2 -> continue .)
    BREAK           reduce using rule 16 (instruccion2 -> continue .)
    CONTINUE        reduce using rule 16 (instruccion2 -> continue .)
    IF              reduce using rule 16 (instruccion2 -> continue .)
    WHILE           reduce using rule 16 (instruccion2 -> continue .)
    FOR             reduce using rule 16 (instruccion2 -> continue .)
    FUNCTION        reduce using rule 16 (instruccion2 -> continue .)
    $end            reduce using rule 16 (instruccion2 -> continue .)
    LLADER          reduce using rule 16 (instruccion2 -> continue .)


state 11

    (25) comentarios -> COMENTARIO_MULTILINEA .

    PTOYCOMA        reduce using rule 17 (instruccion2 -> condicional_if .)
    error           reduce using rule 17 (instruccion2 -> condicional_if .)
    ID              reduce using rule 17 (instruccion2 -> condicional_if .)
    INCREMENTO      reduce using rule 17 (instruccion2 -> condicional_if .)
    DECREMENTO      reduce using rule 17 (instruccion2 -> condicional_if .)
    LET             reduce using rule 17 (instruccion2 -> condicional_if .)
    CONSOLE         reduce using rule 17 (instruccion2 -> condicional_if .)
    RETURN          reduce using rule 17 (instruccion2 -> condicional_if .)
    BREAK           reduce using rule 17 (instruccion2 -> condicional_if .)
    CONTINUE        reduce using rule 17 (instruccion2 -> condicional_if .)
    IF              reduce using rule 17 (instruccion2 -> condicional_if .)
    WHILE           reduce using rule 17 (instruccion2 -> condicional_if .)
    FOR             reduce using rule 17 (instruccion2 -> condicional_if .)
    FUNCTION        reduce using rule 17 (instruccion2 -> condicional_if .)
    $end            reduce using rule 17 (instruccion2 -> condicional_if .)
    LLADER          reduce using rule 17 (instruccion2 -> condicional_if .)


state 12

    (12) instruccion3 -> declaracion .

    PTOYCOMA        reduce using rule 18 (instruccion2 -> ciclo_while .)
    error           reduce using rule 18 (instruccion2 -> ciclo_while .)
    ID              reduce using rule 18 (instruccion2 -> ciclo_while .)
    INCREMENTO      reduce using rule 18 (instruccion2 -> ciclo_while .)
    DECREMENTO      reduce using rule 18 (instruccion2 -> ciclo_while .)
    LET             reduce using rule 18 (instruccion2 -> ciclo_while .)
    CONSOLE         reduce using rule 18 (instruccion2 -> ciclo_while .)
    RETURN          reduce using rule 18 (instruccion2 -> ciclo_while .)
    BREAK           reduce using rule 18 (instruccion2 -> ciclo_while .)
    CONTINUE        reduce using rule 18 (instruccion2 -> ciclo_while .)
    IF              reduce using rule 18 (instruccion2 -> ciclo_while .)
    WHILE           reduce using rule 18 (instruccion2 -> ciclo_while .)
    FOR             reduce using rule 18 (instruccion2 -> ciclo_while .)
    FUNCTION        reduce using rule 18 (instruccion2 -> ciclo_while .)
    $end            reduce using rule 18 (instruccion2 -> ciclo_while .)
    LLADER          reduce using rule 18 (instruccion2 -> ciclo_while .)


state 13

    (13) instruccion3 -> asignacion .

    PTOYCOMA        reduce using rule 19 (instruccion2 -> ciclo_for .)
    error           reduce using rule 19 (instruccion2 -> ciclo_for .)
    ID              reduce using rule 19 (instruccion2 -> ciclo_for .)
    INCREMENTO      reduce using rule 19 (instruccion2 -> ciclo_for .)
    DECREMENTO      reduce using rule 19 (instruccion2 -> ciclo_for .)
    LET             reduce using rule 19 (instruccion2 -> ciclo_for .)
    CONSOLE         reduce using rule 19 (instruccion2 -> ciclo_for .)
    RETURN          reduce using rule 19 (instruccion2 -> ciclo_for .)
    BREAK           reduce using rule 19 (instruccion2 -> ciclo_for .)
    CONTINUE        reduce using rule 19 (instruccion2 -> ciclo_for .)
    IF              reduce using rule 19 (instruccion2 -> ciclo_for .)
    WHILE           reduce using rule 19 (instruccion2 -> ciclo_for .)
    FOR             reduce using rule 19 (instruccion2 -> ciclo_for .)
    FUNCTION        reduce using rule 19 (instruccion2 -> ciclo_for .)
    $end            reduce using rule 19 (instruccion2 -> ciclo_for .)
    LLADER          reduce using rule 19 (instruccion2 -> ciclo_for .)


state 14

    (14) instruccion3 -> impresion .

    PTOYCOMA        reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    error           reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    ID              reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    INCREMENTO      reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    DECREMENTO      reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    LET             reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    CONSOLE         reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    RETURN          reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    BREAK           reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    CONTINUE        reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    IF              reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    WHILE           reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    FOR             reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    FUNCTION        reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    $end            reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    LLADER          reduce using rule 20 (instruccion2 -> ciclo_for_of .)


state 15

    (21) instruccion2 -> funcion .

    PTOYCOMA        reduce using rule 21 (instruccion2 -> funcion .)
    error           reduce using rule 21 (instruccion2 -> funcion .)
    ID              reduce using rule 21 (instruccion2 -> funcion .)
    INCREMENTO      reduce using rule 21 (instruccion2 -> funcion .)
    DECREMENTO      reduce using rule 21 (instruccion2 -> funcion .)
    LET             reduce using rule 21 (instruccion2 -> funcion .)
    CONSOLE         reduce using rule 21 (instruccion2 -> funcion .)
    RETURN          reduce using rule 21 (instruccion2 -> funcion .)
    BREAK           reduce using rule 21 (instruccion2 -> funcion .)
    CONTINUE        reduce using rule 21 (instruccion2 -> funcion .)
    IF              reduce using rule 21 (instruccion2 -> funcion .)
    WHILE           reduce using rule 21 (instruccion2 -> funcion .)
    FOR             reduce using rule 21 (instruccion2 -> funcion .)
    FUNCTION        reduce using rule 21 (instruccion2 -> funcion .)
    $end            reduce using rule 21 (instruccion2 -> funcion .)
    LLADER          reduce using rule 21 (instruccion2 -> funcion .)


state 16

    (22) instruccion2 -> llamada_funcion .

    PTOYCOMA        reduce using rule 22 (instruccion2 -> llamada_funcion .)
    error           reduce using rule 22 (instruccion2 -> llamada_funcion .)
    ID              reduce using rule 22 (instruccion2 -> llamada_funcion .)
    INCREMENTO      reduce using rule 22 (instruccion2 -> llamada_funcion .)
    DECREMENTO      reduce using rule 22 (instruccion2 -> llamada_funcion .)
    LET             reduce using rule 22 (instruccion2 -> llamada_funcion .)
    CONSOLE         reduce using rule 22 (instruccion2 -> llamada_funcion .)
    RETURN          reduce using rule 22 (instruccion2 -> llamada_funcion .)
    BREAK           reduce using rule 22 (instruccion2 -> llamada_funcion .)
    CONTINUE        reduce using rule 22 (instruccion2 -> llamada_funcion .)
    IF              reduce using rule 22 (instruccion2 -> llamada_funcion .)
    WHILE           reduce using rule 22 (instruccion2 -> llamada_funcion .)
    FOR             reduce using rule 22 (instruccion2 -> llamada_funcion .)
    FUNCTION        reduce using rule 22 (instruccion2 -> llamada_funcion .)
    $end            reduce using rule 22 (instruccion2 -> llamada_funcion .)
    LLADER          reduce using rule 22 (instruccion2 -> llamada_funcion .)


state 17

    (28) instruccion2 -> ID . INCREMENTO
    (30) instruccion2 -> ID . DECREMENTO
    (27) asignacion -> ID . IGUAL expresion
    (101) llamada_funcion -> ID . PARIZQ lista_argumentos PARDER
    (102) llamada_funcion -> ID . PARIZQ PARDER

    INCREMENTO      shift and go to state 32
    DECREMENTO      shift and go to state 33
    IGUAL           shift and go to state 34
    PARIZQ          shift and go to state 35


state 18

    (29) instruccion2 -> INCREMENTO . ID

    ID              shift and go to state 36


state 19

    (31) instruccion2 -> DECREMENTO . ID

    ID              shift and go to state 37


state 20

    (23) declaracion -> LET . ID DOSPUNTOS tipo IGUAL expresion
    (24) declaracion -> LET . ID IGUAL expresion
    (25) declaracion -> LET . ID DOSPUNTOS tipo
    (26) declaracion -> LET . ID

    ID              shift and go to state 38


state 21

    (32) impresion -> CONSOLE . PUNTO LOG PARIZQ expresion PARDER

    PUNTO           shift and go to state 39


state 22

    (79) return -> RETURN .
    (80) return -> RETURN . expresion
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion POR expresion
    (36) expresion -> . expresion DIVIDIDO expresion
    (37) expresion -> . expresion POTENCIA expresion
    (38) expresion -> . expresion MODULO expresion
    (39) expresion -> . MENOS expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . expresion MAYOR expresion
    (42) expresion -> . expresion MENOR expresion
    (43) expresion -> . expresion MAYORIGUAL expresion
    (44) expresion -> . expresion MENORIGUAL expresion
    (45) expresion -> . expresion IGUALACION expresion
    (46) expresion -> . expresion DISTINTO expresion
    (47) expresion -> . expresion AND expresion
    (48) expresion -> . expresion OR expresion
    (49) expresion -> . NOT expresion
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . CADENA
    (53) expresion -> . ID
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . ID INCREMENTO
    (57) expresion -> . ID DECREMENTO
    (58) expresion -> . INCREMENTO ID
    (59) expresion -> . DECREMENTO ID
    (60) expresion -> . aproximacion
    (61) expresion -> . exponencial
    (62) expresion -> . to_minusculas
    (63) expresion -> . to_mayusculas
    (64) expresion -> . separador
    (65) expresion -> . concatenacion
    (66) expresion -> . casteo_string
    (69) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (67) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (74) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for INCREMENTO resolved as shift
  ! shift/reduce conflict for DECREMENTO resolved as shift
    PTOYCOMA        reduce using rule 79 (return -> RETURN .)
    error           reduce using rule 79 (return -> RETURN .)
    LET             reduce using rule 79 (return -> RETURN .)
    CONSOLE         reduce using rule 79 (return -> RETURN .)
    RETURN          reduce using rule 79 (return -> RETURN .)
    BREAK           reduce using rule 79 (return -> RETURN .)
    CONTINUE        reduce using rule 79 (return -> RETURN .)
    IF              reduce using rule 79 (return -> RETURN .)
    WHILE           reduce using rule 79 (return -> RETURN .)
    FOR             reduce using rule 79 (return -> RETURN .)
    FUNCTION        reduce using rule 79 (return -> RETURN .)
    $end            reduce using rule 79 (return -> RETURN .)
    LLADER          reduce using rule 79 (return -> RETURN .)
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 42
    NOT             shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    ID              shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CAST_STRING     shift and go to state 59

  ! ID              [ reduce using rule 79 (return -> RETURN .) ]
  ! INCREMENTO      [ reduce using rule 79 (return -> RETURN .) ]
  ! DECREMENTO      [ reduce using rule 79 (return -> RETURN .) ]

    expresion                      shift and go to state 40
    aproximacion                   shift and go to state 52
    exponencial                    shift and go to state 53
    to_minusculas                  shift and go to state 54
    to_mayusculas                  shift and go to state 55
    separador                      shift and go to state 56
    concatenacion                  shift and go to state 57
    casteo_string                  shift and go to state 58

state 23

    (82) break -> BREAK .

    PTOYCOMA        reduce using rule 82 (break -> BREAK .)
    error           reduce using rule 82 (break -> BREAK .)
    ID              reduce using rule 82 (break -> BREAK .)
    INCREMENTO      reduce using rule 82 (break -> BREAK .)
    DECREMENTO      reduce using rule 82 (break -> BREAK .)
    LET             reduce using rule 82 (break -> BREAK .)
    CONSOLE         reduce using rule 82 (break -> BREAK .)
    RETURN          reduce using rule 82 (break -> BREAK .)
    BREAK           reduce using rule 82 (break -> BREAK .)
    CONTINUE        reduce using rule 82 (break -> BREAK .)
    IF              reduce using rule 82 (break -> BREAK .)
    WHILE           reduce using rule 82 (break -> BREAK .)
    FOR             reduce using rule 82 (break -> BREAK .)
    FUNCTION        reduce using rule 82 (break -> BREAK .)
    $end            reduce using rule 82 (break -> BREAK .)
    LLADER          reduce using rule 82 (break -> BREAK .)


state 24

    (81) continue -> CONTINUE .

    PTOYCOMA        reduce using rule 81 (continue -> CONTINUE .)
    error           reduce using rule 81 (continue -> CONTINUE .)
    ID              reduce using rule 81 (continue -> CONTINUE .)
    INCREMENTO      reduce using rule 81 (continue -> CONTINUE .)
    DECREMENTO      reduce using rule 81 (continue -> CONTINUE .)
    LET             reduce using rule 81 (continue -> CONTINUE .)
    CONSOLE         reduce using rule 81 (continue -> CONTINUE .)
    RETURN          reduce using rule 81 (continue -> CONTINUE .)
    BREAK           reduce using rule 81 (continue -> CONTINUE .)
    CONTINUE        reduce using rule 81 (continue -> CONTINUE .)
    IF              reduce using rule 81 (continue -> CONTINUE .)
    WHILE           reduce using rule 81 (continue -> CONTINUE .)
    FOR             reduce using rule 81 (continue -> CONTINUE .)
    FUNCTION        reduce using rule 81 (continue -> CONTINUE .)
    $end            reduce using rule 81 (continue -> CONTINUE .)
    LLADER          reduce using rule 81 (continue -> CONTINUE .)


state 25

    (83) condicional_if -> IF . PARIZQ expresion PARDER bloque
    (84) condicional_if -> IF . PARIZQ expresion PARDER bloque ELSE bloque
    (85) condicional_if -> IF . PARIZQ expresion PARDER bloque lista_elif
    (86) condicional_if -> IF . PARIZQ expresion PARDER bloque lista_elif ELSE bloque

    PARIZQ          shift and go to state 60


state 26

    (90) ciclo_while -> WHILE . PARIZQ expresion PARDER bloque

    PARIZQ          shift and go to state 61


state 27

    (91) ciclo_for -> FOR . PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (92) ciclo_for -> FOR . PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (93) ciclo_for -> FOR . PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (94) ciclo_for -> FOR . PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (95) ciclo_for_of -> FOR . PARIZQ LET ID OF expresion PARDER bloque

    PARIZQ          shift and go to state 62


state 28

    (96) funcion -> FUNCTION . ID PARIZQ lista_parametros PARDER bloque
    (97) funcion -> FUNCTION . ID PARIZQ PARDER bloque

    ID              shift and go to state 63


state 29

    (1) instrucciones -> instrucciones instruccion .

    error           reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    INCREMENTO      reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    DECREMENTO      reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    LET             reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    CONSOLE         reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    RETURN          reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    FOR             reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    FUNCTION        reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 1 (instrucciones -> instrucciones instruccion .)


state 30

    (38) condicional -> IF . PARIZQ expresion PARDER bloque
    (39) condicional -> IF . PARIZQ expresion PARDER bloque ELSE bloque
    (40) condicional -> IF . PARIZQ expresion PARDER bloque lista_elif
    (41) condicional -> IF . PARIZQ expresion PARDER bloque lista_elif ELSE bloque

    error           reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    ID              reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    INCREMENTO      reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    DECREMENTO      reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    LET             reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    CONSOLE         reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    RETURN          reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    BREAK           reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    CONTINUE        reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    IF              reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    WHILE           reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    FOR             reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    FUNCTION        reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    $end            reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)


state 31

    (105) instruccion -> error PTOYCOMA .

    error           reduce using rule 105 (instruccion -> error PTOYCOMA .)
    ID              reduce using rule 105 (instruccion -> error PTOYCOMA .)
    INCREMENTO      reduce using rule 105 (instruccion -> error PTOYCOMA .)
    DECREMENTO      reduce using rule 105 (instruccion -> error PTOYCOMA .)
    LET             reduce using rule 105 (instruccion -> error PTOYCOMA .)
    CONSOLE         reduce using rule 105 (instruccion -> error PTOYCOMA .)
    RETURN          reduce using rule 105 (instruccion -> error PTOYCOMA .)
    BREAK           reduce using rule 105 (instruccion -> error PTOYCOMA .)
    CONTINUE        reduce using rule 105 (instruccion -> error PTOYCOMA .)
    IF              reduce using rule 105 (instruccion -> error PTOYCOMA .)
    WHILE           reduce using rule 105 (instruccion -> error PTOYCOMA .)
    FOR             reduce using rule 105 (instruccion -> error PTOYCOMA .)
    FUNCTION        reduce using rule 105 (instruccion -> error PTOYCOMA .)
    $end            reduce using rule 105 (instruccion -> error PTOYCOMA .)


state 32

    (28) instruccion2 -> ID INCREMENTO .

    PTOYCOMA        reduce using rule 28 (instruccion2 -> ID INCREMENTO .)
    error           reduce using rule 28 (instruccion2 -> ID INCREMENTO .)
    ID              reduce using rule 28 (instruccion2 -> ID INCREMENTO .)
    INCREMENTO      reduce using rule 28 (instruccion2 -> ID INCREMENTO .)
    DECREMENTO      reduce using rule 28 (instruccion2 -> ID INCREMENTO .)
    LET             reduce using rule 28 (instruccion2 -> ID INCREMENTO .)
    CONSOLE         reduce using rule 28 (instruccion2 -> ID INCREMENTO .)
    RETURN          reduce using rule 28 (instruccion2 -> ID INCREMENTO .)
    BREAK           reduce using rule 28 (instruccion2 -> ID INCREMENTO .)
    CONTINUE        reduce using rule 28 (instruccion2 -> ID INCREMENTO .)
    IF              reduce using rule 28 (instruccion2 -> ID INCREMENTO .)
    WHILE           reduce using rule 28 (instruccion2 -> ID INCREMENTO .)
    FOR             reduce using rule 28 (instruccion2 -> ID INCREMENTO .)
    FUNCTION        reduce using rule 28 (instruccion2 -> ID INCREMENTO .)
    $end            reduce using rule 28 (instruccion2 -> ID INCREMENTO .)
    LLADER          reduce using rule 28 (instruccion2 -> ID INCREMENTO .)


state 33

    (30) instruccion2 -> ID DECREMENTO .

    PTOYCOMA        reduce using rule 30 (instruccion2 -> ID DECREMENTO .)
    error           reduce using rule 30 (instruccion2 -> ID DECREMENTO .)
    ID              reduce using rule 30 (instruccion2 -> ID DECREMENTO .)
    INCREMENTO      reduce using rule 30 (instruccion2 -> ID DECREMENTO .)
    DECREMENTO      reduce using rule 30 (instruccion2 -> ID DECREMENTO .)
    LET             reduce using rule 30 (instruccion2 -> ID DECREMENTO .)
    CONSOLE         reduce using rule 30 (instruccion2 -> ID DECREMENTO .)
    RETURN          reduce using rule 30 (instruccion2 -> ID DECREMENTO .)
    BREAK           reduce using rule 30 (instruccion2 -> ID DECREMENTO .)
    CONTINUE        reduce using rule 30 (instruccion2 -> ID DECREMENTO .)
    IF              reduce using rule 30 (instruccion2 -> ID DECREMENTO .)
    WHILE           reduce using rule 30 (instruccion2 -> ID DECREMENTO .)
    FOR             reduce using rule 30 (instruccion2 -> ID DECREMENTO .)
    FUNCTION        reduce using rule 30 (instruccion2 -> ID DECREMENTO .)
    $end            reduce using rule 30 (instruccion2 -> ID DECREMENTO .)
    LLADER          reduce using rule 30 (instruccion2 -> ID DECREMENTO .)


state 34

    (27) asignacion -> ID IGUAL . expresion
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion POR expresion
    (36) expresion -> . expresion DIVIDIDO expresion
    (37) expresion -> . expresion POTENCIA expresion
    (38) expresion -> . expresion MODULO expresion
    (39) expresion -> . MENOS expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . expresion MAYOR expresion
    (42) expresion -> . expresion MENOR expresion
    (43) expresion -> . expresion MAYORIGUAL expresion
    (44) expresion -> . expresion MENORIGUAL expresion
    (45) expresion -> . expresion IGUALACION expresion
    (46) expresion -> . expresion DISTINTO expresion
    (47) expresion -> . expresion AND expresion
    (48) expresion -> . expresion OR expresion
    (49) expresion -> . NOT expresion
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . CADENA
    (53) expresion -> . ID
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . ID INCREMENTO
    (57) expresion -> . ID DECREMENTO
    (58) expresion -> . INCREMENTO ID
    (59) expresion -> . DECREMENTO ID
    (60) expresion -> . aproximacion
    (61) expresion -> . exponencial
    (62) expresion -> . to_minusculas
    (63) expresion -> . to_mayusculas
    (64) expresion -> . separador
    (65) expresion -> . concatenacion
    (66) expresion -> . casteo_string
    (69) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (67) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (74) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 42
    NOT             shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    ID              shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CAST_STRING     shift and go to state 59

    expresion                      shift and go to state 64
    aproximacion                   shift and go to state 52
    exponencial                    shift and go to state 53
    to_minusculas                  shift and go to state 54
    to_mayusculas                  shift and go to state 55
    separador                      shift and go to state 56
    concatenacion                  shift and go to state 57
    casteo_string                  shift and go to state 58

state 35

    (101) llamada_funcion -> ID PARIZQ . lista_argumentos PARDER
    (102) llamada_funcion -> ID PARIZQ . PARDER
    (103) lista_argumentos -> . lista_argumentos COMA expresion
    (104) lista_argumentos -> . expresion
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion POR expresion
    (36) expresion -> . expresion DIVIDIDO expresion
    (37) expresion -> . expresion POTENCIA expresion
    (38) expresion -> . expresion MODULO expresion
    (39) expresion -> . MENOS expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . expresion MAYOR expresion
    (42) expresion -> . expresion MENOR expresion
    (43) expresion -> . expresion MAYORIGUAL expresion
    (44) expresion -> . expresion MENORIGUAL expresion
    (45) expresion -> . expresion IGUALACION expresion
    (46) expresion -> . expresion DISTINTO expresion
    (47) expresion -> . expresion AND expresion
    (48) expresion -> . expresion OR expresion
    (49) expresion -> . NOT expresion
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . CADENA
    (53) expresion -> . ID
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . ID INCREMENTO
    (57) expresion -> . ID DECREMENTO
    (58) expresion -> . INCREMENTO ID
    (59) expresion -> . DECREMENTO ID
    (60) expresion -> . aproximacion
    (61) expresion -> . exponencial
    (62) expresion -> . to_minusculas
    (63) expresion -> . to_mayusculas
    (64) expresion -> . separador
    (65) expresion -> . concatenacion
    (66) expresion -> . casteo_string
    (69) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (67) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (74) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    PARDER          shift and go to state 66
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 42
    NOT             shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    ID              shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CAST_STRING     shift and go to state 59

    lista_argumentos               shift and go to state 65
    expresion                      shift and go to state 67
    aproximacion                   shift and go to state 52
    exponencial                    shift and go to state 53
    to_minusculas                  shift and go to state 54
    to_mayusculas                  shift and go to state 55
    separador                      shift and go to state 56
    concatenacion                  shift and go to state 57
    casteo_string                  shift and go to state 58

state 36

    (29) instruccion2 -> INCREMENTO ID .

    PTOYCOMA        reduce using rule 29 (instruccion2 -> INCREMENTO ID .)
    error           reduce using rule 29 (instruccion2 -> INCREMENTO ID .)
    ID              reduce using rule 29 (instruccion2 -> INCREMENTO ID .)
    INCREMENTO      reduce using rule 29 (instruccion2 -> INCREMENTO ID .)
    DECREMENTO      reduce using rule 29 (instruccion2 -> INCREMENTO ID .)
    LET             reduce using rule 29 (instruccion2 -> INCREMENTO ID .)
    CONSOLE         reduce using rule 29 (instruccion2 -> INCREMENTO ID .)
    RETURN          reduce using rule 29 (instruccion2 -> INCREMENTO ID .)
    BREAK           reduce using rule 29 (instruccion2 -> INCREMENTO ID .)
    CONTINUE        reduce using rule 29 (instruccion2 -> INCREMENTO ID .)
    IF              reduce using rule 29 (instruccion2 -> INCREMENTO ID .)
    WHILE           reduce using rule 29 (instruccion2 -> INCREMENTO ID .)
    FOR             reduce using rule 29 (instruccion2 -> INCREMENTO ID .)
    FUNCTION        reduce using rule 29 (instruccion2 -> INCREMENTO ID .)
    $end            reduce using rule 29 (instruccion2 -> INCREMENTO ID .)
    LLADER          reduce using rule 29 (instruccion2 -> INCREMENTO ID .)


state 37

    (31) instruccion2 -> DECREMENTO ID .

    PTOYCOMA        reduce using rule 31 (instruccion2 -> DECREMENTO ID .)
    error           reduce using rule 31 (instruccion2 -> DECREMENTO ID .)
    ID              reduce using rule 31 (instruccion2 -> DECREMENTO ID .)
    INCREMENTO      reduce using rule 31 (instruccion2 -> DECREMENTO ID .)
    DECREMENTO      reduce using rule 31 (instruccion2 -> DECREMENTO ID .)
    LET             reduce using rule 31 (instruccion2 -> DECREMENTO ID .)
    CONSOLE         reduce using rule 31 (instruccion2 -> DECREMENTO ID .)
    RETURN          reduce using rule 31 (instruccion2 -> DECREMENTO ID .)
    BREAK           reduce using rule 31 (instruccion2 -> DECREMENTO ID .)
    CONTINUE        reduce using rule 31 (instruccion2 -> DECREMENTO ID .)
    IF              reduce using rule 31 (instruccion2 -> DECREMENTO ID .)
    WHILE           reduce using rule 31 (instruccion2 -> DECREMENTO ID .)
    FOR             reduce using rule 31 (instruccion2 -> DECREMENTO ID .)
    FUNCTION        reduce using rule 31 (instruccion2 -> DECREMENTO ID .)
    $end            reduce using rule 31 (instruccion2 -> DECREMENTO ID .)
    LLADER          reduce using rule 31 (instruccion2 -> DECREMENTO ID .)


state 38

    (23) declaracion -> LET ID . DOSPUNTOS tipo IGUAL expresion
    (24) declaracion -> LET ID . IGUAL expresion
    (25) declaracion -> LET ID . DOSPUNTOS tipo
    (26) declaracion -> LET ID .

    DOSPUNTOS       shift and go to state 68
    IGUAL           shift and go to state 69
    PTOYCOMA        reduce using rule 26 (declaracion -> LET ID .)
    error           reduce using rule 26 (declaracion -> LET ID .)
    ID              reduce using rule 26 (declaracion -> LET ID .)
    INCREMENTO      reduce using rule 26 (declaracion -> LET ID .)
    DECREMENTO      reduce using rule 26 (declaracion -> LET ID .)
    LET             reduce using rule 26 (declaracion -> LET ID .)
    CONSOLE         reduce using rule 26 (declaracion -> LET ID .)
    RETURN          reduce using rule 26 (declaracion -> LET ID .)
    BREAK           reduce using rule 26 (declaracion -> LET ID .)
    CONTINUE        reduce using rule 26 (declaracion -> LET ID .)
    IF              reduce using rule 26 (declaracion -> LET ID .)
    WHILE           reduce using rule 26 (declaracion -> LET ID .)
    FOR             reduce using rule 26 (declaracion -> LET ID .)
    FUNCTION        reduce using rule 26 (declaracion -> LET ID .)
    $end            reduce using rule 26 (declaracion -> LET ID .)
    LLADER          reduce using rule 26 (declaracion -> LET ID .)


state 39

    (32) impresion -> CONSOLE PUNTO . LOG PARIZQ expresion PARDER

    LOG             shift and go to state 70


state 40

    (80) return -> RETURN expresion .
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . POR expresion
    (36) expresion -> expresion . DIVIDIDO expresion
    (37) expresion -> expresion . POTENCIA expresion
    (38) expresion -> expresion . MODULO expresion
    (41) expresion -> expresion . MAYOR expresion
    (42) expresion -> expresion . MENOR expresion
    (43) expresion -> expresion . MAYORIGUAL expresion
    (44) expresion -> expresion . MENORIGUAL expresion
    (45) expresion -> expresion . IGUALACION expresion
    (46) expresion -> expresion . DISTINTO expresion
    (47) expresion -> expresion . AND expresion
    (48) expresion -> expresion . OR expresion
    (67) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PTOYCOMA        reduce using rule 80 (return -> RETURN expresion .)
    error           reduce using rule 80 (return -> RETURN expresion .)
    ID              reduce using rule 80 (return -> RETURN expresion .)
    INCREMENTO      reduce using rule 80 (return -> RETURN expresion .)
    DECREMENTO      reduce using rule 80 (return -> RETURN expresion .)
    LET             reduce using rule 80 (return -> RETURN expresion .)
    CONSOLE         reduce using rule 80 (return -> RETURN expresion .)
    RETURN          reduce using rule 80 (return -> RETURN expresion .)
    BREAK           reduce using rule 80 (return -> RETURN expresion .)
    CONTINUE        reduce using rule 80 (return -> RETURN expresion .)
    IF              reduce using rule 80 (return -> RETURN expresion .)
    WHILE           reduce using rule 80 (return -> RETURN expresion .)
    FOR             reduce using rule 80 (return -> RETURN expresion .)
    FUNCTION        reduce using rule 80 (return -> RETURN expresion .)
    $end            reduce using rule 80 (return -> RETURN expresion .)
    LLADER          reduce using rule 80 (return -> RETURN expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    MAYOR           shift and go to state 77
    MENOR           shift and go to state 78
    MAYORIGUAL      shift and go to state 79
    MENORIGUAL      shift and go to state 80
    IGUALACION      shift and go to state 81
    DISTINTO        shift and go to state 82
    AND             shift and go to state 83
    OR              shift and go to state 84
    PUNTO           shift and go to state 85

    lista_argumentos               shift and go to state 74
    expresion                      shift and go to state 76
    dec                            shift and go to state 51
    inc                            shift and go to state 52
    funciones_nativas              shift and go to state 53
    casteo                         shift and go to state 54
    booleano                       shift and go to state 59
    aproximacion                   shift and go to state 61
    exponencial                    shift and go to state 62
    to_mayusculas                  shift and go to state 63
    to_minusculas                  shift and go to state 64
    separador                      shift and go to state 65
    concatenacion                  shift and go to state 66

state 41

    (39) expresion -> MENOS . expresion
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion POR expresion
    (36) expresion -> . expresion DIVIDIDO expresion
    (37) expresion -> . expresion POTENCIA expresion
    (38) expresion -> . expresion MODULO expresion
    (39) expresion -> . MENOS expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . expresion MAYOR expresion
    (42) expresion -> . expresion MENOR expresion
    (43) expresion -> . expresion MAYORIGUAL expresion
    (44) expresion -> . expresion MENORIGUAL expresion
    (45) expresion -> . expresion IGUALACION expresion
    (46) expresion -> . expresion DISTINTO expresion
    (47) expresion -> . expresion AND expresion
    (48) expresion -> . expresion OR expresion
    (49) expresion -> . NOT expresion
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . CADENA
    (53) expresion -> . ID
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . ID INCREMENTO
    (57) expresion -> . ID DECREMENTO
    (58) expresion -> . INCREMENTO ID
    (59) expresion -> . DECREMENTO ID
    (60) expresion -> . aproximacion
    (61) expresion -> . exponencial
    (62) expresion -> . to_minusculas
    (63) expresion -> . to_mayusculas
    (64) expresion -> . separador
    (65) expresion -> . concatenacion
    (66) expresion -> . casteo_string
    (69) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (67) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (74) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 42
    NOT             shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    ID              shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CAST_STRING     shift and go to state 59

    expresion                      shift and go to state 86
    aproximacion                   shift and go to state 52
    exponencial                    shift and go to state 53
    to_minusculas                  shift and go to state 54
    to_mayusculas                  shift and go to state 55
    separador                      shift and go to state 56
    concatenacion                  shift and go to state 57
    casteo_string                  shift and go to state 58

state 42

    (40) expresion -> PARIZQ . expresion PARDER
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion POR expresion
    (36) expresion -> . expresion DIVIDIDO expresion
    (37) expresion -> . expresion POTENCIA expresion
    (38) expresion -> . expresion MODULO expresion
    (39) expresion -> . MENOS expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . expresion MAYOR expresion
    (42) expresion -> . expresion MENOR expresion
    (43) expresion -> . expresion MAYORIGUAL expresion
    (44) expresion -> . expresion MENORIGUAL expresion
    (45) expresion -> . expresion IGUALACION expresion
    (46) expresion -> . expresion DISTINTO expresion
    (47) expresion -> . expresion AND expresion
    (48) expresion -> . expresion OR expresion
    (49) expresion -> . NOT expresion
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . CADENA
    (53) expresion -> . ID
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . ID INCREMENTO
    (57) expresion -> . ID DECREMENTO
    (58) expresion -> . INCREMENTO ID
    (59) expresion -> . DECREMENTO ID
    (60) expresion -> . aproximacion
    (61) expresion -> . exponencial
    (62) expresion -> . to_minusculas
    (63) expresion -> . to_mayusculas
    (64) expresion -> . separador
    (65) expresion -> . concatenacion
    (66) expresion -> . casteo_string
    (69) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (67) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (74) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 42
    NOT             shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    ID              shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CAST_STRING     shift and go to state 59

    expresion                      shift and go to state 87
    aproximacion                   shift and go to state 52
    exponencial                    shift and go to state 53
    to_minusculas                  shift and go to state 54
    to_mayusculas                  shift and go to state 55
    separador                      shift and go to state 56
    concatenacion                  shift and go to state 57
    casteo_string                  shift and go to state 58

state 43

    (49) expresion -> NOT . expresion
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion POR expresion
    (36) expresion -> . expresion DIVIDIDO expresion
    (37) expresion -> . expresion POTENCIA expresion
    (38) expresion -> . expresion MODULO expresion
    (39) expresion -> . MENOS expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . expresion MAYOR expresion
    (42) expresion -> . expresion MENOR expresion
    (43) expresion -> . expresion MAYORIGUAL expresion
    (44) expresion -> . expresion MENORIGUAL expresion
    (45) expresion -> . expresion IGUALACION expresion
    (46) expresion -> . expresion DISTINTO expresion
    (47) expresion -> . expresion AND expresion
    (48) expresion -> . expresion OR expresion
    (49) expresion -> . NOT expresion
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . CADENA
    (53) expresion -> . ID
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . ID INCREMENTO
    (57) expresion -> . ID DECREMENTO
    (58) expresion -> . INCREMENTO ID
    (59) expresion -> . DECREMENTO ID
    (60) expresion -> . aproximacion
    (61) expresion -> . exponencial
    (62) expresion -> . to_minusculas
    (63) expresion -> . to_mayusculas
    (64) expresion -> . separador
    (65) expresion -> . concatenacion
    (66) expresion -> . casteo_string
    (69) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (67) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (74) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 42
    NOT             shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    ID              shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CAST_STRING     shift and go to state 59

    expresion                      shift and go to state 88
    aproximacion                   shift and go to state 52
    exponencial                    shift and go to state 53
    to_minusculas                  shift and go to state 54
    to_mayusculas                  shift and go to state 55
    separador                      shift and go to state 56
    concatenacion                  shift and go to state 57
    casteo_string                  shift and go to state 58

state 44

    (50) expresion -> ENTERO .

    MAS             reduce using rule 50 (expresion -> ENTERO .)
    MENOS           reduce using rule 50 (expresion -> ENTERO .)
    POR             reduce using rule 50 (expresion -> ENTERO .)
    DIVIDIDO        reduce using rule 50 (expresion -> ENTERO .)
    POTENCIA        reduce using rule 50 (expresion -> ENTERO .)
    MODULO          reduce using rule 50 (expresion -> ENTERO .)
    MAYOR           reduce using rule 50 (expresion -> ENTERO .)
    MENOR           reduce using rule 50 (expresion -> ENTERO .)
    MAYORIGUAL      reduce using rule 50 (expresion -> ENTERO .)
    MENORIGUAL      reduce using rule 50 (expresion -> ENTERO .)
    IGUALACION      reduce using rule 50 (expresion -> ENTERO .)
    DISTINTO        reduce using rule 50 (expresion -> ENTERO .)
    AND             reduce using rule 50 (expresion -> ENTERO .)
    OR              reduce using rule 50 (expresion -> ENTERO .)
    PUNTO           reduce using rule 50 (expresion -> ENTERO .)
    PTOYCOMA        reduce using rule 50 (expresion -> ENTERO .)
    error           reduce using rule 50 (expresion -> ENTERO .)
    ID              reduce using rule 50 (expresion -> ENTERO .)
    INCREMENTO      reduce using rule 50 (expresion -> ENTERO .)
    DECREMENTO      reduce using rule 50 (expresion -> ENTERO .)
    LET             reduce using rule 50 (expresion -> ENTERO .)
    CONSOLE         reduce using rule 50 (expresion -> ENTERO .)
    RETURN          reduce using rule 50 (expresion -> ENTERO .)
    BREAK           reduce using rule 50 (expresion -> ENTERO .)
    CONTINUE        reduce using rule 50 (expresion -> ENTERO .)
    IF              reduce using rule 50 (expresion -> ENTERO .)
    WHILE           reduce using rule 50 (expresion -> ENTERO .)
    FOR             reduce using rule 50 (expresion -> ENTERO .)
    FUNCTION        reduce using rule 50 (expresion -> ENTERO .)
    $end            reduce using rule 50 (expresion -> ENTERO .)
    LLADER          reduce using rule 50 (expresion -> ENTERO .)
    PARDER          reduce using rule 50 (expresion -> ENTERO .)
    COMA            reduce using rule 50 (expresion -> ENTERO .)


state 45

    (51) expresion -> DECIMAL .

    MAS             reduce using rule 51 (expresion -> DECIMAL .)
    MENOS           reduce using rule 51 (expresion -> DECIMAL .)
    POR             reduce using rule 51 (expresion -> DECIMAL .)
    DIVIDIDO        reduce using rule 51 (expresion -> DECIMAL .)
    POTENCIA        reduce using rule 51 (expresion -> DECIMAL .)
    MODULO          reduce using rule 51 (expresion -> DECIMAL .)
    MAYOR           reduce using rule 51 (expresion -> DECIMAL .)
    MENOR           reduce using rule 51 (expresion -> DECIMAL .)
    MAYORIGUAL      reduce using rule 51 (expresion -> DECIMAL .)
    MENORIGUAL      reduce using rule 51 (expresion -> DECIMAL .)
    IGUALACION      reduce using rule 51 (expresion -> DECIMAL .)
    DISTINTO        reduce using rule 51 (expresion -> DECIMAL .)
    AND             reduce using rule 51 (expresion -> DECIMAL .)
    OR              reduce using rule 51 (expresion -> DECIMAL .)
    PUNTO           reduce using rule 51 (expresion -> DECIMAL .)
    PTOYCOMA        reduce using rule 51 (expresion -> DECIMAL .)
    error           reduce using rule 51 (expresion -> DECIMAL .)
    ID              reduce using rule 51 (expresion -> DECIMAL .)
    INCREMENTO      reduce using rule 51 (expresion -> DECIMAL .)
    DECREMENTO      reduce using rule 51 (expresion -> DECIMAL .)
    LET             reduce using rule 51 (expresion -> DECIMAL .)
    CONSOLE         reduce using rule 51 (expresion -> DECIMAL .)
    RETURN          reduce using rule 51 (expresion -> DECIMAL .)
    BREAK           reduce using rule 51 (expresion -> DECIMAL .)
    CONTINUE        reduce using rule 51 (expresion -> DECIMAL .)
    IF              reduce using rule 51 (expresion -> DECIMAL .)
    WHILE           reduce using rule 51 (expresion -> DECIMAL .)
    FOR             reduce using rule 51 (expresion -> DECIMAL .)
    FUNCTION        reduce using rule 51 (expresion -> DECIMAL .)
    $end            reduce using rule 51 (expresion -> DECIMAL .)
    LLADER          reduce using rule 51 (expresion -> DECIMAL .)
    PARDER          reduce using rule 51 (expresion -> DECIMAL .)
    COMA            reduce using rule 51 (expresion -> DECIMAL .)

    expresion                      shift and go to state 80
    dec                            shift and go to state 51
    inc                            shift and go to state 52
    funciones_nativas              shift and go to state 53
    casteo                         shift and go to state 54
    booleano                       shift and go to state 59
    aproximacion                   shift and go to state 61
    exponencial                    shift and go to state 62
    to_mayusculas                  shift and go to state 63
    to_minusculas                  shift and go to state 64
    separador                      shift and go to state 65
    concatenacion                  shift and go to state 66

state 46

    (52) expresion -> CADENA .

    MAS             reduce using rule 52 (expresion -> CADENA .)
    MENOS           reduce using rule 52 (expresion -> CADENA .)
    POR             reduce using rule 52 (expresion -> CADENA .)
    DIVIDIDO        reduce using rule 52 (expresion -> CADENA .)
    POTENCIA        reduce using rule 52 (expresion -> CADENA .)
    MODULO          reduce using rule 52 (expresion -> CADENA .)
    MAYOR           reduce using rule 52 (expresion -> CADENA .)
    MENOR           reduce using rule 52 (expresion -> CADENA .)
    MAYORIGUAL      reduce using rule 52 (expresion -> CADENA .)
    MENORIGUAL      reduce using rule 52 (expresion -> CADENA .)
    IGUALACION      reduce using rule 52 (expresion -> CADENA .)
    DISTINTO        reduce using rule 52 (expresion -> CADENA .)
    AND             reduce using rule 52 (expresion -> CADENA .)
    OR              reduce using rule 52 (expresion -> CADENA .)
    PUNTO           reduce using rule 52 (expresion -> CADENA .)
    PTOYCOMA        reduce using rule 52 (expresion -> CADENA .)
    error           reduce using rule 52 (expresion -> CADENA .)
    ID              reduce using rule 52 (expresion -> CADENA .)
    INCREMENTO      reduce using rule 52 (expresion -> CADENA .)
    DECREMENTO      reduce using rule 52 (expresion -> CADENA .)
    LET             reduce using rule 52 (expresion -> CADENA .)
    CONSOLE         reduce using rule 52 (expresion -> CADENA .)
    RETURN          reduce using rule 52 (expresion -> CADENA .)
    BREAK           reduce using rule 52 (expresion -> CADENA .)
    CONTINUE        reduce using rule 52 (expresion -> CADENA .)
    IF              reduce using rule 52 (expresion -> CADENA .)
    WHILE           reduce using rule 52 (expresion -> CADENA .)
    FOR             reduce using rule 52 (expresion -> CADENA .)
    FUNCTION        reduce using rule 52 (expresion -> CADENA .)
    $end            reduce using rule 52 (expresion -> CADENA .)
    LLADER          reduce using rule 52 (expresion -> CADENA .)
    PARDER          reduce using rule 52 (expresion -> CADENA .)
    COMA            reduce using rule 52 (expresion -> CADENA .)

    expresion                      shift and go to state 81
    dec                            shift and go to state 51
    inc                            shift and go to state 52
    funciones_nativas              shift and go to state 53
    casteo                         shift and go to state 54
    booleano                       shift and go to state 59
    aproximacion                   shift and go to state 61
    exponencial                    shift and go to state 62
    to_mayusculas                  shift and go to state 63
    to_minusculas                  shift and go to state 64
    separador                      shift and go to state 65
    concatenacion                  shift and go to state 66

state 47

    (53) expresion -> ID .
    (56) expresion -> ID . INCREMENTO
    (57) expresion -> ID . DECREMENTO
    (69) expresion -> ID . PUNTO TOSTRING PARIZQ PARDER

  ! shift/reduce conflict for INCREMENTO resolved as shift
  ! shift/reduce conflict for DECREMENTO resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
    MAS             reduce using rule 53 (expresion -> ID .)
    MENOS           reduce using rule 53 (expresion -> ID .)
    POR             reduce using rule 53 (expresion -> ID .)
    DIVIDIDO        reduce using rule 53 (expresion -> ID .)
    POTENCIA        reduce using rule 53 (expresion -> ID .)
    MODULO          reduce using rule 53 (expresion -> ID .)
    MAYOR           reduce using rule 53 (expresion -> ID .)
    MENOR           reduce using rule 53 (expresion -> ID .)
    MAYORIGUAL      reduce using rule 53 (expresion -> ID .)
    MENORIGUAL      reduce using rule 53 (expresion -> ID .)
    IGUALACION      reduce using rule 53 (expresion -> ID .)
    DISTINTO        reduce using rule 53 (expresion -> ID .)
    AND             reduce using rule 53 (expresion -> ID .)
    OR              reduce using rule 53 (expresion -> ID .)
    PTOYCOMA        reduce using rule 53 (expresion -> ID .)
    error           reduce using rule 53 (expresion -> ID .)
    ID              reduce using rule 53 (expresion -> ID .)
    LET             reduce using rule 53 (expresion -> ID .)
    CONSOLE         reduce using rule 53 (expresion -> ID .)
    RETURN          reduce using rule 53 (expresion -> ID .)
    BREAK           reduce using rule 53 (expresion -> ID .)
    CONTINUE        reduce using rule 53 (expresion -> ID .)
    IF              reduce using rule 53 (expresion -> ID .)
    WHILE           reduce using rule 53 (expresion -> ID .)
    FOR             reduce using rule 53 (expresion -> ID .)
    FUNCTION        reduce using rule 53 (expresion -> ID .)
    $end            reduce using rule 53 (expresion -> ID .)
    LLADER          reduce using rule 53 (expresion -> ID .)
    PARDER          reduce using rule 53 (expresion -> ID .)
    COMA            reduce using rule 53 (expresion -> ID .)
    INCREMENTO      shift and go to state 89
    DECREMENTO      shift and go to state 90
    PUNTO           shift and go to state 91

  ! PUNTO           [ reduce using rule 53 (expresion -> ID .) ]
  ! INCREMENTO      [ reduce using rule 53 (expresion -> ID .) ]
  ! DECREMENTO      [ reduce using rule 53 (expresion -> ID .) ]


state 48

    (54) expresion -> TRUE .

    MAS             reduce using rule 54 (expresion -> TRUE .)
    MENOS           reduce using rule 54 (expresion -> TRUE .)
    POR             reduce using rule 54 (expresion -> TRUE .)
    DIVIDIDO        reduce using rule 54 (expresion -> TRUE .)
    POTENCIA        reduce using rule 54 (expresion -> TRUE .)
    MODULO          reduce using rule 54 (expresion -> TRUE .)
    MAYOR           reduce using rule 54 (expresion -> TRUE .)
    MENOR           reduce using rule 54 (expresion -> TRUE .)
    MAYORIGUAL      reduce using rule 54 (expresion -> TRUE .)
    MENORIGUAL      reduce using rule 54 (expresion -> TRUE .)
    IGUALACION      reduce using rule 54 (expresion -> TRUE .)
    DISTINTO        reduce using rule 54 (expresion -> TRUE .)
    AND             reduce using rule 54 (expresion -> TRUE .)
    OR              reduce using rule 54 (expresion -> TRUE .)
    PUNTO           reduce using rule 54 (expresion -> TRUE .)
    PTOYCOMA        reduce using rule 54 (expresion -> TRUE .)
    error           reduce using rule 54 (expresion -> TRUE .)
    ID              reduce using rule 54 (expresion -> TRUE .)
    INCREMENTO      reduce using rule 54 (expresion -> TRUE .)
    DECREMENTO      reduce using rule 54 (expresion -> TRUE .)
    LET             reduce using rule 54 (expresion -> TRUE .)
    CONSOLE         reduce using rule 54 (expresion -> TRUE .)
    RETURN          reduce using rule 54 (expresion -> TRUE .)
    BREAK           reduce using rule 54 (expresion -> TRUE .)
    CONTINUE        reduce using rule 54 (expresion -> TRUE .)
    IF              reduce using rule 54 (expresion -> TRUE .)
    WHILE           reduce using rule 54 (expresion -> TRUE .)
    FOR             reduce using rule 54 (expresion -> TRUE .)
    FUNCTION        reduce using rule 54 (expresion -> TRUE .)
    $end            reduce using rule 54 (expresion -> TRUE .)
    LLADER          reduce using rule 54 (expresion -> TRUE .)
    PARDER          reduce using rule 54 (expresion -> TRUE .)
    COMA            reduce using rule 54 (expresion -> TRUE .)


state 49

    (55) expresion -> FALSE .

    MAS             reduce using rule 55 (expresion -> FALSE .)
    MENOS           reduce using rule 55 (expresion -> FALSE .)
    POR             reduce using rule 55 (expresion -> FALSE .)
    DIVIDIDO        reduce using rule 55 (expresion -> FALSE .)
    POTENCIA        reduce using rule 55 (expresion -> FALSE .)
    MODULO          reduce using rule 55 (expresion -> FALSE .)
    MAYOR           reduce using rule 55 (expresion -> FALSE .)
    MENOR           reduce using rule 55 (expresion -> FALSE .)
    MAYORIGUAL      reduce using rule 55 (expresion -> FALSE .)
    MENORIGUAL      reduce using rule 55 (expresion -> FALSE .)
    IGUALACION      reduce using rule 55 (expresion -> FALSE .)
    DISTINTO        reduce using rule 55 (expresion -> FALSE .)
    AND             reduce using rule 55 (expresion -> FALSE .)
    OR              reduce using rule 55 (expresion -> FALSE .)
    PUNTO           reduce using rule 55 (expresion -> FALSE .)
    PTOYCOMA        reduce using rule 55 (expresion -> FALSE .)
    error           reduce using rule 55 (expresion -> FALSE .)
    ID              reduce using rule 55 (expresion -> FALSE .)
    INCREMENTO      reduce using rule 55 (expresion -> FALSE .)
    DECREMENTO      reduce using rule 55 (expresion -> FALSE .)
    LET             reduce using rule 55 (expresion -> FALSE .)
    CONSOLE         reduce using rule 55 (expresion -> FALSE .)
    RETURN          reduce using rule 55 (expresion -> FALSE .)
    BREAK           reduce using rule 55 (expresion -> FALSE .)
    CONTINUE        reduce using rule 55 (expresion -> FALSE .)
    IF              reduce using rule 55 (expresion -> FALSE .)
    WHILE           reduce using rule 55 (expresion -> FALSE .)
    FOR             reduce using rule 55 (expresion -> FALSE .)
    FUNCTION        reduce using rule 55 (expresion -> FALSE .)
    $end            reduce using rule 55 (expresion -> FALSE .)
    LLADER          reduce using rule 55 (expresion -> FALSE .)
    PARDER          reduce using rule 55 (expresion -> FALSE .)
    COMA            reduce using rule 55 (expresion -> FALSE .)

    expresion                      shift and go to state 101
    dec                            shift and go to state 51
    inc                            shift and go to state 52
    funciones_nativas              shift and go to state 53
    casteo                         shift and go to state 54
    booleano                       shift and go to state 59
    aproximacion                   shift and go to state 61
    exponencial                    shift and go to state 62
    to_mayusculas                  shift and go to state 63
    to_minusculas                  shift and go to state 64
    separador                      shift and go to state 65
    concatenacion                  shift and go to state 66

state 50

    (58) expresion -> INCREMENTO . ID

    ID              shift and go to state 92

    expresion                      shift and go to state 102
    dec                            shift and go to state 51
    inc                            shift and go to state 52
    funciones_nativas              shift and go to state 53
    casteo                         shift and go to state 54
    booleano                       shift and go to state 59
    aproximacion                   shift and go to state 61
    exponencial                    shift and go to state 62
    to_mayusculas                  shift and go to state 63
    to_minusculas                  shift and go to state 64
    separador                      shift and go to state 65
    concatenacion                  shift and go to state 66

state 51

    (59) expresion -> DECREMENTO . ID

    ID              shift and go to state 93


state 52

    (60) expresion -> aproximacion .

    MAS             reduce using rule 60 (expresion -> aproximacion .)
    MENOS           reduce using rule 60 (expresion -> aproximacion .)
    POR             reduce using rule 60 (expresion -> aproximacion .)
    DIVIDIDO        reduce using rule 60 (expresion -> aproximacion .)
    POTENCIA        reduce using rule 60 (expresion -> aproximacion .)
    MODULO          reduce using rule 60 (expresion -> aproximacion .)
    MAYOR           reduce using rule 60 (expresion -> aproximacion .)
    MENOR           reduce using rule 60 (expresion -> aproximacion .)
    MAYORIGUAL      reduce using rule 60 (expresion -> aproximacion .)
    MENORIGUAL      reduce using rule 60 (expresion -> aproximacion .)
    IGUALACION      reduce using rule 60 (expresion -> aproximacion .)
    DISTINTO        reduce using rule 60 (expresion -> aproximacion .)
    AND             reduce using rule 60 (expresion -> aproximacion .)
    OR              reduce using rule 60 (expresion -> aproximacion .)
    PUNTO           reduce using rule 60 (expresion -> aproximacion .)
    PTOYCOMA        reduce using rule 60 (expresion -> aproximacion .)
    error           reduce using rule 60 (expresion -> aproximacion .)
    ID              reduce using rule 60 (expresion -> aproximacion .)
    INCREMENTO      reduce using rule 60 (expresion -> aproximacion .)
    DECREMENTO      reduce using rule 60 (expresion -> aproximacion .)
    LET             reduce using rule 60 (expresion -> aproximacion .)
    CONSOLE         reduce using rule 60 (expresion -> aproximacion .)
    RETURN          reduce using rule 60 (expresion -> aproximacion .)
    BREAK           reduce using rule 60 (expresion -> aproximacion .)
    CONTINUE        reduce using rule 60 (expresion -> aproximacion .)
    IF              reduce using rule 60 (expresion -> aproximacion .)
    WHILE           reduce using rule 60 (expresion -> aproximacion .)
    FOR             reduce using rule 60 (expresion -> aproximacion .)
    FUNCTION        reduce using rule 60 (expresion -> aproximacion .)
    $end            reduce using rule 60 (expresion -> aproximacion .)
    LLADER          reduce using rule 60 (expresion -> aproximacion .)
    PARDER          reduce using rule 60 (expresion -> aproximacion .)
    COMA            reduce using rule 60 (expresion -> aproximacion .)


state 53

    (61) expresion -> exponencial .

    MAS             reduce using rule 61 (expresion -> exponencial .)
    MENOS           reduce using rule 61 (expresion -> exponencial .)
    POR             reduce using rule 61 (expresion -> exponencial .)
    DIVIDIDO        reduce using rule 61 (expresion -> exponencial .)
    POTENCIA        reduce using rule 61 (expresion -> exponencial .)
    MODULO          reduce using rule 61 (expresion -> exponencial .)
    MAYOR           reduce using rule 61 (expresion -> exponencial .)
    MENOR           reduce using rule 61 (expresion -> exponencial .)
    MAYORIGUAL      reduce using rule 61 (expresion -> exponencial .)
    MENORIGUAL      reduce using rule 61 (expresion -> exponencial .)
    IGUALACION      reduce using rule 61 (expresion -> exponencial .)
    DISTINTO        reduce using rule 61 (expresion -> exponencial .)
    AND             reduce using rule 61 (expresion -> exponencial .)
    OR              reduce using rule 61 (expresion -> exponencial .)
    PUNTO           reduce using rule 61 (expresion -> exponencial .)
    PTOYCOMA        reduce using rule 61 (expresion -> exponencial .)
    error           reduce using rule 61 (expresion -> exponencial .)
    ID              reduce using rule 61 (expresion -> exponencial .)
    INCREMENTO      reduce using rule 61 (expresion -> exponencial .)
    DECREMENTO      reduce using rule 61 (expresion -> exponencial .)
    LET             reduce using rule 61 (expresion -> exponencial .)
    CONSOLE         reduce using rule 61 (expresion -> exponencial .)
    RETURN          reduce using rule 61 (expresion -> exponencial .)
    BREAK           reduce using rule 61 (expresion -> exponencial .)
    CONTINUE        reduce using rule 61 (expresion -> exponencial .)
    IF              reduce using rule 61 (expresion -> exponencial .)
    WHILE           reduce using rule 61 (expresion -> exponencial .)
    FOR             reduce using rule 61 (expresion -> exponencial .)
    FUNCTION        reduce using rule 61 (expresion -> exponencial .)
    $end            reduce using rule 61 (expresion -> exponencial .)
    LLADER          reduce using rule 61 (expresion -> exponencial .)
    PARDER          reduce using rule 61 (expresion -> exponencial .)
    COMA            reduce using rule 61 (expresion -> exponencial .)


state 54

    (62) expresion -> to_minusculas .

    MAS             reduce using rule 62 (expresion -> to_minusculas .)
    MENOS           reduce using rule 62 (expresion -> to_minusculas .)
    POR             reduce using rule 62 (expresion -> to_minusculas .)
    DIVIDIDO        reduce using rule 62 (expresion -> to_minusculas .)
    POTENCIA        reduce using rule 62 (expresion -> to_minusculas .)
    MODULO          reduce using rule 62 (expresion -> to_minusculas .)
    MAYOR           reduce using rule 62 (expresion -> to_minusculas .)
    MENOR           reduce using rule 62 (expresion -> to_minusculas .)
    MAYORIGUAL      reduce using rule 62 (expresion -> to_minusculas .)
    MENORIGUAL      reduce using rule 62 (expresion -> to_minusculas .)
    IGUALACION      reduce using rule 62 (expresion -> to_minusculas .)
    DISTINTO        reduce using rule 62 (expresion -> to_minusculas .)
    AND             reduce using rule 62 (expresion -> to_minusculas .)
    OR              reduce using rule 62 (expresion -> to_minusculas .)
    PUNTO           reduce using rule 62 (expresion -> to_minusculas .)
    PTOYCOMA        reduce using rule 62 (expresion -> to_minusculas .)
    error           reduce using rule 62 (expresion -> to_minusculas .)
    ID              reduce using rule 62 (expresion -> to_minusculas .)
    INCREMENTO      reduce using rule 62 (expresion -> to_minusculas .)
    DECREMENTO      reduce using rule 62 (expresion -> to_minusculas .)
    LET             reduce using rule 62 (expresion -> to_minusculas .)
    CONSOLE         reduce using rule 62 (expresion -> to_minusculas .)
    RETURN          reduce using rule 62 (expresion -> to_minusculas .)
    BREAK           reduce using rule 62 (expresion -> to_minusculas .)
    CONTINUE        reduce using rule 62 (expresion -> to_minusculas .)
    IF              reduce using rule 62 (expresion -> to_minusculas .)
    WHILE           reduce using rule 62 (expresion -> to_minusculas .)
    FOR             reduce using rule 62 (expresion -> to_minusculas .)
    FUNCTION        reduce using rule 62 (expresion -> to_minusculas .)
    $end            reduce using rule 62 (expresion -> to_minusculas .)
    LLADER          reduce using rule 62 (expresion -> to_minusculas .)
    PARDER          reduce using rule 62 (expresion -> to_minusculas .)
    COMA            reduce using rule 62 (expresion -> to_minusculas .)


state 55

    (63) expresion -> to_mayusculas .

    MAS             reduce using rule 63 (expresion -> to_mayusculas .)
    MENOS           reduce using rule 63 (expresion -> to_mayusculas .)
    POR             reduce using rule 63 (expresion -> to_mayusculas .)
    DIVIDIDO        reduce using rule 63 (expresion -> to_mayusculas .)
    POTENCIA        reduce using rule 63 (expresion -> to_mayusculas .)
    MODULO          reduce using rule 63 (expresion -> to_mayusculas .)
    MAYOR           reduce using rule 63 (expresion -> to_mayusculas .)
    MENOR           reduce using rule 63 (expresion -> to_mayusculas .)
    MAYORIGUAL      reduce using rule 63 (expresion -> to_mayusculas .)
    MENORIGUAL      reduce using rule 63 (expresion -> to_mayusculas .)
    IGUALACION      reduce using rule 63 (expresion -> to_mayusculas .)
    DISTINTO        reduce using rule 63 (expresion -> to_mayusculas .)
    AND             reduce using rule 63 (expresion -> to_mayusculas .)
    OR              reduce using rule 63 (expresion -> to_mayusculas .)
    PUNTO           reduce using rule 63 (expresion -> to_mayusculas .)
    PTOYCOMA        reduce using rule 63 (expresion -> to_mayusculas .)
    error           reduce using rule 63 (expresion -> to_mayusculas .)
    ID              reduce using rule 63 (expresion -> to_mayusculas .)
    INCREMENTO      reduce using rule 63 (expresion -> to_mayusculas .)
    DECREMENTO      reduce using rule 63 (expresion -> to_mayusculas .)
    LET             reduce using rule 63 (expresion -> to_mayusculas .)
    CONSOLE         reduce using rule 63 (expresion -> to_mayusculas .)
    RETURN          reduce using rule 63 (expresion -> to_mayusculas .)
    BREAK           reduce using rule 63 (expresion -> to_mayusculas .)
    CONTINUE        reduce using rule 63 (expresion -> to_mayusculas .)
    IF              reduce using rule 63 (expresion -> to_mayusculas .)
    WHILE           reduce using rule 63 (expresion -> to_mayusculas .)
    FOR             reduce using rule 63 (expresion -> to_mayusculas .)
    FUNCTION        reduce using rule 63 (expresion -> to_mayusculas .)
    $end            reduce using rule 63 (expresion -> to_mayusculas .)
    LLADER          reduce using rule 63 (expresion -> to_mayusculas .)
    PARDER          reduce using rule 63 (expresion -> to_mayusculas .)
    COMA            reduce using rule 63 (expresion -> to_mayusculas .)

    expresion                      shift and go to state 103
    dec                            shift and go to state 51
    inc                            shift and go to state 52
    funciones_nativas              shift and go to state 53
    casteo                         shift and go to state 54
    booleano                       shift and go to state 59
    aproximacion                   shift and go to state 61
    exponencial                    shift and go to state 62
    to_mayusculas                  shift and go to state 63
    to_minusculas                  shift and go to state 64
    separador                      shift and go to state 65
    concatenacion                  shift and go to state 66

state 56

    (64) expresion -> separador .

    MAS             reduce using rule 64 (expresion -> separador .)
    MENOS           reduce using rule 64 (expresion -> separador .)
    POR             reduce using rule 64 (expresion -> separador .)
    DIVIDIDO        reduce using rule 64 (expresion -> separador .)
    POTENCIA        reduce using rule 64 (expresion -> separador .)
    MODULO          reduce using rule 64 (expresion -> separador .)
    MAYOR           reduce using rule 64 (expresion -> separador .)
    MENOR           reduce using rule 64 (expresion -> separador .)
    MAYORIGUAL      reduce using rule 64 (expresion -> separador .)
    MENORIGUAL      reduce using rule 64 (expresion -> separador .)
    IGUALACION      reduce using rule 64 (expresion -> separador .)
    DISTINTO        reduce using rule 64 (expresion -> separador .)
    AND             reduce using rule 64 (expresion -> separador .)
    OR              reduce using rule 64 (expresion -> separador .)
    PUNTO           reduce using rule 64 (expresion -> separador .)
    PTOYCOMA        reduce using rule 64 (expresion -> separador .)
    error           reduce using rule 64 (expresion -> separador .)
    ID              reduce using rule 64 (expresion -> separador .)
    INCREMENTO      reduce using rule 64 (expresion -> separador .)
    DECREMENTO      reduce using rule 64 (expresion -> separador .)
    LET             reduce using rule 64 (expresion -> separador .)
    CONSOLE         reduce using rule 64 (expresion -> separador .)
    RETURN          reduce using rule 64 (expresion -> separador .)
    BREAK           reduce using rule 64 (expresion -> separador .)
    CONTINUE        reduce using rule 64 (expresion -> separador .)
    IF              reduce using rule 64 (expresion -> separador .)
    WHILE           reduce using rule 64 (expresion -> separador .)
    FOR             reduce using rule 64 (expresion -> separador .)
    FUNCTION        reduce using rule 64 (expresion -> separador .)
    $end            reduce using rule 64 (expresion -> separador .)
    LLADER          reduce using rule 64 (expresion -> separador .)
    PARDER          reduce using rule 64 (expresion -> separador .)
    COMA            reduce using rule 64 (expresion -> separador .)


state 57

    (65) expresion -> concatenacion .

    MAS             reduce using rule 65 (expresion -> concatenacion .)
    MENOS           reduce using rule 65 (expresion -> concatenacion .)
    POR             reduce using rule 65 (expresion -> concatenacion .)
    DIVIDIDO        reduce using rule 65 (expresion -> concatenacion .)
    POTENCIA        reduce using rule 65 (expresion -> concatenacion .)
    MODULO          reduce using rule 65 (expresion -> concatenacion .)
    MAYOR           reduce using rule 65 (expresion -> concatenacion .)
    MENOR           reduce using rule 65 (expresion -> concatenacion .)
    MAYORIGUAL      reduce using rule 65 (expresion -> concatenacion .)
    MENORIGUAL      reduce using rule 65 (expresion -> concatenacion .)
    IGUALACION      reduce using rule 65 (expresion -> concatenacion .)
    DISTINTO        reduce using rule 65 (expresion -> concatenacion .)
    AND             reduce using rule 65 (expresion -> concatenacion .)
    OR              reduce using rule 65 (expresion -> concatenacion .)
    PUNTO           reduce using rule 65 (expresion -> concatenacion .)
    PTOYCOMA        reduce using rule 65 (expresion -> concatenacion .)
    error           reduce using rule 65 (expresion -> concatenacion .)
    ID              reduce using rule 65 (expresion -> concatenacion .)
    INCREMENTO      reduce using rule 65 (expresion -> concatenacion .)
    DECREMENTO      reduce using rule 65 (expresion -> concatenacion .)
    LET             reduce using rule 65 (expresion -> concatenacion .)
    CONSOLE         reduce using rule 65 (expresion -> concatenacion .)
    RETURN          reduce using rule 65 (expresion -> concatenacion .)
    BREAK           reduce using rule 65 (expresion -> concatenacion .)
    CONTINUE        reduce using rule 65 (expresion -> concatenacion .)
    IF              reduce using rule 65 (expresion -> concatenacion .)
    WHILE           reduce using rule 65 (expresion -> concatenacion .)
    FOR             reduce using rule 65 (expresion -> concatenacion .)
    FUNCTION        reduce using rule 65 (expresion -> concatenacion .)
    $end            reduce using rule 65 (expresion -> concatenacion .)
    LLADER          reduce using rule 65 (expresion -> concatenacion .)
    PARDER          reduce using rule 65 (expresion -> concatenacion .)
    COMA            reduce using rule 65 (expresion -> concatenacion .)


state 58

    (66) expresion -> casteo_string .

    MAS             reduce using rule 66 (expresion -> casteo_string .)
    MENOS           reduce using rule 66 (expresion -> casteo_string .)
    POR             reduce using rule 66 (expresion -> casteo_string .)
    DIVIDIDO        reduce using rule 66 (expresion -> casteo_string .)
    POTENCIA        reduce using rule 66 (expresion -> casteo_string .)
    MODULO          reduce using rule 66 (expresion -> casteo_string .)
    MAYOR           reduce using rule 66 (expresion -> casteo_string .)
    MENOR           reduce using rule 66 (expresion -> casteo_string .)
    MAYORIGUAL      reduce using rule 66 (expresion -> casteo_string .)
    MENORIGUAL      reduce using rule 66 (expresion -> casteo_string .)
    IGUALACION      reduce using rule 66 (expresion -> casteo_string .)
    DISTINTO        reduce using rule 66 (expresion -> casteo_string .)
    AND             reduce using rule 66 (expresion -> casteo_string .)
    OR              reduce using rule 66 (expresion -> casteo_string .)
    PUNTO           reduce using rule 66 (expresion -> casteo_string .)
    PTOYCOMA        reduce using rule 66 (expresion -> casteo_string .)
    error           reduce using rule 66 (expresion -> casteo_string .)
    ID              reduce using rule 66 (expresion -> casteo_string .)
    INCREMENTO      reduce using rule 66 (expresion -> casteo_string .)
    DECREMENTO      reduce using rule 66 (expresion -> casteo_string .)
    LET             reduce using rule 66 (expresion -> casteo_string .)
    CONSOLE         reduce using rule 66 (expresion -> casteo_string .)
    RETURN          reduce using rule 66 (expresion -> casteo_string .)
    BREAK           reduce using rule 66 (expresion -> casteo_string .)
    CONTINUE        reduce using rule 66 (expresion -> casteo_string .)
    IF              reduce using rule 66 (expresion -> casteo_string .)
    WHILE           reduce using rule 66 (expresion -> casteo_string .)
    FOR             reduce using rule 66 (expresion -> casteo_string .)
    FUNCTION        reduce using rule 66 (expresion -> casteo_string .)
    $end            reduce using rule 66 (expresion -> casteo_string .)
    LLADER          reduce using rule 66 (expresion -> casteo_string .)
    PARDER          reduce using rule 66 (expresion -> casteo_string .)
    COMA            reduce using rule 66 (expresion -> casteo_string .)


state 59

    (74) casteo_string -> CAST_STRING . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 94


state 60

    (83) condicional_if -> IF PARIZQ . expresion PARDER bloque
    (84) condicional_if -> IF PARIZQ . expresion PARDER bloque ELSE bloque
    (85) condicional_if -> IF PARIZQ . expresion PARDER bloque lista_elif
    (86) condicional_if -> IF PARIZQ . expresion PARDER bloque lista_elif ELSE bloque
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion POR expresion
    (36) expresion -> . expresion DIVIDIDO expresion
    (37) expresion -> . expresion POTENCIA expresion
    (38) expresion -> . expresion MODULO expresion
    (39) expresion -> . MENOS expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . expresion MAYOR expresion
    (42) expresion -> . expresion MENOR expresion
    (43) expresion -> . expresion MAYORIGUAL expresion
    (44) expresion -> . expresion MENORIGUAL expresion
    (45) expresion -> . expresion IGUALACION expresion
    (46) expresion -> . expresion DISTINTO expresion
    (47) expresion -> . expresion AND expresion
    (48) expresion -> . expresion OR expresion
    (49) expresion -> . NOT expresion
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . CADENA
    (53) expresion -> . ID
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . ID INCREMENTO
    (57) expresion -> . ID DECREMENTO
    (58) expresion -> . INCREMENTO ID
    (59) expresion -> . DECREMENTO ID
    (60) expresion -> . aproximacion
    (61) expresion -> . exponencial
    (62) expresion -> . to_minusculas
    (63) expresion -> . to_mayusculas
    (64) expresion -> . separador
    (65) expresion -> . concatenacion
    (66) expresion -> . casteo_string
    (69) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (67) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (74) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 42
    NOT             shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    ID              shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CAST_STRING     shift and go to state 59

    expresion                      shift and go to state 95
    aproximacion                   shift and go to state 52
    exponencial                    shift and go to state 53
    to_minusculas                  shift and go to state 54
    to_mayusculas                  shift and go to state 55
    separador                      shift and go to state 56
    concatenacion                  shift and go to state 57
    casteo_string                  shift and go to state 58


state 61

    (90) ciclo_while -> WHILE PARIZQ . expresion PARDER bloque
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion POR expresion
    (36) expresion -> . expresion DIVIDIDO expresion
    (37) expresion -> . expresion POTENCIA expresion
    (38) expresion -> . expresion MODULO expresion
    (39) expresion -> . MENOS expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . expresion MAYOR expresion
    (42) expresion -> . expresion MENOR expresion
    (43) expresion -> . expresion MAYORIGUAL expresion
    (44) expresion -> . expresion MENORIGUAL expresion
    (45) expresion -> . expresion IGUALACION expresion
    (46) expresion -> . expresion DISTINTO expresion
    (47) expresion -> . expresion AND expresion
    (48) expresion -> . expresion OR expresion
    (49) expresion -> . NOT expresion
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . CADENA
    (53) expresion -> . ID
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . ID INCREMENTO
    (57) expresion -> . ID DECREMENTO
    (58) expresion -> . INCREMENTO ID
    (59) expresion -> . DECREMENTO ID
    (60) expresion -> . aproximacion
    (61) expresion -> . exponencial
    (62) expresion -> . to_minusculas
    (63) expresion -> . to_mayusculas
    (64) expresion -> . separador
    (65) expresion -> . concatenacion
    (66) expresion -> . casteo_string
    (69) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (67) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (74) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 42
    NOT             shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    ID              shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CAST_STRING     shift and go to state 59

    expresion                      shift and go to state 96
    aproximacion                   shift and go to state 52
    exponencial                    shift and go to state 53
    to_minusculas                  shift and go to state 54
    to_mayusculas                  shift and go to state 55
    separador                      shift and go to state 56
    concatenacion                  shift and go to state 57
    casteo_string                  shift and go to state 58

state 62

    (91) ciclo_for -> FOR PARIZQ . declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (92) ciclo_for -> FOR PARIZQ . asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (93) ciclo_for -> FOR PARIZQ . declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (94) ciclo_for -> FOR PARIZQ . asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (95) ciclo_for_of -> FOR PARIZQ . LET ID OF expresion PARDER bloque
    (23) declaracion -> . LET ID DOSPUNTOS tipo IGUAL expresion
    (24) declaracion -> . LET ID IGUAL expresion
    (25) declaracion -> . LET ID DOSPUNTOS tipo
    (26) declaracion -> . LET ID
    (27) asignacion -> . ID IGUAL expresion

    LET             shift and go to state 99
    ID              shift and go to state 100

    declaracion                    shift and go to state 97
    asignacion                     shift and go to state 98

state 63

    (96) funcion -> FUNCTION ID . PARIZQ lista_parametros PARDER bloque
    (97) funcion -> FUNCTION ID . PARIZQ PARDER bloque

    PARIZQ          shift and go to state 101


state 64

    (27) asignacion -> ID IGUAL expresion .
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . POR expresion
    (36) expresion -> expresion . DIVIDIDO expresion
    (37) expresion -> expresion . POTENCIA expresion
    (38) expresion -> expresion . MODULO expresion
    (41) expresion -> expresion . MAYOR expresion
    (42) expresion -> expresion . MENOR expresion
    (43) expresion -> expresion . MAYORIGUAL expresion
    (44) expresion -> expresion . MENORIGUAL expresion
    (45) expresion -> expresion . IGUALACION expresion
    (46) expresion -> expresion . DISTINTO expresion
    (47) expresion -> expresion . AND expresion
    (48) expresion -> expresion . OR expresion
    (67) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PTOYCOMA        reduce using rule 27 (asignacion -> ID IGUAL expresion .)
    error           reduce using rule 27 (asignacion -> ID IGUAL expresion .)
    ID              reduce using rule 27 (asignacion -> ID IGUAL expresion .)
    INCREMENTO      reduce using rule 27 (asignacion -> ID IGUAL expresion .)
    DECREMENTO      reduce using rule 27 (asignacion -> ID IGUAL expresion .)
    LET             reduce using rule 27 (asignacion -> ID IGUAL expresion .)
    CONSOLE         reduce using rule 27 (asignacion -> ID IGUAL expresion .)
    RETURN          reduce using rule 27 (asignacion -> ID IGUAL expresion .)
    BREAK           reduce using rule 27 (asignacion -> ID IGUAL expresion .)
    CONTINUE        reduce using rule 27 (asignacion -> ID IGUAL expresion .)
    IF              reduce using rule 27 (asignacion -> ID IGUAL expresion .)
    WHILE           reduce using rule 27 (asignacion -> ID IGUAL expresion .)
    FOR             reduce using rule 27 (asignacion -> ID IGUAL expresion .)
    FUNCTION        reduce using rule 27 (asignacion -> ID IGUAL expresion .)
    $end            reduce using rule 27 (asignacion -> ID IGUAL expresion .)
    LLADER          reduce using rule 27 (asignacion -> ID IGUAL expresion .)
    PARDER          reduce using rule 27 (asignacion -> ID IGUAL expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    MAYOR           shift and go to state 77
    MENOR           shift and go to state 78
    MAYORIGUAL      shift and go to state 79
    MENORIGUAL      shift and go to state 80
    IGUALACION      shift and go to state 81
    DISTINTO        shift and go to state 82
    AND             shift and go to state 83
    OR              shift and go to state 84
    PUNTO           shift and go to state 85


state 65

    (101) llamada_funcion -> ID PARIZQ lista_argumentos . PARDER
    (103) lista_argumentos -> lista_argumentos . COMA expresion

    PARDER          shift and go to state 102
    COMA            shift and go to state 103


state 66

    (102) llamada_funcion -> ID PARIZQ PARDER .

    PTOYCOMA        reduce using rule 102 (llamada_funcion -> ID PARIZQ PARDER .)
    error           reduce using rule 102 (llamada_funcion -> ID PARIZQ PARDER .)
    ID              reduce using rule 102 (llamada_funcion -> ID PARIZQ PARDER .)
    INCREMENTO      reduce using rule 102 (llamada_funcion -> ID PARIZQ PARDER .)
    DECREMENTO      reduce using rule 102 (llamada_funcion -> ID PARIZQ PARDER .)
    LET             reduce using rule 102 (llamada_funcion -> ID PARIZQ PARDER .)
    CONSOLE         reduce using rule 102 (llamada_funcion -> ID PARIZQ PARDER .)
    RETURN          reduce using rule 102 (llamada_funcion -> ID PARIZQ PARDER .)
    BREAK           reduce using rule 102 (llamada_funcion -> ID PARIZQ PARDER .)
    CONTINUE        reduce using rule 102 (llamada_funcion -> ID PARIZQ PARDER .)
    IF              reduce using rule 102 (llamada_funcion -> ID PARIZQ PARDER .)
    WHILE           reduce using rule 102 (llamada_funcion -> ID PARIZQ PARDER .)
    FOR             reduce using rule 102 (llamada_funcion -> ID PARIZQ PARDER .)
    FUNCTION        reduce using rule 102 (llamada_funcion -> ID PARIZQ PARDER .)
    $end            reduce using rule 102 (llamada_funcion -> ID PARIZQ PARDER .)
    LLADER          reduce using rule 102 (llamada_funcion -> ID PARIZQ PARDER .)


state 67

    (104) lista_argumentos -> expresion .
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . POR expresion
    (36) expresion -> expresion . DIVIDIDO expresion
    (37) expresion -> expresion . POTENCIA expresion
    (38) expresion -> expresion . MODULO expresion
    (41) expresion -> expresion . MAYOR expresion
    (42) expresion -> expresion . MENOR expresion
    (43) expresion -> expresion . MAYORIGUAL expresion
    (44) expresion -> expresion . MENORIGUAL expresion
    (45) expresion -> expresion . IGUALACION expresion
    (46) expresion -> expresion . DISTINTO expresion
    (47) expresion -> expresion . AND expresion
    (48) expresion -> expresion . OR expresion
    (67) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          reduce using rule 104 (lista_argumentos -> expresion .)
    COMA            reduce using rule 104 (lista_argumentos -> expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    MAYOR           shift and go to state 77
    MENOR           shift and go to state 78
    MAYORIGUAL      shift and go to state 79
    MENORIGUAL      shift and go to state 80
    IGUALACION      shift and go to state 81
    DISTINTO        shift and go to state 82
    AND             shift and go to state 83
    OR              shift and go to state 84
    PUNTO           shift and go to state 85


state 68

    (23) declaracion -> LET ID DOSPUNTOS . tipo IGUAL expresion
    (25) declaracion -> LET ID DOSPUNTOS . tipo
    (75) tipo -> . NUMBER
    (76) tipo -> . STRING
    (77) tipo -> . BOOLEAN
    (78) tipo -> . ANY

    NUMBER          shift and go to state 105
    STRING          shift and go to state 106
    BOOLEAN         shift and go to state 107
    ANY             shift and go to state 108

    tipo                           shift and go to state 104

state 69

    (24) declaracion -> LET ID IGUAL . expresion
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion POR expresion
    (36) expresion -> . expresion DIVIDIDO expresion
    (37) expresion -> . expresion POTENCIA expresion
    (38) expresion -> . expresion MODULO expresion
    (39) expresion -> . MENOS expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . expresion MAYOR expresion
    (42) expresion -> . expresion MENOR expresion
    (43) expresion -> . expresion MAYORIGUAL expresion
    (44) expresion -> . expresion MENORIGUAL expresion
    (45) expresion -> . expresion IGUALACION expresion
    (46) expresion -> . expresion DISTINTO expresion
    (47) expresion -> . expresion AND expresion
    (48) expresion -> . expresion OR expresion
    (49) expresion -> . NOT expresion
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . CADENA
    (53) expresion -> . ID
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . ID INCREMENTO
    (57) expresion -> . ID DECREMENTO
    (58) expresion -> . INCREMENTO ID
    (59) expresion -> . DECREMENTO ID
    (60) expresion -> . aproximacion
    (61) expresion -> . exponencial
    (62) expresion -> . to_minusculas
    (63) expresion -> . to_mayusculas
    (64) expresion -> . separador
    (65) expresion -> . concatenacion
    (66) expresion -> . casteo_string
    (69) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (67) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (74) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 42
    NOT             shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    ID              shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CAST_STRING     shift and go to state 59

    expresion                      shift and go to state 109
    aproximacion                   shift and go to state 52
    exponencial                    shift and go to state 53
    to_minusculas                  shift and go to state 54
    to_mayusculas                  shift and go to state 55
    separador                      shift and go to state 56
    concatenacion                  shift and go to state 57
    casteo_string                  shift and go to state 58

state 70

    (32) impresion -> CONSOLE PUNTO LOG . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 110


state 71

    (33) expresion -> expresion MAS . expresion
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion POR expresion
    (36) expresion -> . expresion DIVIDIDO expresion
    (37) expresion -> . expresion POTENCIA expresion
    (38) expresion -> . expresion MODULO expresion
    (39) expresion -> . MENOS expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . expresion MAYOR expresion
    (42) expresion -> . expresion MENOR expresion
    (43) expresion -> . expresion MAYORIGUAL expresion
    (44) expresion -> . expresion MENORIGUAL expresion
    (45) expresion -> . expresion IGUALACION expresion
    (46) expresion -> . expresion DISTINTO expresion
    (47) expresion -> . expresion AND expresion
    (48) expresion -> . expresion OR expresion
    (49) expresion -> . NOT expresion
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . CADENA
    (53) expresion -> . ID
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . ID INCREMENTO
    (57) expresion -> . ID DECREMENTO
    (58) expresion -> . INCREMENTO ID
    (59) expresion -> . DECREMENTO ID
    (60) expresion -> . aproximacion
    (61) expresion -> . exponencial
    (62) expresion -> . to_minusculas
    (63) expresion -> . to_mayusculas
    (64) expresion -> . separador
    (65) expresion -> . concatenacion
    (66) expresion -> . casteo_string
    (69) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (67) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (74) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 42
    NOT             shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    ID              shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CAST_STRING     shift and go to state 59

    expresion                      shift and go to state 111
    aproximacion                   shift and go to state 52
    exponencial                    shift and go to state 53
    to_minusculas                  shift and go to state 54
    to_mayusculas                  shift and go to state 55
    separador                      shift and go to state 56
    concatenacion                  shift and go to state 57
    casteo_string                  shift and go to state 58

state 72

    (34) expresion -> expresion MENOS . expresion
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion POR expresion
    (36) expresion -> . expresion DIVIDIDO expresion
    (37) expresion -> . expresion POTENCIA expresion
    (38) expresion -> . expresion MODULO expresion
    (39) expresion -> . MENOS expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . expresion MAYOR expresion
    (42) expresion -> . expresion MENOR expresion
    (43) expresion -> . expresion MAYORIGUAL expresion
    (44) expresion -> . expresion MENORIGUAL expresion
    (45) expresion -> . expresion IGUALACION expresion
    (46) expresion -> . expresion DISTINTO expresion
    (47) expresion -> . expresion AND expresion
    (48) expresion -> . expresion OR expresion
    (49) expresion -> . NOT expresion
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . CADENA
    (53) expresion -> . ID
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . ID INCREMENTO
    (57) expresion -> . ID DECREMENTO
    (58) expresion -> . INCREMENTO ID
    (59) expresion -> . DECREMENTO ID
    (60) expresion -> . aproximacion
    (61) expresion -> . exponencial
    (62) expresion -> . to_minusculas
    (63) expresion -> . to_mayusculas
    (64) expresion -> . separador
    (65) expresion -> . concatenacion
    (66) expresion -> . casteo_string
    (69) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (67) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (74) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 42
    NOT             shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    ID              shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CAST_STRING     shift and go to state 59

    expresion                      shift and go to state 112
    aproximacion                   shift and go to state 52
    exponencial                    shift and go to state 53
    to_minusculas                  shift and go to state 54
    to_mayusculas                  shift and go to state 55
    separador                      shift and go to state 56
    concatenacion                  shift and go to state 57
    casteo_string                  shift and go to state 58

state 73

    (35) expresion -> expresion POR . expresion
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion POR expresion
    (36) expresion -> . expresion DIVIDIDO expresion
    (37) expresion -> . expresion POTENCIA expresion
    (38) expresion -> . expresion MODULO expresion
    (39) expresion -> . MENOS expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . expresion MAYOR expresion
    (42) expresion -> . expresion MENOR expresion
    (43) expresion -> . expresion MAYORIGUAL expresion
    (44) expresion -> . expresion MENORIGUAL expresion
    (45) expresion -> . expresion IGUALACION expresion
    (46) expresion -> . expresion DISTINTO expresion
    (47) expresion -> . expresion AND expresion
    (48) expresion -> . expresion OR expresion
    (49) expresion -> . NOT expresion
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . CADENA
    (53) expresion -> . ID
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . ID INCREMENTO
    (57) expresion -> . ID DECREMENTO
    (58) expresion -> . INCREMENTO ID
    (59) expresion -> . DECREMENTO ID
    (60) expresion -> . aproximacion
    (61) expresion -> . exponencial
    (62) expresion -> . to_minusculas
    (63) expresion -> . to_mayusculas
    (64) expresion -> . separador
    (65) expresion -> . concatenacion
    (66) expresion -> . casteo_string
    (69) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (67) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (74) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 42
    NOT             shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    ID              shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CAST_STRING     shift and go to state 59

    expresion                      shift and go to state 113
    aproximacion                   shift and go to state 52
    exponencial                    shift and go to state 53
    to_minusculas                  shift and go to state 54
    to_mayusculas                  shift and go to state 55
    separador                      shift and go to state 56
    concatenacion                  shift and go to state 57
    casteo_string                  shift and go to state 58

state 74

    (36) expresion -> expresion DIVIDIDO . expresion
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion POR expresion
    (36) expresion -> . expresion DIVIDIDO expresion
    (37) expresion -> . expresion POTENCIA expresion
    (38) expresion -> . expresion MODULO expresion
    (39) expresion -> . MENOS expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . expresion MAYOR expresion
    (42) expresion -> . expresion MENOR expresion
    (43) expresion -> . expresion MAYORIGUAL expresion
    (44) expresion -> . expresion MENORIGUAL expresion
    (45) expresion -> . expresion IGUALACION expresion
    (46) expresion -> . expresion DISTINTO expresion
    (47) expresion -> . expresion AND expresion
    (48) expresion -> . expresion OR expresion
    (49) expresion -> . NOT expresion
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . CADENA
    (53) expresion -> . ID
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . ID INCREMENTO
    (57) expresion -> . ID DECREMENTO
    (58) expresion -> . INCREMENTO ID
    (59) expresion -> . DECREMENTO ID
    (60) expresion -> . aproximacion
    (61) expresion -> . exponencial
    (62) expresion -> . to_minusculas
    (63) expresion -> . to_mayusculas
    (64) expresion -> . separador
    (65) expresion -> . concatenacion
    (66) expresion -> . casteo_string
    (69) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (67) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (74) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 42
    NOT             shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    ID              shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CAST_STRING     shift and go to state 59

    expresion                      shift and go to state 114
    aproximacion                   shift and go to state 52
    exponencial                    shift and go to state 53
    to_minusculas                  shift and go to state 54
    to_mayusculas                  shift and go to state 55
    separador                      shift and go to state 56
    concatenacion                  shift and go to state 57
    casteo_string                  shift and go to state 58

state 75

    (37) expresion -> expresion POTENCIA . expresion
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion POR expresion
    (36) expresion -> . expresion DIVIDIDO expresion
    (37) expresion -> . expresion POTENCIA expresion
    (38) expresion -> . expresion MODULO expresion
    (39) expresion -> . MENOS expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . expresion MAYOR expresion
    (42) expresion -> . expresion MENOR expresion
    (43) expresion -> . expresion MAYORIGUAL expresion
    (44) expresion -> . expresion MENORIGUAL expresion
    (45) expresion -> . expresion IGUALACION expresion
    (46) expresion -> . expresion DISTINTO expresion
    (47) expresion -> . expresion AND expresion
    (48) expresion -> . expresion OR expresion
    (49) expresion -> . NOT expresion
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . CADENA
    (53) expresion -> . ID
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . ID INCREMENTO
    (57) expresion -> . ID DECREMENTO
    (58) expresion -> . INCREMENTO ID
    (59) expresion -> . DECREMENTO ID
    (60) expresion -> . aproximacion
    (61) expresion -> . exponencial
    (62) expresion -> . to_minusculas
    (63) expresion -> . to_mayusculas
    (64) expresion -> . separador
    (65) expresion -> . concatenacion
    (66) expresion -> . casteo_string
    (69) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (67) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (74) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 42
    NOT             shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    ID              shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CAST_STRING     shift and go to state 59

    expresion                      shift and go to state 115
    aproximacion                   shift and go to state 52
    exponencial                    shift and go to state 53
    to_minusculas                  shift and go to state 54
    to_mayusculas                  shift and go to state 55
    separador                      shift and go to state 56
    concatenacion                  shift and go to state 57
    casteo_string                  shift and go to state 58

state 76

    (38) expresion -> expresion MODULO . expresion
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion POR expresion
    (36) expresion -> . expresion DIVIDIDO expresion
    (37) expresion -> . expresion POTENCIA expresion
    (38) expresion -> . expresion MODULO expresion
    (39) expresion -> . MENOS expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . expresion MAYOR expresion
    (42) expresion -> . expresion MENOR expresion
    (43) expresion -> . expresion MAYORIGUAL expresion
    (44) expresion -> . expresion MENORIGUAL expresion
    (45) expresion -> . expresion IGUALACION expresion
    (46) expresion -> . expresion DISTINTO expresion
    (47) expresion -> . expresion AND expresion
    (48) expresion -> . expresion OR expresion
    (49) expresion -> . NOT expresion
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . CADENA
    (53) expresion -> . ID
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . ID INCREMENTO
    (57) expresion -> . ID DECREMENTO
    (58) expresion -> . INCREMENTO ID
    (59) expresion -> . DECREMENTO ID
    (60) expresion -> . aproximacion
    (61) expresion -> . exponencial
    (62) expresion -> . to_minusculas
    (63) expresion -> . to_mayusculas
    (64) expresion -> . separador
    (65) expresion -> . concatenacion
    (66) expresion -> . casteo_string
    (69) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (67) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (74) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 42
    NOT             shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    ID              shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CAST_STRING     shift and go to state 59

    expresion                      shift and go to state 116
    aproximacion                   shift and go to state 52
    exponencial                    shift and go to state 53
    to_minusculas                  shift and go to state 54
    to_mayusculas                  shift and go to state 55
    separador                      shift and go to state 56
    concatenacion                  shift and go to state 57
    casteo_string                  shift and go to state 58

state 77

    (41) expresion -> expresion MAYOR . expresion
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion POR expresion
    (36) expresion -> . expresion DIVIDIDO expresion
    (37) expresion -> . expresion POTENCIA expresion
    (38) expresion -> . expresion MODULO expresion
    (39) expresion -> . MENOS expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . expresion MAYOR expresion
    (42) expresion -> . expresion MENOR expresion
    (43) expresion -> . expresion MAYORIGUAL expresion
    (44) expresion -> . expresion MENORIGUAL expresion
    (45) expresion -> . expresion IGUALACION expresion
    (46) expresion -> . expresion DISTINTO expresion
    (47) expresion -> . expresion AND expresion
    (48) expresion -> . expresion OR expresion
    (49) expresion -> . NOT expresion
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . CADENA
    (53) expresion -> . ID
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . ID INCREMENTO
    (57) expresion -> . ID DECREMENTO
    (58) expresion -> . INCREMENTO ID
    (59) expresion -> . DECREMENTO ID
    (60) expresion -> . aproximacion
    (61) expresion -> . exponencial
    (62) expresion -> . to_minusculas
    (63) expresion -> . to_mayusculas
    (64) expresion -> . separador
    (65) expresion -> . concatenacion
    (66) expresion -> . casteo_string
    (69) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (67) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (74) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 42
    NOT             shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    ID              shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CAST_STRING     shift and go to state 59

    expresion                      shift and go to state 117
    aproximacion                   shift and go to state 52
    exponencial                    shift and go to state 53
    to_minusculas                  shift and go to state 54
    to_mayusculas                  shift and go to state 55
    separador                      shift and go to state 56
    concatenacion                  shift and go to state 57
    casteo_string                  shift and go to state 58

state 78

    (42) expresion -> expresion MENOR . expresion
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion POR expresion
    (36) expresion -> . expresion DIVIDIDO expresion
    (37) expresion -> . expresion POTENCIA expresion
    (38) expresion -> . expresion MODULO expresion
    (39) expresion -> . MENOS expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . expresion MAYOR expresion
    (42) expresion -> . expresion MENOR expresion
    (43) expresion -> . expresion MAYORIGUAL expresion
    (44) expresion -> . expresion MENORIGUAL expresion
    (45) expresion -> . expresion IGUALACION expresion
    (46) expresion -> . expresion DISTINTO expresion
    (47) expresion -> . expresion AND expresion
    (48) expresion -> . expresion OR expresion
    (49) expresion -> . NOT expresion
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . CADENA
    (53) expresion -> . ID
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . ID INCREMENTO
    (57) expresion -> . ID DECREMENTO
    (58) expresion -> . INCREMENTO ID
    (59) expresion -> . DECREMENTO ID
    (60) expresion -> . aproximacion
    (61) expresion -> . exponencial
    (62) expresion -> . to_minusculas
    (63) expresion -> . to_mayusculas
    (64) expresion -> . separador
    (65) expresion -> . concatenacion
    (66) expresion -> . casteo_string
    (69) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (67) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (74) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 42
    NOT             shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    ID              shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CAST_STRING     shift and go to state 59

    expresion                      shift and go to state 118
    aproximacion                   shift and go to state 52
    exponencial                    shift and go to state 53
    to_minusculas                  shift and go to state 54
    to_mayusculas                  shift and go to state 55
    separador                      shift and go to state 56
    concatenacion                  shift and go to state 57
    casteo_string                  shift and go to state 58

state 79

    (43) expresion -> expresion MAYORIGUAL . expresion
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion POR expresion
    (36) expresion -> . expresion DIVIDIDO expresion
    (37) expresion -> . expresion POTENCIA expresion
    (38) expresion -> . expresion MODULO expresion
    (39) expresion -> . MENOS expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . expresion MAYOR expresion
    (42) expresion -> . expresion MENOR expresion
    (43) expresion -> . expresion MAYORIGUAL expresion
    (44) expresion -> . expresion MENORIGUAL expresion
    (45) expresion -> . expresion IGUALACION expresion
    (46) expresion -> . expresion DISTINTO expresion
    (47) expresion -> . expresion AND expresion
    (48) expresion -> . expresion OR expresion
    (49) expresion -> . NOT expresion
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . CADENA
    (53) expresion -> . ID
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . ID INCREMENTO
    (57) expresion -> . ID DECREMENTO
    (58) expresion -> . INCREMENTO ID
    (59) expresion -> . DECREMENTO ID
    (60) expresion -> . aproximacion
    (61) expresion -> . exponencial
    (62) expresion -> . to_minusculas
    (63) expresion -> . to_mayusculas
    (64) expresion -> . separador
    (65) expresion -> . concatenacion
    (66) expresion -> . casteo_string
    (69) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (67) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (74) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 42
    NOT             shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    ID              shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CAST_STRING     shift and go to state 59

    expresion                      shift and go to state 119
    aproximacion                   shift and go to state 52
    exponencial                    shift and go to state 53
    to_minusculas                  shift and go to state 54
    to_mayusculas                  shift and go to state 55
    separador                      shift and go to state 56
    concatenacion                  shift and go to state 57
    casteo_string                  shift and go to state 58

state 80

    (44) expresion -> expresion MENORIGUAL . expresion
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion POR expresion
    (36) expresion -> . expresion DIVIDIDO expresion
    (37) expresion -> . expresion POTENCIA expresion
    (38) expresion -> . expresion MODULO expresion
    (39) expresion -> . MENOS expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . expresion MAYOR expresion
    (42) expresion -> . expresion MENOR expresion
    (43) expresion -> . expresion MAYORIGUAL expresion
    (44) expresion -> . expresion MENORIGUAL expresion
    (45) expresion -> . expresion IGUALACION expresion
    (46) expresion -> . expresion DISTINTO expresion
    (47) expresion -> . expresion AND expresion
    (48) expresion -> . expresion OR expresion
    (49) expresion -> . NOT expresion
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . CADENA
    (53) expresion -> . ID
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . ID INCREMENTO
    (57) expresion -> . ID DECREMENTO
    (58) expresion -> . INCREMENTO ID
    (59) expresion -> . DECREMENTO ID
    (60) expresion -> . aproximacion
    (61) expresion -> . exponencial
    (62) expresion -> . to_minusculas
    (63) expresion -> . to_mayusculas
    (64) expresion -> . separador
    (65) expresion -> . concatenacion
    (66) expresion -> . casteo_string
    (69) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (67) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (74) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 42
    NOT             shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    ID              shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CAST_STRING     shift and go to state 59

    expresion                      shift and go to state 120
    aproximacion                   shift and go to state 52
    exponencial                    shift and go to state 53
    to_minusculas                  shift and go to state 54
    to_mayusculas                  shift and go to state 55
    separador                      shift and go to state 56
    concatenacion                  shift and go to state 57
    casteo_string                  shift and go to state 58

state 81

    (45) expresion -> expresion IGUALACION . expresion
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion POR expresion
    (36) expresion -> . expresion DIVIDIDO expresion
    (37) expresion -> . expresion POTENCIA expresion
    (38) expresion -> . expresion MODULO expresion
    (39) expresion -> . MENOS expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . expresion MAYOR expresion
    (42) expresion -> . expresion MENOR expresion
    (43) expresion -> . expresion MAYORIGUAL expresion
    (44) expresion -> . expresion MENORIGUAL expresion
    (45) expresion -> . expresion IGUALACION expresion
    (46) expresion -> . expresion DISTINTO expresion
    (47) expresion -> . expresion AND expresion
    (48) expresion -> . expresion OR expresion
    (49) expresion -> . NOT expresion
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . CADENA
    (53) expresion -> . ID
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . ID INCREMENTO
    (57) expresion -> . ID DECREMENTO
    (58) expresion -> . INCREMENTO ID
    (59) expresion -> . DECREMENTO ID
    (60) expresion -> . aproximacion
    (61) expresion -> . exponencial
    (62) expresion -> . to_minusculas
    (63) expresion -> . to_mayusculas
    (64) expresion -> . separador
    (65) expresion -> . concatenacion
    (66) expresion -> . casteo_string
    (69) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (67) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (74) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 42
    NOT             shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    ID              shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CAST_STRING     shift and go to state 59

    expresion                      shift and go to state 121
    aproximacion                   shift and go to state 52
    exponencial                    shift and go to state 53
    to_minusculas                  shift and go to state 54
    to_mayusculas                  shift and go to state 55
    separador                      shift and go to state 56
    concatenacion                  shift and go to state 57
    casteo_string                  shift and go to state 58

state 82

    (46) expresion -> expresion DISTINTO . expresion
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion POR expresion
    (36) expresion -> . expresion DIVIDIDO expresion
    (37) expresion -> . expresion POTENCIA expresion
    (38) expresion -> . expresion MODULO expresion
    (39) expresion -> . MENOS expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . expresion MAYOR expresion
    (42) expresion -> . expresion MENOR expresion
    (43) expresion -> . expresion MAYORIGUAL expresion
    (44) expresion -> . expresion MENORIGUAL expresion
    (45) expresion -> . expresion IGUALACION expresion
    (46) expresion -> . expresion DISTINTO expresion
    (47) expresion -> . expresion AND expresion
    (48) expresion -> . expresion OR expresion
    (49) expresion -> . NOT expresion
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . CADENA
    (53) expresion -> . ID
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . ID INCREMENTO
    (57) expresion -> . ID DECREMENTO
    (58) expresion -> . INCREMENTO ID
    (59) expresion -> . DECREMENTO ID
    (60) expresion -> . aproximacion
    (61) expresion -> . exponencial
    (62) expresion -> . to_minusculas
    (63) expresion -> . to_mayusculas
    (64) expresion -> . separador
    (65) expresion -> . concatenacion
    (66) expresion -> . casteo_string
    (69) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (67) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (74) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 42
    NOT             shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    ID              shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CAST_STRING     shift and go to state 59

    expresion                      shift and go to state 122
    aproximacion                   shift and go to state 52
    exponencial                    shift and go to state 53
    to_minusculas                  shift and go to state 54
    to_mayusculas                  shift and go to state 55
    separador                      shift and go to state 56
    concatenacion                  shift and go to state 57
    casteo_string                  shift and go to state 58

state 83

    (47) expresion -> expresion AND . expresion
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion POR expresion
    (36) expresion -> . expresion DIVIDIDO expresion
    (37) expresion -> . expresion POTENCIA expresion
    (38) expresion -> . expresion MODULO expresion
    (39) expresion -> . MENOS expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . expresion MAYOR expresion
    (42) expresion -> . expresion MENOR expresion
    (43) expresion -> . expresion MAYORIGUAL expresion
    (44) expresion -> . expresion MENORIGUAL expresion
    (45) expresion -> . expresion IGUALACION expresion
    (46) expresion -> . expresion DISTINTO expresion
    (47) expresion -> . expresion AND expresion
    (48) expresion -> . expresion OR expresion
    (49) expresion -> . NOT expresion
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . CADENA
    (53) expresion -> . ID
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . ID INCREMENTO
    (57) expresion -> . ID DECREMENTO
    (58) expresion -> . INCREMENTO ID
    (59) expresion -> . DECREMENTO ID
    (60) expresion -> . aproximacion
    (61) expresion -> . exponencial
    (62) expresion -> . to_minusculas
    (63) expresion -> . to_mayusculas
    (64) expresion -> . separador
    (65) expresion -> . concatenacion
    (66) expresion -> . casteo_string
    (69) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (67) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (74) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 42
    NOT             shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    ID              shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CAST_STRING     shift and go to state 59

    expresion                      shift and go to state 123
    aproximacion                   shift and go to state 52
    exponencial                    shift and go to state 53
    to_minusculas                  shift and go to state 54
    to_mayusculas                  shift and go to state 55
    separador                      shift and go to state 56
    concatenacion                  shift and go to state 57
    casteo_string                  shift and go to state 58

state 84

    (48) expresion -> expresion OR . expresion
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion POR expresion
    (36) expresion -> . expresion DIVIDIDO expresion
    (37) expresion -> . expresion POTENCIA expresion
    (38) expresion -> . expresion MODULO expresion
    (39) expresion -> . MENOS expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . expresion MAYOR expresion
    (42) expresion -> . expresion MENOR expresion
    (43) expresion -> . expresion MAYORIGUAL expresion
    (44) expresion -> . expresion MENORIGUAL expresion
    (45) expresion -> . expresion IGUALACION expresion
    (46) expresion -> . expresion DISTINTO expresion
    (47) expresion -> . expresion AND expresion
    (48) expresion -> . expresion OR expresion
    (49) expresion -> . NOT expresion
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . CADENA
    (53) expresion -> . ID
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . ID INCREMENTO
    (57) expresion -> . ID DECREMENTO
    (58) expresion -> . INCREMENTO ID
    (59) expresion -> . DECREMENTO ID
    (60) expresion -> . aproximacion
    (61) expresion -> . exponencial
    (62) expresion -> . to_minusculas
    (63) expresion -> . to_mayusculas
    (64) expresion -> . separador
    (65) expresion -> . concatenacion
    (66) expresion -> . casteo_string
    (69) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (67) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (74) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 42
    NOT             shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    ID              shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CAST_STRING     shift and go to state 59

    expresion                      shift and go to state 124
    aproximacion                   shift and go to state 52
    exponencial                    shift and go to state 53
    to_minusculas                  shift and go to state 54
    to_mayusculas                  shift and go to state 55
    separador                      shift and go to state 56
    concatenacion                  shift and go to state 57
    casteo_string                  shift and go to state 58

state 85

    (67) aproximacion -> expresion PUNTO . TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> expresion PUNTO . TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> expresion PUNTO . TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> expresion PUNTO . TOUPPERCASE PARIZQ PARDER
    (72) separador -> expresion PUNTO . SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> expresion PUNTO . CONCAT PARIZQ expresion PARDER

    TOFIXED         shift and go to state 125
    TOEXPONENTIAL   shift and go to state 126
    TOLOWERCASE     shift and go to state 127
    TOUPPERCASE     shift and go to state 128
    SPLIT           shift and go to state 129
    CONCAT          shift and go to state 130


state 86

    (39) expresion -> MENOS expresion .
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . POR expresion
    (36) expresion -> expresion . DIVIDIDO expresion
    (37) expresion -> expresion . POTENCIA expresion
    (38) expresion -> expresion . MODULO expresion
    (41) expresion -> expresion . MAYOR expresion
    (42) expresion -> expresion . MENOR expresion
    (43) expresion -> expresion . MAYORIGUAL expresion
    (44) expresion -> expresion . MENORIGUAL expresion
    (45) expresion -> expresion . IGUALACION expresion
    (46) expresion -> expresion . DISTINTO expresion
    (47) expresion -> expresion . AND expresion
    (48) expresion -> expresion . OR expresion
    (67) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAS             reduce using rule 39 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 39 (expresion -> MENOS expresion .)
    POR             reduce using rule 39 (expresion -> MENOS expresion .)
    DIVIDIDO        reduce using rule 39 (expresion -> MENOS expresion .)
    POTENCIA        reduce using rule 39 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 39 (expresion -> MENOS expresion .)
    MAYOR           reduce using rule 39 (expresion -> MENOS expresion .)
    MENOR           reduce using rule 39 (expresion -> MENOS expresion .)
    MAYORIGUAL      reduce using rule 39 (expresion -> MENOS expresion .)
    MENORIGUAL      reduce using rule 39 (expresion -> MENOS expresion .)
    IGUALACION      reduce using rule 39 (expresion -> MENOS expresion .)
    DISTINTO        reduce using rule 39 (expresion -> MENOS expresion .)
    AND             reduce using rule 39 (expresion -> MENOS expresion .)
    OR              reduce using rule 39 (expresion -> MENOS expresion .)
    PUNTO           reduce using rule 39 (expresion -> MENOS expresion .)
    PTOYCOMA        reduce using rule 39 (expresion -> MENOS expresion .)
    error           reduce using rule 39 (expresion -> MENOS expresion .)
    ID              reduce using rule 39 (expresion -> MENOS expresion .)
    INCREMENTO      reduce using rule 39 (expresion -> MENOS expresion .)
    DECREMENTO      reduce using rule 39 (expresion -> MENOS expresion .)
    LET             reduce using rule 39 (expresion -> MENOS expresion .)
    CONSOLE         reduce using rule 39 (expresion -> MENOS expresion .)
    RETURN          reduce using rule 39 (expresion -> MENOS expresion .)
    BREAK           reduce using rule 39 (expresion -> MENOS expresion .)
    CONTINUE        reduce using rule 39 (expresion -> MENOS expresion .)
    IF              reduce using rule 39 (expresion -> MENOS expresion .)
    WHILE           reduce using rule 39 (expresion -> MENOS expresion .)
    FOR             reduce using rule 39 (expresion -> MENOS expresion .)
    FUNCTION        reduce using rule 39 (expresion -> MENOS expresion .)
    $end            reduce using rule 39 (expresion -> MENOS expresion .)
    LLADER          reduce using rule 39 (expresion -> MENOS expresion .)
    PARDER          reduce using rule 39 (expresion -> MENOS expresion .)
    COMA            reduce using rule 39 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 71 ]
  ! MENOS           [ shift and go to state 72 ]
  ! POR             [ shift and go to state 73 ]
  ! DIVIDIDO        [ shift and go to state 74 ]
  ! POTENCIA        [ shift and go to state 75 ]
  ! MODULO          [ shift and go to state 76 ]
  ! MAYOR           [ shift and go to state 77 ]
  ! MENOR           [ shift and go to state 78 ]
  ! MAYORIGUAL      [ shift and go to state 79 ]
  ! MENORIGUAL      [ shift and go to state 80 ]
  ! IGUALACION      [ shift and go to state 81 ]
  ! DISTINTO        [ shift and go to state 82 ]
  ! AND             [ shift and go to state 83 ]
  ! OR              [ shift and go to state 84 ]
  ! PUNTO           [ shift and go to state 85 ]


state 87

    (40) expresion -> PARIZQ expresion . PARDER
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . POR expresion
    (36) expresion -> expresion . DIVIDIDO expresion
    (37) expresion -> expresion . POTENCIA expresion
    (38) expresion -> expresion . MODULO expresion
    (41) expresion -> expresion . MAYOR expresion
    (42) expresion -> expresion . MENOR expresion
    (43) expresion -> expresion . MAYORIGUAL expresion
    (44) expresion -> expresion . MENORIGUAL expresion
    (45) expresion -> expresion . IGUALACION expresion
    (46) expresion -> expresion . DISTINTO expresion
    (47) expresion -> expresion . AND expresion
    (48) expresion -> expresion . OR expresion
    (67) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 131
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    MAYOR           shift and go to state 77
    MENOR           shift and go to state 78
    MAYORIGUAL      shift and go to state 79
    MENORIGUAL      shift and go to state 80
    IGUALACION      shift and go to state 81
    DISTINTO        shift and go to state 82
    AND             shift and go to state 83
    OR              shift and go to state 84
    PUNTO           shift and go to state 85

    expresion                      shift and go to state 123
    dec                            shift and go to state 51
    inc                            shift and go to state 52
    funciones_nativas              shift and go to state 53
    casteo                         shift and go to state 54
    booleano                       shift and go to state 59
    aproximacion                   shift and go to state 61
    exponencial                    shift and go to state 62
    to_mayusculas                  shift and go to state 63
    to_minusculas                  shift and go to state 64
    separador                      shift and go to state 65
    concatenacion                  shift and go to state 66

state 88

    (49) expresion -> NOT expresion .
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . POR expresion
    (36) expresion -> expresion . DIVIDIDO expresion
    (37) expresion -> expresion . POTENCIA expresion
    (38) expresion -> expresion . MODULO expresion
    (41) expresion -> expresion . MAYOR expresion
    (42) expresion -> expresion . MENOR expresion
    (43) expresion -> expresion . MAYORIGUAL expresion
    (44) expresion -> expresion . MENORIGUAL expresion
    (45) expresion -> expresion . IGUALACION expresion
    (46) expresion -> expresion . DISTINTO expresion
    (47) expresion -> expresion . AND expresion
    (48) expresion -> expresion . OR expresion
    (67) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    AND             reduce using rule 49 (expresion -> NOT expresion .)
    OR              reduce using rule 49 (expresion -> NOT expresion .)
    PUNTO           reduce using rule 49 (expresion -> NOT expresion .)
    PTOYCOMA        reduce using rule 49 (expresion -> NOT expresion .)
    error           reduce using rule 49 (expresion -> NOT expresion .)
    ID              reduce using rule 49 (expresion -> NOT expresion .)
    INCREMENTO      reduce using rule 49 (expresion -> NOT expresion .)
    DECREMENTO      reduce using rule 49 (expresion -> NOT expresion .)
    LET             reduce using rule 49 (expresion -> NOT expresion .)
    CONSOLE         reduce using rule 49 (expresion -> NOT expresion .)
    RETURN          reduce using rule 49 (expresion -> NOT expresion .)
    BREAK           reduce using rule 49 (expresion -> NOT expresion .)
    CONTINUE        reduce using rule 49 (expresion -> NOT expresion .)
    IF              reduce using rule 49 (expresion -> NOT expresion .)
    WHILE           reduce using rule 49 (expresion -> NOT expresion .)
    FOR             reduce using rule 49 (expresion -> NOT expresion .)
    FUNCTION        reduce using rule 49 (expresion -> NOT expresion .)
    $end            reduce using rule 49 (expresion -> NOT expresion .)
    LLADER          reduce using rule 49 (expresion -> NOT expresion .)
    PARDER          reduce using rule 49 (expresion -> NOT expresion .)
    COMA            reduce using rule 49 (expresion -> NOT expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    MAYOR           shift and go to state 77
    MENOR           shift and go to state 78
    MAYORIGUAL      shift and go to state 79
    MENORIGUAL      shift and go to state 80
    IGUALACION      shift and go to state 81
    DISTINTO        shift and go to state 82

  ! MAS             [ reduce using rule 49 (expresion -> NOT expresion .) ]
  ! MENOS           [ reduce using rule 49 (expresion -> NOT expresion .) ]
  ! POR             [ reduce using rule 49 (expresion -> NOT expresion .) ]
  ! DIVIDIDO        [ reduce using rule 49 (expresion -> NOT expresion .) ]
  ! POTENCIA        [ reduce using rule 49 (expresion -> NOT expresion .) ]
  ! MODULO          [ reduce using rule 49 (expresion -> NOT expresion .) ]
  ! MAYOR           [ reduce using rule 49 (expresion -> NOT expresion .) ]
  ! MENOR           [ reduce using rule 49 (expresion -> NOT expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 49 (expresion -> NOT expresion .) ]
  ! MENORIGUAL      [ reduce using rule 49 (expresion -> NOT expresion .) ]
  ! IGUALACION      [ reduce using rule 49 (expresion -> NOT expresion .) ]
  ! DISTINTO        [ reduce using rule 49 (expresion -> NOT expresion .) ]
  ! AND             [ shift and go to state 83 ]
  ! OR              [ shift and go to state 84 ]
  ! PUNTO           [ shift and go to state 85 ]


state 89

    (56) expresion -> ID INCREMENTO .

    MAS             reduce using rule 56 (expresion -> ID INCREMENTO .)
    MENOS           reduce using rule 56 (expresion -> ID INCREMENTO .)
    POR             reduce using rule 56 (expresion -> ID INCREMENTO .)
    DIVIDIDO        reduce using rule 56 (expresion -> ID INCREMENTO .)
    POTENCIA        reduce using rule 56 (expresion -> ID INCREMENTO .)
    MODULO          reduce using rule 56 (expresion -> ID INCREMENTO .)
    MAYOR           reduce using rule 56 (expresion -> ID INCREMENTO .)
    MENOR           reduce using rule 56 (expresion -> ID INCREMENTO .)
    MAYORIGUAL      reduce using rule 56 (expresion -> ID INCREMENTO .)
    MENORIGUAL      reduce using rule 56 (expresion -> ID INCREMENTO .)
    IGUALACION      reduce using rule 56 (expresion -> ID INCREMENTO .)
    DISTINTO        reduce using rule 56 (expresion -> ID INCREMENTO .)
    AND             reduce using rule 56 (expresion -> ID INCREMENTO .)
    OR              reduce using rule 56 (expresion -> ID INCREMENTO .)
    PUNTO           reduce using rule 56 (expresion -> ID INCREMENTO .)
    PTOYCOMA        reduce using rule 56 (expresion -> ID INCREMENTO .)
    error           reduce using rule 56 (expresion -> ID INCREMENTO .)
    ID              reduce using rule 56 (expresion -> ID INCREMENTO .)
    INCREMENTO      reduce using rule 56 (expresion -> ID INCREMENTO .)
    DECREMENTO      reduce using rule 56 (expresion -> ID INCREMENTO .)
    LET             reduce using rule 56 (expresion -> ID INCREMENTO .)
    CONSOLE         reduce using rule 56 (expresion -> ID INCREMENTO .)
    RETURN          reduce using rule 56 (expresion -> ID INCREMENTO .)
    BREAK           reduce using rule 56 (expresion -> ID INCREMENTO .)
    CONTINUE        reduce using rule 56 (expresion -> ID INCREMENTO .)
    IF              reduce using rule 56 (expresion -> ID INCREMENTO .)
    WHILE           reduce using rule 56 (expresion -> ID INCREMENTO .)
    FOR             reduce using rule 56 (expresion -> ID INCREMENTO .)
    FUNCTION        reduce using rule 56 (expresion -> ID INCREMENTO .)
    $end            reduce using rule 56 (expresion -> ID INCREMENTO .)
    LLADER          reduce using rule 56 (expresion -> ID INCREMENTO .)
    PARDER          reduce using rule 56 (expresion -> ID INCREMENTO .)
    COMA            reduce using rule 56 (expresion -> ID INCREMENTO .)

    expresion                      shift and go to state 125
    dec                            shift and go to state 51
    inc                            shift and go to state 52
    funciones_nativas              shift and go to state 53
    casteo                         shift and go to state 54
    booleano                       shift and go to state 59
    aproximacion                   shift and go to state 61
    exponencial                    shift and go to state 62
    to_mayusculas                  shift and go to state 63
    to_minusculas                  shift and go to state 64
    separador                      shift and go to state 65
    concatenacion                  shift and go to state 66

state 90

    (57) expresion -> ID DECREMENTO .

    MAS             reduce using rule 57 (expresion -> ID DECREMENTO .)
    MENOS           reduce using rule 57 (expresion -> ID DECREMENTO .)
    POR             reduce using rule 57 (expresion -> ID DECREMENTO .)
    DIVIDIDO        reduce using rule 57 (expresion -> ID DECREMENTO .)
    POTENCIA        reduce using rule 57 (expresion -> ID DECREMENTO .)
    MODULO          reduce using rule 57 (expresion -> ID DECREMENTO .)
    MAYOR           reduce using rule 57 (expresion -> ID DECREMENTO .)
    MENOR           reduce using rule 57 (expresion -> ID DECREMENTO .)
    MAYORIGUAL      reduce using rule 57 (expresion -> ID DECREMENTO .)
    MENORIGUAL      reduce using rule 57 (expresion -> ID DECREMENTO .)
    IGUALACION      reduce using rule 57 (expresion -> ID DECREMENTO .)
    DISTINTO        reduce using rule 57 (expresion -> ID DECREMENTO .)
    AND             reduce using rule 57 (expresion -> ID DECREMENTO .)
    OR              reduce using rule 57 (expresion -> ID DECREMENTO .)
    PUNTO           reduce using rule 57 (expresion -> ID DECREMENTO .)
    PTOYCOMA        reduce using rule 57 (expresion -> ID DECREMENTO .)
    error           reduce using rule 57 (expresion -> ID DECREMENTO .)
    ID              reduce using rule 57 (expresion -> ID DECREMENTO .)
    INCREMENTO      reduce using rule 57 (expresion -> ID DECREMENTO .)
    DECREMENTO      reduce using rule 57 (expresion -> ID DECREMENTO .)
    LET             reduce using rule 57 (expresion -> ID DECREMENTO .)
    CONSOLE         reduce using rule 57 (expresion -> ID DECREMENTO .)
    RETURN          reduce using rule 57 (expresion -> ID DECREMENTO .)
    BREAK           reduce using rule 57 (expresion -> ID DECREMENTO .)
    CONTINUE        reduce using rule 57 (expresion -> ID DECREMENTO .)
    IF              reduce using rule 57 (expresion -> ID DECREMENTO .)
    WHILE           reduce using rule 57 (expresion -> ID DECREMENTO .)
    FOR             reduce using rule 57 (expresion -> ID DECREMENTO .)
    FUNCTION        reduce using rule 57 (expresion -> ID DECREMENTO .)
    $end            reduce using rule 57 (expresion -> ID DECREMENTO .)
    LLADER          reduce using rule 57 (expresion -> ID DECREMENTO .)
    PARDER          reduce using rule 57 (expresion -> ID DECREMENTO .)
    COMA            reduce using rule 57 (expresion -> ID DECREMENTO .)

    expresion                      shift and go to state 126
    dec                            shift and go to state 51
    inc                            shift and go to state 52
    funciones_nativas              shift and go to state 53
    casteo                         shift and go to state 54
    booleano                       shift and go to state 59
    aproximacion                   shift and go to state 61
    exponencial                    shift and go to state 62
    to_mayusculas                  shift and go to state 63
    to_minusculas                  shift and go to state 64
    separador                      shift and go to state 65
    concatenacion                  shift and go to state 66

state 91

    (69) expresion -> ID PUNTO . TOSTRING PARIZQ PARDER

    TOSTRING        shift and go to state 132

    expresion                      shift and go to state 127
    dec                            shift and go to state 51
    inc                            shift and go to state 52
    funciones_nativas              shift and go to state 53
    casteo                         shift and go to state 54
    booleano                       shift and go to state 59
    aproximacion                   shift and go to state 61
    exponencial                    shift and go to state 62
    to_mayusculas                  shift and go to state 63
    to_minusculas                  shift and go to state 64
    separador                      shift and go to state 65
    concatenacion                  shift and go to state 66

state 92

    (58) expresion -> INCREMENTO ID .

    MAS             reduce using rule 58 (expresion -> INCREMENTO ID .)
    MENOS           reduce using rule 58 (expresion -> INCREMENTO ID .)
    POR             reduce using rule 58 (expresion -> INCREMENTO ID .)
    DIVIDIDO        reduce using rule 58 (expresion -> INCREMENTO ID .)
    POTENCIA        reduce using rule 58 (expresion -> INCREMENTO ID .)
    MODULO          reduce using rule 58 (expresion -> INCREMENTO ID .)
    MAYOR           reduce using rule 58 (expresion -> INCREMENTO ID .)
    MENOR           reduce using rule 58 (expresion -> INCREMENTO ID .)
    MAYORIGUAL      reduce using rule 58 (expresion -> INCREMENTO ID .)
    MENORIGUAL      reduce using rule 58 (expresion -> INCREMENTO ID .)
    IGUALACION      reduce using rule 58 (expresion -> INCREMENTO ID .)
    DISTINTO        reduce using rule 58 (expresion -> INCREMENTO ID .)
    AND             reduce using rule 58 (expresion -> INCREMENTO ID .)
    OR              reduce using rule 58 (expresion -> INCREMENTO ID .)
    PUNTO           reduce using rule 58 (expresion -> INCREMENTO ID .)
    PTOYCOMA        reduce using rule 58 (expresion -> INCREMENTO ID .)
    error           reduce using rule 58 (expresion -> INCREMENTO ID .)
    ID              reduce using rule 58 (expresion -> INCREMENTO ID .)
    INCREMENTO      reduce using rule 58 (expresion -> INCREMENTO ID .)
    DECREMENTO      reduce using rule 58 (expresion -> INCREMENTO ID .)
    LET             reduce using rule 58 (expresion -> INCREMENTO ID .)
    CONSOLE         reduce using rule 58 (expresion -> INCREMENTO ID .)
    RETURN          reduce using rule 58 (expresion -> INCREMENTO ID .)
    BREAK           reduce using rule 58 (expresion -> INCREMENTO ID .)
    CONTINUE        reduce using rule 58 (expresion -> INCREMENTO ID .)
    IF              reduce using rule 58 (expresion -> INCREMENTO ID .)
    WHILE           reduce using rule 58 (expresion -> INCREMENTO ID .)
    FOR             reduce using rule 58 (expresion -> INCREMENTO ID .)
    FUNCTION        reduce using rule 58 (expresion -> INCREMENTO ID .)
    $end            reduce using rule 58 (expresion -> INCREMENTO ID .)
    LLADER          reduce using rule 58 (expresion -> INCREMENTO ID .)
    PARDER          reduce using rule 58 (expresion -> INCREMENTO ID .)
    COMA            reduce using rule 58 (expresion -> INCREMENTO ID .)

    expresion                      shift and go to state 128
    dec                            shift and go to state 51
    inc                            shift and go to state 52
    funciones_nativas              shift and go to state 53
    casteo                         shift and go to state 54
    booleano                       shift and go to state 59
    aproximacion                   shift and go to state 61
    exponencial                    shift and go to state 62
    to_mayusculas                  shift and go to state 63
    to_minusculas                  shift and go to state 64
    separador                      shift and go to state 65
    concatenacion                  shift and go to state 66

state 93

    (59) expresion -> DECREMENTO ID .

    MAS             reduce using rule 59 (expresion -> DECREMENTO ID .)
    MENOS           reduce using rule 59 (expresion -> DECREMENTO ID .)
    POR             reduce using rule 59 (expresion -> DECREMENTO ID .)
    DIVIDIDO        reduce using rule 59 (expresion -> DECREMENTO ID .)
    POTENCIA        reduce using rule 59 (expresion -> DECREMENTO ID .)
    MODULO          reduce using rule 59 (expresion -> DECREMENTO ID .)
    MAYOR           reduce using rule 59 (expresion -> DECREMENTO ID .)
    MENOR           reduce using rule 59 (expresion -> DECREMENTO ID .)
    MAYORIGUAL      reduce using rule 59 (expresion -> DECREMENTO ID .)
    MENORIGUAL      reduce using rule 59 (expresion -> DECREMENTO ID .)
    IGUALACION      reduce using rule 59 (expresion -> DECREMENTO ID .)
    DISTINTO        reduce using rule 59 (expresion -> DECREMENTO ID .)
    AND             reduce using rule 59 (expresion -> DECREMENTO ID .)
    OR              reduce using rule 59 (expresion -> DECREMENTO ID .)
    PUNTO           reduce using rule 59 (expresion -> DECREMENTO ID .)
    PTOYCOMA        reduce using rule 59 (expresion -> DECREMENTO ID .)
    error           reduce using rule 59 (expresion -> DECREMENTO ID .)
    ID              reduce using rule 59 (expresion -> DECREMENTO ID .)
    INCREMENTO      reduce using rule 59 (expresion -> DECREMENTO ID .)
    DECREMENTO      reduce using rule 59 (expresion -> DECREMENTO ID .)
    LET             reduce using rule 59 (expresion -> DECREMENTO ID .)
    CONSOLE         reduce using rule 59 (expresion -> DECREMENTO ID .)
    RETURN          reduce using rule 59 (expresion -> DECREMENTO ID .)
    BREAK           reduce using rule 59 (expresion -> DECREMENTO ID .)
    CONTINUE        reduce using rule 59 (expresion -> DECREMENTO ID .)
    IF              reduce using rule 59 (expresion -> DECREMENTO ID .)
    WHILE           reduce using rule 59 (expresion -> DECREMENTO ID .)
    FOR             reduce using rule 59 (expresion -> DECREMENTO ID .)
    FUNCTION        reduce using rule 59 (expresion -> DECREMENTO ID .)
    $end            reduce using rule 59 (expresion -> DECREMENTO ID .)
    LLADER          reduce using rule 59 (expresion -> DECREMENTO ID .)
    PARDER          reduce using rule 59 (expresion -> DECREMENTO ID .)
    COMA            reduce using rule 59 (expresion -> DECREMENTO ID .)

    expresion                      shift and go to state 129
    dec                            shift and go to state 51
    inc                            shift and go to state 52
    funciones_nativas              shift and go to state 53
    casteo                         shift and go to state 54
    booleano                       shift and go to state 59
    aproximacion                   shift and go to state 61
    exponencial                    shift and go to state 62
    to_mayusculas                  shift and go to state 63
    to_minusculas                  shift and go to state 64
    separador                      shift and go to state 65
    concatenacion                  shift and go to state 66

state 94

    (74) casteo_string -> CAST_STRING PARIZQ . expresion PARDER
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion POR expresion
    (36) expresion -> . expresion DIVIDIDO expresion
    (37) expresion -> . expresion POTENCIA expresion
    (38) expresion -> . expresion MODULO expresion
    (39) expresion -> . MENOS expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . expresion MAYOR expresion
    (42) expresion -> . expresion MENOR expresion
    (43) expresion -> . expresion MAYORIGUAL expresion
    (44) expresion -> . expresion MENORIGUAL expresion
    (45) expresion -> . expresion IGUALACION expresion
    (46) expresion -> . expresion DISTINTO expresion
    (47) expresion -> . expresion AND expresion
    (48) expresion -> . expresion OR expresion
    (49) expresion -> . NOT expresion
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . CADENA
    (53) expresion -> . ID
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . ID INCREMENTO
    (57) expresion -> . ID DECREMENTO
    (58) expresion -> . INCREMENTO ID
    (59) expresion -> . DECREMENTO ID
    (60) expresion -> . aproximacion
    (61) expresion -> . exponencial
    (62) expresion -> . to_minusculas
    (63) expresion -> . to_mayusculas
    (64) expresion -> . separador
    (65) expresion -> . concatenacion
    (66) expresion -> . casteo_string
    (69) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (67) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (74) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 42
    NOT             shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    ID              shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CAST_STRING     shift and go to state 59

    expresion                      shift and go to state 133
    aproximacion                   shift and go to state 52
    exponencial                    shift and go to state 53
    to_minusculas                  shift and go to state 54
    to_mayusculas                  shift and go to state 55
    separador                      shift and go to state 56
    concatenacion                  shift and go to state 57
    casteo_string                  shift and go to state 58

state 95

    (83) condicional_if -> IF PARIZQ expresion . PARDER bloque
    (84) condicional_if -> IF PARIZQ expresion . PARDER bloque ELSE bloque
    (85) condicional_if -> IF PARIZQ expresion . PARDER bloque lista_elif
    (86) condicional_if -> IF PARIZQ expresion . PARDER bloque lista_elif ELSE bloque
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . POR expresion
    (36) expresion -> expresion . DIVIDIDO expresion
    (37) expresion -> expresion . POTENCIA expresion
    (38) expresion -> expresion . MODULO expresion
    (41) expresion -> expresion . MAYOR expresion
    (42) expresion -> expresion . MENOR expresion
    (43) expresion -> expresion . MAYORIGUAL expresion
    (44) expresion -> expresion . MENORIGUAL expresion
    (45) expresion -> expresion . IGUALACION expresion
    (46) expresion -> expresion . DISTINTO expresion
    (47) expresion -> expresion . AND expresion
    (48) expresion -> expresion . OR expresion
    (67) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 134
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    MAYOR           shift and go to state 77
    MENOR           shift and go to state 78
    MAYORIGUAL      shift and go to state 79
    MENORIGUAL      shift and go to state 80
    IGUALACION      shift and go to state 81
    DISTINTO        shift and go to state 82
    AND             shift and go to state 83
    OR              shift and go to state 84
    PUNTO           shift and go to state 85

    expresion                      shift and go to state 131
    dec                            shift and go to state 51
    inc                            shift and go to state 52
    funciones_nativas              shift and go to state 53
    casteo                         shift and go to state 54
    booleano                       shift and go to state 59
    aproximacion                   shift and go to state 61
    exponencial                    shift and go to state 62
    to_mayusculas                  shift and go to state 63
    to_minusculas                  shift and go to state 64
    separador                      shift and go to state 65
    concatenacion                  shift and go to state 66

state 96

    (90) ciclo_while -> WHILE PARIZQ expresion . PARDER bloque
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . POR expresion
    (36) expresion -> expresion . DIVIDIDO expresion
    (37) expresion -> expresion . POTENCIA expresion
    (38) expresion -> expresion . MODULO expresion
    (41) expresion -> expresion . MAYOR expresion
    (42) expresion -> expresion . MENOR expresion
    (43) expresion -> expresion . MAYORIGUAL expresion
    (44) expresion -> expresion . MENORIGUAL expresion
    (45) expresion -> expresion . IGUALACION expresion
    (46) expresion -> expresion . DISTINTO expresion
    (47) expresion -> expresion . AND expresion
    (48) expresion -> expresion . OR expresion
    (67) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 135
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    MAYOR           shift and go to state 77
    MENOR           shift and go to state 78
    MAYORIGUAL      shift and go to state 79
    MENORIGUAL      shift and go to state 80
    IGUALACION      shift and go to state 81
    DISTINTO        shift and go to state 82
    AND             shift and go to state 83
    OR              shift and go to state 84
    PUNTO           shift and go to state 85

    expresion                      shift and go to state 132
    dec                            shift and go to state 51
    inc                            shift and go to state 52
    funciones_nativas              shift and go to state 53
    casteo                         shift and go to state 54
    booleano                       shift and go to state 59
    aproximacion                   shift and go to state 61
    exponencial                    shift and go to state 62
    to_mayusculas                  shift and go to state 63
    to_minusculas                  shift and go to state 64
    separador                      shift and go to state 65
    concatenacion                  shift and go to state 66

state 97

    (91) ciclo_for -> FOR PARIZQ declaracion . PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (93) ciclo_for -> FOR PARIZQ declaracion . PTOYCOMA expresion PTOYCOMA expresion PARDER bloque

    PTOYCOMA        shift and go to state 136

    expresion                      shift and go to state 133
    dec                            shift and go to state 51
    inc                            shift and go to state 52
    funciones_nativas              shift and go to state 53
    casteo                         shift and go to state 54
    booleano                       shift and go to state 59
    aproximacion                   shift and go to state 61
    exponencial                    shift and go to state 62
    to_mayusculas                  shift and go to state 63
    to_minusculas                  shift and go to state 64
    separador                      shift and go to state 65
    concatenacion                  shift and go to state 66

state 98

    (92) ciclo_for -> FOR PARIZQ asignacion . PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (94) ciclo_for -> FOR PARIZQ asignacion . PTOYCOMA expresion PTOYCOMA expresion PARDER bloque

    PTOYCOMA        shift and go to state 137

    expresion                      shift and go to state 134
    dec                            shift and go to state 51
    inc                            shift and go to state 52
    funciones_nativas              shift and go to state 53
    casteo                         shift and go to state 54
    booleano                       shift and go to state 59
    aproximacion                   shift and go to state 61
    exponencial                    shift and go to state 62
    to_mayusculas                  shift and go to state 63
    to_minusculas                  shift and go to state 64
    separador                      shift and go to state 65
    concatenacion                  shift and go to state 66

state 99

    (95) ciclo_for_of -> FOR PARIZQ LET . ID OF expresion PARDER bloque
    (23) declaracion -> LET . ID DOSPUNTOS tipo IGUAL expresion
    (24) declaracion -> LET . ID IGUAL expresion
    (25) declaracion -> LET . ID DOSPUNTOS tipo
    (26) declaracion -> LET . ID

    ID              shift and go to state 138


state 100

    (27) asignacion -> ID . IGUAL expresion

    IGUAL           shift and go to state 34


state 101

    (96) funcion -> FUNCTION ID PARIZQ . lista_parametros PARDER bloque
    (97) funcion -> FUNCTION ID PARIZQ . PARDER bloque
    (98) lista_parametros -> . lista_parametros COMA parametro
    (99) lista_parametros -> . parametro
    (100) parametro -> . ID DOSPUNTOS tipo

    PARDER          shift and go to state 141
    ID              shift and go to state 139

    lista_parametros               shift and go to state 140
    parametro                      shift and go to state 142

state 102

    (101) llamada_funcion -> ID PARIZQ lista_argumentos PARDER .

    PTOYCOMA        reduce using rule 101 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    error           reduce using rule 101 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    ID              reduce using rule 101 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    INCREMENTO      reduce using rule 101 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    DECREMENTO      reduce using rule 101 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    LET             reduce using rule 101 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    CONSOLE         reduce using rule 101 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    RETURN          reduce using rule 101 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    BREAK           reduce using rule 101 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    CONTINUE        reduce using rule 101 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    IF              reduce using rule 101 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    WHILE           reduce using rule 101 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    FOR             reduce using rule 101 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    FUNCTION        reduce using rule 101 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    $end            reduce using rule 101 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    LLADER          reduce using rule 101 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)


state 103

    (103) lista_argumentos -> lista_argumentos COMA . expresion
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion POR expresion
    (36) expresion -> . expresion DIVIDIDO expresion
    (37) expresion -> . expresion POTENCIA expresion
    (38) expresion -> . expresion MODULO expresion
    (39) expresion -> . MENOS expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . expresion MAYOR expresion
    (42) expresion -> . expresion MENOR expresion
    (43) expresion -> . expresion MAYORIGUAL expresion
    (44) expresion -> . expresion MENORIGUAL expresion
    (45) expresion -> . expresion IGUALACION expresion
    (46) expresion -> . expresion DISTINTO expresion
    (47) expresion -> . expresion AND expresion
    (48) expresion -> . expresion OR expresion
    (49) expresion -> . NOT expresion
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . CADENA
    (53) expresion -> . ID
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . ID INCREMENTO
    (57) expresion -> . ID DECREMENTO
    (58) expresion -> . INCREMENTO ID
    (59) expresion -> . DECREMENTO ID
    (60) expresion -> . aproximacion
    (61) expresion -> . exponencial
    (62) expresion -> . to_minusculas
    (63) expresion -> . to_mayusculas
    (64) expresion -> . separador
    (65) expresion -> . concatenacion
    (66) expresion -> . casteo_string
    (69) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (67) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (74) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 42
    NOT             shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    ID              shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CAST_STRING     shift and go to state 59

    expresion                      shift and go to state 143
    aproximacion                   shift and go to state 52
    exponencial                    shift and go to state 53
    to_minusculas                  shift and go to state 54
    to_mayusculas                  shift and go to state 55
    separador                      shift and go to state 56
    concatenacion                  shift and go to state 57
    casteo_string                  shift and go to state 58

state 104

    (23) declaracion -> LET ID DOSPUNTOS tipo . IGUAL expresion
    (25) declaracion -> LET ID DOSPUNTOS tipo .

    IGUAL           shift and go to state 144
    PTOYCOMA        reduce using rule 25 (declaracion -> LET ID DOSPUNTOS tipo .)
    error           reduce using rule 25 (declaracion -> LET ID DOSPUNTOS tipo .)
    ID              reduce using rule 25 (declaracion -> LET ID DOSPUNTOS tipo .)
    INCREMENTO      reduce using rule 25 (declaracion -> LET ID DOSPUNTOS tipo .)
    DECREMENTO      reduce using rule 25 (declaracion -> LET ID DOSPUNTOS tipo .)
    LET             reduce using rule 25 (declaracion -> LET ID DOSPUNTOS tipo .)
    CONSOLE         reduce using rule 25 (declaracion -> LET ID DOSPUNTOS tipo .)
    RETURN          reduce using rule 25 (declaracion -> LET ID DOSPUNTOS tipo .)
    BREAK           reduce using rule 25 (declaracion -> LET ID DOSPUNTOS tipo .)
    CONTINUE        reduce using rule 25 (declaracion -> LET ID DOSPUNTOS tipo .)
    IF              reduce using rule 25 (declaracion -> LET ID DOSPUNTOS tipo .)
    WHILE           reduce using rule 25 (declaracion -> LET ID DOSPUNTOS tipo .)
    FOR             reduce using rule 25 (declaracion -> LET ID DOSPUNTOS tipo .)
    FUNCTION        reduce using rule 25 (declaracion -> LET ID DOSPUNTOS tipo .)
    $end            reduce using rule 25 (declaracion -> LET ID DOSPUNTOS tipo .)
    LLADER          reduce using rule 25 (declaracion -> LET ID DOSPUNTOS tipo .)


state 105

    (75) tipo -> NUMBER .

    IGUAL           reduce using rule 75 (tipo -> NUMBER .)
    PTOYCOMA        reduce using rule 75 (tipo -> NUMBER .)
    error           reduce using rule 75 (tipo -> NUMBER .)
    ID              reduce using rule 75 (tipo -> NUMBER .)
    INCREMENTO      reduce using rule 75 (tipo -> NUMBER .)
    DECREMENTO      reduce using rule 75 (tipo -> NUMBER .)
    LET             reduce using rule 75 (tipo -> NUMBER .)
    CONSOLE         reduce using rule 75 (tipo -> NUMBER .)
    RETURN          reduce using rule 75 (tipo -> NUMBER .)
    BREAK           reduce using rule 75 (tipo -> NUMBER .)
    CONTINUE        reduce using rule 75 (tipo -> NUMBER .)
    IF              reduce using rule 75 (tipo -> NUMBER .)
    WHILE           reduce using rule 75 (tipo -> NUMBER .)
    FOR             reduce using rule 75 (tipo -> NUMBER .)
    FUNCTION        reduce using rule 75 (tipo -> NUMBER .)
    $end            reduce using rule 75 (tipo -> NUMBER .)
    LLADER          reduce using rule 75 (tipo -> NUMBER .)
    PARDER          reduce using rule 75 (tipo -> NUMBER .)
    COMA            reduce using rule 75 (tipo -> NUMBER .)


state 106

    (76) tipo -> STRING .

    IGUAL           reduce using rule 76 (tipo -> STRING .)
    PTOYCOMA        reduce using rule 76 (tipo -> STRING .)
    error           reduce using rule 76 (tipo -> STRING .)
    ID              reduce using rule 76 (tipo -> STRING .)
    INCREMENTO      reduce using rule 76 (tipo -> STRING .)
    DECREMENTO      reduce using rule 76 (tipo -> STRING .)
    LET             reduce using rule 76 (tipo -> STRING .)
    CONSOLE         reduce using rule 76 (tipo -> STRING .)
    RETURN          reduce using rule 76 (tipo -> STRING .)
    BREAK           reduce using rule 76 (tipo -> STRING .)
    CONTINUE        reduce using rule 76 (tipo -> STRING .)
    IF              reduce using rule 76 (tipo -> STRING .)
    WHILE           reduce using rule 76 (tipo -> STRING .)
    FOR             reduce using rule 76 (tipo -> STRING .)
    FUNCTION        reduce using rule 76 (tipo -> STRING .)
    $end            reduce using rule 76 (tipo -> STRING .)
    LLADER          reduce using rule 76 (tipo -> STRING .)
    PARDER          reduce using rule 76 (tipo -> STRING .)
    COMA            reduce using rule 76 (tipo -> STRING .)


state 107

    (77) tipo -> BOOLEAN .

    IGUAL           reduce using rule 77 (tipo -> BOOLEAN .)
    PTOYCOMA        reduce using rule 77 (tipo -> BOOLEAN .)
    error           reduce using rule 77 (tipo -> BOOLEAN .)
    ID              reduce using rule 77 (tipo -> BOOLEAN .)
    INCREMENTO      reduce using rule 77 (tipo -> BOOLEAN .)
    DECREMENTO      reduce using rule 77 (tipo -> BOOLEAN .)
    LET             reduce using rule 77 (tipo -> BOOLEAN .)
    CONSOLE         reduce using rule 77 (tipo -> BOOLEAN .)
    RETURN          reduce using rule 77 (tipo -> BOOLEAN .)
    BREAK           reduce using rule 77 (tipo -> BOOLEAN .)
    CONTINUE        reduce using rule 77 (tipo -> BOOLEAN .)
    IF              reduce using rule 77 (tipo -> BOOLEAN .)
    WHILE           reduce using rule 77 (tipo -> BOOLEAN .)
    FOR             reduce using rule 77 (tipo -> BOOLEAN .)
    FUNCTION        reduce using rule 77 (tipo -> BOOLEAN .)
    $end            reduce using rule 77 (tipo -> BOOLEAN .)
    LLADER          reduce using rule 77 (tipo -> BOOLEAN .)
    PARDER          reduce using rule 77 (tipo -> BOOLEAN .)
    COMA            reduce using rule 77 (tipo -> BOOLEAN .)


state 108

    (78) tipo -> ANY .

    IGUAL           reduce using rule 78 (tipo -> ANY .)
    PTOYCOMA        reduce using rule 78 (tipo -> ANY .)
    error           reduce using rule 78 (tipo -> ANY .)
    ID              reduce using rule 78 (tipo -> ANY .)
    INCREMENTO      reduce using rule 78 (tipo -> ANY .)
    DECREMENTO      reduce using rule 78 (tipo -> ANY .)
    LET             reduce using rule 78 (tipo -> ANY .)
    CONSOLE         reduce using rule 78 (tipo -> ANY .)
    RETURN          reduce using rule 78 (tipo -> ANY .)
    BREAK           reduce using rule 78 (tipo -> ANY .)
    CONTINUE        reduce using rule 78 (tipo -> ANY .)
    IF              reduce using rule 78 (tipo -> ANY .)
    WHILE           reduce using rule 78 (tipo -> ANY .)
    FOR             reduce using rule 78 (tipo -> ANY .)
    FUNCTION        reduce using rule 78 (tipo -> ANY .)
    $end            reduce using rule 78 (tipo -> ANY .)
    LLADER          reduce using rule 78 (tipo -> ANY .)
    PARDER          reduce using rule 78 (tipo -> ANY .)
    COMA            reduce using rule 78 (tipo -> ANY .)


state 109

    (24) declaracion -> LET ID IGUAL expresion .
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . POR expresion
    (36) expresion -> expresion . DIVIDIDO expresion
    (37) expresion -> expresion . POTENCIA expresion
    (38) expresion -> expresion . MODULO expresion
    (41) expresion -> expresion . MAYOR expresion
    (42) expresion -> expresion . MENOR expresion
    (43) expresion -> expresion . MAYORIGUAL expresion
    (44) expresion -> expresion . MENORIGUAL expresion
    (45) expresion -> expresion . IGUALACION expresion
    (46) expresion -> expresion . DISTINTO expresion
    (47) expresion -> expresion . AND expresion
    (48) expresion -> expresion . OR expresion
    (67) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PTOYCOMA        reduce using rule 24 (declaracion -> LET ID IGUAL expresion .)
    error           reduce using rule 24 (declaracion -> LET ID IGUAL expresion .)
    ID              reduce using rule 24 (declaracion -> LET ID IGUAL expresion .)
    INCREMENTO      reduce using rule 24 (declaracion -> LET ID IGUAL expresion .)
    DECREMENTO      reduce using rule 24 (declaracion -> LET ID IGUAL expresion .)
    LET             reduce using rule 24 (declaracion -> LET ID IGUAL expresion .)
    CONSOLE         reduce using rule 24 (declaracion -> LET ID IGUAL expresion .)
    RETURN          reduce using rule 24 (declaracion -> LET ID IGUAL expresion .)
    BREAK           reduce using rule 24 (declaracion -> LET ID IGUAL expresion .)
    CONTINUE        reduce using rule 24 (declaracion -> LET ID IGUAL expresion .)
    IF              reduce using rule 24 (declaracion -> LET ID IGUAL expresion .)
    WHILE           reduce using rule 24 (declaracion -> LET ID IGUAL expresion .)
    FOR             reduce using rule 24 (declaracion -> LET ID IGUAL expresion .)
    FUNCTION        reduce using rule 24 (declaracion -> LET ID IGUAL expresion .)
    $end            reduce using rule 24 (declaracion -> LET ID IGUAL expresion .)
    LLADER          reduce using rule 24 (declaracion -> LET ID IGUAL expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    MAYOR           shift and go to state 77
    MENOR           shift and go to state 78
    MAYORIGUAL      shift and go to state 79
    MENORIGUAL      shift and go to state 80
    IGUALACION      shift and go to state 81
    DISTINTO        shift and go to state 82
    AND             shift and go to state 83
    OR              shift and go to state 84
    PUNTO           shift and go to state 85


state 110

    (32) impresion -> CONSOLE PUNTO LOG PARIZQ . expresion PARDER
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion POR expresion
    (36) expresion -> . expresion DIVIDIDO expresion
    (37) expresion -> . expresion POTENCIA expresion
    (38) expresion -> . expresion MODULO expresion
    (39) expresion -> . MENOS expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . expresion MAYOR expresion
    (42) expresion -> . expresion MENOR expresion
    (43) expresion -> . expresion MAYORIGUAL expresion
    (44) expresion -> . expresion MENORIGUAL expresion
    (45) expresion -> . expresion IGUALACION expresion
    (46) expresion -> . expresion DISTINTO expresion
    (47) expresion -> . expresion AND expresion
    (48) expresion -> . expresion OR expresion
    (49) expresion -> . NOT expresion
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . CADENA
    (53) expresion -> . ID
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . ID INCREMENTO
    (57) expresion -> . ID DECREMENTO
    (58) expresion -> . INCREMENTO ID
    (59) expresion -> . DECREMENTO ID
    (60) expresion -> . aproximacion
    (61) expresion -> . exponencial
    (62) expresion -> . to_minusculas
    (63) expresion -> . to_mayusculas
    (64) expresion -> . separador
    (65) expresion -> . concatenacion
    (66) expresion -> . casteo_string
    (69) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (67) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (74) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 42
    NOT             shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    ID              shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CAST_STRING     shift and go to state 59

    expresion                      shift and go to state 145
    aproximacion                   shift and go to state 52
    exponencial                    shift and go to state 53
    to_minusculas                  shift and go to state 54
    to_mayusculas                  shift and go to state 55
    separador                      shift and go to state 56
    concatenacion                  shift and go to state 57
    casteo_string                  shift and go to state 58

state 111

    (33) expresion -> expresion MAS expresion .
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . POR expresion
    (36) expresion -> expresion . DIVIDIDO expresion
    (37) expresion -> expresion . POTENCIA expresion
    (38) expresion -> expresion . MODULO expresion
    (41) expresion -> expresion . MAYOR expresion
    (42) expresion -> expresion . MENOR expresion
    (43) expresion -> expresion . MAYORIGUAL expresion
    (44) expresion -> expresion . MENORIGUAL expresion
    (45) expresion -> expresion . IGUALACION expresion
    (46) expresion -> expresion . DISTINTO expresion
    (47) expresion -> expresion . AND expresion
    (48) expresion -> expresion . OR expresion
    (67) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAS             reduce using rule 33 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 33 (expresion -> expresion MAS expresion .)
    MAYOR           reduce using rule 33 (expresion -> expresion MAS expresion .)
    MENOR           reduce using rule 33 (expresion -> expresion MAS expresion .)
    MAYORIGUAL      reduce using rule 33 (expresion -> expresion MAS expresion .)
    MENORIGUAL      reduce using rule 33 (expresion -> expresion MAS expresion .)
    IGUALACION      reduce using rule 33 (expresion -> expresion MAS expresion .)
    DISTINTO        reduce using rule 33 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 33 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 33 (expresion -> expresion MAS expresion .)
    PUNTO           reduce using rule 33 (expresion -> expresion MAS expresion .)
    PTOYCOMA        reduce using rule 33 (expresion -> expresion MAS expresion .)
    error           reduce using rule 33 (expresion -> expresion MAS expresion .)
    ID              reduce using rule 33 (expresion -> expresion MAS expresion .)
    INCREMENTO      reduce using rule 33 (expresion -> expresion MAS expresion .)
    DECREMENTO      reduce using rule 33 (expresion -> expresion MAS expresion .)
    LET             reduce using rule 33 (expresion -> expresion MAS expresion .)
    CONSOLE         reduce using rule 33 (expresion -> expresion MAS expresion .)
    RETURN          reduce using rule 33 (expresion -> expresion MAS expresion .)
    BREAK           reduce using rule 33 (expresion -> expresion MAS expresion .)
    CONTINUE        reduce using rule 33 (expresion -> expresion MAS expresion .)
    IF              reduce using rule 33 (expresion -> expresion MAS expresion .)
    WHILE           reduce using rule 33 (expresion -> expresion MAS expresion .)
    FOR             reduce using rule 33 (expresion -> expresion MAS expresion .)
    FUNCTION        reduce using rule 33 (expresion -> expresion MAS expresion .)
    $end            reduce using rule 33 (expresion -> expresion MAS expresion .)
    LLADER          reduce using rule 33 (expresion -> expresion MAS expresion .)
    PARDER          reduce using rule 33 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 33 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76

  ! POR             [ reduce using rule 33 (expresion -> expresion MAS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 33 (expresion -> expresion MAS expresion .) ]
  ! POTENCIA        [ reduce using rule 33 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 33 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 71 ]
  ! MENOS           [ shift and go to state 72 ]
  ! MAYOR           [ shift and go to state 77 ]
  ! MENOR           [ shift and go to state 78 ]
  ! MAYORIGUAL      [ shift and go to state 79 ]
  ! MENORIGUAL      [ shift and go to state 80 ]
  ! IGUALACION      [ shift and go to state 81 ]
  ! DISTINTO        [ shift and go to state 82 ]
  ! AND             [ shift and go to state 83 ]
  ! OR              [ shift and go to state 84 ]
  ! PUNTO           [ shift and go to state 85 ]

state 112

    (34) expresion -> expresion MENOS expresion .
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . POR expresion
    (36) expresion -> expresion . DIVIDIDO expresion
    (37) expresion -> expresion . POTENCIA expresion
    (38) expresion -> expresion . MODULO expresion
    (41) expresion -> expresion . MAYOR expresion
    (42) expresion -> expresion . MENOR expresion
    (43) expresion -> expresion . MAYORIGUAL expresion
    (44) expresion -> expresion . MENORIGUAL expresion
    (45) expresion -> expresion . IGUALACION expresion
    (46) expresion -> expresion . DISTINTO expresion
    (47) expresion -> expresion . AND expresion
    (48) expresion -> expresion . OR expresion
    (67) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAS             reduce using rule 34 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 34 (expresion -> expresion MENOS expresion .)
    MAYOR           reduce using rule 34 (expresion -> expresion MENOS expresion .)
    MENOR           reduce using rule 34 (expresion -> expresion MENOS expresion .)
    MAYORIGUAL      reduce using rule 34 (expresion -> expresion MENOS expresion .)
    MENORIGUAL      reduce using rule 34 (expresion -> expresion MENOS expresion .)
    IGUALACION      reduce using rule 34 (expresion -> expresion MENOS expresion .)
    DISTINTO        reduce using rule 34 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 34 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 34 (expresion -> expresion MENOS expresion .)
    PUNTO           reduce using rule 34 (expresion -> expresion MENOS expresion .)
    PTOYCOMA        reduce using rule 34 (expresion -> expresion MENOS expresion .)
    error           reduce using rule 34 (expresion -> expresion MENOS expresion .)
    ID              reduce using rule 34 (expresion -> expresion MENOS expresion .)
    INCREMENTO      reduce using rule 34 (expresion -> expresion MENOS expresion .)
    DECREMENTO      reduce using rule 34 (expresion -> expresion MENOS expresion .)
    LET             reduce using rule 34 (expresion -> expresion MENOS expresion .)
    CONSOLE         reduce using rule 34 (expresion -> expresion MENOS expresion .)
    RETURN          reduce using rule 34 (expresion -> expresion MENOS expresion .)
    BREAK           reduce using rule 34 (expresion -> expresion MENOS expresion .)
    CONTINUE        reduce using rule 34 (expresion -> expresion MENOS expresion .)
    IF              reduce using rule 34 (expresion -> expresion MENOS expresion .)
    WHILE           reduce using rule 34 (expresion -> expresion MENOS expresion .)
    FOR             reduce using rule 34 (expresion -> expresion MENOS expresion .)
    FUNCTION        reduce using rule 34 (expresion -> expresion MENOS expresion .)
    $end            reduce using rule 34 (expresion -> expresion MENOS expresion .)
    LLADER          reduce using rule 34 (expresion -> expresion MENOS expresion .)
    PARDER          reduce using rule 34 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 34 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76

  ! POR             [ reduce using rule 34 (expresion -> expresion MENOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 34 (expresion -> expresion MENOS expresion .) ]
  ! POTENCIA        [ reduce using rule 34 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 34 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 71 ]
  ! MENOS           [ shift and go to state 72 ]
  ! MAYOR           [ shift and go to state 77 ]
  ! MENOR           [ shift and go to state 78 ]
  ! MAYORIGUAL      [ shift and go to state 79 ]
  ! MENORIGUAL      [ shift and go to state 80 ]
  ! IGUALACION      [ shift and go to state 81 ]
  ! DISTINTO        [ shift and go to state 82 ]
  ! AND             [ shift and go to state 83 ]
  ! OR              [ shift and go to state 84 ]
  ! PUNTO           [ shift and go to state 85 ]

state 113

    (35) expresion -> expresion POR expresion .
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . POR expresion
    (36) expresion -> expresion . DIVIDIDO expresion
    (37) expresion -> expresion . POTENCIA expresion
    (38) expresion -> expresion . MODULO expresion
    (41) expresion -> expresion . MAYOR expresion
    (42) expresion -> expresion . MENOR expresion
    (43) expresion -> expresion . MAYORIGUAL expresion
    (44) expresion -> expresion . MENORIGUAL expresion
    (45) expresion -> expresion . IGUALACION expresion
    (46) expresion -> expresion . DISTINTO expresion
    (47) expresion -> expresion . AND expresion
    (48) expresion -> expresion . OR expresion
    (67) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAS             reduce using rule 35 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 35 (expresion -> expresion POR expresion .)
    POR             reduce using rule 35 (expresion -> expresion POR expresion .)
    DIVIDIDO        reduce using rule 35 (expresion -> expresion POR expresion .)
    MODULO          reduce using rule 35 (expresion -> expresion POR expresion .)
    MAYOR           reduce using rule 35 (expresion -> expresion POR expresion .)
    MENOR           reduce using rule 35 (expresion -> expresion POR expresion .)
    MAYORIGUAL      reduce using rule 35 (expresion -> expresion POR expresion .)
    MENORIGUAL      reduce using rule 35 (expresion -> expresion POR expresion .)
    IGUALACION      reduce using rule 35 (expresion -> expresion POR expresion .)
    DISTINTO        reduce using rule 35 (expresion -> expresion POR expresion .)
    AND             reduce using rule 35 (expresion -> expresion POR expresion .)
    OR              reduce using rule 35 (expresion -> expresion POR expresion .)
    PUNTO           reduce using rule 35 (expresion -> expresion POR expresion .)
    PTOYCOMA        reduce using rule 35 (expresion -> expresion POR expresion .)
    error           reduce using rule 35 (expresion -> expresion POR expresion .)
    ID              reduce using rule 35 (expresion -> expresion POR expresion .)
    INCREMENTO      reduce using rule 35 (expresion -> expresion POR expresion .)
    DECREMENTO      reduce using rule 35 (expresion -> expresion POR expresion .)
    LET             reduce using rule 35 (expresion -> expresion POR expresion .)
    CONSOLE         reduce using rule 35 (expresion -> expresion POR expresion .)
    RETURN          reduce using rule 35 (expresion -> expresion POR expresion .)
    BREAK           reduce using rule 35 (expresion -> expresion POR expresion .)
    CONTINUE        reduce using rule 35 (expresion -> expresion POR expresion .)
    IF              reduce using rule 35 (expresion -> expresion POR expresion .)
    WHILE           reduce using rule 35 (expresion -> expresion POR expresion .)
    FOR             reduce using rule 35 (expresion -> expresion POR expresion .)
    FUNCTION        reduce using rule 35 (expresion -> expresion POR expresion .)
    $end            reduce using rule 35 (expresion -> expresion POR expresion .)
    LLADER          reduce using rule 35 (expresion -> expresion POR expresion .)
    PARDER          reduce using rule 35 (expresion -> expresion POR expresion .)
    COMA            reduce using rule 35 (expresion -> expresion POR expresion .)
    POTENCIA        shift and go to state 75

  ! POTENCIA        [ reduce using rule 35 (expresion -> expresion POR expresion .) ]
  ! MAS             [ shift and go to state 71 ]
  ! MENOS           [ shift and go to state 72 ]
  ! POR             [ shift and go to state 73 ]
  ! DIVIDIDO        [ shift and go to state 74 ]
  ! MODULO          [ shift and go to state 76 ]
  ! MAYOR           [ shift and go to state 77 ]
  ! MENOR           [ shift and go to state 78 ]
  ! MAYORIGUAL      [ shift and go to state 79 ]
  ! MENORIGUAL      [ shift and go to state 80 ]
  ! IGUALACION      [ shift and go to state 81 ]
  ! DISTINTO        [ shift and go to state 82 ]
  ! AND             [ shift and go to state 83 ]
  ! OR              [ shift and go to state 84 ]
  ! PUNTO           [ shift and go to state 85 ]

state 114

    (36) expresion -> expresion DIVIDIDO expresion .
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . POR expresion
    (36) expresion -> expresion . DIVIDIDO expresion
    (37) expresion -> expresion . POTENCIA expresion
    (38) expresion -> expresion . MODULO expresion
    (41) expresion -> expresion . MAYOR expresion
    (42) expresion -> expresion . MENOR expresion
    (43) expresion -> expresion . MAYORIGUAL expresion
    (44) expresion -> expresion . MENORIGUAL expresion
    (45) expresion -> expresion . IGUALACION expresion
    (46) expresion -> expresion . DISTINTO expresion
    (47) expresion -> expresion . AND expresion
    (48) expresion -> expresion . OR expresion
    (67) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAS             reduce using rule 36 (expresion -> expresion DIVIDIDO expresion .)
    MENOS           reduce using rule 36 (expresion -> expresion DIVIDIDO expresion .)
    POR             reduce using rule 36 (expresion -> expresion DIVIDIDO expresion .)
    DIVIDIDO        reduce using rule 36 (expresion -> expresion DIVIDIDO expresion .)
    MODULO          reduce using rule 36 (expresion -> expresion DIVIDIDO expresion .)
    MAYOR           reduce using rule 36 (expresion -> expresion DIVIDIDO expresion .)
    MENOR           reduce using rule 36 (expresion -> expresion DIVIDIDO expresion .)
    MAYORIGUAL      reduce using rule 36 (expresion -> expresion DIVIDIDO expresion .)
    MENORIGUAL      reduce using rule 36 (expresion -> expresion DIVIDIDO expresion .)
    IGUALACION      reduce using rule 36 (expresion -> expresion DIVIDIDO expresion .)
    DISTINTO        reduce using rule 36 (expresion -> expresion DIVIDIDO expresion .)
    AND             reduce using rule 36 (expresion -> expresion DIVIDIDO expresion .)
    OR              reduce using rule 36 (expresion -> expresion DIVIDIDO expresion .)
    PUNTO           reduce using rule 36 (expresion -> expresion DIVIDIDO expresion .)
    PTOYCOMA        reduce using rule 36 (expresion -> expresion DIVIDIDO expresion .)
    error           reduce using rule 36 (expresion -> expresion DIVIDIDO expresion .)
    ID              reduce using rule 36 (expresion -> expresion DIVIDIDO expresion .)
    INCREMENTO      reduce using rule 36 (expresion -> expresion DIVIDIDO expresion .)
    DECREMENTO      reduce using rule 36 (expresion -> expresion DIVIDIDO expresion .)
    LET             reduce using rule 36 (expresion -> expresion DIVIDIDO expresion .)
    CONSOLE         reduce using rule 36 (expresion -> expresion DIVIDIDO expresion .)
    RETURN          reduce using rule 36 (expresion -> expresion DIVIDIDO expresion .)
    BREAK           reduce using rule 36 (expresion -> expresion DIVIDIDO expresion .)
    CONTINUE        reduce using rule 36 (expresion -> expresion DIVIDIDO expresion .)
    IF              reduce using rule 36 (expresion -> expresion DIVIDIDO expresion .)
    WHILE           reduce using rule 36 (expresion -> expresion DIVIDIDO expresion .)
    FOR             reduce using rule 36 (expresion -> expresion DIVIDIDO expresion .)
    FUNCTION        reduce using rule 36 (expresion -> expresion DIVIDIDO expresion .)
    $end            reduce using rule 36 (expresion -> expresion DIVIDIDO expresion .)
    LLADER          reduce using rule 36 (expresion -> expresion DIVIDIDO expresion .)
    PARDER          reduce using rule 36 (expresion -> expresion DIVIDIDO expresion .)
    COMA            reduce using rule 36 (expresion -> expresion DIVIDIDO expresion .)
    POTENCIA        shift and go to state 75

  ! POTENCIA        [ reduce using rule 36 (expresion -> expresion DIVIDIDO expresion .) ]
  ! MAS             [ shift and go to state 71 ]
  ! MENOS           [ shift and go to state 72 ]
  ! POR             [ shift and go to state 73 ]
  ! DIVIDIDO        [ shift and go to state 74 ]
  ! MODULO          [ shift and go to state 76 ]
  ! MAYOR           [ shift and go to state 77 ]
  ! MENOR           [ shift and go to state 78 ]
  ! MAYORIGUAL      [ shift and go to state 79 ]
  ! MENORIGUAL      [ shift and go to state 80 ]
  ! IGUALACION      [ shift and go to state 81 ]
  ! DISTINTO        [ shift and go to state 82 ]
  ! AND             [ shift and go to state 83 ]
  ! OR              [ shift and go to state 84 ]
  ! PUNTO           [ shift and go to state 85 ]


state 115

    (37) expresion -> expresion POTENCIA expresion .
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . POR expresion
    (36) expresion -> expresion . DIVIDIDO expresion
    (37) expresion -> expresion . POTENCIA expresion
    (38) expresion -> expresion . MODULO expresion
    (41) expresion -> expresion . MAYOR expresion
    (42) expresion -> expresion . MENOR expresion
    (43) expresion -> expresion . MAYORIGUAL expresion
    (44) expresion -> expresion . MENORIGUAL expresion
    (45) expresion -> expresion . IGUALACION expresion
    (46) expresion -> expresion . DISTINTO expresion
    (47) expresion -> expresion . AND expresion
    (48) expresion -> expresion . OR expresion
    (67) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAS             reduce using rule 37 (expresion -> expresion POTENCIA expresion .)
    MENOS           reduce using rule 37 (expresion -> expresion POTENCIA expresion .)
    POR             reduce using rule 37 (expresion -> expresion POTENCIA expresion .)
    DIVIDIDO        reduce using rule 37 (expresion -> expresion POTENCIA expresion .)
    POTENCIA        reduce using rule 37 (expresion -> expresion POTENCIA expresion .)
    MODULO          reduce using rule 37 (expresion -> expresion POTENCIA expresion .)
    MAYOR           reduce using rule 37 (expresion -> expresion POTENCIA expresion .)
    MENOR           reduce using rule 37 (expresion -> expresion POTENCIA expresion .)
    MAYORIGUAL      reduce using rule 37 (expresion -> expresion POTENCIA expresion .)
    MENORIGUAL      reduce using rule 37 (expresion -> expresion POTENCIA expresion .)
    IGUALACION      reduce using rule 37 (expresion -> expresion POTENCIA expresion .)
    DISTINTO        reduce using rule 37 (expresion -> expresion POTENCIA expresion .)
    AND             reduce using rule 37 (expresion -> expresion POTENCIA expresion .)
    OR              reduce using rule 37 (expresion -> expresion POTENCIA expresion .)
    PUNTO           reduce using rule 37 (expresion -> expresion POTENCIA expresion .)
    PTOYCOMA        reduce using rule 37 (expresion -> expresion POTENCIA expresion .)
    error           reduce using rule 37 (expresion -> expresion POTENCIA expresion .)
    ID              reduce using rule 37 (expresion -> expresion POTENCIA expresion .)
    INCREMENTO      reduce using rule 37 (expresion -> expresion POTENCIA expresion .)
    DECREMENTO      reduce using rule 37 (expresion -> expresion POTENCIA expresion .)
    LET             reduce using rule 37 (expresion -> expresion POTENCIA expresion .)
    CONSOLE         reduce using rule 37 (expresion -> expresion POTENCIA expresion .)
    RETURN          reduce using rule 37 (expresion -> expresion POTENCIA expresion .)
    BREAK           reduce using rule 37 (expresion -> expresion POTENCIA expresion .)
    CONTINUE        reduce using rule 37 (expresion -> expresion POTENCIA expresion .)
    IF              reduce using rule 37 (expresion -> expresion POTENCIA expresion .)
    WHILE           reduce using rule 37 (expresion -> expresion POTENCIA expresion .)
    FOR             reduce using rule 37 (expresion -> expresion POTENCIA expresion .)
    FUNCTION        reduce using rule 37 (expresion -> expresion POTENCIA expresion .)
    $end            reduce using rule 37 (expresion -> expresion POTENCIA expresion .)
    LLADER          reduce using rule 37 (expresion -> expresion POTENCIA expresion .)
    PARDER          reduce using rule 37 (expresion -> expresion POTENCIA expresion .)
    COMA            reduce using rule 37 (expresion -> expresion POTENCIA expresion .)

  ! MAS             [ shift and go to state 71 ]
  ! MENOS           [ shift and go to state 72 ]
  ! POR             [ shift and go to state 73 ]
  ! DIVIDIDO        [ shift and go to state 74 ]
  ! POTENCIA        [ shift and go to state 75 ]
  ! MODULO          [ shift and go to state 76 ]
  ! MAYOR           [ shift and go to state 77 ]
  ! MENOR           [ shift and go to state 78 ]
  ! MAYORIGUAL      [ shift and go to state 79 ]
  ! MENORIGUAL      [ shift and go to state 80 ]
  ! IGUALACION      [ shift and go to state 81 ]
  ! DISTINTO        [ shift and go to state 82 ]
  ! AND             [ shift and go to state 83 ]
  ! OR              [ shift and go to state 84 ]
  ! PUNTO           [ shift and go to state 85 ]


state 116

    (38) expresion -> expresion MODULO expresion .
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . POR expresion
    (36) expresion -> expresion . DIVIDIDO expresion
    (37) expresion -> expresion . POTENCIA expresion
    (38) expresion -> expresion . MODULO expresion
    (41) expresion -> expresion . MAYOR expresion
    (42) expresion -> expresion . MENOR expresion
    (43) expresion -> expresion . MAYORIGUAL expresion
    (44) expresion -> expresion . MENORIGUAL expresion
    (45) expresion -> expresion . IGUALACION expresion
    (46) expresion -> expresion . DISTINTO expresion
    (47) expresion -> expresion . AND expresion
    (48) expresion -> expresion . OR expresion
    (67) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAS             reduce using rule 38 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 38 (expresion -> expresion MODULO expresion .)
    POR             reduce using rule 38 (expresion -> expresion MODULO expresion .)
    DIVIDIDO        reduce using rule 38 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 38 (expresion -> expresion MODULO expresion .)
    MAYOR           reduce using rule 38 (expresion -> expresion MODULO expresion .)
    MENOR           reduce using rule 38 (expresion -> expresion MODULO expresion .)
    MAYORIGUAL      reduce using rule 38 (expresion -> expresion MODULO expresion .)
    MENORIGUAL      reduce using rule 38 (expresion -> expresion MODULO expresion .)
    IGUALACION      reduce using rule 38 (expresion -> expresion MODULO expresion .)
    DISTINTO        reduce using rule 38 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 38 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 38 (expresion -> expresion MODULO expresion .)
    PUNTO           reduce using rule 38 (expresion -> expresion MODULO expresion .)
    PTOYCOMA        reduce using rule 38 (expresion -> expresion MODULO expresion .)
    error           reduce using rule 38 (expresion -> expresion MODULO expresion .)
    ID              reduce using rule 38 (expresion -> expresion MODULO expresion .)
    INCREMENTO      reduce using rule 38 (expresion -> expresion MODULO expresion .)
    DECREMENTO      reduce using rule 38 (expresion -> expresion MODULO expresion .)
    LET             reduce using rule 38 (expresion -> expresion MODULO expresion .)
    CONSOLE         reduce using rule 38 (expresion -> expresion MODULO expresion .)
    RETURN          reduce using rule 38 (expresion -> expresion MODULO expresion .)
    BREAK           reduce using rule 38 (expresion -> expresion MODULO expresion .)
    CONTINUE        reduce using rule 38 (expresion -> expresion MODULO expresion .)
    IF              reduce using rule 38 (expresion -> expresion MODULO expresion .)
    WHILE           reduce using rule 38 (expresion -> expresion MODULO expresion .)
    FOR             reduce using rule 38 (expresion -> expresion MODULO expresion .)
    FUNCTION        reduce using rule 38 (expresion -> expresion MODULO expresion .)
    $end            reduce using rule 38 (expresion -> expresion MODULO expresion .)
    LLADER          reduce using rule 38 (expresion -> expresion MODULO expresion .)
    PARDER          reduce using rule 38 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 38 (expresion -> expresion MODULO expresion .)
    POTENCIA        shift and go to state 75

  ! POTENCIA        [ reduce using rule 38 (expresion -> expresion MODULO expresion .) ]
  ! MAS             [ shift and go to state 71 ]
  ! MENOS           [ shift and go to state 72 ]
  ! POR             [ shift and go to state 73 ]
  ! DIVIDIDO        [ shift and go to state 74 ]
  ! MODULO          [ shift and go to state 76 ]
  ! MAYOR           [ shift and go to state 77 ]
  ! MENOR           [ shift and go to state 78 ]
  ! MAYORIGUAL      [ shift and go to state 79 ]
  ! MENORIGUAL      [ shift and go to state 80 ]
  ! IGUALACION      [ shift and go to state 81 ]
  ! DISTINTO        [ shift and go to state 82 ]
  ! AND             [ shift and go to state 83 ]
  ! OR              [ shift and go to state 84 ]
  ! PUNTO           [ shift and go to state 85 ]


state 117

    (41) expresion -> expresion MAYOR expresion .
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . POR expresion
    (36) expresion -> expresion . DIVIDIDO expresion
    (37) expresion -> expresion . POTENCIA expresion
    (38) expresion -> expresion . MODULO expresion
    (41) expresion -> expresion . MAYOR expresion
    (42) expresion -> expresion . MENOR expresion
    (43) expresion -> expresion . MAYORIGUAL expresion
    (44) expresion -> expresion . MENORIGUAL expresion
    (45) expresion -> expresion . IGUALACION expresion
    (46) expresion -> expresion . DISTINTO expresion
    (47) expresion -> expresion . AND expresion
    (48) expresion -> expresion . OR expresion
    (67) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAYOR           reduce using rule 41 (expresion -> expresion MAYOR expresion .)
    MENOR           reduce using rule 41 (expresion -> expresion MAYOR expresion .)
    MAYORIGUAL      reduce using rule 41 (expresion -> expresion MAYOR expresion .)
    MENORIGUAL      reduce using rule 41 (expresion -> expresion MAYOR expresion .)
    IGUALACION      reduce using rule 41 (expresion -> expresion MAYOR expresion .)
    DISTINTO        reduce using rule 41 (expresion -> expresion MAYOR expresion .)
    AND             reduce using rule 41 (expresion -> expresion MAYOR expresion .)
    OR              reduce using rule 41 (expresion -> expresion MAYOR expresion .)
    PUNTO           reduce using rule 41 (expresion -> expresion MAYOR expresion .)
    PTOYCOMA        reduce using rule 41 (expresion -> expresion MAYOR expresion .)
    error           reduce using rule 41 (expresion -> expresion MAYOR expresion .)
    ID              reduce using rule 41 (expresion -> expresion MAYOR expresion .)
    INCREMENTO      reduce using rule 41 (expresion -> expresion MAYOR expresion .)
    DECREMENTO      reduce using rule 41 (expresion -> expresion MAYOR expresion .)
    LET             reduce using rule 41 (expresion -> expresion MAYOR expresion .)
    CONSOLE         reduce using rule 41 (expresion -> expresion MAYOR expresion .)
    RETURN          reduce using rule 41 (expresion -> expresion MAYOR expresion .)
    BREAK           reduce using rule 41 (expresion -> expresion MAYOR expresion .)
    CONTINUE        reduce using rule 41 (expresion -> expresion MAYOR expresion .)
    IF              reduce using rule 41 (expresion -> expresion MAYOR expresion .)
    WHILE           reduce using rule 41 (expresion -> expresion MAYOR expresion .)
    FOR             reduce using rule 41 (expresion -> expresion MAYOR expresion .)
    FUNCTION        reduce using rule 41 (expresion -> expresion MAYOR expresion .)
    $end            reduce using rule 41 (expresion -> expresion MAYOR expresion .)
    LLADER          reduce using rule 41 (expresion -> expresion MAYOR expresion .)
    PARDER          reduce using rule 41 (expresion -> expresion MAYOR expresion .)
    COMA            reduce using rule 41 (expresion -> expresion MAYOR expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76

  ! MAS             [ reduce using rule 41 (expresion -> expresion MAYOR expresion .) ]
  ! MENOS           [ reduce using rule 41 (expresion -> expresion MAYOR expresion .) ]
  ! POR             [ reduce using rule 41 (expresion -> expresion MAYOR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 41 (expresion -> expresion MAYOR expresion .) ]
  ! POTENCIA        [ reduce using rule 41 (expresion -> expresion MAYOR expresion .) ]
  ! MODULO          [ reduce using rule 41 (expresion -> expresion MAYOR expresion .) ]
  ! MAYOR           [ shift and go to state 77 ]
  ! MENOR           [ shift and go to state 78 ]
  ! MAYORIGUAL      [ shift and go to state 79 ]
  ! MENORIGUAL      [ shift and go to state 80 ]
  ! IGUALACION      [ shift and go to state 81 ]
  ! DISTINTO        [ shift and go to state 82 ]
  ! AND             [ shift and go to state 83 ]
  ! OR              [ shift and go to state 84 ]
  ! PUNTO           [ shift and go to state 85 ]


state 118

    (42) expresion -> expresion MENOR expresion .
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . POR expresion
    (36) expresion -> expresion . DIVIDIDO expresion
    (37) expresion -> expresion . POTENCIA expresion
    (38) expresion -> expresion . MODULO expresion
    (41) expresion -> expresion . MAYOR expresion
    (42) expresion -> expresion . MENOR expresion
    (43) expresion -> expresion . MAYORIGUAL expresion
    (44) expresion -> expresion . MENORIGUAL expresion
    (45) expresion -> expresion . IGUALACION expresion
    (46) expresion -> expresion . DISTINTO expresion
    (47) expresion -> expresion . AND expresion
    (48) expresion -> expresion . OR expresion
    (67) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAYOR           reduce using rule 42 (expresion -> expresion MENOR expresion .)
    MENOR           reduce using rule 42 (expresion -> expresion MENOR expresion .)
    MAYORIGUAL      reduce using rule 42 (expresion -> expresion MENOR expresion .)
    MENORIGUAL      reduce using rule 42 (expresion -> expresion MENOR expresion .)
    IGUALACION      reduce using rule 42 (expresion -> expresion MENOR expresion .)
    DISTINTO        reduce using rule 42 (expresion -> expresion MENOR expresion .)
    AND             reduce using rule 42 (expresion -> expresion MENOR expresion .)
    OR              reduce using rule 42 (expresion -> expresion MENOR expresion .)
    PUNTO           reduce using rule 42 (expresion -> expresion MENOR expresion .)
    PTOYCOMA        reduce using rule 42 (expresion -> expresion MENOR expresion .)
    error           reduce using rule 42 (expresion -> expresion MENOR expresion .)
    ID              reduce using rule 42 (expresion -> expresion MENOR expresion .)
    INCREMENTO      reduce using rule 42 (expresion -> expresion MENOR expresion .)
    DECREMENTO      reduce using rule 42 (expresion -> expresion MENOR expresion .)
    LET             reduce using rule 42 (expresion -> expresion MENOR expresion .)
    CONSOLE         reduce using rule 42 (expresion -> expresion MENOR expresion .)
    RETURN          reduce using rule 42 (expresion -> expresion MENOR expresion .)
    BREAK           reduce using rule 42 (expresion -> expresion MENOR expresion .)
    CONTINUE        reduce using rule 42 (expresion -> expresion MENOR expresion .)
    IF              reduce using rule 42 (expresion -> expresion MENOR expresion .)
    WHILE           reduce using rule 42 (expresion -> expresion MENOR expresion .)
    FOR             reduce using rule 42 (expresion -> expresion MENOR expresion .)
    FUNCTION        reduce using rule 42 (expresion -> expresion MENOR expresion .)
    $end            reduce using rule 42 (expresion -> expresion MENOR expresion .)
    LLADER          reduce using rule 42 (expresion -> expresion MENOR expresion .)
    PARDER          reduce using rule 42 (expresion -> expresion MENOR expresion .)
    COMA            reduce using rule 42 (expresion -> expresion MENOR expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76

  ! MAS             [ reduce using rule 42 (expresion -> expresion MENOR expresion .) ]
  ! MENOS           [ reduce using rule 42 (expresion -> expresion MENOR expresion .) ]
  ! POR             [ reduce using rule 42 (expresion -> expresion MENOR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 42 (expresion -> expresion MENOR expresion .) ]
  ! POTENCIA        [ reduce using rule 42 (expresion -> expresion MENOR expresion .) ]
  ! MODULO          [ reduce using rule 42 (expresion -> expresion MENOR expresion .) ]
  ! MAYOR           [ shift and go to state 77 ]
  ! MENOR           [ shift and go to state 78 ]
  ! MAYORIGUAL      [ shift and go to state 79 ]
  ! MENORIGUAL      [ shift and go to state 80 ]
  ! IGUALACION      [ shift and go to state 81 ]
  ! DISTINTO        [ shift and go to state 82 ]
  ! AND             [ shift and go to state 83 ]
  ! OR              [ shift and go to state 84 ]
  ! PUNTO           [ shift and go to state 85 ]


state 119

    (43) expresion -> expresion MAYORIGUAL expresion .
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . POR expresion
    (36) expresion -> expresion . DIVIDIDO expresion
    (37) expresion -> expresion . POTENCIA expresion
    (38) expresion -> expresion . MODULO expresion
    (41) expresion -> expresion . MAYOR expresion
    (42) expresion -> expresion . MENOR expresion
    (43) expresion -> expresion . MAYORIGUAL expresion
    (44) expresion -> expresion . MENORIGUAL expresion
    (45) expresion -> expresion . IGUALACION expresion
    (46) expresion -> expresion . DISTINTO expresion
    (47) expresion -> expresion . AND expresion
    (48) expresion -> expresion . OR expresion
    (67) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAYOR           reduce using rule 43 (expresion -> expresion MAYORIGUAL expresion .)
    MENOR           reduce using rule 43 (expresion -> expresion MAYORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 43 (expresion -> expresion MAYORIGUAL expresion .)
    MENORIGUAL      reduce using rule 43 (expresion -> expresion MAYORIGUAL expresion .)
    IGUALACION      reduce using rule 43 (expresion -> expresion MAYORIGUAL expresion .)
    DISTINTO        reduce using rule 43 (expresion -> expresion MAYORIGUAL expresion .)
    AND             reduce using rule 43 (expresion -> expresion MAYORIGUAL expresion .)
    OR              reduce using rule 43 (expresion -> expresion MAYORIGUAL expresion .)
    PUNTO           reduce using rule 43 (expresion -> expresion MAYORIGUAL expresion .)
    PTOYCOMA        reduce using rule 43 (expresion -> expresion MAYORIGUAL expresion .)
    error           reduce using rule 43 (expresion -> expresion MAYORIGUAL expresion .)
    ID              reduce using rule 43 (expresion -> expresion MAYORIGUAL expresion .)
    INCREMENTO      reduce using rule 43 (expresion -> expresion MAYORIGUAL expresion .)
    DECREMENTO      reduce using rule 43 (expresion -> expresion MAYORIGUAL expresion .)
    LET             reduce using rule 43 (expresion -> expresion MAYORIGUAL expresion .)
    CONSOLE         reduce using rule 43 (expresion -> expresion MAYORIGUAL expresion .)
    RETURN          reduce using rule 43 (expresion -> expresion MAYORIGUAL expresion .)
    BREAK           reduce using rule 43 (expresion -> expresion MAYORIGUAL expresion .)
    CONTINUE        reduce using rule 43 (expresion -> expresion MAYORIGUAL expresion .)
    IF              reduce using rule 43 (expresion -> expresion MAYORIGUAL expresion .)
    WHILE           reduce using rule 43 (expresion -> expresion MAYORIGUAL expresion .)
    FOR             reduce using rule 43 (expresion -> expresion MAYORIGUAL expresion .)
    FUNCTION        reduce using rule 43 (expresion -> expresion MAYORIGUAL expresion .)
    $end            reduce using rule 43 (expresion -> expresion MAYORIGUAL expresion .)
    LLADER          reduce using rule 43 (expresion -> expresion MAYORIGUAL expresion .)
    PARDER          reduce using rule 43 (expresion -> expresion MAYORIGUAL expresion .)
    COMA            reduce using rule 43 (expresion -> expresion MAYORIGUAL expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76

  ! MAS             [ reduce using rule 43 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 43 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! POR             [ reduce using rule 43 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! DIVIDIDO        [ reduce using rule 43 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! POTENCIA        [ reduce using rule 43 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 43 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MAYOR           [ shift and go to state 77 ]
  ! MENOR           [ shift and go to state 78 ]
  ! MAYORIGUAL      [ shift and go to state 79 ]
  ! MENORIGUAL      [ shift and go to state 80 ]
  ! IGUALACION      [ shift and go to state 81 ]
  ! DISTINTO        [ shift and go to state 82 ]
  ! AND             [ shift and go to state 83 ]
  ! OR              [ shift and go to state 84 ]
  ! PUNTO           [ shift and go to state 85 ]


state 120

    (44) expresion -> expresion MENORIGUAL expresion .
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . POR expresion
    (36) expresion -> expresion . DIVIDIDO expresion
    (37) expresion -> expresion . POTENCIA expresion
    (38) expresion -> expresion . MODULO expresion
    (41) expresion -> expresion . MAYOR expresion
    (42) expresion -> expresion . MENOR expresion
    (43) expresion -> expresion . MAYORIGUAL expresion
    (44) expresion -> expresion . MENORIGUAL expresion
    (45) expresion -> expresion . IGUALACION expresion
    (46) expresion -> expresion . DISTINTO expresion
    (47) expresion -> expresion . AND expresion
    (48) expresion -> expresion . OR expresion
    (67) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAYOR           reduce using rule 44 (expresion -> expresion MENORIGUAL expresion .)
    MENOR           reduce using rule 44 (expresion -> expresion MENORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 44 (expresion -> expresion MENORIGUAL expresion .)
    MENORIGUAL      reduce using rule 44 (expresion -> expresion MENORIGUAL expresion .)
    IGUALACION      reduce using rule 44 (expresion -> expresion MENORIGUAL expresion .)
    DISTINTO        reduce using rule 44 (expresion -> expresion MENORIGUAL expresion .)
    AND             reduce using rule 44 (expresion -> expresion MENORIGUAL expresion .)
    OR              reduce using rule 44 (expresion -> expresion MENORIGUAL expresion .)
    PUNTO           reduce using rule 44 (expresion -> expresion MENORIGUAL expresion .)
    PTOYCOMA        reduce using rule 44 (expresion -> expresion MENORIGUAL expresion .)
    error           reduce using rule 44 (expresion -> expresion MENORIGUAL expresion .)
    ID              reduce using rule 44 (expresion -> expresion MENORIGUAL expresion .)
    INCREMENTO      reduce using rule 44 (expresion -> expresion MENORIGUAL expresion .)
    DECREMENTO      reduce using rule 44 (expresion -> expresion MENORIGUAL expresion .)
    LET             reduce using rule 44 (expresion -> expresion MENORIGUAL expresion .)
    CONSOLE         reduce using rule 44 (expresion -> expresion MENORIGUAL expresion .)
    RETURN          reduce using rule 44 (expresion -> expresion MENORIGUAL expresion .)
    BREAK           reduce using rule 44 (expresion -> expresion MENORIGUAL expresion .)
    CONTINUE        reduce using rule 44 (expresion -> expresion MENORIGUAL expresion .)
    IF              reduce using rule 44 (expresion -> expresion MENORIGUAL expresion .)
    WHILE           reduce using rule 44 (expresion -> expresion MENORIGUAL expresion .)
    FOR             reduce using rule 44 (expresion -> expresion MENORIGUAL expresion .)
    FUNCTION        reduce using rule 44 (expresion -> expresion MENORIGUAL expresion .)
    $end            reduce using rule 44 (expresion -> expresion MENORIGUAL expresion .)
    LLADER          reduce using rule 44 (expresion -> expresion MENORIGUAL expresion .)
    PARDER          reduce using rule 44 (expresion -> expresion MENORIGUAL expresion .)
    COMA            reduce using rule 44 (expresion -> expresion MENORIGUAL expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76

  ! MAS             [ reduce using rule 44 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 44 (expresion -> expresion MENORIGUAL expresion .) ]
  ! POR             [ reduce using rule 44 (expresion -> expresion MENORIGUAL expresion .) ]
  ! DIVIDIDO        [ reduce using rule 44 (expresion -> expresion MENORIGUAL expresion .) ]
  ! POTENCIA        [ reduce using rule 44 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 44 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MAYOR           [ shift and go to state 77 ]
  ! MENOR           [ shift and go to state 78 ]
  ! MAYORIGUAL      [ shift and go to state 79 ]
  ! MENORIGUAL      [ shift and go to state 80 ]
  ! IGUALACION      [ shift and go to state 81 ]
  ! DISTINTO        [ shift and go to state 82 ]
  ! AND             [ shift and go to state 83 ]
  ! OR              [ shift and go to state 84 ]
  ! PUNTO           [ shift and go to state 85 ]


state 121

    (45) expresion -> expresion IGUALACION expresion .
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . POR expresion
    (36) expresion -> expresion . DIVIDIDO expresion
    (37) expresion -> expresion . POTENCIA expresion
    (38) expresion -> expresion . MODULO expresion
    (41) expresion -> expresion . MAYOR expresion
    (42) expresion -> expresion . MENOR expresion
    (43) expresion -> expresion . MAYORIGUAL expresion
    (44) expresion -> expresion . MENORIGUAL expresion
    (45) expresion -> expresion . IGUALACION expresion
    (46) expresion -> expresion . DISTINTO expresion
    (47) expresion -> expresion . AND expresion
    (48) expresion -> expresion . OR expresion
    (67) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAYOR           reduce using rule 45 (expresion -> expresion IGUALACION expresion .)
    MENOR           reduce using rule 45 (expresion -> expresion IGUALACION expresion .)
    MAYORIGUAL      reduce using rule 45 (expresion -> expresion IGUALACION expresion .)
    MENORIGUAL      reduce using rule 45 (expresion -> expresion IGUALACION expresion .)
    IGUALACION      reduce using rule 45 (expresion -> expresion IGUALACION expresion .)
    DISTINTO        reduce using rule 45 (expresion -> expresion IGUALACION expresion .)
    AND             reduce using rule 45 (expresion -> expresion IGUALACION expresion .)
    OR              reduce using rule 45 (expresion -> expresion IGUALACION expresion .)
    PUNTO           reduce using rule 45 (expresion -> expresion IGUALACION expresion .)
    PTOYCOMA        reduce using rule 45 (expresion -> expresion IGUALACION expresion .)
    error           reduce using rule 45 (expresion -> expresion IGUALACION expresion .)
    ID              reduce using rule 45 (expresion -> expresion IGUALACION expresion .)
    INCREMENTO      reduce using rule 45 (expresion -> expresion IGUALACION expresion .)
    DECREMENTO      reduce using rule 45 (expresion -> expresion IGUALACION expresion .)
    LET             reduce using rule 45 (expresion -> expresion IGUALACION expresion .)
    CONSOLE         reduce using rule 45 (expresion -> expresion IGUALACION expresion .)
    RETURN          reduce using rule 45 (expresion -> expresion IGUALACION expresion .)
    BREAK           reduce using rule 45 (expresion -> expresion IGUALACION expresion .)
    CONTINUE        reduce using rule 45 (expresion -> expresion IGUALACION expresion .)
    IF              reduce using rule 45 (expresion -> expresion IGUALACION expresion .)
    WHILE           reduce using rule 45 (expresion -> expresion IGUALACION expresion .)
    FOR             reduce using rule 45 (expresion -> expresion IGUALACION expresion .)
    FUNCTION        reduce using rule 45 (expresion -> expresion IGUALACION expresion .)
    $end            reduce using rule 45 (expresion -> expresion IGUALACION expresion .)
    LLADER          reduce using rule 45 (expresion -> expresion IGUALACION expresion .)
    PARDER          reduce using rule 45 (expresion -> expresion IGUALACION expresion .)
    COMA            reduce using rule 45 (expresion -> expresion IGUALACION expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76

  ! MAS             [ reduce using rule 45 (expresion -> expresion IGUALACION expresion .) ]
  ! MENOS           [ reduce using rule 45 (expresion -> expresion IGUALACION expresion .) ]
  ! POR             [ reduce using rule 45 (expresion -> expresion IGUALACION expresion .) ]
  ! DIVIDIDO        [ reduce using rule 45 (expresion -> expresion IGUALACION expresion .) ]
  ! POTENCIA        [ reduce using rule 45 (expresion -> expresion IGUALACION expresion .) ]
  ! MODULO          [ reduce using rule 45 (expresion -> expresion IGUALACION expresion .) ]
  ! MAYOR           [ shift and go to state 77 ]
  ! MENOR           [ shift and go to state 78 ]
  ! MAYORIGUAL      [ shift and go to state 79 ]
  ! MENORIGUAL      [ shift and go to state 80 ]
  ! IGUALACION      [ shift and go to state 81 ]
  ! DISTINTO        [ shift and go to state 82 ]
  ! AND             [ shift and go to state 83 ]
  ! OR              [ shift and go to state 84 ]
  ! PUNTO           [ shift and go to state 85 ]


state 122

    (46) expresion -> expresion DISTINTO expresion .
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . POR expresion
    (36) expresion -> expresion . DIVIDIDO expresion
    (37) expresion -> expresion . POTENCIA expresion
    (38) expresion -> expresion . MODULO expresion
    (41) expresion -> expresion . MAYOR expresion
    (42) expresion -> expresion . MENOR expresion
    (43) expresion -> expresion . MAYORIGUAL expresion
    (44) expresion -> expresion . MENORIGUAL expresion
    (45) expresion -> expresion . IGUALACION expresion
    (46) expresion -> expresion . DISTINTO expresion
    (47) expresion -> expresion . AND expresion
    (48) expresion -> expresion . OR expresion
    (67) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAYOR           reduce using rule 46 (expresion -> expresion DISTINTO expresion .)
    MENOR           reduce using rule 46 (expresion -> expresion DISTINTO expresion .)
    MAYORIGUAL      reduce using rule 46 (expresion -> expresion DISTINTO expresion .)
    MENORIGUAL      reduce using rule 46 (expresion -> expresion DISTINTO expresion .)
    IGUALACION      reduce using rule 46 (expresion -> expresion DISTINTO expresion .)
    DISTINTO        reduce using rule 46 (expresion -> expresion DISTINTO expresion .)
    AND             reduce using rule 46 (expresion -> expresion DISTINTO expresion .)
    OR              reduce using rule 46 (expresion -> expresion DISTINTO expresion .)
    PUNTO           reduce using rule 46 (expresion -> expresion DISTINTO expresion .)
    PTOYCOMA        reduce using rule 46 (expresion -> expresion DISTINTO expresion .)
    error           reduce using rule 46 (expresion -> expresion DISTINTO expresion .)
    ID              reduce using rule 46 (expresion -> expresion DISTINTO expresion .)
    INCREMENTO      reduce using rule 46 (expresion -> expresion DISTINTO expresion .)
    DECREMENTO      reduce using rule 46 (expresion -> expresion DISTINTO expresion .)
    LET             reduce using rule 46 (expresion -> expresion DISTINTO expresion .)
    CONSOLE         reduce using rule 46 (expresion -> expresion DISTINTO expresion .)
    RETURN          reduce using rule 46 (expresion -> expresion DISTINTO expresion .)
    BREAK           reduce using rule 46 (expresion -> expresion DISTINTO expresion .)
    CONTINUE        reduce using rule 46 (expresion -> expresion DISTINTO expresion .)
    IF              reduce using rule 46 (expresion -> expresion DISTINTO expresion .)
    WHILE           reduce using rule 46 (expresion -> expresion DISTINTO expresion .)
    FOR             reduce using rule 46 (expresion -> expresion DISTINTO expresion .)
    FUNCTION        reduce using rule 46 (expresion -> expresion DISTINTO expresion .)
    $end            reduce using rule 46 (expresion -> expresion DISTINTO expresion .)
    LLADER          reduce using rule 46 (expresion -> expresion DISTINTO expresion .)
    PARDER          reduce using rule 46 (expresion -> expresion DISTINTO expresion .)
    COMA            reduce using rule 46 (expresion -> expresion DISTINTO expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76

  ! MAS             [ reduce using rule 46 (expresion -> expresion DISTINTO expresion .) ]
  ! MENOS           [ reduce using rule 46 (expresion -> expresion DISTINTO expresion .) ]
  ! POR             [ reduce using rule 46 (expresion -> expresion DISTINTO expresion .) ]
  ! DIVIDIDO        [ reduce using rule 46 (expresion -> expresion DISTINTO expresion .) ]
  ! POTENCIA        [ reduce using rule 46 (expresion -> expresion DISTINTO expresion .) ]
  ! MODULO          [ reduce using rule 46 (expresion -> expresion DISTINTO expresion .) ]
  ! MAYOR           [ shift and go to state 77 ]
  ! MENOR           [ shift and go to state 78 ]
  ! MAYORIGUAL      [ shift and go to state 79 ]
  ! MENORIGUAL      [ shift and go to state 80 ]
  ! IGUALACION      [ shift and go to state 81 ]
  ! DISTINTO        [ shift and go to state 82 ]
  ! AND             [ shift and go to state 83 ]
  ! OR              [ shift and go to state 84 ]
  ! PUNTO           [ shift and go to state 85 ]


state 123

    (47) expresion -> expresion AND expresion .
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . POR expresion
    (36) expresion -> expresion . DIVIDIDO expresion
    (37) expresion -> expresion . POTENCIA expresion
    (38) expresion -> expresion . MODULO expresion
    (41) expresion -> expresion . MAYOR expresion
    (42) expresion -> expresion . MENOR expresion
    (43) expresion -> expresion . MAYORIGUAL expresion
    (44) expresion -> expresion . MENORIGUAL expresion
    (45) expresion -> expresion . IGUALACION expresion
    (46) expresion -> expresion . DISTINTO expresion
    (47) expresion -> expresion . AND expresion
    (48) expresion -> expresion . OR expresion
    (67) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    AND             reduce using rule 47 (expresion -> expresion AND expresion .)
    OR              reduce using rule 47 (expresion -> expresion AND expresion .)
    PUNTO           reduce using rule 47 (expresion -> expresion AND expresion .)
    PTOYCOMA        reduce using rule 47 (expresion -> expresion AND expresion .)
    error           reduce using rule 47 (expresion -> expresion AND expresion .)
    ID              reduce using rule 47 (expresion -> expresion AND expresion .)
    INCREMENTO      reduce using rule 47 (expresion -> expresion AND expresion .)
    DECREMENTO      reduce using rule 47 (expresion -> expresion AND expresion .)
    LET             reduce using rule 47 (expresion -> expresion AND expresion .)
    CONSOLE         reduce using rule 47 (expresion -> expresion AND expresion .)
    RETURN          reduce using rule 47 (expresion -> expresion AND expresion .)
    BREAK           reduce using rule 47 (expresion -> expresion AND expresion .)
    CONTINUE        reduce using rule 47 (expresion -> expresion AND expresion .)
    IF              reduce using rule 47 (expresion -> expresion AND expresion .)
    WHILE           reduce using rule 47 (expresion -> expresion AND expresion .)
    FOR             reduce using rule 47 (expresion -> expresion AND expresion .)
    FUNCTION        reduce using rule 47 (expresion -> expresion AND expresion .)
    $end            reduce using rule 47 (expresion -> expresion AND expresion .)
    LLADER          reduce using rule 47 (expresion -> expresion AND expresion .)
    PARDER          reduce using rule 47 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 47 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    MAYOR           shift and go to state 77
    MENOR           shift and go to state 78
    MAYORIGUAL      shift and go to state 79
    MENORIGUAL      shift and go to state 80
    IGUALACION      shift and go to state 81
    DISTINTO        shift and go to state 82

  ! MAS             [ reduce using rule 47 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 47 (expresion -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 47 (expresion -> expresion AND expresion .) ]
  ! DIVIDIDO        [ reduce using rule 47 (expresion -> expresion AND expresion .) ]
  ! POTENCIA        [ reduce using rule 47 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 47 (expresion -> expresion AND expresion .) ]
  ! MAYOR           [ reduce using rule 47 (expresion -> expresion AND expresion .) ]
  ! MENOR           [ reduce using rule 47 (expresion -> expresion AND expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 47 (expresion -> expresion AND expresion .) ]
  ! MENORIGUAL      [ reduce using rule 47 (expresion -> expresion AND expresion .) ]
  ! IGUALACION      [ reduce using rule 47 (expresion -> expresion AND expresion .) ]
  ! DISTINTO        [ reduce using rule 47 (expresion -> expresion AND expresion .) ]
  ! AND             [ shift and go to state 83 ]
  ! OR              [ shift and go to state 84 ]
  ! PUNTO           [ shift and go to state 85 ]


state 124

    (48) expresion -> expresion OR expresion .
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . POR expresion
    (36) expresion -> expresion . DIVIDIDO expresion
    (37) expresion -> expresion . POTENCIA expresion
    (38) expresion -> expresion . MODULO expresion
    (41) expresion -> expresion . MAYOR expresion
    (42) expresion -> expresion . MENOR expresion
    (43) expresion -> expresion . MAYORIGUAL expresion
    (44) expresion -> expresion . MENORIGUAL expresion
    (45) expresion -> expresion . IGUALACION expresion
    (46) expresion -> expresion . DISTINTO expresion
    (47) expresion -> expresion . AND expresion
    (48) expresion -> expresion . OR expresion
    (67) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    OR              reduce using rule 48 (expresion -> expresion OR expresion .)
    PUNTO           reduce using rule 48 (expresion -> expresion OR expresion .)
    PTOYCOMA        reduce using rule 48 (expresion -> expresion OR expresion .)
    error           reduce using rule 48 (expresion -> expresion OR expresion .)
    ID              reduce using rule 48 (expresion -> expresion OR expresion .)
    INCREMENTO      reduce using rule 48 (expresion -> expresion OR expresion .)
    DECREMENTO      reduce using rule 48 (expresion -> expresion OR expresion .)
    LET             reduce using rule 48 (expresion -> expresion OR expresion .)
    CONSOLE         reduce using rule 48 (expresion -> expresion OR expresion .)
    RETURN          reduce using rule 48 (expresion -> expresion OR expresion .)
    BREAK           reduce using rule 48 (expresion -> expresion OR expresion .)
    CONTINUE        reduce using rule 48 (expresion -> expresion OR expresion .)
    IF              reduce using rule 48 (expresion -> expresion OR expresion .)
    WHILE           reduce using rule 48 (expresion -> expresion OR expresion .)
    FOR             reduce using rule 48 (expresion -> expresion OR expresion .)
    FUNCTION        reduce using rule 48 (expresion -> expresion OR expresion .)
    $end            reduce using rule 48 (expresion -> expresion OR expresion .)
    LLADER          reduce using rule 48 (expresion -> expresion OR expresion .)
    PARDER          reduce using rule 48 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 48 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    MAYOR           shift and go to state 77
    MENOR           shift and go to state 78
    MAYORIGUAL      shift and go to state 79
    MENORIGUAL      shift and go to state 80
    IGUALACION      shift and go to state 81
    DISTINTO        shift and go to state 82
    AND             shift and go to state 83

  ! MAS             [ reduce using rule 48 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 48 (expresion -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 48 (expresion -> expresion OR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 48 (expresion -> expresion OR expresion .) ]
  ! POTENCIA        [ reduce using rule 48 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 48 (expresion -> expresion OR expresion .) ]
  ! MAYOR           [ reduce using rule 48 (expresion -> expresion OR expresion .) ]
  ! MENOR           [ reduce using rule 48 (expresion -> expresion OR expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 48 (expresion -> expresion OR expresion .) ]
  ! MENORIGUAL      [ reduce using rule 48 (expresion -> expresion OR expresion .) ]
  ! IGUALACION      [ reduce using rule 48 (expresion -> expresion OR expresion .) ]
  ! DISTINTO        [ reduce using rule 48 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 48 (expresion -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 84 ]
  ! PUNTO           [ shift and go to state 85 ]


state 125

    (67) aproximacion -> expresion PUNTO TOFIXED . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 146



state 126

    (68) exponencial -> expresion PUNTO TOEXPONENTIAL . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 147



state 127

    (70) to_minusculas -> expresion PUNTO TOLOWERCASE . PARIZQ PARDER

    PARIZQ          shift and go to state 148

  ! MAS             [ shift and go to state 86 ]
  ! MENOS           [ shift and go to state 87 ]
  ! POR             [ shift and go to state 88 ]
  ! DIVIDIDO        [ shift and go to state 89 ]
  ! MODULO          [ shift and go to state 90 ]
  ! POTENCIA        [ shift and go to state 91 ]
  ! MAYOR           [ shift and go to state 92 ]
  ! MENOR           [ shift and go to state 93 ]
  ! MAYORIGUAL      [ shift and go to state 94 ]
  ! MENORIGUAL      [ shift and go to state 95 ]
  ! IGUALACION      [ shift and go to state 96 ]
  ! DISTINTO        [ shift and go to state 97 ]
  ! AND             [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! PUNTO           [ shift and go to state 100 ]


state 128

    (71) to_mayusculas -> expresion PUNTO TOUPPERCASE . PARIZQ PARDER

    PARIZQ          shift and go to state 149



state 129

    (72) separador -> expresion PUNTO SPLIT . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 150

  ! MAS             [ reduce using rule 71 (expresion -> expresion MENOR expresion .) ]
  ! MENOS           [ reduce using rule 71 (expresion -> expresion MENOR expresion .) ]
  ! POR             [ reduce using rule 71 (expresion -> expresion MENOR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 71 (expresion -> expresion MENOR expresion .) ]
  ! MODULO          [ reduce using rule 71 (expresion -> expresion MENOR expresion .) ]
  ! POTENCIA        [ reduce using rule 71 (expresion -> expresion MENOR expresion .) ]
  ! MAYOR           [ shift and go to state 92 ]
  ! MENOR           [ shift and go to state 93 ]
  ! MAYORIGUAL      [ shift and go to state 94 ]
  ! MENORIGUAL      [ shift and go to state 95 ]
  ! IGUALACION      [ shift and go to state 96 ]
  ! DISTINTO        [ shift and go to state 97 ]
  ! AND             [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! PUNTO           [ shift and go to state 100 ]


state 130

    (73) concatenacion -> expresion PUNTO CONCAT . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 151



state 131

    (40) expresion -> PARIZQ expresion PARDER .

    MAS             reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    POR             reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    MODULO          reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    MENOR           reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    IGUALACION      reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    DISTINTO        reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    AND             reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    OR              reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    PTOYCOMA        reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    error           reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    ID              reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    INCREMENTO      reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    DECREMENTO      reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    LET             reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    RETURN          reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    BREAK           reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    IF              reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    WHILE           reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    FOR             reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    FUNCTION        reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    $end            reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    LLADER          reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    COMA            reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)



state 132

    (69) expresion -> ID PUNTO TOSTRING . PARIZQ PARDER

    PARIZQ          shift and go to state 152

  ! MAS             [ reduce using rule 74 (expresion -> expresion IGUALACION expresion .) ]
  ! MENOS           [ reduce using rule 74 (expresion -> expresion IGUALACION expresion .) ]
  ! POR             [ reduce using rule 74 (expresion -> expresion IGUALACION expresion .) ]
  ! DIVIDIDO        [ reduce using rule 74 (expresion -> expresion IGUALACION expresion .) ]
  ! MODULO          [ reduce using rule 74 (expresion -> expresion IGUALACION expresion .) ]
  ! POTENCIA        [ reduce using rule 74 (expresion -> expresion IGUALACION expresion .) ]
  ! MAYOR           [ shift and go to state 92 ]
  ! MENOR           [ shift and go to state 93 ]
  ! MAYORIGUAL      [ shift and go to state 94 ]
  ! MENORIGUAL      [ shift and go to state 95 ]
  ! IGUALACION      [ shift and go to state 96 ]
  ! DISTINTO        [ shift and go to state 97 ]
  ! AND             [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! PUNTO           [ shift and go to state 100 ]


state 133

    (74) casteo_string -> CAST_STRING PARIZQ expresion . PARDER
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . POR expresion
    (36) expresion -> expresion . DIVIDIDO expresion
    (37) expresion -> expresion . POTENCIA expresion
    (38) expresion -> expresion . MODULO expresion
    (41) expresion -> expresion . MAYOR expresion
    (42) expresion -> expresion . MENOR expresion
    (43) expresion -> expresion . MAYORIGUAL expresion
    (44) expresion -> expresion . MENORIGUAL expresion
    (45) expresion -> expresion . IGUALACION expresion
    (46) expresion -> expresion . DISTINTO expresion
    (47) expresion -> expresion . AND expresion
    (48) expresion -> expresion . OR expresion
    (67) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 153
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    MAYOR           shift and go to state 77
    MENOR           shift and go to state 78
    MAYORIGUAL      shift and go to state 79
    MENORIGUAL      shift and go to state 80
    IGUALACION      shift and go to state 81
    DISTINTO        shift and go to state 82
    AND             shift and go to state 83
    OR              shift and go to state 84
    PUNTO           shift and go to state 85

  ! MAS             [ reduce using rule 75 (expresion -> expresion DISTINTO expresion .) ]
  ! MENOS           [ reduce using rule 75 (expresion -> expresion DISTINTO expresion .) ]
  ! POR             [ reduce using rule 75 (expresion -> expresion DISTINTO expresion .) ]
  ! DIVIDIDO        [ reduce using rule 75 (expresion -> expresion DISTINTO expresion .) ]
  ! MODULO          [ reduce using rule 75 (expresion -> expresion DISTINTO expresion .) ]
  ! POTENCIA        [ reduce using rule 75 (expresion -> expresion DISTINTO expresion .) ]
  ! MAYOR           [ shift and go to state 92 ]
  ! MENOR           [ shift and go to state 93 ]
  ! MAYORIGUAL      [ shift and go to state 94 ]
  ! MENORIGUAL      [ shift and go to state 95 ]
  ! IGUALACION      [ shift and go to state 96 ]
  ! DISTINTO        [ shift and go to state 97 ]
  ! AND             [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! PUNTO           [ shift and go to state 100 ]


state 134

    (83) condicional_if -> IF PARIZQ expresion PARDER . bloque
    (84) condicional_if -> IF PARIZQ expresion PARDER . bloque ELSE bloque
    (85) condicional_if -> IF PARIZQ expresion PARDER . bloque lista_elif
    (86) condicional_if -> IF PARIZQ expresion PARDER . bloque lista_elif ELSE bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 155

    bloque                         shift and go to state 154


state 135

    (90) ciclo_while -> WHILE PARIZQ expresion PARDER . bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 155

    bloque                         shift and go to state 156


state 136

    (91) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA . expresion PTOYCOMA asignacion PARDER bloque
    (93) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA . expresion PTOYCOMA expresion PARDER bloque
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion POR expresion
    (36) expresion -> . expresion DIVIDIDO expresion
    (37) expresion -> . expresion POTENCIA expresion
    (38) expresion -> . expresion MODULO expresion
    (39) expresion -> . MENOS expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . expresion MAYOR expresion
    (42) expresion -> . expresion MENOR expresion
    (43) expresion -> . expresion MAYORIGUAL expresion
    (44) expresion -> . expresion MENORIGUAL expresion
    (45) expresion -> . expresion IGUALACION expresion
    (46) expresion -> . expresion DISTINTO expresion
    (47) expresion -> . expresion AND expresion
    (48) expresion -> . expresion OR expresion
    (49) expresion -> . NOT expresion
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . CADENA
    (53) expresion -> . ID
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . ID INCREMENTO
    (57) expresion -> . ID DECREMENTO
    (58) expresion -> . INCREMENTO ID
    (59) expresion -> . DECREMENTO ID
    (60) expresion -> . aproximacion
    (61) expresion -> . exponencial
    (62) expresion -> . to_minusculas
    (63) expresion -> . to_mayusculas
    (64) expresion -> . separador
    (65) expresion -> . concatenacion
    (66) expresion -> . casteo_string
    (69) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (67) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (74) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 42
    NOT             shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    ID              shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CAST_STRING     shift and go to state 59

    expresion                      shift and go to state 157
    aproximacion                   shift and go to state 52
    exponencial                    shift and go to state 53
    to_minusculas                  shift and go to state 54
    to_mayusculas                  shift and go to state 55
    separador                      shift and go to state 56
    concatenacion                  shift and go to state 57
    casteo_string                  shift and go to state 58

state 137

    (92) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA . expresion PTOYCOMA asignacion PARDER bloque
    (94) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA . expresion PTOYCOMA expresion PARDER bloque
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion POR expresion
    (36) expresion -> . expresion DIVIDIDO expresion
    (37) expresion -> . expresion POTENCIA expresion
    (38) expresion -> . expresion MODULO expresion
    (39) expresion -> . MENOS expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . expresion MAYOR expresion
    (42) expresion -> . expresion MENOR expresion
    (43) expresion -> . expresion MAYORIGUAL expresion
    (44) expresion -> . expresion MENORIGUAL expresion
    (45) expresion -> . expresion IGUALACION expresion
    (46) expresion -> . expresion DISTINTO expresion
    (47) expresion -> . expresion AND expresion
    (48) expresion -> . expresion OR expresion
    (49) expresion -> . NOT expresion
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . CADENA
    (53) expresion -> . ID
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . ID INCREMENTO
    (57) expresion -> . ID DECREMENTO
    (58) expresion -> . INCREMENTO ID
    (59) expresion -> . DECREMENTO ID
    (60) expresion -> . aproximacion
    (61) expresion -> . exponencial
    (62) expresion -> . to_minusculas
    (63) expresion -> . to_mayusculas
    (64) expresion -> . separador
    (65) expresion -> . concatenacion
    (66) expresion -> . casteo_string
    (69) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (67) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (74) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 42
    NOT             shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    ID              shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CAST_STRING     shift and go to state 59

    expresion                      shift and go to state 158
    aproximacion                   shift and go to state 52
    exponencial                    shift and go to state 53
    to_minusculas                  shift and go to state 54
    to_mayusculas                  shift and go to state 55
    separador                      shift and go to state 56
    concatenacion                  shift and go to state 57
    casteo_string                  shift and go to state 58

state 138

    (95) ciclo_for_of -> FOR PARIZQ LET ID . OF expresion PARDER bloque
    (23) declaracion -> LET ID . DOSPUNTOS tipo IGUAL expresion
    (24) declaracion -> LET ID . IGUAL expresion
    (25) declaracion -> LET ID . DOSPUNTOS tipo
    (26) declaracion -> LET ID .

    OF              shift and go to state 159
    DOSPUNTOS       shift and go to state 68
    IGUAL           shift and go to state 69
    PTOYCOMA        reduce using rule 26 (declaracion -> LET ID .)


state 139

    (100) parametro -> ID . DOSPUNTOS tipo

    DOSPUNTOS       shift and go to state 160


state 140

    (96) funcion -> FUNCTION ID PARIZQ lista_parametros . PARDER bloque
    (98) lista_parametros -> lista_parametros . COMA parametro

    PARDER          shift and go to state 161
    COMA            shift and go to state 162


state 141

    (97) funcion -> FUNCTION ID PARIZQ PARDER . bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 155

    bloque                         shift and go to state 163

state 142

    (99) lista_parametros -> parametro .

    PARDER          reduce using rule 99 (lista_parametros -> parametro .)
    COMA            reduce using rule 99 (lista_parametros -> parametro .)


state 143

    (103) lista_argumentos -> lista_argumentos COMA expresion .
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . POR expresion
    (36) expresion -> expresion . DIVIDIDO expresion
    (37) expresion -> expresion . POTENCIA expresion
    (38) expresion -> expresion . MODULO expresion
    (41) expresion -> expresion . MAYOR expresion
    (42) expresion -> expresion . MENOR expresion
    (43) expresion -> expresion . MAYORIGUAL expresion
    (44) expresion -> expresion . MENORIGUAL expresion
    (45) expresion -> expresion . IGUALACION expresion
    (46) expresion -> expresion . DISTINTO expresion
    (47) expresion -> expresion . AND expresion
    (48) expresion -> expresion . OR expresion
    (67) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          reduce using rule 103 (lista_argumentos -> lista_argumentos COMA expresion .)
    COMA            reduce using rule 103 (lista_argumentos -> lista_argumentos COMA expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    MAYOR           shift and go to state 77
    MENOR           shift and go to state 78
    MAYORIGUAL      shift and go to state 79
    MENORIGUAL      shift and go to state 80
    IGUALACION      shift and go to state 81
    DISTINTO        shift and go to state 82
    AND             shift and go to state 83
    OR              shift and go to state 84
    PUNTO           shift and go to state 85


state 144

    (23) declaracion -> LET ID DOSPUNTOS tipo IGUAL . expresion
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion POR expresion
    (36) expresion -> . expresion DIVIDIDO expresion
    (37) expresion -> . expresion POTENCIA expresion
    (38) expresion -> . expresion MODULO expresion
    (39) expresion -> . MENOS expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . expresion MAYOR expresion
    (42) expresion -> . expresion MENOR expresion
    (43) expresion -> . expresion MAYORIGUAL expresion
    (44) expresion -> . expresion MENORIGUAL expresion
    (45) expresion -> . expresion IGUALACION expresion
    (46) expresion -> . expresion DISTINTO expresion
    (47) expresion -> . expresion AND expresion
    (48) expresion -> . expresion OR expresion
    (49) expresion -> . NOT expresion
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . CADENA
    (53) expresion -> . ID
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . ID INCREMENTO
    (57) expresion -> . ID DECREMENTO
    (58) expresion -> . INCREMENTO ID
    (59) expresion -> . DECREMENTO ID
    (60) expresion -> . aproximacion
    (61) expresion -> . exponencial
    (62) expresion -> . to_minusculas
    (63) expresion -> . to_mayusculas
    (64) expresion -> . separador
    (65) expresion -> . concatenacion
    (66) expresion -> . casteo_string
    (69) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (67) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (74) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 42
    NOT             shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    ID              shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CAST_STRING     shift and go to state 59

    expresion                      shift and go to state 164
    aproximacion                   shift and go to state 52
    exponencial                    shift and go to state 53
    to_minusculas                  shift and go to state 54
    to_mayusculas                  shift and go to state 55
    separador                      shift and go to state 56
    concatenacion                  shift and go to state 57
    casteo_string                  shift and go to state 58

state 145

    (32) impresion -> CONSOLE PUNTO LOG PARIZQ expresion . PARDER
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . POR expresion
    (36) expresion -> expresion . DIVIDIDO expresion
    (37) expresion -> expresion . POTENCIA expresion
    (38) expresion -> expresion . MODULO expresion
    (41) expresion -> expresion . MAYOR expresion
    (42) expresion -> expresion . MENOR expresion
    (43) expresion -> expresion . MAYORIGUAL expresion
    (44) expresion -> expresion . MENORIGUAL expresion
    (45) expresion -> expresion . IGUALACION expresion
    (46) expresion -> expresion . DISTINTO expresion
    (47) expresion -> expresion . AND expresion
    (48) expresion -> expresion . OR expresion
    (67) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 165
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    MAYOR           shift and go to state 77
    MENOR           shift and go to state 78
    MAYORIGUAL      shift and go to state 79
    MENORIGUAL      shift and go to state 80
    IGUALACION      shift and go to state 81
    DISTINTO        shift and go to state 82
    AND             shift and go to state 83
    OR              shift and go to state 84
    PUNTO           shift and go to state 85


state 146

    (67) aproximacion -> expresion PUNTO TOFIXED PARIZQ . expresion PARDER
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion POR expresion
    (36) expresion -> . expresion DIVIDIDO expresion
    (37) expresion -> . expresion POTENCIA expresion
    (38) expresion -> . expresion MODULO expresion
    (39) expresion -> . MENOS expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . expresion MAYOR expresion
    (42) expresion -> . expresion MENOR expresion
    (43) expresion -> . expresion MAYORIGUAL expresion
    (44) expresion -> . expresion MENORIGUAL expresion
    (45) expresion -> . expresion IGUALACION expresion
    (46) expresion -> . expresion DISTINTO expresion
    (47) expresion -> . expresion AND expresion
    (48) expresion -> . expresion OR expresion
    (49) expresion -> . NOT expresion
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . CADENA
    (53) expresion -> . ID
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . ID INCREMENTO
    (57) expresion -> . ID DECREMENTO
    (58) expresion -> . INCREMENTO ID
    (59) expresion -> . DECREMENTO ID
    (60) expresion -> . aproximacion
    (61) expresion -> . exponencial
    (62) expresion -> . to_minusculas
    (63) expresion -> . to_mayusculas
    (64) expresion -> . separador
    (65) expresion -> . concatenacion
    (66) expresion -> . casteo_string
    (69) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (67) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (74) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 42
    NOT             shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    ID              shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CAST_STRING     shift and go to state 59

    expresion                      shift and go to state 166
    aproximacion                   shift and go to state 52
    exponencial                    shift and go to state 53
    to_minusculas                  shift and go to state 54
    to_mayusculas                  shift and go to state 55
    separador                      shift and go to state 56
    concatenacion                  shift and go to state 57
    casteo_string                  shift and go to state 58

state 147

    (68) exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ . expresion PARDER
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion POR expresion
    (36) expresion -> . expresion DIVIDIDO expresion
    (37) expresion -> . expresion POTENCIA expresion
    (38) expresion -> . expresion MODULO expresion
    (39) expresion -> . MENOS expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . expresion MAYOR expresion
    (42) expresion -> . expresion MENOR expresion
    (43) expresion -> . expresion MAYORIGUAL expresion
    (44) expresion -> . expresion MENORIGUAL expresion
    (45) expresion -> . expresion IGUALACION expresion
    (46) expresion -> . expresion DISTINTO expresion
    (47) expresion -> . expresion AND expresion
    (48) expresion -> . expresion OR expresion
    (49) expresion -> . NOT expresion
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . CADENA
    (53) expresion -> . ID
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . ID INCREMENTO
    (57) expresion -> . ID DECREMENTO
    (58) expresion -> . INCREMENTO ID
    (59) expresion -> . DECREMENTO ID
    (60) expresion -> . aproximacion
    (61) expresion -> . exponencial
    (62) expresion -> . to_minusculas
    (63) expresion -> . to_mayusculas
    (64) expresion -> . separador
    (65) expresion -> . concatenacion
    (66) expresion -> . casteo_string
    (69) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (67) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (74) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 42
    NOT             shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    ID              shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CAST_STRING     shift and go to state 59

    expresion                      shift and go to state 167
    aproximacion                   shift and go to state 52
    exponencial                    shift and go to state 53
    to_minusculas                  shift and go to state 54
    to_mayusculas                  shift and go to state 55
    separador                      shift and go to state 56
    concatenacion                  shift and go to state 57
    casteo_string                  shift and go to state 58

state 148

    (70) to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ . PARDER

    PARDER          shift and go to state 168


state 149

    (71) to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ . PARDER

    PARDER          shift and go to state 169


state 150

    (72) separador -> expresion PUNTO SPLIT PARIZQ . expresion PARDER
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion POR expresion
    (36) expresion -> . expresion DIVIDIDO expresion
    (37) expresion -> . expresion POTENCIA expresion
    (38) expresion -> . expresion MODULO expresion
    (39) expresion -> . MENOS expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . expresion MAYOR expresion
    (42) expresion -> . expresion MENOR expresion
    (43) expresion -> . expresion MAYORIGUAL expresion
    (44) expresion -> . expresion MENORIGUAL expresion
    (45) expresion -> . expresion IGUALACION expresion
    (46) expresion -> . expresion DISTINTO expresion
    (47) expresion -> . expresion AND expresion
    (48) expresion -> . expresion OR expresion
    (49) expresion -> . NOT expresion
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . CADENA
    (53) expresion -> . ID
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . ID INCREMENTO
    (57) expresion -> . ID DECREMENTO
    (58) expresion -> . INCREMENTO ID
    (59) expresion -> . DECREMENTO ID
    (60) expresion -> . aproximacion
    (61) expresion -> . exponencial
    (62) expresion -> . to_minusculas
    (63) expresion -> . to_mayusculas
    (64) expresion -> . separador
    (65) expresion -> . concatenacion
    (66) expresion -> . casteo_string
    (69) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (67) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (74) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 42
    NOT             shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    ID              shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CAST_STRING     shift and go to state 59

    expresion                      shift and go to state 170
    aproximacion                   shift and go to state 52
    exponencial                    shift and go to state 53
    to_minusculas                  shift and go to state 54
    to_mayusculas                  shift and go to state 55
    separador                      shift and go to state 56
    concatenacion                  shift and go to state 57
    casteo_string                  shift and go to state 58

state 151

    (73) concatenacion -> expresion PUNTO CONCAT PARIZQ . expresion PARDER
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion POR expresion
    (36) expresion -> . expresion DIVIDIDO expresion
    (37) expresion -> . expresion POTENCIA expresion
    (38) expresion -> . expresion MODULO expresion
    (39) expresion -> . MENOS expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . expresion MAYOR expresion
    (42) expresion -> . expresion MENOR expresion
    (43) expresion -> . expresion MAYORIGUAL expresion
    (44) expresion -> . expresion MENORIGUAL expresion
    (45) expresion -> . expresion IGUALACION expresion
    (46) expresion -> . expresion DISTINTO expresion
    (47) expresion -> . expresion AND expresion
    (48) expresion -> . expresion OR expresion
    (49) expresion -> . NOT expresion
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . CADENA
    (53) expresion -> . ID
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . ID INCREMENTO
    (57) expresion -> . ID DECREMENTO
    (58) expresion -> . INCREMENTO ID
    (59) expresion -> . DECREMENTO ID
    (60) expresion -> . aproximacion
    (61) expresion -> . exponencial
    (62) expresion -> . to_minusculas
    (63) expresion -> . to_mayusculas
    (64) expresion -> . separador
    (65) expresion -> . concatenacion
    (66) expresion -> . casteo_string
    (69) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (67) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (74) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 42
    NOT             shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    ID              shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CAST_STRING     shift and go to state 59

    expresion                      shift and go to state 171
    aproximacion                   shift and go to state 52
    exponencial                    shift and go to state 53
    to_minusculas                  shift and go to state 54
    to_mayusculas                  shift and go to state 55
    separador                      shift and go to state 56
    concatenacion                  shift and go to state 57
    casteo_string                  shift and go to state 58

state 152

    (69) expresion -> ID PUNTO TOSTRING PARIZQ . PARDER

    PARDER          shift and go to state 172


state 153

    (74) casteo_string -> CAST_STRING PARIZQ expresion PARDER .

    MAS             reduce using rule 74 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    MENOS           reduce using rule 74 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    POR             reduce using rule 74 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 74 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 74 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    MODULO          reduce using rule 74 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 74 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    MENOR           reduce using rule 74 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 74 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 74 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    IGUALACION      reduce using rule 74 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    DISTINTO        reduce using rule 74 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    AND             reduce using rule 74 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    OR              reduce using rule 74 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 74 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    PTOYCOMA        reduce using rule 74 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    error           reduce using rule 74 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    ID              reduce using rule 74 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    INCREMENTO      reduce using rule 74 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    DECREMENTO      reduce using rule 74 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    LET             reduce using rule 74 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 74 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    RETURN          reduce using rule 74 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    BREAK           reduce using rule 74 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 74 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    IF              reduce using rule 74 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    WHILE           reduce using rule 74 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    FOR             reduce using rule 74 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    FUNCTION        reduce using rule 74 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    $end            reduce using rule 74 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    LLADER          reduce using rule 74 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    PARDER          reduce using rule 74 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    COMA            reduce using rule 74 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)


state 154

    (83) condicional_if -> IF PARIZQ expresion PARDER bloque .
    (84) condicional_if -> IF PARIZQ expresion PARDER bloque . ELSE bloque
    (85) condicional_if -> IF PARIZQ expresion PARDER bloque . lista_elif
    (86) condicional_if -> IF PARIZQ expresion PARDER bloque . lista_elif ELSE bloque
    (87) lista_elif -> . lista_elif elif
    (88) lista_elif -> . elif
    (89) elif -> . ELSE IF PARIZQ expresion PARDER bloque

    PTOYCOMA        reduce using rule 83 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    error           reduce using rule 83 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    ID              reduce using rule 83 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    INCREMENTO      reduce using rule 83 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    DECREMENTO      reduce using rule 83 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    LET             reduce using rule 83 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    CONSOLE         reduce using rule 83 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    RETURN          reduce using rule 83 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    BREAK           reduce using rule 83 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    CONTINUE        reduce using rule 83 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    IF              reduce using rule 83 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    WHILE           reduce using rule 83 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    FOR             reduce using rule 83 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    FUNCTION        reduce using rule 83 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    $end            reduce using rule 83 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    LLADER          reduce using rule 83 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    ELSE            shift and go to state 173

    lista_elif                     shift and go to state 174
    elif                           shift and go to state 175

state 155

    (9) bloque -> LLAIZQ . instruccion3 LLADER
    (10) bloque -> LLAIZQ . LLADER
    (5) instruccion3 -> . instruccion3 instruccion2
    (6) instruccion3 -> . instruccion3 instruccion2 PTOYCOMA
    (7) instruccion3 -> . instruccion2
    (8) instruccion3 -> . instruccion2 PTOYCOMA
    (11) instruccion2 -> . declaracion
    (12) instruccion2 -> . asignacion
    (13) instruccion2 -> . impresion
    (14) instruccion2 -> . return
    (15) instruccion2 -> . break
    (16) instruccion2 -> . continue
    (17) instruccion2 -> . condicional_if
    (18) instruccion2 -> . ciclo_while
    (19) instruccion2 -> . ciclo_for
    (20) instruccion2 -> . ciclo_for_of
    (21) instruccion2 -> . funcion
    (22) instruccion2 -> . llamada_funcion
    (28) instruccion2 -> . ID INCREMENTO
    (29) instruccion2 -> . INCREMENTO ID
    (30) instruccion2 -> . ID DECREMENTO
    (31) instruccion2 -> . DECREMENTO ID
    (23) declaracion -> . LET ID DOSPUNTOS tipo IGUAL expresion
    (24) declaracion -> . LET ID IGUAL expresion
    (25) declaracion -> . LET ID DOSPUNTOS tipo
    (26) declaracion -> . LET ID
    (27) asignacion -> . ID IGUAL expresion
    (32) impresion -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER
    (79) return -> . RETURN
    (80) return -> . RETURN expresion
    (82) break -> . BREAK
    (81) continue -> . CONTINUE
    (83) condicional_if -> . IF PARIZQ expresion PARDER bloque
    (84) condicional_if -> . IF PARIZQ expresion PARDER bloque ELSE bloque
    (85) condicional_if -> . IF PARIZQ expresion PARDER bloque lista_elif
    (86) condicional_if -> . IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque
    (90) ciclo_while -> . WHILE PARIZQ expresion PARDER bloque
    (91) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (92) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (93) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (94) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (95) ciclo_for_of -> . FOR PARIZQ LET ID OF expresion PARDER bloque
    (96) funcion -> . FUNCTION ID PARIZQ lista_parametros PARDER bloque
    (97) funcion -> . FUNCTION ID PARIZQ PARDER bloque
    (101) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (102) llamada_funcion -> . ID PARIZQ PARDER

    LLADER          shift and go to state 177
    ID              shift and go to state 17
    INCREMENTO      shift and go to state 18
    DECREMENTO      shift and go to state 19
    LET             shift and go to state 20
    CONSOLE         shift and go to state 21
    RETURN          shift and go to state 22
    BREAK           shift and go to state 23
    CONTINUE        shift and go to state 24
    IF              shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    FUNCTION        shift and go to state 28

    instruccion3                   shift and go to state 176
    instruccion2                   shift and go to state 178
    declaracion                    shift and go to state 5
    asignacion                     shift and go to state 6
    impresion                      shift and go to state 7
    return                         shift and go to state 8
    break                          shift and go to state 9
    continue                       shift and go to state 10
    condicional_if                 shift and go to state 11
    ciclo_while                    shift and go to state 12
    ciclo_for                      shift and go to state 13
    ciclo_for_of                   shift and go to state 14
    funcion                        shift and go to state 15
    llamada_funcion                shift and go to state 16

state 156

    (90) ciclo_while -> WHILE PARIZQ expresion PARDER bloque .

    PTOYCOMA        reduce using rule 90 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    error           reduce using rule 90 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    ID              reduce using rule 90 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    INCREMENTO      reduce using rule 90 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    DECREMENTO      reduce using rule 90 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    LET             reduce using rule 90 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    CONSOLE         reduce using rule 90 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    RETURN          reduce using rule 90 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    BREAK           reduce using rule 90 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    CONTINUE        reduce using rule 90 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    IF              reduce using rule 90 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    WHILE           reduce using rule 90 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    FOR             reduce using rule 90 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    FUNCTION        reduce using rule 90 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    $end            reduce using rule 90 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    LLADER          reduce using rule 90 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)


state 157

    (91) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion . PTOYCOMA asignacion PARDER bloque
    (93) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion . PTOYCOMA expresion PARDER bloque
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . POR expresion
    (36) expresion -> expresion . DIVIDIDO expresion
    (37) expresion -> expresion . POTENCIA expresion
    (38) expresion -> expresion . MODULO expresion
    (41) expresion -> expresion . MAYOR expresion
    (42) expresion -> expresion . MENOR expresion
    (43) expresion -> expresion . MAYORIGUAL expresion
    (44) expresion -> expresion . MENORIGUAL expresion
    (45) expresion -> expresion . IGUALACION expresion
    (46) expresion -> expresion . DISTINTO expresion
    (47) expresion -> expresion . AND expresion
    (48) expresion -> expresion . OR expresion
    (67) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PTOYCOMA        shift and go to state 179
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    MAYOR           shift and go to state 77
    MENOR           shift and go to state 78
    MAYORIGUAL      shift and go to state 79
    MENORIGUAL      shift and go to state 80
    IGUALACION      shift and go to state 81
    DISTINTO        shift and go to state 82
    AND             shift and go to state 83
    OR              shift and go to state 84
    PUNTO           shift and go to state 85


state 158

    (92) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion . PTOYCOMA asignacion PARDER bloque
    (94) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion . PTOYCOMA expresion PARDER bloque
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . POR expresion
    (36) expresion -> expresion . DIVIDIDO expresion
    (37) expresion -> expresion . POTENCIA expresion
    (38) expresion -> expresion . MODULO expresion
    (41) expresion -> expresion . MAYOR expresion
    (42) expresion -> expresion . MENOR expresion
    (43) expresion -> expresion . MAYORIGUAL expresion
    (44) expresion -> expresion . MENORIGUAL expresion
    (45) expresion -> expresion . IGUALACION expresion
    (46) expresion -> expresion . DISTINTO expresion
    (47) expresion -> expresion . AND expresion
    (48) expresion -> expresion . OR expresion
    (67) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PTOYCOMA        shift and go to state 180
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    MAYOR           shift and go to state 77
    MENOR           shift and go to state 78
    MAYORIGUAL      shift and go to state 79
    MENORIGUAL      shift and go to state 80
    IGUALACION      shift and go to state 81
    DISTINTO        shift and go to state 82
    AND             shift and go to state 83
    OR              shift and go to state 84
    PUNTO           shift and go to state 85


state 159

    (95) ciclo_for_of -> FOR PARIZQ LET ID OF . expresion PARDER bloque
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion POR expresion
    (36) expresion -> . expresion DIVIDIDO expresion
    (37) expresion -> . expresion POTENCIA expresion
    (38) expresion -> . expresion MODULO expresion
    (39) expresion -> . MENOS expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . expresion MAYOR expresion
    (42) expresion -> . expresion MENOR expresion
    (43) expresion -> . expresion MAYORIGUAL expresion
    (44) expresion -> . expresion MENORIGUAL expresion
    (45) expresion -> . expresion IGUALACION expresion
    (46) expresion -> . expresion DISTINTO expresion
    (47) expresion -> . expresion AND expresion
    (48) expresion -> . expresion OR expresion
    (49) expresion -> . NOT expresion
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . CADENA
    (53) expresion -> . ID
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . ID INCREMENTO
    (57) expresion -> . ID DECREMENTO
    (58) expresion -> . INCREMENTO ID
    (59) expresion -> . DECREMENTO ID
    (60) expresion -> . aproximacion
    (61) expresion -> . exponencial
    (62) expresion -> . to_minusculas
    (63) expresion -> . to_mayusculas
    (64) expresion -> . separador
    (65) expresion -> . concatenacion
    (66) expresion -> . casteo_string
    (69) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (67) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (74) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 42
    NOT             shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    ID              shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CAST_STRING     shift and go to state 59

    expresion                      shift and go to state 181
    aproximacion                   shift and go to state 52
    exponencial                    shift and go to state 53
    to_minusculas                  shift and go to state 54
    to_mayusculas                  shift and go to state 55
    separador                      shift and go to state 56
    concatenacion                  shift and go to state 57
    casteo_string                  shift and go to state 58

state 160

    (100) parametro -> ID DOSPUNTOS . tipo
    (75) tipo -> . NUMBER
    (76) tipo -> . STRING
    (77) tipo -> . BOOLEAN
    (78) tipo -> . ANY

    NUMBER          shift and go to state 105
    STRING          shift and go to state 106
    BOOLEAN         shift and go to state 107
    ANY             shift and go to state 108

    tipo                           shift and go to state 182

state 161

    (96) funcion -> FUNCTION ID PARIZQ lista_parametros PARDER . bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 155

    bloque                         shift and go to state 183

state 162

    (98) lista_parametros -> lista_parametros COMA . parametro
    (100) parametro -> . ID DOSPUNTOS tipo

    ID              shift and go to state 139

    parametro                      shift and go to state 184

state 163

    (97) funcion -> FUNCTION ID PARIZQ PARDER bloque .

    PTOYCOMA        reduce using rule 97 (funcion -> FUNCTION ID PARIZQ PARDER bloque .)
    error           reduce using rule 97 (funcion -> FUNCTION ID PARIZQ PARDER bloque .)
    ID              reduce using rule 97 (funcion -> FUNCTION ID PARIZQ PARDER bloque .)
    INCREMENTO      reduce using rule 97 (funcion -> FUNCTION ID PARIZQ PARDER bloque .)
    DECREMENTO      reduce using rule 97 (funcion -> FUNCTION ID PARIZQ PARDER bloque .)
    LET             reduce using rule 97 (funcion -> FUNCTION ID PARIZQ PARDER bloque .)
    CONSOLE         reduce using rule 97 (funcion -> FUNCTION ID PARIZQ PARDER bloque .)
    RETURN          reduce using rule 97 (funcion -> FUNCTION ID PARIZQ PARDER bloque .)
    BREAK           reduce using rule 97 (funcion -> FUNCTION ID PARIZQ PARDER bloque .)
    CONTINUE        reduce using rule 97 (funcion -> FUNCTION ID PARIZQ PARDER bloque .)
    IF              reduce using rule 97 (funcion -> FUNCTION ID PARIZQ PARDER bloque .)
    WHILE           reduce using rule 97 (funcion -> FUNCTION ID PARIZQ PARDER bloque .)
    FOR             reduce using rule 97 (funcion -> FUNCTION ID PARIZQ PARDER bloque .)
    FUNCTION        reduce using rule 97 (funcion -> FUNCTION ID PARIZQ PARDER bloque .)
    $end            reduce using rule 97 (funcion -> FUNCTION ID PARIZQ PARDER bloque .)
    LLADER          reduce using rule 97 (funcion -> FUNCTION ID PARIZQ PARDER bloque .)


state 164

    (23) declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . POR expresion
    (36) expresion -> expresion . DIVIDIDO expresion
    (37) expresion -> expresion . POTENCIA expresion
    (38) expresion -> expresion . MODULO expresion
    (41) expresion -> expresion . MAYOR expresion
    (42) expresion -> expresion . MENOR expresion
    (43) expresion -> expresion . MAYORIGUAL expresion
    (44) expresion -> expresion . MENORIGUAL expresion
    (45) expresion -> expresion . IGUALACION expresion
    (46) expresion -> expresion . DISTINTO expresion
    (47) expresion -> expresion . AND expresion
    (48) expresion -> expresion . OR expresion
    (67) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PTOYCOMA        reduce using rule 23 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    error           reduce using rule 23 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    ID              reduce using rule 23 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    INCREMENTO      reduce using rule 23 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    DECREMENTO      reduce using rule 23 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    LET             reduce using rule 23 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    CONSOLE         reduce using rule 23 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    RETURN          reduce using rule 23 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    BREAK           reduce using rule 23 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    CONTINUE        reduce using rule 23 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    IF              reduce using rule 23 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    WHILE           reduce using rule 23 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    FOR             reduce using rule 23 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    FUNCTION        reduce using rule 23 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    $end            reduce using rule 23 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    LLADER          reduce using rule 23 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    MAYOR           shift and go to state 77
    MENOR           shift and go to state 78
    MAYORIGUAL      shift and go to state 79
    MENORIGUAL      shift and go to state 80
    IGUALACION      shift and go to state 81
    DISTINTO        shift and go to state 82
    AND             shift and go to state 83
    OR              shift and go to state 84
    PUNTO           shift and go to state 85


state 165

    (32) impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .

    PTOYCOMA        reduce using rule 32 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    error           reduce using rule 32 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    ID              reduce using rule 32 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    INCREMENTO      reduce using rule 32 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    DECREMENTO      reduce using rule 32 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    LET             reduce using rule 32 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 32 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    RETURN          reduce using rule 32 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    BREAK           reduce using rule 32 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 32 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    IF              reduce using rule 32 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    WHILE           reduce using rule 32 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    FOR             reduce using rule 32 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    FUNCTION        reduce using rule 32 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    $end            reduce using rule 32 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    LLADER          reduce using rule 32 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)

    tipo                           shift and go to state 171

state 166

    (67) aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion . PARDER
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . POR expresion
    (36) expresion -> expresion . DIVIDIDO expresion
    (37) expresion -> expresion . POTENCIA expresion
    (38) expresion -> expresion . MODULO expresion
    (41) expresion -> expresion . MAYOR expresion
    (42) expresion -> expresion . MENOR expresion
    (43) expresion -> expresion . MAYORIGUAL expresion
    (44) expresion -> expresion . MENORIGUAL expresion
    (45) expresion -> expresion . IGUALACION expresion
    (46) expresion -> expresion . DISTINTO expresion
    (47) expresion -> expresion . AND expresion
    (48) expresion -> expresion . OR expresion
    (67) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 185
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    MAYOR           shift and go to state 77
    MENOR           shift and go to state 78
    MAYORIGUAL      shift and go to state 79
    MENORIGUAL      shift and go to state 80
    IGUALACION      shift and go to state 81
    DISTINTO        shift and go to state 82
    AND             shift and go to state 83
    OR              shift and go to state 84
    PUNTO           shift and go to state 85

    instruccion4                   shift and go to state 172
    instruccion2                   shift and go to state 174
    instruccion3                   shift and go to state 7
    declaracion                    shift and go to state 12
    asignacion                     shift and go to state 13
    impresion                      shift and go to state 14
    condicional                    shift and go to state 15
    ciclo_while                    shift and go to state 16
    ciclo_for                      shift and go to state 17
    ciclo_for_of                   shift and go to state 18
    llamada_funcion                shift and go to state 19
    return                         shift and go to state 20
    break                          shift and go to state 21
    continue                       shift and go to state 22
    comentarios                    shift and go to state 175
    dec                            shift and go to state 24
    inc                            shift and go to state 25

state 167

    (68) exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion . PARDER
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . POR expresion
    (36) expresion -> expresion . DIVIDIDO expresion
    (37) expresion -> expresion . POTENCIA expresion
    (38) expresion -> expresion . MODULO expresion
    (41) expresion -> expresion . MAYOR expresion
    (42) expresion -> expresion . MENOR expresion
    (43) expresion -> expresion . MAYORIGUAL expresion
    (44) expresion -> expresion . MENORIGUAL expresion
    (45) expresion -> expresion . IGUALACION expresion
    (46) expresion -> expresion . DISTINTO expresion
    (47) expresion -> expresion . AND expresion
    (48) expresion -> expresion . OR expresion
    (67) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 186
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    MAYOR           shift and go to state 77
    MENOR           shift and go to state 78
    MAYORIGUAL      shift and go to state 79
    MENORIGUAL      shift and go to state 80
    IGUALACION      shift and go to state 81
    DISTINTO        shift and go to state 82
    AND             shift and go to state 83
    OR              shift and go to state 84
    PUNTO           shift and go to state 85


state 168

    (70) to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .

    MAS             reduce using rule 70 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    MENOS           reduce using rule 70 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    POR             reduce using rule 70 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 70 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    POTENCIA        reduce using rule 70 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    MODULO          reduce using rule 70 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    MAYOR           reduce using rule 70 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    MENOR           reduce using rule 70 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    MAYORIGUAL      reduce using rule 70 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    MENORIGUAL      reduce using rule 70 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    IGUALACION      reduce using rule 70 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    DISTINTO        reduce using rule 70 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    AND             reduce using rule 70 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    OR              reduce using rule 70 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    PUNTO           reduce using rule 70 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    PTOYCOMA        reduce using rule 70 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    error           reduce using rule 70 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    ID              reduce using rule 70 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    INCREMENTO      reduce using rule 70 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    DECREMENTO      reduce using rule 70 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    LET             reduce using rule 70 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    CONSOLE         reduce using rule 70 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    RETURN          reduce using rule 70 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    BREAK           reduce using rule 70 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    CONTINUE        reduce using rule 70 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    IF              reduce using rule 70 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    WHILE           reduce using rule 70 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    FOR             reduce using rule 70 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    FUNCTION        reduce using rule 70 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    $end            reduce using rule 70 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    LLADER          reduce using rule 70 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    PARDER          reduce using rule 70 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    COMA            reduce using rule 70 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)

    expresion                      shift and go to state 176
    dec                            shift and go to state 51
    inc                            shift and go to state 52
    funciones_nativas              shift and go to state 53
    casteo                         shift and go to state 54
    booleano                       shift and go to state 59
    aproximacion                   shift and go to state 61
    exponencial                    shift and go to state 62
    to_mayusculas                  shift and go to state 63
    to_minusculas                  shift and go to state 64
    separador                      shift and go to state 65
    concatenacion                  shift and go to state 66

state 169

    (71) to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .

    MAS             reduce using rule 71 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    MENOS           reduce using rule 71 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    POR             reduce using rule 71 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 71 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    POTENCIA        reduce using rule 71 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    MODULO          reduce using rule 71 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    MAYOR           reduce using rule 71 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    MENOR           reduce using rule 71 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    MAYORIGUAL      reduce using rule 71 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    MENORIGUAL      reduce using rule 71 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    IGUALACION      reduce using rule 71 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    DISTINTO        reduce using rule 71 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    AND             reduce using rule 71 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    OR              reduce using rule 71 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    PUNTO           reduce using rule 71 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    PTOYCOMA        reduce using rule 71 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    error           reduce using rule 71 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    ID              reduce using rule 71 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    INCREMENTO      reduce using rule 71 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    DECREMENTO      reduce using rule 71 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    LET             reduce using rule 71 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    CONSOLE         reduce using rule 71 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    RETURN          reduce using rule 71 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    BREAK           reduce using rule 71 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    CONTINUE        reduce using rule 71 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    IF              reduce using rule 71 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    WHILE           reduce using rule 71 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    FOR             reduce using rule 71 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    FUNCTION        reduce using rule 71 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    $end            reduce using rule 71 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    LLADER          reduce using rule 71 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    PARDER          reduce using rule 71 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    COMA            reduce using rule 71 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)


state 170

    (72) separador -> expresion PUNTO SPLIT PARIZQ expresion . PARDER
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . POR expresion
    (36) expresion -> expresion . DIVIDIDO expresion
    (37) expresion -> expresion . POTENCIA expresion
    (38) expresion -> expresion . MODULO expresion
    (41) expresion -> expresion . MAYOR expresion
    (42) expresion -> expresion . MENOR expresion
    (43) expresion -> expresion . MAYORIGUAL expresion
    (44) expresion -> expresion . MENORIGUAL expresion
    (45) expresion -> expresion . IGUALACION expresion
    (46) expresion -> expresion . DISTINTO expresion
    (47) expresion -> expresion . AND expresion
    (48) expresion -> expresion . OR expresion
    (67) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 187
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    MAYOR           shift and go to state 77
    MENOR           shift and go to state 78
    MAYORIGUAL      shift and go to state 79
    MENORIGUAL      shift and go to state 80
    IGUALACION      shift and go to state 81
    DISTINTO        shift and go to state 82
    AND             shift and go to state 83
    OR              shift and go to state 84
    PUNTO           shift and go to state 85


state 171

    (73) concatenacion -> expresion PUNTO CONCAT PARIZQ expresion . PARDER
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . POR expresion
    (36) expresion -> expresion . DIVIDIDO expresion
    (37) expresion -> expresion . POTENCIA expresion
    (38) expresion -> expresion . MODULO expresion
    (41) expresion -> expresion . MAYOR expresion
    (42) expresion -> expresion . MENOR expresion
    (43) expresion -> expresion . MAYORIGUAL expresion
    (44) expresion -> expresion . MENORIGUAL expresion
    (45) expresion -> expresion . IGUALACION expresion
    (46) expresion -> expresion . DISTINTO expresion
    (47) expresion -> expresion . AND expresion
    (48) expresion -> expresion . OR expresion
    (67) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 188
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    MAYOR           shift and go to state 77
    MENOR           shift and go to state 78
    MAYORIGUAL      shift and go to state 79
    MENORIGUAL      shift and go to state 80
    IGUALACION      shift and go to state 81
    DISTINTO        shift and go to state 82
    AND             shift and go to state 83
    OR              shift and go to state 84
    PUNTO           shift and go to state 85


state 172

    (69) expresion -> ID PUNTO TOSTRING PARIZQ PARDER .

    MAS             reduce using rule 69 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    MENOS           reduce using rule 69 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    POR             reduce using rule 69 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 69 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    POTENCIA        reduce using rule 69 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    MODULO          reduce using rule 69 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    MAYOR           reduce using rule 69 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    MENOR           reduce using rule 69 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    MAYORIGUAL      reduce using rule 69 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    MENORIGUAL      reduce using rule 69 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    IGUALACION      reduce using rule 69 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    DISTINTO        reduce using rule 69 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    AND             reduce using rule 69 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    OR              reduce using rule 69 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    PUNTO           reduce using rule 69 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    PTOYCOMA        reduce using rule 69 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    error           reduce using rule 69 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    ID              reduce using rule 69 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    INCREMENTO      reduce using rule 69 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    DECREMENTO      reduce using rule 69 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    LET             reduce using rule 69 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    CONSOLE         reduce using rule 69 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    RETURN          reduce using rule 69 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    BREAK           reduce using rule 69 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    CONTINUE        reduce using rule 69 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    IF              reduce using rule 69 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    WHILE           reduce using rule 69 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    FOR             reduce using rule 69 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    FUNCTION        reduce using rule 69 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    $end            reduce using rule 69 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    LLADER          reduce using rule 69 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    PARDER          reduce using rule 69 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    COMA            reduce using rule 69 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)


state 173

    (84) condicional_if -> IF PARIZQ expresion PARDER bloque ELSE . bloque
    (89) elif -> ELSE . IF PARIZQ expresion PARDER bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    IF              shift and go to state 189
    LLAIZQ          shift and go to state 155

    bloque                         shift and go to state 190

state 174

    (85) condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .
    (86) condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif . ELSE bloque
    (87) lista_elif -> lista_elif . elif
    (89) elif -> . ELSE IF PARIZQ expresion PARDER bloque

    PTOYCOMA        reduce using rule 85 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    error           reduce using rule 85 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    ID              reduce using rule 85 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    INCREMENTO      reduce using rule 85 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    DECREMENTO      reduce using rule 85 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    LET             reduce using rule 85 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    CONSOLE         reduce using rule 85 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    RETURN          reduce using rule 85 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    BREAK           reduce using rule 85 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    CONTINUE        reduce using rule 85 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    IF              reduce using rule 85 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    WHILE           reduce using rule 85 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    FOR             reduce using rule 85 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    FUNCTION        reduce using rule 85 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    $end            reduce using rule 85 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    LLADER          reduce using rule 85 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    ELSE            shift and go to state 191

    elif                           shift and go to state 192

state 175

    (88) lista_elif -> elif .

    ELSE            reduce using rule 88 (lista_elif -> elif .)
    PTOYCOMA        reduce using rule 88 (lista_elif -> elif .)
    error           reduce using rule 88 (lista_elif -> elif .)
    ID              reduce using rule 88 (lista_elif -> elif .)
    INCREMENTO      reduce using rule 88 (lista_elif -> elif .)
    DECREMENTO      reduce using rule 88 (lista_elif -> elif .)
    LET             reduce using rule 88 (lista_elif -> elif .)
    CONSOLE         reduce using rule 88 (lista_elif -> elif .)
    RETURN          reduce using rule 88 (lista_elif -> elif .)
    BREAK           reduce using rule 88 (lista_elif -> elif .)
    CONTINUE        reduce using rule 88 (lista_elif -> elif .)
    IF              reduce using rule 88 (lista_elif -> elif .)
    WHILE           reduce using rule 88 (lista_elif -> elif .)
    FOR             reduce using rule 88 (lista_elif -> elif .)
    FUNCTION        reduce using rule 88 (lista_elif -> elif .)
    $end            reduce using rule 88 (lista_elif -> elif .)
    LLADER          reduce using rule 88 (lista_elif -> elif .)


state 176

    (9) bloque -> LLAIZQ instruccion3 . LLADER
    (5) instruccion3 -> instruccion3 . instruccion2
    (6) instruccion3 -> instruccion3 . instruccion2 PTOYCOMA
    (11) instruccion2 -> . declaracion
    (12) instruccion2 -> . asignacion
    (13) instruccion2 -> . impresion
    (14) instruccion2 -> . return
    (15) instruccion2 -> . break
    (16) instruccion2 -> . continue
    (17) instruccion2 -> . condicional_if
    (18) instruccion2 -> . ciclo_while
    (19) instruccion2 -> . ciclo_for
    (20) instruccion2 -> . ciclo_for_of
    (21) instruccion2 -> . funcion
    (22) instruccion2 -> . llamada_funcion
    (28) instruccion2 -> . ID INCREMENTO
    (29) instruccion2 -> . INCREMENTO ID
    (30) instruccion2 -> . ID DECREMENTO
    (31) instruccion2 -> . DECREMENTO ID
    (23) declaracion -> . LET ID DOSPUNTOS tipo IGUAL expresion
    (24) declaracion -> . LET ID IGUAL expresion
    (25) declaracion -> . LET ID DOSPUNTOS tipo
    (26) declaracion -> . LET ID
    (27) asignacion -> . ID IGUAL expresion
    (32) impresion -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER
    (79) return -> . RETURN
    (80) return -> . RETURN expresion
    (82) break -> . BREAK
    (81) continue -> . CONTINUE
    (83) condicional_if -> . IF PARIZQ expresion PARDER bloque
    (84) condicional_if -> . IF PARIZQ expresion PARDER bloque ELSE bloque
    (85) condicional_if -> . IF PARIZQ expresion PARDER bloque lista_elif
    (86) condicional_if -> . IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque
    (90) ciclo_while -> . WHILE PARIZQ expresion PARDER bloque
    (91) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (92) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (93) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (94) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (95) ciclo_for_of -> . FOR PARIZQ LET ID OF expresion PARDER bloque
    (96) funcion -> . FUNCTION ID PARIZQ lista_parametros PARDER bloque
    (97) funcion -> . FUNCTION ID PARIZQ PARDER bloque
    (101) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (102) llamada_funcion -> . ID PARIZQ PARDER

    LLADER          shift and go to state 193
    ID              shift and go to state 17
    INCREMENTO      shift and go to state 18
    DECREMENTO      shift and go to state 19
    LET             shift and go to state 20
    CONSOLE         shift and go to state 21
    RETURN          shift and go to state 22
    BREAK           shift and go to state 23
    CONTINUE        shift and go to state 24
    IF              shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    FUNCTION        shift and go to state 28

    instruccion2                   shift and go to state 194
    declaracion                    shift and go to state 5
    asignacion                     shift and go to state 6
    impresion                      shift and go to state 7
    return                         shift and go to state 8
    break                          shift and go to state 9
    continue                       shift and go to state 10
    condicional_if                 shift and go to state 11
    ciclo_while                    shift and go to state 12
    ciclo_for                      shift and go to state 13
    ciclo_for_of                   shift and go to state 14
    funcion                        shift and go to state 15
    llamada_funcion                shift and go to state 16

state 177

    (47) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion . PTOYCOMA asignacion PARDER bloque
    (63) expresion -> expresion . MAS expresion
    (64) expresion -> expresion . MENOS expresion
    (65) expresion -> expresion . POR expresion
    (66) expresion -> expresion . DIVIDIDO expresion
    (67) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . POTENCIA expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALACION expresion
    (75) expresion -> expresion . DISTINTO expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (103) casteo -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (97) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (98) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (99) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (100) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (101) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (102) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    ELSE            reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    PTOYCOMA        reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    error           reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    ID              reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    INCREMENTO      reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    DECREMENTO      reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    LET             reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    CONSOLE         reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    RETURN          reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    BREAK           reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    CONTINUE        reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    IF              reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    WHILE           reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    FOR             reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    FUNCTION        reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    $end            reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    LLADER          reduce using rule 10 (bloque -> LLAIZQ LLADER .)


state 178

    (48) ciclo_for_of -> FOR PARIZQ LET ID OF . expresion PARDER bloque
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . expresion POTENCIA expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALACION expresion
    (75) expresion -> . expresion DISTINTO expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . dec
    (80) expresion -> . inc
    (81) expresion -> . funciones_nativas
    (82) expresion -> . casteo
    (83) expresion -> . PARIZQ expresion PARDER
    (84) expresion -> . ENTERO
    (85) expresion -> . DECIMAL
    (86) expresion -> . CADENA
    (87) expresion -> . booleano
    (88) expresion -> . ID
    (33) dec -> . ID DECREMENTO
    (34) dec -> . DECREMENTO ID
    (35) inc -> . ID INCREMENTO
    (36) inc -> . INCREMENTO ID
    (91) funciones_nativas -> . aproximacion
    (92) funciones_nativas -> . exponencial
    (93) funciones_nativas -> . to_mayusculas
    (94) funciones_nativas -> . to_minusculas
    (95) funciones_nativas -> . separador
    (96) funciones_nativas -> . concatenacion
    (103) casteo -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (104) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (89) booleano -> . TRUE
    (90) booleano -> . FALSE
    (97) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (98) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (99) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (100) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (101) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (102) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER

    LLADER          reduce using rule 7 (instruccion3 -> instruccion2 .)
    ID              reduce using rule 7 (instruccion3 -> instruccion2 .)
    INCREMENTO      reduce using rule 7 (instruccion3 -> instruccion2 .)
    DECREMENTO      reduce using rule 7 (instruccion3 -> instruccion2 .)
    LET             reduce using rule 7 (instruccion3 -> instruccion2 .)
    CONSOLE         reduce using rule 7 (instruccion3 -> instruccion2 .)
    RETURN          reduce using rule 7 (instruccion3 -> instruccion2 .)
    BREAK           reduce using rule 7 (instruccion3 -> instruccion2 .)
    CONTINUE        reduce using rule 7 (instruccion3 -> instruccion2 .)
    IF              reduce using rule 7 (instruccion3 -> instruccion2 .)
    WHILE           reduce using rule 7 (instruccion3 -> instruccion2 .)
    FOR             reduce using rule 7 (instruccion3 -> instruccion2 .)
    FUNCTION        reduce using rule 7 (instruccion3 -> instruccion2 .)
    PTOYCOMA        shift and go to state 195

    expresion                      shift and go to state 183
    dec                            shift and go to state 51
    inc                            shift and go to state 52
    funciones_nativas              shift and go to state 53
    casteo                         shift and go to state 54
    booleano                       shift and go to state 59
    aproximacion                   shift and go to state 61
    exponencial                    shift and go to state 62
    to_mayusculas                  shift and go to state 63
    to_minusculas                  shift and go to state 64
    separador                      shift and go to state 65
    concatenacion                  shift and go to state 66

state 179

    (91) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA . asignacion PARDER bloque
    (93) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA . expresion PARDER bloque
    (27) asignacion -> . ID IGUAL expresion
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion POR expresion
    (36) expresion -> . expresion DIVIDIDO expresion
    (37) expresion -> . expresion POTENCIA expresion
    (38) expresion -> . expresion MODULO expresion
    (39) expresion -> . MENOS expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . expresion MAYOR expresion
    (42) expresion -> . expresion MENOR expresion
    (43) expresion -> . expresion MAYORIGUAL expresion
    (44) expresion -> . expresion MENORIGUAL expresion
    (45) expresion -> . expresion IGUALACION expresion
    (46) expresion -> . expresion DISTINTO expresion
    (47) expresion -> . expresion AND expresion
    (48) expresion -> . expresion OR expresion
    (49) expresion -> . NOT expresion
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . CADENA
    (53) expresion -> . ID
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . ID INCREMENTO
    (57) expresion -> . ID DECREMENTO
    (58) expresion -> . INCREMENTO ID
    (59) expresion -> . DECREMENTO ID
    (60) expresion -> . aproximacion
    (61) expresion -> . exponencial
    (62) expresion -> . to_minusculas
    (63) expresion -> . to_mayusculas
    (64) expresion -> . separador
    (65) expresion -> . concatenacion
    (66) expresion -> . casteo_string
    (69) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (67) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (74) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    ID              shift and go to state 198
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 42
    NOT             shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CAST_STRING     shift and go to state 59

    expresion                      shift and go to state 196
    asignacion                     shift and go to state 197
    aproximacion                   shift and go to state 52
    exponencial                    shift and go to state 53
    to_minusculas                  shift and go to state 54
    to_mayusculas                  shift and go to state 55
    separador                      shift and go to state 56
    concatenacion                  shift and go to state 57
    casteo_string                  shift and go to state 58

state 180

    (92) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA . asignacion PARDER bloque
    (94) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA . expresion PARDER bloque
    (27) asignacion -> . ID IGUAL expresion
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion POR expresion
    (36) expresion -> . expresion DIVIDIDO expresion
    (37) expresion -> . expresion POTENCIA expresion
    (38) expresion -> . expresion MODULO expresion
    (39) expresion -> . MENOS expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . expresion MAYOR expresion
    (42) expresion -> . expresion MENOR expresion
    (43) expresion -> . expresion MAYORIGUAL expresion
    (44) expresion -> . expresion MENORIGUAL expresion
    (45) expresion -> . expresion IGUALACION expresion
    (46) expresion -> . expresion DISTINTO expresion
    (47) expresion -> . expresion AND expresion
    (48) expresion -> . expresion OR expresion
    (49) expresion -> . NOT expresion
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . CADENA
    (53) expresion -> . ID
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . ID INCREMENTO
    (57) expresion -> . ID DECREMENTO
    (58) expresion -> . INCREMENTO ID
    (59) expresion -> . DECREMENTO ID
    (60) expresion -> . aproximacion
    (61) expresion -> . exponencial
    (62) expresion -> . to_minusculas
    (63) expresion -> . to_mayusculas
    (64) expresion -> . separador
    (65) expresion -> . concatenacion
    (66) expresion -> . casteo_string
    (69) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (67) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (74) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    ID              shift and go to state 198
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 42
    NOT             shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CAST_STRING     shift and go to state 59

    asignacion                     shift and go to state 199
    expresion                      shift and go to state 200
    aproximacion                   shift and go to state 52
    exponencial                    shift and go to state 53
    to_minusculas                  shift and go to state 54
    to_mayusculas                  shift and go to state 55
    separador                      shift and go to state 56
    concatenacion                  shift and go to state 57
    casteo_string                  shift and go to state 58

state 181

    (95) ciclo_for_of -> FOR PARIZQ LET ID OF expresion . PARDER bloque
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . POR expresion
    (36) expresion -> expresion . DIVIDIDO expresion
    (37) expresion -> expresion . POTENCIA expresion
    (38) expresion -> expresion . MODULO expresion
    (41) expresion -> expresion . MAYOR expresion
    (42) expresion -> expresion . MENOR expresion
    (43) expresion -> expresion . MAYORIGUAL expresion
    (44) expresion -> expresion . MENORIGUAL expresion
    (45) expresion -> expresion . IGUALACION expresion
    (46) expresion -> expresion . DISTINTO expresion
    (47) expresion -> expresion . AND expresion
    (48) expresion -> expresion . OR expresion
    (67) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 201
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    MAYOR           shift and go to state 77
    MENOR           shift and go to state 78
    MAYORIGUAL      shift and go to state 79
    MENORIGUAL      shift and go to state 80
    IGUALACION      shift and go to state 81
    DISTINTO        shift and go to state 82
    AND             shift and go to state 83
    OR              shift and go to state 84
    PUNTO           shift and go to state 85

    expresion                      shift and go to state 186
    dec                            shift and go to state 51
    inc                            shift and go to state 52
    funciones_nativas              shift and go to state 53
    casteo                         shift and go to state 54
    booleano                       shift and go to state 59
    aproximacion                   shift and go to state 61
    exponencial                    shift and go to state 62
    to_mayusculas                  shift and go to state 63
    to_minusculas                  shift and go to state 64
    separador                      shift and go to state 65
    concatenacion                  shift and go to state 66

state 182

    (100) parametro -> ID DOSPUNTOS tipo .

    PARDER          reduce using rule 100 (parametro -> ID DOSPUNTOS tipo .)
    COMA            reduce using rule 100 (parametro -> ID DOSPUNTOS tipo .)


state 183

    (96) funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .

    PTOYCOMA        reduce using rule 96 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .)
    error           reduce using rule 96 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .)
    ID              reduce using rule 96 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .)
    INCREMENTO      reduce using rule 96 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .)
    DECREMENTO      reduce using rule 96 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .)
    LET             reduce using rule 96 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .)
    CONSOLE         reduce using rule 96 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .)
    RETURN          reduce using rule 96 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .)
    BREAK           reduce using rule 96 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .)
    CONTINUE        reduce using rule 96 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .)
    IF              reduce using rule 96 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .)
    WHILE           reduce using rule 96 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .)
    FOR             reduce using rule 96 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .)
    FUNCTION        reduce using rule 96 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .)
    $end            reduce using rule 96 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .)
    LLADER          reduce using rule 96 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .)


state 184

    (98) lista_parametros -> lista_parametros COMA parametro .

    PARDER          reduce using rule 98 (lista_parametros -> lista_parametros COMA parametro .)
    COMA            reduce using rule 98 (lista_parametros -> lista_parametros COMA parametro .)

    expresion                      shift and go to state 189
    dec                            shift and go to state 51
    inc                            shift and go to state 52
    funciones_nativas              shift and go to state 53
    casteo                         shift and go to state 54
    booleano                       shift and go to state 59
    aproximacion                   shift and go to state 61
    exponencial                    shift and go to state 62
    to_mayusculas                  shift and go to state 63
    to_minusculas                  shift and go to state 64
    separador                      shift and go to state 65
    concatenacion                  shift and go to state 66

state 185

    (67) aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .

    MAS             reduce using rule 67 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    MENOS           reduce using rule 67 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    POR             reduce using rule 67 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 67 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 67 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    MODULO          reduce using rule 67 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 67 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    MENOR           reduce using rule 67 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 67 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 67 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    IGUALACION      reduce using rule 67 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    DISTINTO        reduce using rule 67 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    AND             reduce using rule 67 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    OR              reduce using rule 67 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 67 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    PTOYCOMA        reduce using rule 67 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    error           reduce using rule 67 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    ID              reduce using rule 67 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    INCREMENTO      reduce using rule 67 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    DECREMENTO      reduce using rule 67 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    LET             reduce using rule 67 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 67 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    RETURN          reduce using rule 67 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    BREAK           reduce using rule 67 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 67 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    IF              reduce using rule 67 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    WHILE           reduce using rule 67 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    FOR             reduce using rule 67 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    FUNCTION        reduce using rule 67 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    $end            reduce using rule 67 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    LLADER          reduce using rule 67 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    PARDER          reduce using rule 67 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    COMA            reduce using rule 67 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)

    expresion                      shift and go to state 190
    dec                            shift and go to state 51
    inc                            shift and go to state 52
    funciones_nativas              shift and go to state 53
    casteo                         shift and go to state 54
    booleano                       shift and go to state 59
    aproximacion                   shift and go to state 61
    exponencial                    shift and go to state 62
    to_mayusculas                  shift and go to state 63
    to_minusculas                  shift and go to state 64
    separador                      shift and go to state 65
    concatenacion                  shift and go to state 66

state 186

    (68) exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .

    MAS             reduce using rule 68 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    MENOS           reduce using rule 68 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    POR             reduce using rule 68 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 68 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 68 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    MODULO          reduce using rule 68 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 68 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    MENOR           reduce using rule 68 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 68 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 68 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    IGUALACION      reduce using rule 68 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    DISTINTO        reduce using rule 68 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    AND             reduce using rule 68 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    OR              reduce using rule 68 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 68 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    PTOYCOMA        reduce using rule 68 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    error           reduce using rule 68 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    ID              reduce using rule 68 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    INCREMENTO      reduce using rule 68 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    DECREMENTO      reduce using rule 68 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    LET             reduce using rule 68 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 68 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    RETURN          reduce using rule 68 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    BREAK           reduce using rule 68 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 68 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    IF              reduce using rule 68 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    WHILE           reduce using rule 68 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    FOR             reduce using rule 68 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    FUNCTION        reduce using rule 68 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    $end            reduce using rule 68 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    LLADER          reduce using rule 68 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    PARDER          reduce using rule 68 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    COMA            reduce using rule 68 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)


state 187

    (72) separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .

    MAS             reduce using rule 72 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    MENOS           reduce using rule 72 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    POR             reduce using rule 72 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 72 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 72 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    MODULO          reduce using rule 72 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 72 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    MENOR           reduce using rule 72 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 72 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 72 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    IGUALACION      reduce using rule 72 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    DISTINTO        reduce using rule 72 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    AND             reduce using rule 72 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    OR              reduce using rule 72 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 72 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    PTOYCOMA        reduce using rule 72 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    error           reduce using rule 72 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    ID              reduce using rule 72 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    INCREMENTO      reduce using rule 72 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    DECREMENTO      reduce using rule 72 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    LET             reduce using rule 72 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 72 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    RETURN          reduce using rule 72 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    BREAK           reduce using rule 72 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 72 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    IF              reduce using rule 72 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    WHILE           reduce using rule 72 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    FOR             reduce using rule 72 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    FUNCTION        reduce using rule 72 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    $end            reduce using rule 72 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    LLADER          reduce using rule 72 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    PARDER          reduce using rule 72 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    COMA            reduce using rule 72 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)


state 188

    (73) concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .

    MAS             reduce using rule 73 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    MENOS           reduce using rule 73 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    POR             reduce using rule 73 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 73 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 73 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    MODULO          reduce using rule 73 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 73 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    MENOR           reduce using rule 73 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 73 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 73 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    IGUALACION      reduce using rule 73 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    DISTINTO        reduce using rule 73 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    AND             reduce using rule 73 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    OR              reduce using rule 73 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 73 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    PTOYCOMA        reduce using rule 73 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    error           reduce using rule 73 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    ID              reduce using rule 73 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    INCREMENTO      reduce using rule 73 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    DECREMENTO      reduce using rule 73 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    LET             reduce using rule 73 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 73 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    RETURN          reduce using rule 73 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    BREAK           reduce using rule 73 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 73 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    IF              reduce using rule 73 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    WHILE           reduce using rule 73 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    FOR             reduce using rule 73 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    FUNCTION        reduce using rule 73 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    $end            reduce using rule 73 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    LLADER          reduce using rule 73 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    PARDER          reduce using rule 73 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    COMA            reduce using rule 73 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)


state 189

    (89) elif -> ELSE IF . PARIZQ expresion PARDER bloque

    PARIZQ          shift and go to state 202


state 190

    (84) condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .

    PTOYCOMA        reduce using rule 84 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    error           reduce using rule 84 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    ID              reduce using rule 84 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    INCREMENTO      reduce using rule 84 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    DECREMENTO      reduce using rule 84 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    LET             reduce using rule 84 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    CONSOLE         reduce using rule 84 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    RETURN          reduce using rule 84 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    BREAK           reduce using rule 84 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    CONTINUE        reduce using rule 84 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    IF              reduce using rule 84 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    WHILE           reduce using rule 84 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    FOR             reduce using rule 84 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    FUNCTION        reduce using rule 84 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    $end            reduce using rule 84 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    LLADER          reduce using rule 84 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)


state 191

    (86) condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE . bloque
    (89) elif -> ELSE . IF PARIZQ expresion PARDER bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    IF              shift and go to state 189
    LLAIZQ          shift and go to state 155

    bloque                         shift and go to state 203

state 192

    (87) lista_elif -> lista_elif elif .

    ELSE            reduce using rule 87 (lista_elif -> lista_elif elif .)
    PTOYCOMA        reduce using rule 87 (lista_elif -> lista_elif elif .)
    error           reduce using rule 87 (lista_elif -> lista_elif elif .)
    ID              reduce using rule 87 (lista_elif -> lista_elif elif .)
    INCREMENTO      reduce using rule 87 (lista_elif -> lista_elif elif .)
    DECREMENTO      reduce using rule 87 (lista_elif -> lista_elif elif .)
    LET             reduce using rule 87 (lista_elif -> lista_elif elif .)
    CONSOLE         reduce using rule 87 (lista_elif -> lista_elif elif .)
    RETURN          reduce using rule 87 (lista_elif -> lista_elif elif .)
    BREAK           reduce using rule 87 (lista_elif -> lista_elif elif .)
    CONTINUE        reduce using rule 87 (lista_elif -> lista_elif elif .)
    IF              reduce using rule 87 (lista_elif -> lista_elif elif .)
    WHILE           reduce using rule 87 (lista_elif -> lista_elif elif .)
    FOR             reduce using rule 87 (lista_elif -> lista_elif elif .)
    FUNCTION        reduce using rule 87 (lista_elif -> lista_elif elif .)
    $end            reduce using rule 87 (lista_elif -> lista_elif elif .)
    LLADER          reduce using rule 87 (lista_elif -> lista_elif elif .)

    tipo                           shift and go to state 191

state 193

    (53) lista_parametros -> lista_parametros COMA ID . DOSPUNTOS tipo

    ELSE            reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    PTOYCOMA        reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    error           reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    ID              reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    INCREMENTO      reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    DECREMENTO      reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    LET             reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    CONSOLE         reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    RETURN          reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    BREAK           reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    CONTINUE        reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    IF              reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    WHILE           reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    FOR             reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    FUNCTION        reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    $end            reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    LLADER          reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)


state 194

    (52) funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS tipo . bloque
    (10) bloque -> . LLAIZQ instruccion4 LLADER
    (11) bloque -> . LLAIZQ LLADER

    LLADER          reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    ID              reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    INCREMENTO      reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    DECREMENTO      reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    LET             reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    CONSOLE         reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    RETURN          reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    BREAK           reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    CONTINUE        reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    IF              reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    WHILE           reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    FOR             reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    FUNCTION        reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    PTOYCOMA        shift and go to state 204

    bloque                         shift and go to state 193

state 195

    (10) bloque -> LLAIZQ instruccion4 . LLADER
    (8) instruccion4 -> instruccion4 . instruccion2
    (6) instruccion2 -> . instruccion3 PTOYCOMA
    (7) instruccion2 -> . instruccion3
    (12) instruccion3 -> . declaracion
    (13) instruccion3 -> . asignacion
    (14) instruccion3 -> . impresion
    (15) instruccion3 -> . condicional
    (16) instruccion3 -> . ciclo_while
    (17) instruccion3 -> . ciclo_for
    (18) instruccion3 -> . ciclo_for_of
    (19) instruccion3 -> . llamada_funcion
    (20) instruccion3 -> . return
    (21) instruccion3 -> . break
    (22) instruccion3 -> . continue
    (23) instruccion3 -> . comentarios
    (26) declaracion -> . LET ID IGUAL expresion
    (27) declaracion -> . LET ID
    (28) declaracion -> . LET ID DOSPUNTOS tipo IGUAL expresion
    (29) declaracion -> . LET ID DOSPUNTOS tipo
    (30) asignacion -> . ID IGUAL expresion
    (31) asignacion -> . dec
    (32) asignacion -> . inc
    (37) impresion -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER
    (38) condicional -> . IF PARIZQ expresion PARDER bloque
    (39) condicional -> . IF PARIZQ expresion PARDER bloque ELSE bloque
    (40) condicional -> . IF PARIZQ expresion PARDER bloque lista_elif
    (41) condicional -> . IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque
    (45) ciclo_while -> . WHILE PARIZQ expresion PARDER bloque
    (46) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (47) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (48) ciclo_for_of -> . FOR PARIZQ LET ID OF expresion PARDER bloque
    (55) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (56) llamada_funcion -> . ID PARIZQ PARDER
    (105) return -> . RETURN expresion
    (106) return -> . RETURN
    (107) break -> . BREAK
    (108) continue -> . CONTINUE
    (24) comentarios -> . COMENTARIO
    (25) comentarios -> . COMENTARIO_MULTILINEA
    (33) dec -> . ID DECREMENTO
    (34) dec -> . DECREMENTO ID
    (35) inc -> . ID INCREMENTO
    (36) inc -> . INCREMENTO ID

    LLADER          reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    ID              reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    INCREMENTO      reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    DECREMENTO      reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    LET             reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    CONSOLE         reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    RETURN          reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    BREAK           reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    CONTINUE        reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    IF              reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    WHILE           reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    FOR             reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    FUNCTION        reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)

    instruccion2                   shift and go to state 195
    instruccion3                   shift and go to state 7
    declaracion                    shift and go to state 12
    asignacion                     shift and go to state 13
    impresion                      shift and go to state 14
    condicional                    shift and go to state 15
    ciclo_while                    shift and go to state 16
    ciclo_for                      shift and go to state 17
    ciclo_for_of                   shift and go to state 18
    llamada_funcion                shift and go to state 19
    return                         shift and go to state 20
    break                          shift and go to state 21
    continue                       shift and go to state 22
    comentarios                    shift and go to state 175
    dec                            shift and go to state 24
    inc                            shift and go to state 25

state 196

    (93) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion . PARDER bloque
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . POR expresion
    (36) expresion -> expresion . DIVIDIDO expresion
    (37) expresion -> expresion . POTENCIA expresion
    (38) expresion -> expresion . MODULO expresion
    (41) expresion -> expresion . MAYOR expresion
    (42) expresion -> expresion . MENOR expresion
    (43) expresion -> expresion . MAYORIGUAL expresion
    (44) expresion -> expresion . MENORIGUAL expresion
    (45) expresion -> expresion . IGUALACION expresion
    (46) expresion -> expresion . DISTINTO expresion
    (47) expresion -> expresion . AND expresion
    (48) expresion -> expresion . OR expresion
    (67) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 205
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    MAYOR           shift and go to state 77
    MENOR           shift and go to state 78
    MAYORIGUAL      shift and go to state 79
    MENORIGUAL      shift and go to state 80
    IGUALACION      shift and go to state 81
    DISTINTO        shift and go to state 82
    AND             shift and go to state 83
    OR              shift and go to state 84
    PUNTO           shift and go to state 85


state 197

    (91) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion . PARDER bloque

    PARDER          shift and go to state 206


state 198

    (27) asignacion -> ID . IGUAL expresion
    (53) expresion -> ID .
    (56) expresion -> ID . INCREMENTO
    (57) expresion -> ID . DECREMENTO
    (69) expresion -> ID . PUNTO TOSTRING PARIZQ PARDER

  ! shift/reduce conflict for PUNTO resolved as shift
    IGUAL           shift and go to state 34
    PARDER          reduce using rule 53 (expresion -> ID .)
    MAS             reduce using rule 53 (expresion -> ID .)
    MENOS           reduce using rule 53 (expresion -> ID .)
    POR             reduce using rule 53 (expresion -> ID .)
    DIVIDIDO        reduce using rule 53 (expresion -> ID .)
    POTENCIA        reduce using rule 53 (expresion -> ID .)
    MODULO          reduce using rule 53 (expresion -> ID .)
    MAYOR           reduce using rule 53 (expresion -> ID .)
    MENOR           reduce using rule 53 (expresion -> ID .)
    MAYORIGUAL      reduce using rule 53 (expresion -> ID .)
    MENORIGUAL      reduce using rule 53 (expresion -> ID .)
    IGUALACION      reduce using rule 53 (expresion -> ID .)
    DISTINTO        reduce using rule 53 (expresion -> ID .)
    AND             reduce using rule 53 (expresion -> ID .)
    OR              reduce using rule 53 (expresion -> ID .)
    INCREMENTO      shift and go to state 89
    DECREMENTO      shift and go to state 90
    PUNTO           shift and go to state 91

  ! PUNTO           [ reduce using rule 53 (expresion -> ID .) ]


state 199

    (92) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion . PARDER bloque

    PARDER          shift and go to state 207


state 200

    (94) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion . PARDER bloque
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . POR expresion
    (36) expresion -> expresion . DIVIDIDO expresion
    (37) expresion -> expresion . POTENCIA expresion
    (38) expresion -> expresion . MODULO expresion
    (41) expresion -> expresion . MAYOR expresion
    (42) expresion -> expresion . MENOR expresion
    (43) expresion -> expresion . MAYORIGUAL expresion
    (44) expresion -> expresion . MENORIGUAL expresion
    (45) expresion -> expresion . IGUALACION expresion
    (46) expresion -> expresion . DISTINTO expresion
    (47) expresion -> expresion . AND expresion
    (48) expresion -> expresion . OR expresion
    (67) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 208
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    MAYOR           shift and go to state 77
    MENOR           shift and go to state 78
    MAYORIGUAL      shift and go to state 79
    MENORIGUAL      shift and go to state 80
    IGUALACION      shift and go to state 81
    DISTINTO        shift and go to state 82
    AND             shift and go to state 83
    OR              shift and go to state 84
    PUNTO           shift and go to state 85


state 201

    (95) ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER . bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 155

    bloque                         shift and go to state 209

state 202

    (89) elif -> ELSE IF PARIZQ . expresion PARDER bloque
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion POR expresion
    (36) expresion -> . expresion DIVIDIDO expresion
    (37) expresion -> . expresion POTENCIA expresion
    (38) expresion -> . expresion MODULO expresion
    (39) expresion -> . MENOS expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . expresion MAYOR expresion
    (42) expresion -> . expresion MENOR expresion
    (43) expresion -> . expresion MAYORIGUAL expresion
    (44) expresion -> . expresion MENORIGUAL expresion
    (45) expresion -> . expresion IGUALACION expresion
    (46) expresion -> . expresion DISTINTO expresion
    (47) expresion -> . expresion AND expresion
    (48) expresion -> . expresion OR expresion
    (49) expresion -> . NOT expresion
    (50) expresion -> . ENTERO
    (51) expresion -> . DECIMAL
    (52) expresion -> . CADENA
    (53) expresion -> . ID
    (54) expresion -> . TRUE
    (55) expresion -> . FALSE
    (56) expresion -> . ID INCREMENTO
    (57) expresion -> . ID DECREMENTO
    (58) expresion -> . INCREMENTO ID
    (59) expresion -> . DECREMENTO ID
    (60) expresion -> . aproximacion
    (61) expresion -> . exponencial
    (62) expresion -> . to_minusculas
    (63) expresion -> . to_mayusculas
    (64) expresion -> . separador
    (65) expresion -> . concatenacion
    (66) expresion -> . casteo_string
    (69) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (67) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (74) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 42
    NOT             shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA          shift and go to state 46
    ID              shift and go to state 47
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    INCREMENTO      shift and go to state 50
    DECREMENTO      shift and go to state 51
    CAST_STRING     shift and go to state 59

    expresion                      shift and go to state 210
    aproximacion                   shift and go to state 52
    exponencial                    shift and go to state 53
    to_minusculas                  shift and go to state 54
    to_mayusculas                  shift and go to state 55
    separador                      shift and go to state 56
    concatenacion                  shift and go to state 57
    casteo_string                  shift and go to state 58

state 203

    (86) condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .

    PTOYCOMA        reduce using rule 86 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    error           reduce using rule 86 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    ID              reduce using rule 86 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    INCREMENTO      reduce using rule 86 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    DECREMENTO      reduce using rule 86 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    LET             reduce using rule 86 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    CONSOLE         reduce using rule 86 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    RETURN          reduce using rule 86 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    BREAK           reduce using rule 86 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    CONTINUE        reduce using rule 86 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    IF              reduce using rule 86 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    WHILE           reduce using rule 86 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    FOR             reduce using rule 86 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    FUNCTION        reduce using rule 86 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    $end            reduce using rule 86 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    LLADER          reduce using rule 86 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)


state 204

    (46) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA . asignacion PARDER bloque
    (30) asignacion -> . ID IGUAL expresion
    (31) asignacion -> . dec
    (32) asignacion -> . inc
    (33) dec -> . ID DECREMENTO
    (34) dec -> . DECREMENTO ID
    (35) inc -> . ID INCREMENTO
    (36) inc -> . INCREMENTO ID

    LLADER          reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    ID              reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    INCREMENTO      reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    DECREMENTO      reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    LET             reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    CONSOLE         reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    RETURN          reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    BREAK           reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    CONTINUE        reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    IF              reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    WHILE           reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    FOR             reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    FUNCTION        reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)

    asignacion                     shift and go to state 200
    dec                            shift and go to state 24
    inc                            shift and go to state 25

state 205

    (93) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER . bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 155

    bloque                         shift and go to state 211

state 206

    (91) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER . bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 155

    bloque                         shift and go to state 212

state 207

    (92) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER . bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 155

    bloque                         shift and go to state 213

state 208

    (94) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER . bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 155

    bloque                         shift and go to state 214

state 209

    (95) ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .

    PTOYCOMA        reduce using rule 95 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    error           reduce using rule 95 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    ID              reduce using rule 95 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    INCREMENTO      reduce using rule 95 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    DECREMENTO      reduce using rule 95 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    LET             reduce using rule 95 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    CONSOLE         reduce using rule 95 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    RETURN          reduce using rule 95 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    BREAK           reduce using rule 95 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    CONTINUE        reduce using rule 95 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    IF              reduce using rule 95 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    WHILE           reduce using rule 95 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    FOR             reduce using rule 95 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    FUNCTION        reduce using rule 95 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    $end            reduce using rule 95 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    LLADER          reduce using rule 95 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)


state 210

    (89) elif -> ELSE IF PARIZQ expresion . PARDER bloque
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . POR expresion
    (36) expresion -> expresion . DIVIDIDO expresion
    (37) expresion -> expresion . POTENCIA expresion
    (38) expresion -> expresion . MODULO expresion
    (41) expresion -> expresion . MAYOR expresion
    (42) expresion -> expresion . MENOR expresion
    (43) expresion -> expresion . MAYORIGUAL expresion
    (44) expresion -> expresion . MENORIGUAL expresion
    (45) expresion -> expresion . IGUALACION expresion
    (46) expresion -> expresion . DISTINTO expresion
    (47) expresion -> expresion . AND expresion
    (48) expresion -> expresion . OR expresion
    (67) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (68) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (70) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (71) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (72) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (73) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 215
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIVIDIDO        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    MAYOR           shift and go to state 77
    MENOR           shift and go to state 78
    MAYORIGUAL      shift and go to state 79
    MENORIGUAL      shift and go to state 80
    IGUALACION      shift and go to state 81
    DISTINTO        shift and go to state 82
    AND             shift and go to state 83
    OR              shift and go to state 84
    PUNTO           shift and go to state 85


state 211

    (93) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .

    PTOYCOMA        reduce using rule 93 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    error           reduce using rule 93 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    ID              reduce using rule 93 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    INCREMENTO      reduce using rule 93 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    DECREMENTO      reduce using rule 93 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    LET             reduce using rule 93 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    CONSOLE         reduce using rule 93 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    RETURN          reduce using rule 93 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    BREAK           reduce using rule 93 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    CONTINUE        reduce using rule 93 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    IF              reduce using rule 93 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    WHILE           reduce using rule 93 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    FOR             reduce using rule 93 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    FUNCTION        reduce using rule 93 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    $end            reduce using rule 93 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    LLADER          reduce using rule 93 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)


state 212

    (91) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .

    PTOYCOMA        reduce using rule 91 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    error           reduce using rule 91 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    ID              reduce using rule 91 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    INCREMENTO      reduce using rule 91 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    DECREMENTO      reduce using rule 91 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    LET             reduce using rule 91 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    CONSOLE         reduce using rule 91 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    RETURN          reduce using rule 91 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    BREAK           reduce using rule 91 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    CONTINUE        reduce using rule 91 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    IF              reduce using rule 91 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    WHILE           reduce using rule 91 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    FOR             reduce using rule 91 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    FUNCTION        reduce using rule 91 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    $end            reduce using rule 91 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    LLADER          reduce using rule 91 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)


state 213

    (92) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .

    PTOYCOMA        reduce using rule 92 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    error           reduce using rule 92 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    ID              reduce using rule 92 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    INCREMENTO      reduce using rule 92 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    DECREMENTO      reduce using rule 92 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    LET             reduce using rule 92 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    CONSOLE         reduce using rule 92 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    RETURN          reduce using rule 92 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    BREAK           reduce using rule 92 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    CONTINUE        reduce using rule 92 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    IF              reduce using rule 92 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    WHILE           reduce using rule 92 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    FOR             reduce using rule 92 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    FUNCTION        reduce using rule 92 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    $end            reduce using rule 92 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    LLADER          reduce using rule 92 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)


state 214

    (94) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .

    PTOYCOMA        reduce using rule 94 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    error           reduce using rule 94 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    ID              reduce using rule 94 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    INCREMENTO      reduce using rule 94 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    DECREMENTO      reduce using rule 94 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    LET             reduce using rule 94 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    CONSOLE         reduce using rule 94 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    RETURN          reduce using rule 94 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    BREAK           reduce using rule 94 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    CONTINUE        reduce using rule 94 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    IF              reduce using rule 94 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    WHILE           reduce using rule 94 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    FOR             reduce using rule 94 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    FUNCTION        reduce using rule 94 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    $end            reduce using rule 94 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    LLADER          reduce using rule 94 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)

    bloque                         shift and go to state 207

state 215

    (89) elif -> ELSE IF PARIZQ expresion PARDER . bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 155

    bloque                         shift and go to state 216

state 216

    (89) elif -> ELSE IF PARIZQ expresion PARDER bloque .

    ELSE            reduce using rule 89 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    PTOYCOMA        reduce using rule 89 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    error           reduce using rule 89 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    ID              reduce using rule 89 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    INCREMENTO      reduce using rule 89 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    DECREMENTO      reduce using rule 89 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    LET             reduce using rule 89 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    CONSOLE         reduce using rule 89 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    RETURN          reduce using rule 89 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    BREAK           reduce using rule 89 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    CONTINUE        reduce using rule 89 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    IF              reduce using rule 89 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    WHILE           reduce using rule 89 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    FOR             reduce using rule 89 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    FUNCTION        reduce using rule 89 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    $end            reduce using rule 89 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    LLADER          reduce using rule 89 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)


state 194

    (10) bloque -> LLAIZQ instruccion4 LLADER .

    error           reduce using rule 10 (bloque -> LLAIZQ instruccion4 LLADER .)
    FUNCTION        reduce using rule 10 (bloque -> LLAIZQ instruccion4 LLADER .)
    COMENTARIO      reduce using rule 10 (bloque -> LLAIZQ instruccion4 LLADER .)
    COMENTARIO_MULTILINEA reduce using rule 10 (bloque -> LLAIZQ instruccion4 LLADER .)
    LET             reduce using rule 10 (bloque -> LLAIZQ instruccion4 LLADER .)
    ID              reduce using rule 10 (bloque -> LLAIZQ instruccion4 LLADER .)
    CONSOLE         reduce using rule 10 (bloque -> LLAIZQ instruccion4 LLADER .)
    IF              reduce using rule 10 (bloque -> LLAIZQ instruccion4 LLADER .)
    WHILE           reduce using rule 10 (bloque -> LLAIZQ instruccion4 LLADER .)
    FOR             reduce using rule 10 (bloque -> LLAIZQ instruccion4 LLADER .)
    RETURN          reduce using rule 10 (bloque -> LLAIZQ instruccion4 LLADER .)
    BREAK           reduce using rule 10 (bloque -> LLAIZQ instruccion4 LLADER .)
    CONTINUE        reduce using rule 10 (bloque -> LLAIZQ instruccion4 LLADER .)
    DECREMENTO      reduce using rule 10 (bloque -> LLAIZQ instruccion4 LLADER .)
    INCREMENTO      reduce using rule 10 (bloque -> LLAIZQ instruccion4 LLADER .)
    $end            reduce using rule 10 (bloque -> LLAIZQ instruccion4 LLADER .)
    ELSE            reduce using rule 10 (bloque -> LLAIZQ instruccion4 LLADER .)
    PTOYCOMA        reduce using rule 10 (bloque -> LLAIZQ instruccion4 LLADER .)
    LLADER          reduce using rule 10 (bloque -> LLAIZQ instruccion4 LLADER .)


state 195

    (8) instruccion4 -> instruccion4 instruccion2 .

    LLADER          reduce using rule 8 (instruccion4 -> instruccion4 instruccion2 .)
    LET             reduce using rule 8 (instruccion4 -> instruccion4 instruccion2 .)
    ID              reduce using rule 8 (instruccion4 -> instruccion4 instruccion2 .)
    CONSOLE         reduce using rule 8 (instruccion4 -> instruccion4 instruccion2 .)
    IF              reduce using rule 8 (instruccion4 -> instruccion4 instruccion2 .)
    WHILE           reduce using rule 8 (instruccion4 -> instruccion4 instruccion2 .)
    FOR             reduce using rule 8 (instruccion4 -> instruccion4 instruccion2 .)
    RETURN          reduce using rule 8 (instruccion4 -> instruccion4 instruccion2 .)
    BREAK           reduce using rule 8 (instruccion4 -> instruccion4 instruccion2 .)
    CONTINUE        reduce using rule 8 (instruccion4 -> instruccion4 instruccion2 .)
    COMENTARIO      reduce using rule 8 (instruccion4 -> instruccion4 instruccion2 .)
    COMENTARIO_MULTILINEA reduce using rule 8 (instruccion4 -> instruccion4 instruccion2 .)
    DECREMENTO      reduce using rule 8 (instruccion4 -> instruccion4 instruccion2 .)
    INCREMENTO      reduce using rule 8 (instruccion4 -> instruccion4 instruccion2 .)


state 196

    (44) elseif -> ELSE IF . PARIZQ expresion PARDER bloque

    PARIZQ          shift and go to state 209


state 197

    (39) condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .

    PTOYCOMA        reduce using rule 39 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    error           reduce using rule 39 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    FUNCTION        reduce using rule 39 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    COMENTARIO      reduce using rule 39 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    COMENTARIO_MULTILINEA reduce using rule 39 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    LET             reduce using rule 39 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    ID              reduce using rule 39 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    CONSOLE         reduce using rule 39 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    IF              reduce using rule 39 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    WHILE           reduce using rule 39 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    FOR             reduce using rule 39 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    RETURN          reduce using rule 39 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    BREAK           reduce using rule 39 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    CONTINUE        reduce using rule 39 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    DECREMENTO      reduce using rule 39 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    INCREMENTO      reduce using rule 39 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    $end            reduce using rule 39 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    LLADER          reduce using rule 39 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)


state 198

    (41) condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE . bloque
    (44) elseif -> ELSE . IF PARIZQ expresion PARDER bloque
    (10) bloque -> . LLAIZQ instruccion4 LLADER
    (11) bloque -> . LLAIZQ LLADER

    IF              shift and go to state 196
    LLAIZQ          shift and go to state 150

    bloque                         shift and go to state 210

state 199

    (42) lista_elif -> lista_elif elseif .

    ELSE            reduce using rule 42 (lista_elif -> lista_elif elseif .)
    PTOYCOMA        reduce using rule 42 (lista_elif -> lista_elif elseif .)
    error           reduce using rule 42 (lista_elif -> lista_elif elseif .)
    FUNCTION        reduce using rule 42 (lista_elif -> lista_elif elseif .)
    COMENTARIO      reduce using rule 42 (lista_elif -> lista_elif elseif .)
    COMENTARIO_MULTILINEA reduce using rule 42 (lista_elif -> lista_elif elseif .)
    LET             reduce using rule 42 (lista_elif -> lista_elif elseif .)
    ID              reduce using rule 42 (lista_elif -> lista_elif elseif .)
    CONSOLE         reduce using rule 42 (lista_elif -> lista_elif elseif .)
    IF              reduce using rule 42 (lista_elif -> lista_elif elseif .)
    WHILE           reduce using rule 42 (lista_elif -> lista_elif elseif .)
    FOR             reduce using rule 42 (lista_elif -> lista_elif elseif .)
    RETURN          reduce using rule 42 (lista_elif -> lista_elif elseif .)
    BREAK           reduce using rule 42 (lista_elif -> lista_elif elseif .)
    CONTINUE        reduce using rule 42 (lista_elif -> lista_elif elseif .)
    DECREMENTO      reduce using rule 42 (lista_elif -> lista_elif elseif .)
    INCREMENTO      reduce using rule 42 (lista_elif -> lista_elif elseif .)
    $end            reduce using rule 42 (lista_elif -> lista_elif elseif .)
    LLADER          reduce using rule 42 (lista_elif -> lista_elif elseif .)


state 200

    (46) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion . PARDER bloque

    PARDER          shift and go to state 211


state 201

    (47) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion . PARDER bloque

    PARDER          shift and go to state 212


state 202

    (48) ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER . bloque
    (10) bloque -> . LLAIZQ instruccion4 LLADER
    (11) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 150

    bloque                         shift and go to state 213

state 203

    (97) aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .

    MAS             reduce using rule 97 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    MENOS           reduce using rule 97 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    POR             reduce using rule 97 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 97 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    MODULO          reduce using rule 97 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 97 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 97 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    MENOR           reduce using rule 97 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 97 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 97 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    IGUALACION      reduce using rule 97 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    DISTINTO        reduce using rule 97 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    AND             reduce using rule 97 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    OR              reduce using rule 97 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 97 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    PTOYCOMA        reduce using rule 97 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    error           reduce using rule 97 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    FUNCTION        reduce using rule 97 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    COMENTARIO      reduce using rule 97 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    COMENTARIO_MULTILINEA reduce using rule 97 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    LET             reduce using rule 97 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    ID              reduce using rule 97 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 97 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    IF              reduce using rule 97 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    WHILE           reduce using rule 97 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    FOR             reduce using rule 97 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    RETURN          reduce using rule 97 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    BREAK           reduce using rule 97 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 97 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    DECREMENTO      reduce using rule 97 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    INCREMENTO      reduce using rule 97 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    $end            reduce using rule 97 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    LLADER          reduce using rule 97 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    PARDER          reduce using rule 97 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    COMA            reduce using rule 97 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)


state 204

    (98) exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .

    MAS             reduce using rule 98 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    MENOS           reduce using rule 98 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    POR             reduce using rule 98 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 98 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    MODULO          reduce using rule 98 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 98 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 98 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    MENOR           reduce using rule 98 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 98 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 98 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    IGUALACION      reduce using rule 98 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    DISTINTO        reduce using rule 98 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    AND             reduce using rule 98 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    OR              reduce using rule 98 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 98 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    PTOYCOMA        reduce using rule 98 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    error           reduce using rule 98 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    FUNCTION        reduce using rule 98 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    COMENTARIO      reduce using rule 98 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    COMENTARIO_MULTILINEA reduce using rule 98 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    LET             reduce using rule 98 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    ID              reduce using rule 98 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 98 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    IF              reduce using rule 98 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    WHILE           reduce using rule 98 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    FOR             reduce using rule 98 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    RETURN          reduce using rule 98 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    BREAK           reduce using rule 98 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 98 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    DECREMENTO      reduce using rule 98 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    INCREMENTO      reduce using rule 98 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    $end            reduce using rule 98 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    LLADER          reduce using rule 98 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    PARDER          reduce using rule 98 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    COMA            reduce using rule 98 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)


state 205

    (101) separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .

    MAS             reduce using rule 101 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    MENOS           reduce using rule 101 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    POR             reduce using rule 101 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 101 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    MODULO          reduce using rule 101 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 101 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 101 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    MENOR           reduce using rule 101 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 101 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 101 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    IGUALACION      reduce using rule 101 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    DISTINTO        reduce using rule 101 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    AND             reduce using rule 101 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    OR              reduce using rule 101 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 101 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    PTOYCOMA        reduce using rule 101 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    error           reduce using rule 101 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    FUNCTION        reduce using rule 101 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    COMENTARIO      reduce using rule 101 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    COMENTARIO_MULTILINEA reduce using rule 101 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    LET             reduce using rule 101 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    ID              reduce using rule 101 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 101 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    IF              reduce using rule 101 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    WHILE           reduce using rule 101 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    FOR             reduce using rule 101 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    RETURN          reduce using rule 101 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    BREAK           reduce using rule 101 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 101 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    DECREMENTO      reduce using rule 101 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    INCREMENTO      reduce using rule 101 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    $end            reduce using rule 101 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    LLADER          reduce using rule 101 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    PARDER          reduce using rule 101 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    COMA            reduce using rule 101 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)


state 206

    (102) concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .

    MAS             reduce using rule 102 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    MENOS           reduce using rule 102 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    POR             reduce using rule 102 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 102 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    MODULO          reduce using rule 102 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 102 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 102 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    MENOR           reduce using rule 102 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 102 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 102 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    IGUALACION      reduce using rule 102 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    DISTINTO        reduce using rule 102 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    AND             reduce using rule 102 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    OR              reduce using rule 102 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 102 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    PTOYCOMA        reduce using rule 102 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    error           reduce using rule 102 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    FUNCTION        reduce using rule 102 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    COMENTARIO      reduce using rule 102 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    COMENTARIO_MULTILINEA reduce using rule 102 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    LET             reduce using rule 102 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    ID              reduce using rule 102 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 102 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    IF              reduce using rule 102 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    WHILE           reduce using rule 102 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    FOR             reduce using rule 102 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    RETURN          reduce using rule 102 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    BREAK           reduce using rule 102 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 102 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    DECREMENTO      reduce using rule 102 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    INCREMENTO      reduce using rule 102 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    $end            reduce using rule 102 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    LLADER          reduce using rule 102 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    PARDER          reduce using rule 102 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    COMA            reduce using rule 102 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)


state 207

    (50) funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .

    error           reduce using rule 50 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .)
    FUNCTION        reduce using rule 50 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .)
    COMENTARIO      reduce using rule 50 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .)
    COMENTARIO_MULTILINEA reduce using rule 50 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .)
    LET             reduce using rule 50 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .)
    ID              reduce using rule 50 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .)
    CONSOLE         reduce using rule 50 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .)
    IF              reduce using rule 50 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .)
    WHILE           reduce using rule 50 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .)
    FOR             reduce using rule 50 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .)
    RETURN          reduce using rule 50 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .)
    BREAK           reduce using rule 50 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .)
    CONTINUE        reduce using rule 50 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .)
    DECREMENTO      reduce using rule 50 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .)
    INCREMENTO      reduce using rule 50 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .)
    $end            reduce using rule 50 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .)


state 208

    (53) lista_parametros -> lista_parametros COMA ID DOSPUNTOS tipo .

    PARDER          reduce using rule 53 (lista_parametros -> lista_parametros COMA ID DOSPUNTOS tipo .)
    COMA            reduce using rule 53 (lista_parametros -> lista_parametros COMA ID DOSPUNTOS tipo .)


state 209

    (44) elseif -> ELSE IF PARIZQ . expresion PARDER bloque
    (63) expresion -> . expresion MAS expresion
    (64) expresion -> . expresion MENOS expresion
    (65) expresion -> . expresion POR expresion
    (66) expresion -> . expresion DIVIDIDO expresion
    (67) expresion -> . expresion MODULO expresion
    (68) expresion -> . expresion POTENCIA expresion
    (69) expresion -> . MENOS expresion
    (70) expresion -> . expresion MAYOR expresion
    (71) expresion -> . expresion MENOR expresion
    (72) expresion -> . expresion MAYORIGUAL expresion
    (73) expresion -> . expresion MENORIGUAL expresion
    (74) expresion -> . expresion IGUALACION expresion
    (75) expresion -> . expresion DISTINTO expresion
    (76) expresion -> . expresion AND expresion
    (77) expresion -> . expresion OR expresion
    (78) expresion -> . NOT expresion
    (79) expresion -> . dec
    (80) expresion -> . inc
    (81) expresion -> . funciones_nativas
    (82) expresion -> . casteo
    (83) expresion -> . PARIZQ expresion PARDER
    (84) expresion -> . ENTERO
    (85) expresion -> . DECIMAL
    (86) expresion -> . CADENA
    (87) expresion -> . booleano
    (88) expresion -> . ID
    (33) dec -> . ID DECREMENTO
    (34) dec -> . DECREMENTO ID
    (35) inc -> . ID INCREMENTO
    (36) inc -> . INCREMENTO ID
    (91) funciones_nativas -> . aproximacion
    (92) funciones_nativas -> . exponencial
    (93) funciones_nativas -> . to_mayusculas
    (94) funciones_nativas -> . to_minusculas
    (95) funciones_nativas -> . separador
    (96) funciones_nativas -> . concatenacion
    (103) casteo -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (104) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (89) booleano -> . TRUE
    (90) booleano -> . FALSE
    (97) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (98) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (99) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (100) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (101) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (102) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER

    MENOS           shift and go to state 49
    NOT             shift and go to state 50
    PARIZQ          shift and go to state 55
    ENTERO          shift and go to state 56
    DECIMAL         shift and go to state 57
    CADENA          shift and go to state 58
    ID              shift and go to state 60
    DECREMENTO      shift and go to state 33
    INCREMENTO      shift and go to state 34
    CAST_STRING     shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    expresion                      shift and go to state 214
    dec                            shift and go to state 51
    inc                            shift and go to state 52
    funciones_nativas              shift and go to state 53
    casteo                         shift and go to state 54
    booleano                       shift and go to state 59
    aproximacion                   shift and go to state 61
    exponencial                    shift and go to state 62
    to_mayusculas                  shift and go to state 63
    to_minusculas                  shift and go to state 64
    separador                      shift and go to state 65
    concatenacion                  shift and go to state 66

state 210

    (41) condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .

    PTOYCOMA        reduce using rule 41 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    error           reduce using rule 41 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    FUNCTION        reduce using rule 41 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    COMENTARIO      reduce using rule 41 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    COMENTARIO_MULTILINEA reduce using rule 41 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    LET             reduce using rule 41 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    ID              reduce using rule 41 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    CONSOLE         reduce using rule 41 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    IF              reduce using rule 41 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    WHILE           reduce using rule 41 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    FOR             reduce using rule 41 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    RETURN          reduce using rule 41 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    BREAK           reduce using rule 41 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    CONTINUE        reduce using rule 41 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    DECREMENTO      reduce using rule 41 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    INCREMENTO      reduce using rule 41 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    $end            reduce using rule 41 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    LLADER          reduce using rule 41 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)


state 211

    (46) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER . bloque
    (10) bloque -> . LLAIZQ instruccion4 LLADER
    (11) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 150

    bloque                         shift and go to state 215

state 212

    (47) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER . bloque
    (10) bloque -> . LLAIZQ instruccion4 LLADER
    (11) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 150

    bloque                         shift and go to state 216

state 213

    (48) ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .

    PTOYCOMA        reduce using rule 48 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    error           reduce using rule 48 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    FUNCTION        reduce using rule 48 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    COMENTARIO      reduce using rule 48 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    COMENTARIO_MULTILINEA reduce using rule 48 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    LET             reduce using rule 48 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    ID              reduce using rule 48 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    CONSOLE         reduce using rule 48 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    IF              reduce using rule 48 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    WHILE           reduce using rule 48 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    FOR             reduce using rule 48 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    RETURN          reduce using rule 48 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    BREAK           reduce using rule 48 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    CONTINUE        reduce using rule 48 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    DECREMENTO      reduce using rule 48 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    INCREMENTO      reduce using rule 48 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    $end            reduce using rule 48 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    LLADER          reduce using rule 48 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)


state 214

    (44) elseif -> ELSE IF PARIZQ expresion . PARDER bloque
    (63) expresion -> expresion . MAS expresion
    (64) expresion -> expresion . MENOS expresion
    (65) expresion -> expresion . POR expresion
    (66) expresion -> expresion . DIVIDIDO expresion
    (67) expresion -> expresion . MODULO expresion
    (68) expresion -> expresion . POTENCIA expresion
    (70) expresion -> expresion . MAYOR expresion
    (71) expresion -> expresion . MENOR expresion
    (72) expresion -> expresion . MAYORIGUAL expresion
    (73) expresion -> expresion . MENORIGUAL expresion
    (74) expresion -> expresion . IGUALACION expresion
    (75) expresion -> expresion . DISTINTO expresion
    (76) expresion -> expresion . AND expresion
    (77) expresion -> expresion . OR expresion
    (103) casteo -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (97) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (98) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (99) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (100) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (101) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (102) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 217
    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    POR             shift and go to state 88
    DIVIDIDO        shift and go to state 89
    MODULO          shift and go to state 90
    POTENCIA        shift and go to state 91
    MAYOR           shift and go to state 92
    MENOR           shift and go to state 93
    MAYORIGUAL      shift and go to state 94
    MENORIGUAL      shift and go to state 95
    IGUALACION      shift and go to state 96
    DISTINTO        shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99
    PUNTO           shift and go to state 100


state 215

    (46) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .

    PTOYCOMA        reduce using rule 46 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    error           reduce using rule 46 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    FUNCTION        reduce using rule 46 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    COMENTARIO      reduce using rule 46 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    COMENTARIO_MULTILINEA reduce using rule 46 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    LET             reduce using rule 46 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    ID              reduce using rule 46 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    CONSOLE         reduce using rule 46 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    IF              reduce using rule 46 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    WHILE           reduce using rule 46 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    FOR             reduce using rule 46 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    RETURN          reduce using rule 46 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    BREAK           reduce using rule 46 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    CONTINUE        reduce using rule 46 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    DECREMENTO      reduce using rule 46 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    INCREMENTO      reduce using rule 46 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    $end            reduce using rule 46 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    LLADER          reduce using rule 46 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)


state 216

    (47) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .

    PTOYCOMA        reduce using rule 47 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    error           reduce using rule 47 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    FUNCTION        reduce using rule 47 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    COMENTARIO      reduce using rule 47 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    COMENTARIO_MULTILINEA reduce using rule 47 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    LET             reduce using rule 47 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    ID              reduce using rule 47 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    CONSOLE         reduce using rule 47 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    IF              reduce using rule 47 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    WHILE           reduce using rule 47 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    FOR             reduce using rule 47 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    RETURN          reduce using rule 47 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    BREAK           reduce using rule 47 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    CONTINUE        reduce using rule 47 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    DECREMENTO      reduce using rule 47 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    INCREMENTO      reduce using rule 47 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    $end            reduce using rule 47 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    LLADER          reduce using rule 47 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)


state 217

    (44) elseif -> ELSE IF PARIZQ expresion PARDER . bloque
    (10) bloque -> . LLAIZQ instruccion4 LLADER
    (11) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 150

    bloque                         shift and go to state 218

state 218

    (44) elseif -> ELSE IF PARIZQ expresion PARDER bloque .

    ELSE            reduce using rule 44 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    PTOYCOMA        reduce using rule 44 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    error           reduce using rule 44 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    FUNCTION        reduce using rule 44 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    COMENTARIO      reduce using rule 44 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    COMENTARIO_MULTILINEA reduce using rule 44 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    LET             reduce using rule 44 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    ID              reduce using rule 44 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    CONSOLE         reduce using rule 44 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    IF              reduce using rule 44 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    WHILE           reduce using rule 44 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    FOR             reduce using rule 44 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    RETURN          reduce using rule 44 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    BREAK           reduce using rule 44 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    CONTINUE        reduce using rule 44 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    DECREMENTO      reduce using rule 44 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    INCREMENTO      reduce using rule 44 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    $end            reduce using rule 44 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    LLADER          reduce using rule 44 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 22 resolved as shift
WARNING: shift/reduce conflict for INCREMENTO in state 22 resolved as shift
WARNING: shift/reduce conflict for DECREMENTO in state 22 resolved as shift
WARNING: shift/reduce conflict for INCREMENTO in state 47 resolved as shift
WARNING: shift/reduce conflict for DECREMENTO in state 47 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 47 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 198 resolved as shift
