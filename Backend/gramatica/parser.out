Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ARRAY
    COMA
    CONCAT
    CORDER
    CORIZQ
    FUNCTION
    INTERFACE
    NULL
    SPLIT
    TOEXPONENTIAL
    TOFIXED
    TOLOWERCASE
    TOSTRING
    TOUPPERCASE

Grammar

Rule 0     S' -> instrucciones
Rule 1     instrucciones -> instrucciones instruccion
Rule 2     instrucciones -> instruccion
Rule 3     instruccion -> instruccion2 PTOYCOMA
Rule 4     instruccion -> instruccion2
Rule 5     instruccion3 -> instruccion3 instruccion2
Rule 6     instruccion3 -> instruccion3 instruccion2 PTOYCOMA
Rule 7     instruccion3 -> instruccion2
Rule 8     instruccion3 -> instruccion2 PTOYCOMA
Rule 9     bloque -> LLAIZQ instruccion3 LLADER
Rule 10    bloque -> LLAIZQ LLADER
Rule 11    instruccion2 -> declaracion
Rule 12    instruccion2 -> asignacion
Rule 13    instruccion2 -> impresion
Rule 14    instruccion2 -> return
Rule 15    instruccion2 -> break
Rule 16    instruccion2 -> continue
Rule 17    instruccion2 -> condicional_if
Rule 18    instruccion2 -> ciclo_while
Rule 19    instruccion2 -> ciclo_for
Rule 20    instruccion2 -> ciclo_for_of
Rule 21    declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion
Rule 22    declaracion -> LET ID IGUAL expresion
Rule 23    asignacion -> ID IGUAL expresion
Rule 24    impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER
Rule 25    expresion -> expresion MAS expresion
Rule 26    expresion -> expresion MENOS expresion
Rule 27    expresion -> expresion POR expresion
Rule 28    expresion -> expresion DIVIDIDO expresion
Rule 29    expresion -> expresion POTENCIA expresion
Rule 30    expresion -> expresion MODULO expresion
Rule 31    expresion -> MENOS expresion
Rule 32    expresion -> PARIZQ expresion PARDER
Rule 33    expresion -> expresion MAYOR expresion
Rule 34    expresion -> expresion MENOR expresion
Rule 35    expresion -> expresion MAYORIGUAL expresion
Rule 36    expresion -> expresion MENORIGUAL expresion
Rule 37    expresion -> expresion IGUALACION expresion
Rule 38    expresion -> expresion DISTINTO expresion
Rule 39    expresion -> expresion AND expresion
Rule 40    expresion -> expresion OR expresion
Rule 41    expresion -> NOT expresion
Rule 42    expresion -> NUMERO
Rule 43    expresion -> CADENA
Rule 44    expresion -> ID
Rule 45    expresion -> TRUE
Rule 46    expresion -> FALSE
Rule 47    expresion -> ID MAS MAS
Rule 48    expresion -> ID DECREMENTO
Rule 49    expresion -> MAS MAS ID
Rule 50    expresion -> DECREMENTO ID
Rule 51    tipo -> NUMBER
Rule 52    tipo -> STRING
Rule 53    tipo -> BOOLEAN
Rule 54    tipo -> ANY
Rule 55    return -> RETURN
Rule 56    return -> RETURN expresion
Rule 57    continue -> CONTINUE
Rule 58    break -> BREAK
Rule 59    condicional_if -> IF PARIZQ expresion PARDER bloque
Rule 60    condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque
Rule 61    condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif
Rule 62    condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque
Rule 63    lista_elif -> lista_elif elif
Rule 64    lista_elif -> elif
Rule 65    elif -> ELSE IF PARIZQ expresion PARDER bloque
Rule 66    ciclo_while -> WHILE PARIZQ expresion PARDER bloque
Rule 67    ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
Rule 68    ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
Rule 69    ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
Rule 70    ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
Rule 71    ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque
Rule 72    instruccion -> error PTOYCOMA

Terminals, with rules where they appear

AND                  : 39
ANY                  : 54
ARRAY                : 
BOOLEAN              : 53
BREAK                : 58
CADENA               : 43
COMA                 : 
CONCAT               : 
CONSOLE              : 24
CONTINUE             : 57
CORDER               : 
CORIZQ               : 
DECREMENTO           : 48 50
DISTINTO             : 38
DIVIDIDO             : 28
DOSPUNTOS            : 21
ELSE                 : 60 62 65
FALSE                : 46
FOR                  : 67 68 69 70 71
FUNCTION             : 
ID                   : 21 22 23 44 47 48 49 50 71
IF                   : 59 60 61 62 65
IGUAL                : 21 22 23
IGUALACION           : 37
INTERFACE            : 
LET                  : 21 22 71
LLADER               : 9 10
LLAIZQ               : 9 10
LOG                  : 24
MAS                  : 25 47 47 49 49
MAYOR                : 33
MAYORIGUAL           : 35
MENOR                : 34
MENORIGUAL           : 36
MENOS                : 26 31
MODULO               : 30
NOT                  : 41
NULL                 : 
NUMBER               : 51
NUMERO               : 42
OF                   : 71
OR                   : 40
PARDER               : 24 32 59 60 61 62 65 66 67 68 69 70 71
PARIZQ               : 24 32 59 60 61 62 65 66 67 68 69 70 71
POR                  : 27
POTENCIA             : 29
PTOYCOMA             : 3 6 8 67 67 68 68 69 69 70 70 72
PUNTO                : 24
RETURN               : 55 56
SPLIT                : 
STRING               : 52
TOEXPONENTIAL        : 
TOFIXED              : 
TOLOWERCASE          : 
TOSTRING             : 
TOUPPERCASE          : 
TRUE                 : 45
WHILE                : 66
error                : 72

Nonterminals, with rules where they appear

asignacion           : 12 67 68 68 70
bloque               : 59 60 60 61 62 62 65 66 67 68 69 70 71
break                : 15
ciclo_for            : 19
ciclo_for_of         : 20
ciclo_while          : 18
condicional_if       : 17
continue             : 16
declaracion          : 11 67 69
elif                 : 63 64
expresion            : 21 22 23 24 25 25 26 26 27 27 28 28 29 29 30 30 31 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 56 59 60 61 62 65 66 67 68 69 69 70 70 71
impresion            : 13
instruccion          : 1 2
instruccion2         : 3 4 5 6 7 8
instruccion3         : 5 6 9
instrucciones        : 1 0
lista_elif           : 61 62 63
return               : 14
tipo                 : 21

Parsing method: LALR

state 0

    (0) S' -> . instrucciones
    (1) instrucciones -> . instrucciones instruccion
    (2) instrucciones -> . instruccion
    (3) instruccion -> . instruccion2 PTOYCOMA
    (4) instruccion -> . instruccion2
    (72) instruccion -> . error PTOYCOMA
    (11) instruccion2 -> . declaracion
    (12) instruccion2 -> . asignacion
    (13) instruccion2 -> . impresion
    (14) instruccion2 -> . return
    (15) instruccion2 -> . break
    (16) instruccion2 -> . continue
    (17) instruccion2 -> . condicional_if
    (18) instruccion2 -> . ciclo_while
    (19) instruccion2 -> . ciclo_for
    (20) instruccion2 -> . ciclo_for_of
    (21) declaracion -> . LET ID DOSPUNTOS tipo IGUAL expresion
    (22) declaracion -> . LET ID IGUAL expresion
    (23) asignacion -> . ID IGUAL expresion
    (24) impresion -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER
    (55) return -> . RETURN
    (56) return -> . RETURN expresion
    (58) break -> . BREAK
    (57) continue -> . CONTINUE
    (59) condicional_if -> . IF PARIZQ expresion PARDER bloque
    (60) condicional_if -> . IF PARIZQ expresion PARDER bloque ELSE bloque
    (61) condicional_if -> . IF PARIZQ expresion PARDER bloque lista_elif
    (62) condicional_if -> . IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque
    (66) ciclo_while -> . WHILE PARIZQ expresion PARDER bloque
    (67) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (68) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (69) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (70) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (71) ciclo_for_of -> . FOR PARIZQ LET ID OF expresion PARDER bloque

    error           shift and go to state 4
    LET             shift and go to state 15
    ID              shift and go to state 16
    CONSOLE         shift and go to state 17
    RETURN          shift and go to state 18
    BREAK           shift and go to state 19
    CONTINUE        shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    FOR             shift and go to state 23

    instrucciones                  shift and go to state 1
    instruccion                    shift and go to state 2
    instruccion2                   shift and go to state 3
    declaracion                    shift and go to state 5
    asignacion                     shift and go to state 6
    impresion                      shift and go to state 7
    return                         shift and go to state 8
    break                          shift and go to state 9
    continue                       shift and go to state 10
    condicional_if                 shift and go to state 11
    ciclo_while                    shift and go to state 12
    ciclo_for                      shift and go to state 13
    ciclo_for_of                   shift and go to state 14

state 1

    (0) S' -> instrucciones .
    (1) instrucciones -> instrucciones . instruccion
    (3) instruccion -> . instruccion2 PTOYCOMA
    (4) instruccion -> . instruccion2
    (72) instruccion -> . error PTOYCOMA
    (11) instruccion2 -> . declaracion
    (12) instruccion2 -> . asignacion
    (13) instruccion2 -> . impresion
    (14) instruccion2 -> . return
    (15) instruccion2 -> . break
    (16) instruccion2 -> . continue
    (17) instruccion2 -> . condicional_if
    (18) instruccion2 -> . ciclo_while
    (19) instruccion2 -> . ciclo_for
    (20) instruccion2 -> . ciclo_for_of
    (21) declaracion -> . LET ID DOSPUNTOS tipo IGUAL expresion
    (22) declaracion -> . LET ID IGUAL expresion
    (23) asignacion -> . ID IGUAL expresion
    (24) impresion -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER
    (55) return -> . RETURN
    (56) return -> . RETURN expresion
    (58) break -> . BREAK
    (57) continue -> . CONTINUE
    (59) condicional_if -> . IF PARIZQ expresion PARDER bloque
    (60) condicional_if -> . IF PARIZQ expresion PARDER bloque ELSE bloque
    (61) condicional_if -> . IF PARIZQ expresion PARDER bloque lista_elif
    (62) condicional_if -> . IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque
    (66) ciclo_while -> . WHILE PARIZQ expresion PARDER bloque
    (67) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (68) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (69) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (70) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (71) ciclo_for_of -> . FOR PARIZQ LET ID OF expresion PARDER bloque

    error           shift and go to state 4
    LET             shift and go to state 15
    ID              shift and go to state 16
    CONSOLE         shift and go to state 17
    RETURN          shift and go to state 18
    BREAK           shift and go to state 19
    CONTINUE        shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    FOR             shift and go to state 23

    instruccion                    shift and go to state 24
    instruccion2                   shift and go to state 3
    declaracion                    shift and go to state 5
    asignacion                     shift and go to state 6
    impresion                      shift and go to state 7
    return                         shift and go to state 8
    break                          shift and go to state 9
    continue                       shift and go to state 10
    condicional_if                 shift and go to state 11
    ciclo_while                    shift and go to state 12
    ciclo_for                      shift and go to state 13
    ciclo_for_of                   shift and go to state 14

state 2

    (2) instrucciones -> instruccion .

    error           reduce using rule 2 (instrucciones -> instruccion .)
    LET             reduce using rule 2 (instrucciones -> instruccion .)
    ID              reduce using rule 2 (instrucciones -> instruccion .)
    CONSOLE         reduce using rule 2 (instrucciones -> instruccion .)
    RETURN          reduce using rule 2 (instrucciones -> instruccion .)
    BREAK           reduce using rule 2 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 2 (instrucciones -> instruccion .)
    IF              reduce using rule 2 (instrucciones -> instruccion .)
    WHILE           reduce using rule 2 (instrucciones -> instruccion .)
    FOR             reduce using rule 2 (instrucciones -> instruccion .)
    $end            reduce using rule 2 (instrucciones -> instruccion .)


state 3

    (3) instruccion -> instruccion2 . PTOYCOMA
    (4) instruccion -> instruccion2 .

    PTOYCOMA        shift and go to state 25
    error           reduce using rule 4 (instruccion -> instruccion2 .)
    LET             reduce using rule 4 (instruccion -> instruccion2 .)
    ID              reduce using rule 4 (instruccion -> instruccion2 .)
    CONSOLE         reduce using rule 4 (instruccion -> instruccion2 .)
    RETURN          reduce using rule 4 (instruccion -> instruccion2 .)
    BREAK           reduce using rule 4 (instruccion -> instruccion2 .)
    CONTINUE        reduce using rule 4 (instruccion -> instruccion2 .)
    IF              reduce using rule 4 (instruccion -> instruccion2 .)
    WHILE           reduce using rule 4 (instruccion -> instruccion2 .)
    FOR             reduce using rule 4 (instruccion -> instruccion2 .)
    $end            reduce using rule 4 (instruccion -> instruccion2 .)


state 4

    (72) instruccion -> error . PTOYCOMA

    PTOYCOMA        shift and go to state 26


state 5

    (11) instruccion2 -> declaracion .

    PTOYCOMA        reduce using rule 11 (instruccion2 -> declaracion .)
    error           reduce using rule 11 (instruccion2 -> declaracion .)
    LET             reduce using rule 11 (instruccion2 -> declaracion .)
    ID              reduce using rule 11 (instruccion2 -> declaracion .)
    CONSOLE         reduce using rule 11 (instruccion2 -> declaracion .)
    RETURN          reduce using rule 11 (instruccion2 -> declaracion .)
    BREAK           reduce using rule 11 (instruccion2 -> declaracion .)
    CONTINUE        reduce using rule 11 (instruccion2 -> declaracion .)
    IF              reduce using rule 11 (instruccion2 -> declaracion .)
    WHILE           reduce using rule 11 (instruccion2 -> declaracion .)
    FOR             reduce using rule 11 (instruccion2 -> declaracion .)
    $end            reduce using rule 11 (instruccion2 -> declaracion .)
    LLADER          reduce using rule 11 (instruccion2 -> declaracion .)


state 6

    (12) instruccion2 -> asignacion .

    PTOYCOMA        reduce using rule 12 (instruccion2 -> asignacion .)
    error           reduce using rule 12 (instruccion2 -> asignacion .)
    LET             reduce using rule 12 (instruccion2 -> asignacion .)
    ID              reduce using rule 12 (instruccion2 -> asignacion .)
    CONSOLE         reduce using rule 12 (instruccion2 -> asignacion .)
    RETURN          reduce using rule 12 (instruccion2 -> asignacion .)
    BREAK           reduce using rule 12 (instruccion2 -> asignacion .)
    CONTINUE        reduce using rule 12 (instruccion2 -> asignacion .)
    IF              reduce using rule 12 (instruccion2 -> asignacion .)
    WHILE           reduce using rule 12 (instruccion2 -> asignacion .)
    FOR             reduce using rule 12 (instruccion2 -> asignacion .)
    $end            reduce using rule 12 (instruccion2 -> asignacion .)
    LLADER          reduce using rule 12 (instruccion2 -> asignacion .)


state 7

    (13) instruccion2 -> impresion .

    PTOYCOMA        reduce using rule 13 (instruccion2 -> impresion .)
    error           reduce using rule 13 (instruccion2 -> impresion .)
    LET             reduce using rule 13 (instruccion2 -> impresion .)
    ID              reduce using rule 13 (instruccion2 -> impresion .)
    CONSOLE         reduce using rule 13 (instruccion2 -> impresion .)
    RETURN          reduce using rule 13 (instruccion2 -> impresion .)
    BREAK           reduce using rule 13 (instruccion2 -> impresion .)
    CONTINUE        reduce using rule 13 (instruccion2 -> impresion .)
    IF              reduce using rule 13 (instruccion2 -> impresion .)
    WHILE           reduce using rule 13 (instruccion2 -> impresion .)
    FOR             reduce using rule 13 (instruccion2 -> impresion .)
    $end            reduce using rule 13 (instruccion2 -> impresion .)
    LLADER          reduce using rule 13 (instruccion2 -> impresion .)


state 8

    (14) instruccion2 -> return .

    PTOYCOMA        reduce using rule 14 (instruccion2 -> return .)
    error           reduce using rule 14 (instruccion2 -> return .)
    LET             reduce using rule 14 (instruccion2 -> return .)
    ID              reduce using rule 14 (instruccion2 -> return .)
    CONSOLE         reduce using rule 14 (instruccion2 -> return .)
    RETURN          reduce using rule 14 (instruccion2 -> return .)
    BREAK           reduce using rule 14 (instruccion2 -> return .)
    CONTINUE        reduce using rule 14 (instruccion2 -> return .)
    IF              reduce using rule 14 (instruccion2 -> return .)
    WHILE           reduce using rule 14 (instruccion2 -> return .)
    FOR             reduce using rule 14 (instruccion2 -> return .)
    $end            reduce using rule 14 (instruccion2 -> return .)
    LLADER          reduce using rule 14 (instruccion2 -> return .)


state 9

    (15) instruccion2 -> break .

    PTOYCOMA        reduce using rule 15 (instruccion2 -> break .)
    error           reduce using rule 15 (instruccion2 -> break .)
    LET             reduce using rule 15 (instruccion2 -> break .)
    ID              reduce using rule 15 (instruccion2 -> break .)
    CONSOLE         reduce using rule 15 (instruccion2 -> break .)
    RETURN          reduce using rule 15 (instruccion2 -> break .)
    BREAK           reduce using rule 15 (instruccion2 -> break .)
    CONTINUE        reduce using rule 15 (instruccion2 -> break .)
    IF              reduce using rule 15 (instruccion2 -> break .)
    WHILE           reduce using rule 15 (instruccion2 -> break .)
    FOR             reduce using rule 15 (instruccion2 -> break .)
    $end            reduce using rule 15 (instruccion2 -> break .)
    LLADER          reduce using rule 15 (instruccion2 -> break .)


state 10

    (16) instruccion2 -> continue .

    PTOYCOMA        reduce using rule 16 (instruccion2 -> continue .)
    error           reduce using rule 16 (instruccion2 -> continue .)
    LET             reduce using rule 16 (instruccion2 -> continue .)
    ID              reduce using rule 16 (instruccion2 -> continue .)
    CONSOLE         reduce using rule 16 (instruccion2 -> continue .)
    RETURN          reduce using rule 16 (instruccion2 -> continue .)
    BREAK           reduce using rule 16 (instruccion2 -> continue .)
    CONTINUE        reduce using rule 16 (instruccion2 -> continue .)
    IF              reduce using rule 16 (instruccion2 -> continue .)
    WHILE           reduce using rule 16 (instruccion2 -> continue .)
    FOR             reduce using rule 16 (instruccion2 -> continue .)
    $end            reduce using rule 16 (instruccion2 -> continue .)
    LLADER          reduce using rule 16 (instruccion2 -> continue .)


state 11

    (17) instruccion2 -> condicional_if .

    PTOYCOMA        reduce using rule 17 (instruccion2 -> condicional_if .)
    error           reduce using rule 17 (instruccion2 -> condicional_if .)
    LET             reduce using rule 17 (instruccion2 -> condicional_if .)
    ID              reduce using rule 17 (instruccion2 -> condicional_if .)
    CONSOLE         reduce using rule 17 (instruccion2 -> condicional_if .)
    RETURN          reduce using rule 17 (instruccion2 -> condicional_if .)
    BREAK           reduce using rule 17 (instruccion2 -> condicional_if .)
    CONTINUE        reduce using rule 17 (instruccion2 -> condicional_if .)
    IF              reduce using rule 17 (instruccion2 -> condicional_if .)
    WHILE           reduce using rule 17 (instruccion2 -> condicional_if .)
    FOR             reduce using rule 17 (instruccion2 -> condicional_if .)
    $end            reduce using rule 17 (instruccion2 -> condicional_if .)
    LLADER          reduce using rule 17 (instruccion2 -> condicional_if .)


state 12

    (18) instruccion2 -> ciclo_while .

    PTOYCOMA        reduce using rule 18 (instruccion2 -> ciclo_while .)
    error           reduce using rule 18 (instruccion2 -> ciclo_while .)
    LET             reduce using rule 18 (instruccion2 -> ciclo_while .)
    ID              reduce using rule 18 (instruccion2 -> ciclo_while .)
    CONSOLE         reduce using rule 18 (instruccion2 -> ciclo_while .)
    RETURN          reduce using rule 18 (instruccion2 -> ciclo_while .)
    BREAK           reduce using rule 18 (instruccion2 -> ciclo_while .)
    CONTINUE        reduce using rule 18 (instruccion2 -> ciclo_while .)
    IF              reduce using rule 18 (instruccion2 -> ciclo_while .)
    WHILE           reduce using rule 18 (instruccion2 -> ciclo_while .)
    FOR             reduce using rule 18 (instruccion2 -> ciclo_while .)
    $end            reduce using rule 18 (instruccion2 -> ciclo_while .)
    LLADER          reduce using rule 18 (instruccion2 -> ciclo_while .)


state 13

    (19) instruccion2 -> ciclo_for .

    PTOYCOMA        reduce using rule 19 (instruccion2 -> ciclo_for .)
    error           reduce using rule 19 (instruccion2 -> ciclo_for .)
    LET             reduce using rule 19 (instruccion2 -> ciclo_for .)
    ID              reduce using rule 19 (instruccion2 -> ciclo_for .)
    CONSOLE         reduce using rule 19 (instruccion2 -> ciclo_for .)
    RETURN          reduce using rule 19 (instruccion2 -> ciclo_for .)
    BREAK           reduce using rule 19 (instruccion2 -> ciclo_for .)
    CONTINUE        reduce using rule 19 (instruccion2 -> ciclo_for .)
    IF              reduce using rule 19 (instruccion2 -> ciclo_for .)
    WHILE           reduce using rule 19 (instruccion2 -> ciclo_for .)
    FOR             reduce using rule 19 (instruccion2 -> ciclo_for .)
    $end            reduce using rule 19 (instruccion2 -> ciclo_for .)
    LLADER          reduce using rule 19 (instruccion2 -> ciclo_for .)


state 14

    (20) instruccion2 -> ciclo_for_of .

    PTOYCOMA        reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    error           reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    LET             reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    ID              reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    CONSOLE         reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    RETURN          reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    BREAK           reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    CONTINUE        reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    IF              reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    WHILE           reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    FOR             reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    $end            reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    LLADER          reduce using rule 20 (instruccion2 -> ciclo_for_of .)


state 15

    (21) declaracion -> LET . ID DOSPUNTOS tipo IGUAL expresion
    (22) declaracion -> LET . ID IGUAL expresion

    ID              shift and go to state 27


state 16

    (23) asignacion -> ID . IGUAL expresion

    IGUAL           shift and go to state 28


state 17

    (24) impresion -> CONSOLE . PUNTO LOG PARIZQ expresion PARDER

    PUNTO           shift and go to state 29


state 18

    (55) return -> RETURN .
    (56) return -> RETURN . expresion
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . NUMERO
    (43) expresion -> . CADENA
    (44) expresion -> . ID
    (45) expresion -> . TRUE
    (46) expresion -> . FALSE
    (47) expresion -> . ID MAS MAS
    (48) expresion -> . ID DECREMENTO
    (49) expresion -> . MAS MAS ID
    (50) expresion -> . DECREMENTO ID

  ! shift/reduce conflict for ID resolved as shift
    PTOYCOMA        reduce using rule 55 (return -> RETURN .)
    error           reduce using rule 55 (return -> RETURN .)
    LET             reduce using rule 55 (return -> RETURN .)
    CONSOLE         reduce using rule 55 (return -> RETURN .)
    RETURN          reduce using rule 55 (return -> RETURN .)
    BREAK           reduce using rule 55 (return -> RETURN .)
    CONTINUE        reduce using rule 55 (return -> RETURN .)
    IF              reduce using rule 55 (return -> RETURN .)
    WHILE           reduce using rule 55 (return -> RETURN .)
    FOR             reduce using rule 55 (return -> RETURN .)
    $end            reduce using rule 55 (return -> RETURN .)
    LLADER          reduce using rule 55 (return -> RETURN .)
    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    NOT             shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    MAS             shift and go to state 31
    DECREMENTO      shift and go to state 40

  ! ID              [ reduce using rule 55 (return -> RETURN .) ]

    expresion                      shift and go to state 30

state 19

    (58) break -> BREAK .

    PTOYCOMA        reduce using rule 58 (break -> BREAK .)
    error           reduce using rule 58 (break -> BREAK .)
    LET             reduce using rule 58 (break -> BREAK .)
    ID              reduce using rule 58 (break -> BREAK .)
    CONSOLE         reduce using rule 58 (break -> BREAK .)
    RETURN          reduce using rule 58 (break -> BREAK .)
    BREAK           reduce using rule 58 (break -> BREAK .)
    CONTINUE        reduce using rule 58 (break -> BREAK .)
    IF              reduce using rule 58 (break -> BREAK .)
    WHILE           reduce using rule 58 (break -> BREAK .)
    FOR             reduce using rule 58 (break -> BREAK .)
    $end            reduce using rule 58 (break -> BREAK .)
    LLADER          reduce using rule 58 (break -> BREAK .)


state 20

    (57) continue -> CONTINUE .

    PTOYCOMA        reduce using rule 57 (continue -> CONTINUE .)
    error           reduce using rule 57 (continue -> CONTINUE .)
    LET             reduce using rule 57 (continue -> CONTINUE .)
    ID              reduce using rule 57 (continue -> CONTINUE .)
    CONSOLE         reduce using rule 57 (continue -> CONTINUE .)
    RETURN          reduce using rule 57 (continue -> CONTINUE .)
    BREAK           reduce using rule 57 (continue -> CONTINUE .)
    CONTINUE        reduce using rule 57 (continue -> CONTINUE .)
    IF              reduce using rule 57 (continue -> CONTINUE .)
    WHILE           reduce using rule 57 (continue -> CONTINUE .)
    FOR             reduce using rule 57 (continue -> CONTINUE .)
    $end            reduce using rule 57 (continue -> CONTINUE .)
    LLADER          reduce using rule 57 (continue -> CONTINUE .)


state 21

    (59) condicional_if -> IF . PARIZQ expresion PARDER bloque
    (60) condicional_if -> IF . PARIZQ expresion PARDER bloque ELSE bloque
    (61) condicional_if -> IF . PARIZQ expresion PARDER bloque lista_elif
    (62) condicional_if -> IF . PARIZQ expresion PARDER bloque lista_elif ELSE bloque

    PARIZQ          shift and go to state 41


state 22

    (66) ciclo_while -> WHILE . PARIZQ expresion PARDER bloque

    PARIZQ          shift and go to state 42


state 23

    (67) ciclo_for -> FOR . PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (68) ciclo_for -> FOR . PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (69) ciclo_for -> FOR . PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (70) ciclo_for -> FOR . PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (71) ciclo_for_of -> FOR . PARIZQ LET ID OF expresion PARDER bloque

    PARIZQ          shift and go to state 43


state 24

    (1) instrucciones -> instrucciones instruccion .

    error           reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    LET             reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    CONSOLE         reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    RETURN          reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    FOR             reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 1 (instrucciones -> instrucciones instruccion .)


state 25

    (3) instruccion -> instruccion2 PTOYCOMA .

    error           reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    LET             reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    ID              reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    CONSOLE         reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    RETURN          reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    BREAK           reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    CONTINUE        reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    IF              reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    WHILE           reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    FOR             reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    $end            reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)


state 26

    (72) instruccion -> error PTOYCOMA .

    error           reduce using rule 72 (instruccion -> error PTOYCOMA .)
    LET             reduce using rule 72 (instruccion -> error PTOYCOMA .)
    ID              reduce using rule 72 (instruccion -> error PTOYCOMA .)
    CONSOLE         reduce using rule 72 (instruccion -> error PTOYCOMA .)
    RETURN          reduce using rule 72 (instruccion -> error PTOYCOMA .)
    BREAK           reduce using rule 72 (instruccion -> error PTOYCOMA .)
    CONTINUE        reduce using rule 72 (instruccion -> error PTOYCOMA .)
    IF              reduce using rule 72 (instruccion -> error PTOYCOMA .)
    WHILE           reduce using rule 72 (instruccion -> error PTOYCOMA .)
    FOR             reduce using rule 72 (instruccion -> error PTOYCOMA .)
    $end            reduce using rule 72 (instruccion -> error PTOYCOMA .)


state 27

    (21) declaracion -> LET ID . DOSPUNTOS tipo IGUAL expresion
    (22) declaracion -> LET ID . IGUAL expresion

    DOSPUNTOS       shift and go to state 44
    IGUAL           shift and go to state 45


state 28

    (23) asignacion -> ID IGUAL . expresion
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . NUMERO
    (43) expresion -> . CADENA
    (44) expresion -> . ID
    (45) expresion -> . TRUE
    (46) expresion -> . FALSE
    (47) expresion -> . ID MAS MAS
    (48) expresion -> . ID DECREMENTO
    (49) expresion -> . MAS MAS ID
    (50) expresion -> . DECREMENTO ID

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    NOT             shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    MAS             shift and go to state 31
    DECREMENTO      shift and go to state 40

    expresion                      shift and go to state 46

state 29

    (24) impresion -> CONSOLE PUNTO . LOG PARIZQ expresion PARDER

    LOG             shift and go to state 47


state 30

    (56) return -> RETURN expresion .
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion

    PTOYCOMA        reduce using rule 56 (return -> RETURN expresion .)
    error           reduce using rule 56 (return -> RETURN expresion .)
    LET             reduce using rule 56 (return -> RETURN expresion .)
    ID              reduce using rule 56 (return -> RETURN expresion .)
    CONSOLE         reduce using rule 56 (return -> RETURN expresion .)
    RETURN          reduce using rule 56 (return -> RETURN expresion .)
    BREAK           reduce using rule 56 (return -> RETURN expresion .)
    CONTINUE        reduce using rule 56 (return -> RETURN expresion .)
    IF              reduce using rule 56 (return -> RETURN expresion .)
    WHILE           reduce using rule 56 (return -> RETURN expresion .)
    FOR             reduce using rule 56 (return -> RETURN expresion .)
    $end            reduce using rule 56 (return -> RETURN expresion .)
    LLADER          reduce using rule 56 (return -> RETURN expresion .)
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    POR             shift and go to state 50
    DIVIDIDO        shift and go to state 51
    POTENCIA        shift and go to state 52
    MODULO          shift and go to state 53
    MAYOR           shift and go to state 54
    MENOR           shift and go to state 55
    MAYORIGUAL      shift and go to state 56
    MENORIGUAL      shift and go to state 57
    IGUALACION      shift and go to state 58
    DISTINTO        shift and go to state 59
    AND             shift and go to state 60
    OR              shift and go to state 61


state 31

    (49) expresion -> MAS . MAS ID

    MAS             shift and go to state 62


state 32

    (31) expresion -> MENOS . expresion
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . NUMERO
    (43) expresion -> . CADENA
    (44) expresion -> . ID
    (45) expresion -> . TRUE
    (46) expresion -> . FALSE
    (47) expresion -> . ID MAS MAS
    (48) expresion -> . ID DECREMENTO
    (49) expresion -> . MAS MAS ID
    (50) expresion -> . DECREMENTO ID

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    NOT             shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    MAS             shift and go to state 31
    DECREMENTO      shift and go to state 40

    expresion                      shift and go to state 63

state 33

    (32) expresion -> PARIZQ . expresion PARDER
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . NUMERO
    (43) expresion -> . CADENA
    (44) expresion -> . ID
    (45) expresion -> . TRUE
    (46) expresion -> . FALSE
    (47) expresion -> . ID MAS MAS
    (48) expresion -> . ID DECREMENTO
    (49) expresion -> . MAS MAS ID
    (50) expresion -> . DECREMENTO ID

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    NOT             shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    MAS             shift and go to state 31
    DECREMENTO      shift and go to state 40

    expresion                      shift and go to state 64

state 34

    (41) expresion -> NOT . expresion
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . NUMERO
    (43) expresion -> . CADENA
    (44) expresion -> . ID
    (45) expresion -> . TRUE
    (46) expresion -> . FALSE
    (47) expresion -> . ID MAS MAS
    (48) expresion -> . ID DECREMENTO
    (49) expresion -> . MAS MAS ID
    (50) expresion -> . DECREMENTO ID

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    NOT             shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    MAS             shift and go to state 31
    DECREMENTO      shift and go to state 40

    expresion                      shift and go to state 65

state 35

    (42) expresion -> NUMERO .

    MAS             reduce using rule 42 (expresion -> NUMERO .)
    MENOS           reduce using rule 42 (expresion -> NUMERO .)
    POR             reduce using rule 42 (expresion -> NUMERO .)
    DIVIDIDO        reduce using rule 42 (expresion -> NUMERO .)
    POTENCIA        reduce using rule 42 (expresion -> NUMERO .)
    MODULO          reduce using rule 42 (expresion -> NUMERO .)
    MAYOR           reduce using rule 42 (expresion -> NUMERO .)
    MENOR           reduce using rule 42 (expresion -> NUMERO .)
    MAYORIGUAL      reduce using rule 42 (expresion -> NUMERO .)
    MENORIGUAL      reduce using rule 42 (expresion -> NUMERO .)
    IGUALACION      reduce using rule 42 (expresion -> NUMERO .)
    DISTINTO        reduce using rule 42 (expresion -> NUMERO .)
    AND             reduce using rule 42 (expresion -> NUMERO .)
    OR              reduce using rule 42 (expresion -> NUMERO .)
    PTOYCOMA        reduce using rule 42 (expresion -> NUMERO .)
    error           reduce using rule 42 (expresion -> NUMERO .)
    LET             reduce using rule 42 (expresion -> NUMERO .)
    ID              reduce using rule 42 (expresion -> NUMERO .)
    CONSOLE         reduce using rule 42 (expresion -> NUMERO .)
    RETURN          reduce using rule 42 (expresion -> NUMERO .)
    BREAK           reduce using rule 42 (expresion -> NUMERO .)
    CONTINUE        reduce using rule 42 (expresion -> NUMERO .)
    IF              reduce using rule 42 (expresion -> NUMERO .)
    WHILE           reduce using rule 42 (expresion -> NUMERO .)
    FOR             reduce using rule 42 (expresion -> NUMERO .)
    $end            reduce using rule 42 (expresion -> NUMERO .)
    LLADER          reduce using rule 42 (expresion -> NUMERO .)
    PARDER          reduce using rule 42 (expresion -> NUMERO .)


state 36

    (43) expresion -> CADENA .

    MAS             reduce using rule 43 (expresion -> CADENA .)
    MENOS           reduce using rule 43 (expresion -> CADENA .)
    POR             reduce using rule 43 (expresion -> CADENA .)
    DIVIDIDO        reduce using rule 43 (expresion -> CADENA .)
    POTENCIA        reduce using rule 43 (expresion -> CADENA .)
    MODULO          reduce using rule 43 (expresion -> CADENA .)
    MAYOR           reduce using rule 43 (expresion -> CADENA .)
    MENOR           reduce using rule 43 (expresion -> CADENA .)
    MAYORIGUAL      reduce using rule 43 (expresion -> CADENA .)
    MENORIGUAL      reduce using rule 43 (expresion -> CADENA .)
    IGUALACION      reduce using rule 43 (expresion -> CADENA .)
    DISTINTO        reduce using rule 43 (expresion -> CADENA .)
    AND             reduce using rule 43 (expresion -> CADENA .)
    OR              reduce using rule 43 (expresion -> CADENA .)
    PTOYCOMA        reduce using rule 43 (expresion -> CADENA .)
    error           reduce using rule 43 (expresion -> CADENA .)
    LET             reduce using rule 43 (expresion -> CADENA .)
    ID              reduce using rule 43 (expresion -> CADENA .)
    CONSOLE         reduce using rule 43 (expresion -> CADENA .)
    RETURN          reduce using rule 43 (expresion -> CADENA .)
    BREAK           reduce using rule 43 (expresion -> CADENA .)
    CONTINUE        reduce using rule 43 (expresion -> CADENA .)
    IF              reduce using rule 43 (expresion -> CADENA .)
    WHILE           reduce using rule 43 (expresion -> CADENA .)
    FOR             reduce using rule 43 (expresion -> CADENA .)
    $end            reduce using rule 43 (expresion -> CADENA .)
    LLADER          reduce using rule 43 (expresion -> CADENA .)
    PARDER          reduce using rule 43 (expresion -> CADENA .)


state 37

    (44) expresion -> ID .
    (47) expresion -> ID . MAS MAS
    (48) expresion -> ID . DECREMENTO

  ! shift/reduce conflict for MAS resolved as shift
    MENOS           reduce using rule 44 (expresion -> ID .)
    POR             reduce using rule 44 (expresion -> ID .)
    DIVIDIDO        reduce using rule 44 (expresion -> ID .)
    POTENCIA        reduce using rule 44 (expresion -> ID .)
    MODULO          reduce using rule 44 (expresion -> ID .)
    MAYOR           reduce using rule 44 (expresion -> ID .)
    MENOR           reduce using rule 44 (expresion -> ID .)
    MAYORIGUAL      reduce using rule 44 (expresion -> ID .)
    MENORIGUAL      reduce using rule 44 (expresion -> ID .)
    IGUALACION      reduce using rule 44 (expresion -> ID .)
    DISTINTO        reduce using rule 44 (expresion -> ID .)
    AND             reduce using rule 44 (expresion -> ID .)
    OR              reduce using rule 44 (expresion -> ID .)
    PTOYCOMA        reduce using rule 44 (expresion -> ID .)
    error           reduce using rule 44 (expresion -> ID .)
    LET             reduce using rule 44 (expresion -> ID .)
    ID              reduce using rule 44 (expresion -> ID .)
    CONSOLE         reduce using rule 44 (expresion -> ID .)
    RETURN          reduce using rule 44 (expresion -> ID .)
    BREAK           reduce using rule 44 (expresion -> ID .)
    CONTINUE        reduce using rule 44 (expresion -> ID .)
    IF              reduce using rule 44 (expresion -> ID .)
    WHILE           reduce using rule 44 (expresion -> ID .)
    FOR             reduce using rule 44 (expresion -> ID .)
    $end            reduce using rule 44 (expresion -> ID .)
    LLADER          reduce using rule 44 (expresion -> ID .)
    PARDER          reduce using rule 44 (expresion -> ID .)
    MAS             shift and go to state 66
    DECREMENTO      shift and go to state 67

  ! MAS             [ reduce using rule 44 (expresion -> ID .) ]


state 38

    (45) expresion -> TRUE .

    MAS             reduce using rule 45 (expresion -> TRUE .)
    MENOS           reduce using rule 45 (expresion -> TRUE .)
    POR             reduce using rule 45 (expresion -> TRUE .)
    DIVIDIDO        reduce using rule 45 (expresion -> TRUE .)
    POTENCIA        reduce using rule 45 (expresion -> TRUE .)
    MODULO          reduce using rule 45 (expresion -> TRUE .)
    MAYOR           reduce using rule 45 (expresion -> TRUE .)
    MENOR           reduce using rule 45 (expresion -> TRUE .)
    MAYORIGUAL      reduce using rule 45 (expresion -> TRUE .)
    MENORIGUAL      reduce using rule 45 (expresion -> TRUE .)
    IGUALACION      reduce using rule 45 (expresion -> TRUE .)
    DISTINTO        reduce using rule 45 (expresion -> TRUE .)
    AND             reduce using rule 45 (expresion -> TRUE .)
    OR              reduce using rule 45 (expresion -> TRUE .)
    PTOYCOMA        reduce using rule 45 (expresion -> TRUE .)
    error           reduce using rule 45 (expresion -> TRUE .)
    LET             reduce using rule 45 (expresion -> TRUE .)
    ID              reduce using rule 45 (expresion -> TRUE .)
    CONSOLE         reduce using rule 45 (expresion -> TRUE .)
    RETURN          reduce using rule 45 (expresion -> TRUE .)
    BREAK           reduce using rule 45 (expresion -> TRUE .)
    CONTINUE        reduce using rule 45 (expresion -> TRUE .)
    IF              reduce using rule 45 (expresion -> TRUE .)
    WHILE           reduce using rule 45 (expresion -> TRUE .)
    FOR             reduce using rule 45 (expresion -> TRUE .)
    $end            reduce using rule 45 (expresion -> TRUE .)
    LLADER          reduce using rule 45 (expresion -> TRUE .)
    PARDER          reduce using rule 45 (expresion -> TRUE .)


state 39

    (46) expresion -> FALSE .

    MAS             reduce using rule 46 (expresion -> FALSE .)
    MENOS           reduce using rule 46 (expresion -> FALSE .)
    POR             reduce using rule 46 (expresion -> FALSE .)
    DIVIDIDO        reduce using rule 46 (expresion -> FALSE .)
    POTENCIA        reduce using rule 46 (expresion -> FALSE .)
    MODULO          reduce using rule 46 (expresion -> FALSE .)
    MAYOR           reduce using rule 46 (expresion -> FALSE .)
    MENOR           reduce using rule 46 (expresion -> FALSE .)
    MAYORIGUAL      reduce using rule 46 (expresion -> FALSE .)
    MENORIGUAL      reduce using rule 46 (expresion -> FALSE .)
    IGUALACION      reduce using rule 46 (expresion -> FALSE .)
    DISTINTO        reduce using rule 46 (expresion -> FALSE .)
    AND             reduce using rule 46 (expresion -> FALSE .)
    OR              reduce using rule 46 (expresion -> FALSE .)
    PTOYCOMA        reduce using rule 46 (expresion -> FALSE .)
    error           reduce using rule 46 (expresion -> FALSE .)
    LET             reduce using rule 46 (expresion -> FALSE .)
    ID              reduce using rule 46 (expresion -> FALSE .)
    CONSOLE         reduce using rule 46 (expresion -> FALSE .)
    RETURN          reduce using rule 46 (expresion -> FALSE .)
    BREAK           reduce using rule 46 (expresion -> FALSE .)
    CONTINUE        reduce using rule 46 (expresion -> FALSE .)
    IF              reduce using rule 46 (expresion -> FALSE .)
    WHILE           reduce using rule 46 (expresion -> FALSE .)
    FOR             reduce using rule 46 (expresion -> FALSE .)
    $end            reduce using rule 46 (expresion -> FALSE .)
    LLADER          reduce using rule 46 (expresion -> FALSE .)
    PARDER          reduce using rule 46 (expresion -> FALSE .)


state 40

    (50) expresion -> DECREMENTO . ID

    ID              shift and go to state 68


state 41

    (59) condicional_if -> IF PARIZQ . expresion PARDER bloque
    (60) condicional_if -> IF PARIZQ . expresion PARDER bloque ELSE bloque
    (61) condicional_if -> IF PARIZQ . expresion PARDER bloque lista_elif
    (62) condicional_if -> IF PARIZQ . expresion PARDER bloque lista_elif ELSE bloque
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . NUMERO
    (43) expresion -> . CADENA
    (44) expresion -> . ID
    (45) expresion -> . TRUE
    (46) expresion -> . FALSE
    (47) expresion -> . ID MAS MAS
    (48) expresion -> . ID DECREMENTO
    (49) expresion -> . MAS MAS ID
    (50) expresion -> . DECREMENTO ID

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    NOT             shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    MAS             shift and go to state 31
    DECREMENTO      shift and go to state 40

    expresion                      shift and go to state 69

state 42

    (66) ciclo_while -> WHILE PARIZQ . expresion PARDER bloque
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . NUMERO
    (43) expresion -> . CADENA
    (44) expresion -> . ID
    (45) expresion -> . TRUE
    (46) expresion -> . FALSE
    (47) expresion -> . ID MAS MAS
    (48) expresion -> . ID DECREMENTO
    (49) expresion -> . MAS MAS ID
    (50) expresion -> . DECREMENTO ID

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    NOT             shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    MAS             shift and go to state 31
    DECREMENTO      shift and go to state 40

    expresion                      shift and go to state 70

state 43

    (67) ciclo_for -> FOR PARIZQ . declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (68) ciclo_for -> FOR PARIZQ . asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (69) ciclo_for -> FOR PARIZQ . declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (70) ciclo_for -> FOR PARIZQ . asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (71) ciclo_for_of -> FOR PARIZQ . LET ID OF expresion PARDER bloque
    (21) declaracion -> . LET ID DOSPUNTOS tipo IGUAL expresion
    (22) declaracion -> . LET ID IGUAL expresion
    (23) asignacion -> . ID IGUAL expresion

    LET             shift and go to state 73
    ID              shift and go to state 16

    declaracion                    shift and go to state 71
    asignacion                     shift and go to state 72

state 44

    (21) declaracion -> LET ID DOSPUNTOS . tipo IGUAL expresion
    (51) tipo -> . NUMBER
    (52) tipo -> . STRING
    (53) tipo -> . BOOLEAN
    (54) tipo -> . ANY

    NUMBER          shift and go to state 75
    STRING          shift and go to state 76
    BOOLEAN         shift and go to state 77
    ANY             shift and go to state 78

    tipo                           shift and go to state 74

state 45

    (22) declaracion -> LET ID IGUAL . expresion
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . NUMERO
    (43) expresion -> . CADENA
    (44) expresion -> . ID
    (45) expresion -> . TRUE
    (46) expresion -> . FALSE
    (47) expresion -> . ID MAS MAS
    (48) expresion -> . ID DECREMENTO
    (49) expresion -> . MAS MAS ID
    (50) expresion -> . DECREMENTO ID

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    NOT             shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    MAS             shift and go to state 31
    DECREMENTO      shift and go to state 40

    expresion                      shift and go to state 79

state 46

    (23) asignacion -> ID IGUAL expresion .
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion

    PTOYCOMA        reduce using rule 23 (asignacion -> ID IGUAL expresion .)
    error           reduce using rule 23 (asignacion -> ID IGUAL expresion .)
    LET             reduce using rule 23 (asignacion -> ID IGUAL expresion .)
    ID              reduce using rule 23 (asignacion -> ID IGUAL expresion .)
    CONSOLE         reduce using rule 23 (asignacion -> ID IGUAL expresion .)
    RETURN          reduce using rule 23 (asignacion -> ID IGUAL expresion .)
    BREAK           reduce using rule 23 (asignacion -> ID IGUAL expresion .)
    CONTINUE        reduce using rule 23 (asignacion -> ID IGUAL expresion .)
    IF              reduce using rule 23 (asignacion -> ID IGUAL expresion .)
    WHILE           reduce using rule 23 (asignacion -> ID IGUAL expresion .)
    FOR             reduce using rule 23 (asignacion -> ID IGUAL expresion .)
    $end            reduce using rule 23 (asignacion -> ID IGUAL expresion .)
    LLADER          reduce using rule 23 (asignacion -> ID IGUAL expresion .)
    PARDER          reduce using rule 23 (asignacion -> ID IGUAL expresion .)
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    POR             shift and go to state 50
    DIVIDIDO        shift and go to state 51
    POTENCIA        shift and go to state 52
    MODULO          shift and go to state 53
    MAYOR           shift and go to state 54
    MENOR           shift and go to state 55
    MAYORIGUAL      shift and go to state 56
    MENORIGUAL      shift and go to state 57
    IGUALACION      shift and go to state 58
    DISTINTO        shift and go to state 59
    AND             shift and go to state 60
    OR              shift and go to state 61


state 47

    (24) impresion -> CONSOLE PUNTO LOG . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 80


state 48

    (25) expresion -> expresion MAS . expresion
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . NUMERO
    (43) expresion -> . CADENA
    (44) expresion -> . ID
    (45) expresion -> . TRUE
    (46) expresion -> . FALSE
    (47) expresion -> . ID MAS MAS
    (48) expresion -> . ID DECREMENTO
    (49) expresion -> . MAS MAS ID
    (50) expresion -> . DECREMENTO ID

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    NOT             shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    MAS             shift and go to state 31
    DECREMENTO      shift and go to state 40

    expresion                      shift and go to state 81

state 49

    (26) expresion -> expresion MENOS . expresion
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . NUMERO
    (43) expresion -> . CADENA
    (44) expresion -> . ID
    (45) expresion -> . TRUE
    (46) expresion -> . FALSE
    (47) expresion -> . ID MAS MAS
    (48) expresion -> . ID DECREMENTO
    (49) expresion -> . MAS MAS ID
    (50) expresion -> . DECREMENTO ID

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    NOT             shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    MAS             shift and go to state 31
    DECREMENTO      shift and go to state 40

    expresion                      shift and go to state 82

state 50

    (27) expresion -> expresion POR . expresion
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . NUMERO
    (43) expresion -> . CADENA
    (44) expresion -> . ID
    (45) expresion -> . TRUE
    (46) expresion -> . FALSE
    (47) expresion -> . ID MAS MAS
    (48) expresion -> . ID DECREMENTO
    (49) expresion -> . MAS MAS ID
    (50) expresion -> . DECREMENTO ID

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    NOT             shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    MAS             shift and go to state 31
    DECREMENTO      shift and go to state 40

    expresion                      shift and go to state 83

state 51

    (28) expresion -> expresion DIVIDIDO . expresion
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . NUMERO
    (43) expresion -> . CADENA
    (44) expresion -> . ID
    (45) expresion -> . TRUE
    (46) expresion -> . FALSE
    (47) expresion -> . ID MAS MAS
    (48) expresion -> . ID DECREMENTO
    (49) expresion -> . MAS MAS ID
    (50) expresion -> . DECREMENTO ID

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    NOT             shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    MAS             shift and go to state 31
    DECREMENTO      shift and go to state 40

    expresion                      shift and go to state 84

state 52

    (29) expresion -> expresion POTENCIA . expresion
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . NUMERO
    (43) expresion -> . CADENA
    (44) expresion -> . ID
    (45) expresion -> . TRUE
    (46) expresion -> . FALSE
    (47) expresion -> . ID MAS MAS
    (48) expresion -> . ID DECREMENTO
    (49) expresion -> . MAS MAS ID
    (50) expresion -> . DECREMENTO ID

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    NOT             shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    MAS             shift and go to state 31
    DECREMENTO      shift and go to state 40

    expresion                      shift and go to state 85

state 53

    (30) expresion -> expresion MODULO . expresion
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . NUMERO
    (43) expresion -> . CADENA
    (44) expresion -> . ID
    (45) expresion -> . TRUE
    (46) expresion -> . FALSE
    (47) expresion -> . ID MAS MAS
    (48) expresion -> . ID DECREMENTO
    (49) expresion -> . MAS MAS ID
    (50) expresion -> . DECREMENTO ID

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    NOT             shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    MAS             shift and go to state 31
    DECREMENTO      shift and go to state 40

    expresion                      shift and go to state 86

state 54

    (33) expresion -> expresion MAYOR . expresion
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . NUMERO
    (43) expresion -> . CADENA
    (44) expresion -> . ID
    (45) expresion -> . TRUE
    (46) expresion -> . FALSE
    (47) expresion -> . ID MAS MAS
    (48) expresion -> . ID DECREMENTO
    (49) expresion -> . MAS MAS ID
    (50) expresion -> . DECREMENTO ID

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    NOT             shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    MAS             shift and go to state 31
    DECREMENTO      shift and go to state 40

    expresion                      shift and go to state 87

state 55

    (34) expresion -> expresion MENOR . expresion
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . NUMERO
    (43) expresion -> . CADENA
    (44) expresion -> . ID
    (45) expresion -> . TRUE
    (46) expresion -> . FALSE
    (47) expresion -> . ID MAS MAS
    (48) expresion -> . ID DECREMENTO
    (49) expresion -> . MAS MAS ID
    (50) expresion -> . DECREMENTO ID

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    NOT             shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    MAS             shift and go to state 31
    DECREMENTO      shift and go to state 40

    expresion                      shift and go to state 88

state 56

    (35) expresion -> expresion MAYORIGUAL . expresion
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . NUMERO
    (43) expresion -> . CADENA
    (44) expresion -> . ID
    (45) expresion -> . TRUE
    (46) expresion -> . FALSE
    (47) expresion -> . ID MAS MAS
    (48) expresion -> . ID DECREMENTO
    (49) expresion -> . MAS MAS ID
    (50) expresion -> . DECREMENTO ID

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    NOT             shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    MAS             shift and go to state 31
    DECREMENTO      shift and go to state 40

    expresion                      shift and go to state 89

state 57

    (36) expresion -> expresion MENORIGUAL . expresion
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . NUMERO
    (43) expresion -> . CADENA
    (44) expresion -> . ID
    (45) expresion -> . TRUE
    (46) expresion -> . FALSE
    (47) expresion -> . ID MAS MAS
    (48) expresion -> . ID DECREMENTO
    (49) expresion -> . MAS MAS ID
    (50) expresion -> . DECREMENTO ID

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    NOT             shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    MAS             shift and go to state 31
    DECREMENTO      shift and go to state 40

    expresion                      shift and go to state 90

state 58

    (37) expresion -> expresion IGUALACION . expresion
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . NUMERO
    (43) expresion -> . CADENA
    (44) expresion -> . ID
    (45) expresion -> . TRUE
    (46) expresion -> . FALSE
    (47) expresion -> . ID MAS MAS
    (48) expresion -> . ID DECREMENTO
    (49) expresion -> . MAS MAS ID
    (50) expresion -> . DECREMENTO ID

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    NOT             shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    MAS             shift and go to state 31
    DECREMENTO      shift and go to state 40

    expresion                      shift and go to state 91

state 59

    (38) expresion -> expresion DISTINTO . expresion
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . NUMERO
    (43) expresion -> . CADENA
    (44) expresion -> . ID
    (45) expresion -> . TRUE
    (46) expresion -> . FALSE
    (47) expresion -> . ID MAS MAS
    (48) expresion -> . ID DECREMENTO
    (49) expresion -> . MAS MAS ID
    (50) expresion -> . DECREMENTO ID

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    NOT             shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    MAS             shift and go to state 31
    DECREMENTO      shift and go to state 40

    expresion                      shift and go to state 92

state 60

    (39) expresion -> expresion AND . expresion
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . NUMERO
    (43) expresion -> . CADENA
    (44) expresion -> . ID
    (45) expresion -> . TRUE
    (46) expresion -> . FALSE
    (47) expresion -> . ID MAS MAS
    (48) expresion -> . ID DECREMENTO
    (49) expresion -> . MAS MAS ID
    (50) expresion -> . DECREMENTO ID

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    NOT             shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    MAS             shift and go to state 31
    DECREMENTO      shift and go to state 40

    expresion                      shift and go to state 93

state 61

    (40) expresion -> expresion OR . expresion
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . NUMERO
    (43) expresion -> . CADENA
    (44) expresion -> . ID
    (45) expresion -> . TRUE
    (46) expresion -> . FALSE
    (47) expresion -> . ID MAS MAS
    (48) expresion -> . ID DECREMENTO
    (49) expresion -> . MAS MAS ID
    (50) expresion -> . DECREMENTO ID

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    NOT             shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    MAS             shift and go to state 31
    DECREMENTO      shift and go to state 40

    expresion                      shift and go to state 94

state 62

    (49) expresion -> MAS MAS . ID

    ID              shift and go to state 95


state 63

    (31) expresion -> MENOS expresion .
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion

    MAS             reduce using rule 31 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 31 (expresion -> MENOS expresion .)
    POR             reduce using rule 31 (expresion -> MENOS expresion .)
    DIVIDIDO        reduce using rule 31 (expresion -> MENOS expresion .)
    POTENCIA        reduce using rule 31 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 31 (expresion -> MENOS expresion .)
    MAYOR           reduce using rule 31 (expresion -> MENOS expresion .)
    MENOR           reduce using rule 31 (expresion -> MENOS expresion .)
    MAYORIGUAL      reduce using rule 31 (expresion -> MENOS expresion .)
    MENORIGUAL      reduce using rule 31 (expresion -> MENOS expresion .)
    IGUALACION      reduce using rule 31 (expresion -> MENOS expresion .)
    DISTINTO        reduce using rule 31 (expresion -> MENOS expresion .)
    AND             reduce using rule 31 (expresion -> MENOS expresion .)
    OR              reduce using rule 31 (expresion -> MENOS expresion .)
    PTOYCOMA        reduce using rule 31 (expresion -> MENOS expresion .)
    error           reduce using rule 31 (expresion -> MENOS expresion .)
    LET             reduce using rule 31 (expresion -> MENOS expresion .)
    ID              reduce using rule 31 (expresion -> MENOS expresion .)
    CONSOLE         reduce using rule 31 (expresion -> MENOS expresion .)
    RETURN          reduce using rule 31 (expresion -> MENOS expresion .)
    BREAK           reduce using rule 31 (expresion -> MENOS expresion .)
    CONTINUE        reduce using rule 31 (expresion -> MENOS expresion .)
    IF              reduce using rule 31 (expresion -> MENOS expresion .)
    WHILE           reduce using rule 31 (expresion -> MENOS expresion .)
    FOR             reduce using rule 31 (expresion -> MENOS expresion .)
    $end            reduce using rule 31 (expresion -> MENOS expresion .)
    LLADER          reduce using rule 31 (expresion -> MENOS expresion .)
    PARDER          reduce using rule 31 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 48 ]
  ! MENOS           [ shift and go to state 49 ]
  ! POR             [ shift and go to state 50 ]
  ! DIVIDIDO        [ shift and go to state 51 ]
  ! POTENCIA        [ shift and go to state 52 ]
  ! MODULO          [ shift and go to state 53 ]
  ! MAYOR           [ shift and go to state 54 ]
  ! MENOR           [ shift and go to state 55 ]
  ! MAYORIGUAL      [ shift and go to state 56 ]
  ! MENORIGUAL      [ shift and go to state 57 ]
  ! IGUALACION      [ shift and go to state 58 ]
  ! DISTINTO        [ shift and go to state 59 ]
  ! AND             [ shift and go to state 60 ]
  ! OR              [ shift and go to state 61 ]


state 64

    (32) expresion -> PARIZQ expresion . PARDER
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion

    PARDER          shift and go to state 96
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    POR             shift and go to state 50
    DIVIDIDO        shift and go to state 51
    POTENCIA        shift and go to state 52
    MODULO          shift and go to state 53
    MAYOR           shift and go to state 54
    MENOR           shift and go to state 55
    MAYORIGUAL      shift and go to state 56
    MENORIGUAL      shift and go to state 57
    IGUALACION      shift and go to state 58
    DISTINTO        shift and go to state 59
    AND             shift and go to state 60
    OR              shift and go to state 61


state 65

    (41) expresion -> NOT expresion .
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion

    MAS             reduce using rule 41 (expresion -> NOT expresion .)
    MENOS           reduce using rule 41 (expresion -> NOT expresion .)
    POR             reduce using rule 41 (expresion -> NOT expresion .)
    DIVIDIDO        reduce using rule 41 (expresion -> NOT expresion .)
    POTENCIA        reduce using rule 41 (expresion -> NOT expresion .)
    MODULO          reduce using rule 41 (expresion -> NOT expresion .)
    MAYOR           reduce using rule 41 (expresion -> NOT expresion .)
    MENOR           reduce using rule 41 (expresion -> NOT expresion .)
    MAYORIGUAL      reduce using rule 41 (expresion -> NOT expresion .)
    MENORIGUAL      reduce using rule 41 (expresion -> NOT expresion .)
    IGUALACION      reduce using rule 41 (expresion -> NOT expresion .)
    DISTINTO        reduce using rule 41 (expresion -> NOT expresion .)
    AND             reduce using rule 41 (expresion -> NOT expresion .)
    OR              reduce using rule 41 (expresion -> NOT expresion .)
    PTOYCOMA        reduce using rule 41 (expresion -> NOT expresion .)
    error           reduce using rule 41 (expresion -> NOT expresion .)
    LET             reduce using rule 41 (expresion -> NOT expresion .)
    ID              reduce using rule 41 (expresion -> NOT expresion .)
    CONSOLE         reduce using rule 41 (expresion -> NOT expresion .)
    RETURN          reduce using rule 41 (expresion -> NOT expresion .)
    BREAK           reduce using rule 41 (expresion -> NOT expresion .)
    CONTINUE        reduce using rule 41 (expresion -> NOT expresion .)
    IF              reduce using rule 41 (expresion -> NOT expresion .)
    WHILE           reduce using rule 41 (expresion -> NOT expresion .)
    FOR             reduce using rule 41 (expresion -> NOT expresion .)
    $end            reduce using rule 41 (expresion -> NOT expresion .)
    LLADER          reduce using rule 41 (expresion -> NOT expresion .)
    PARDER          reduce using rule 41 (expresion -> NOT expresion .)

  ! MAS             [ shift and go to state 48 ]
  ! MENOS           [ shift and go to state 49 ]
  ! POR             [ shift and go to state 50 ]
  ! DIVIDIDO        [ shift and go to state 51 ]
  ! POTENCIA        [ shift and go to state 52 ]
  ! MODULO          [ shift and go to state 53 ]
  ! MAYOR           [ shift and go to state 54 ]
  ! MENOR           [ shift and go to state 55 ]
  ! MAYORIGUAL      [ shift and go to state 56 ]
  ! MENORIGUAL      [ shift and go to state 57 ]
  ! IGUALACION      [ shift and go to state 58 ]
  ! DISTINTO        [ shift and go to state 59 ]
  ! AND             [ shift and go to state 60 ]
  ! OR              [ shift and go to state 61 ]


state 66

    (47) expresion -> ID MAS . MAS

    MAS             shift and go to state 97


state 67

    (48) expresion -> ID DECREMENTO .

    MAS             reduce using rule 48 (expresion -> ID DECREMENTO .)
    MENOS           reduce using rule 48 (expresion -> ID DECREMENTO .)
    POR             reduce using rule 48 (expresion -> ID DECREMENTO .)
    DIVIDIDO        reduce using rule 48 (expresion -> ID DECREMENTO .)
    POTENCIA        reduce using rule 48 (expresion -> ID DECREMENTO .)
    MODULO          reduce using rule 48 (expresion -> ID DECREMENTO .)
    MAYOR           reduce using rule 48 (expresion -> ID DECREMENTO .)
    MENOR           reduce using rule 48 (expresion -> ID DECREMENTO .)
    MAYORIGUAL      reduce using rule 48 (expresion -> ID DECREMENTO .)
    MENORIGUAL      reduce using rule 48 (expresion -> ID DECREMENTO .)
    IGUALACION      reduce using rule 48 (expresion -> ID DECREMENTO .)
    DISTINTO        reduce using rule 48 (expresion -> ID DECREMENTO .)
    AND             reduce using rule 48 (expresion -> ID DECREMENTO .)
    OR              reduce using rule 48 (expresion -> ID DECREMENTO .)
    PTOYCOMA        reduce using rule 48 (expresion -> ID DECREMENTO .)
    error           reduce using rule 48 (expresion -> ID DECREMENTO .)
    LET             reduce using rule 48 (expresion -> ID DECREMENTO .)
    ID              reduce using rule 48 (expresion -> ID DECREMENTO .)
    CONSOLE         reduce using rule 48 (expresion -> ID DECREMENTO .)
    RETURN          reduce using rule 48 (expresion -> ID DECREMENTO .)
    BREAK           reduce using rule 48 (expresion -> ID DECREMENTO .)
    CONTINUE        reduce using rule 48 (expresion -> ID DECREMENTO .)
    IF              reduce using rule 48 (expresion -> ID DECREMENTO .)
    WHILE           reduce using rule 48 (expresion -> ID DECREMENTO .)
    FOR             reduce using rule 48 (expresion -> ID DECREMENTO .)
    $end            reduce using rule 48 (expresion -> ID DECREMENTO .)
    LLADER          reduce using rule 48 (expresion -> ID DECREMENTO .)
    PARDER          reduce using rule 48 (expresion -> ID DECREMENTO .)


state 68

    (50) expresion -> DECREMENTO ID .

    MAS             reduce using rule 50 (expresion -> DECREMENTO ID .)
    MENOS           reduce using rule 50 (expresion -> DECREMENTO ID .)
    POR             reduce using rule 50 (expresion -> DECREMENTO ID .)
    DIVIDIDO        reduce using rule 50 (expresion -> DECREMENTO ID .)
    POTENCIA        reduce using rule 50 (expresion -> DECREMENTO ID .)
    MODULO          reduce using rule 50 (expresion -> DECREMENTO ID .)
    MAYOR           reduce using rule 50 (expresion -> DECREMENTO ID .)
    MENOR           reduce using rule 50 (expresion -> DECREMENTO ID .)
    MAYORIGUAL      reduce using rule 50 (expresion -> DECREMENTO ID .)
    MENORIGUAL      reduce using rule 50 (expresion -> DECREMENTO ID .)
    IGUALACION      reduce using rule 50 (expresion -> DECREMENTO ID .)
    DISTINTO        reduce using rule 50 (expresion -> DECREMENTO ID .)
    AND             reduce using rule 50 (expresion -> DECREMENTO ID .)
    OR              reduce using rule 50 (expresion -> DECREMENTO ID .)
    PTOYCOMA        reduce using rule 50 (expresion -> DECREMENTO ID .)
    error           reduce using rule 50 (expresion -> DECREMENTO ID .)
    LET             reduce using rule 50 (expresion -> DECREMENTO ID .)
    ID              reduce using rule 50 (expresion -> DECREMENTO ID .)
    CONSOLE         reduce using rule 50 (expresion -> DECREMENTO ID .)
    RETURN          reduce using rule 50 (expresion -> DECREMENTO ID .)
    BREAK           reduce using rule 50 (expresion -> DECREMENTO ID .)
    CONTINUE        reduce using rule 50 (expresion -> DECREMENTO ID .)
    IF              reduce using rule 50 (expresion -> DECREMENTO ID .)
    WHILE           reduce using rule 50 (expresion -> DECREMENTO ID .)
    FOR             reduce using rule 50 (expresion -> DECREMENTO ID .)
    $end            reduce using rule 50 (expresion -> DECREMENTO ID .)
    LLADER          reduce using rule 50 (expresion -> DECREMENTO ID .)
    PARDER          reduce using rule 50 (expresion -> DECREMENTO ID .)


state 69

    (59) condicional_if -> IF PARIZQ expresion . PARDER bloque
    (60) condicional_if -> IF PARIZQ expresion . PARDER bloque ELSE bloque
    (61) condicional_if -> IF PARIZQ expresion . PARDER bloque lista_elif
    (62) condicional_if -> IF PARIZQ expresion . PARDER bloque lista_elif ELSE bloque
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion

    PARDER          shift and go to state 98
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    POR             shift and go to state 50
    DIVIDIDO        shift and go to state 51
    POTENCIA        shift and go to state 52
    MODULO          shift and go to state 53
    MAYOR           shift and go to state 54
    MENOR           shift and go to state 55
    MAYORIGUAL      shift and go to state 56
    MENORIGUAL      shift and go to state 57
    IGUALACION      shift and go to state 58
    DISTINTO        shift and go to state 59
    AND             shift and go to state 60
    OR              shift and go to state 61


state 70

    (66) ciclo_while -> WHILE PARIZQ expresion . PARDER bloque
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion

    PARDER          shift and go to state 99
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    POR             shift and go to state 50
    DIVIDIDO        shift and go to state 51
    POTENCIA        shift and go to state 52
    MODULO          shift and go to state 53
    MAYOR           shift and go to state 54
    MENOR           shift and go to state 55
    MAYORIGUAL      shift and go to state 56
    MENORIGUAL      shift and go to state 57
    IGUALACION      shift and go to state 58
    DISTINTO        shift and go to state 59
    AND             shift and go to state 60
    OR              shift and go to state 61


state 71

    (67) ciclo_for -> FOR PARIZQ declaracion . PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (69) ciclo_for -> FOR PARIZQ declaracion . PTOYCOMA expresion PTOYCOMA expresion PARDER bloque

    PTOYCOMA        shift and go to state 100


state 72

    (68) ciclo_for -> FOR PARIZQ asignacion . PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (70) ciclo_for -> FOR PARIZQ asignacion . PTOYCOMA expresion PTOYCOMA expresion PARDER bloque

    PTOYCOMA        shift and go to state 101


state 73

    (71) ciclo_for_of -> FOR PARIZQ LET . ID OF expresion PARDER bloque
    (21) declaracion -> LET . ID DOSPUNTOS tipo IGUAL expresion
    (22) declaracion -> LET . ID IGUAL expresion

    ID              shift and go to state 102


state 74

    (21) declaracion -> LET ID DOSPUNTOS tipo . IGUAL expresion

    IGUAL           shift and go to state 103


state 75

    (51) tipo -> NUMBER .

    IGUAL           reduce using rule 51 (tipo -> NUMBER .)


state 76

    (52) tipo -> STRING .

    IGUAL           reduce using rule 52 (tipo -> STRING .)


state 77

    (53) tipo -> BOOLEAN .

    IGUAL           reduce using rule 53 (tipo -> BOOLEAN .)


state 78

    (54) tipo -> ANY .

    IGUAL           reduce using rule 54 (tipo -> ANY .)


state 79

    (22) declaracion -> LET ID IGUAL expresion .
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion

    PTOYCOMA        reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    error           reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    LET             reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    ID              reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    CONSOLE         reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    RETURN          reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    BREAK           reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    CONTINUE        reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    IF              reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    WHILE           reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    FOR             reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    $end            reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    LLADER          reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    POR             shift and go to state 50
    DIVIDIDO        shift and go to state 51
    POTENCIA        shift and go to state 52
    MODULO          shift and go to state 53
    MAYOR           shift and go to state 54
    MENOR           shift and go to state 55
    MAYORIGUAL      shift and go to state 56
    MENORIGUAL      shift and go to state 57
    IGUALACION      shift and go to state 58
    DISTINTO        shift and go to state 59
    AND             shift and go to state 60
    OR              shift and go to state 61


state 80

    (24) impresion -> CONSOLE PUNTO LOG PARIZQ . expresion PARDER
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . NUMERO
    (43) expresion -> . CADENA
    (44) expresion -> . ID
    (45) expresion -> . TRUE
    (46) expresion -> . FALSE
    (47) expresion -> . ID MAS MAS
    (48) expresion -> . ID DECREMENTO
    (49) expresion -> . MAS MAS ID
    (50) expresion -> . DECREMENTO ID

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    NOT             shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    MAS             shift and go to state 31
    DECREMENTO      shift and go to state 40

    expresion                      shift and go to state 104

state 81

    (25) expresion -> expresion MAS expresion .
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion

    MAS             reduce using rule 25 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 25 (expresion -> expresion MAS expresion .)
    POTENCIA        reduce using rule 25 (expresion -> expresion MAS expresion .)
    MAYOR           reduce using rule 25 (expresion -> expresion MAS expresion .)
    MENOR           reduce using rule 25 (expresion -> expresion MAS expresion .)
    MAYORIGUAL      reduce using rule 25 (expresion -> expresion MAS expresion .)
    MENORIGUAL      reduce using rule 25 (expresion -> expresion MAS expresion .)
    IGUALACION      reduce using rule 25 (expresion -> expresion MAS expresion .)
    DISTINTO        reduce using rule 25 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 25 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 25 (expresion -> expresion MAS expresion .)
    PTOYCOMA        reduce using rule 25 (expresion -> expresion MAS expresion .)
    error           reduce using rule 25 (expresion -> expresion MAS expresion .)
    LET             reduce using rule 25 (expresion -> expresion MAS expresion .)
    ID              reduce using rule 25 (expresion -> expresion MAS expresion .)
    CONSOLE         reduce using rule 25 (expresion -> expresion MAS expresion .)
    RETURN          reduce using rule 25 (expresion -> expresion MAS expresion .)
    BREAK           reduce using rule 25 (expresion -> expresion MAS expresion .)
    CONTINUE        reduce using rule 25 (expresion -> expresion MAS expresion .)
    IF              reduce using rule 25 (expresion -> expresion MAS expresion .)
    WHILE           reduce using rule 25 (expresion -> expresion MAS expresion .)
    FOR             reduce using rule 25 (expresion -> expresion MAS expresion .)
    $end            reduce using rule 25 (expresion -> expresion MAS expresion .)
    LLADER          reduce using rule 25 (expresion -> expresion MAS expresion .)
    PARDER          reduce using rule 25 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 50
    DIVIDIDO        shift and go to state 51
    MODULO          shift and go to state 53

  ! POR             [ reduce using rule 25 (expresion -> expresion MAS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 25 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 25 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 48 ]
  ! MENOS           [ shift and go to state 49 ]
  ! POTENCIA        [ shift and go to state 52 ]
  ! MAYOR           [ shift and go to state 54 ]
  ! MENOR           [ shift and go to state 55 ]
  ! MAYORIGUAL      [ shift and go to state 56 ]
  ! MENORIGUAL      [ shift and go to state 57 ]
  ! IGUALACION      [ shift and go to state 58 ]
  ! DISTINTO        [ shift and go to state 59 ]
  ! AND             [ shift and go to state 60 ]
  ! OR              [ shift and go to state 61 ]


state 82

    (26) expresion -> expresion MENOS expresion .
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion

    MAS             reduce using rule 26 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 26 (expresion -> expresion MENOS expresion .)
    POTENCIA        reduce using rule 26 (expresion -> expresion MENOS expresion .)
    MAYOR           reduce using rule 26 (expresion -> expresion MENOS expresion .)
    MENOR           reduce using rule 26 (expresion -> expresion MENOS expresion .)
    MAYORIGUAL      reduce using rule 26 (expresion -> expresion MENOS expresion .)
    MENORIGUAL      reduce using rule 26 (expresion -> expresion MENOS expresion .)
    IGUALACION      reduce using rule 26 (expresion -> expresion MENOS expresion .)
    DISTINTO        reduce using rule 26 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 26 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 26 (expresion -> expresion MENOS expresion .)
    PTOYCOMA        reduce using rule 26 (expresion -> expresion MENOS expresion .)
    error           reduce using rule 26 (expresion -> expresion MENOS expresion .)
    LET             reduce using rule 26 (expresion -> expresion MENOS expresion .)
    ID              reduce using rule 26 (expresion -> expresion MENOS expresion .)
    CONSOLE         reduce using rule 26 (expresion -> expresion MENOS expresion .)
    RETURN          reduce using rule 26 (expresion -> expresion MENOS expresion .)
    BREAK           reduce using rule 26 (expresion -> expresion MENOS expresion .)
    CONTINUE        reduce using rule 26 (expresion -> expresion MENOS expresion .)
    IF              reduce using rule 26 (expresion -> expresion MENOS expresion .)
    WHILE           reduce using rule 26 (expresion -> expresion MENOS expresion .)
    FOR             reduce using rule 26 (expresion -> expresion MENOS expresion .)
    $end            reduce using rule 26 (expresion -> expresion MENOS expresion .)
    LLADER          reduce using rule 26 (expresion -> expresion MENOS expresion .)
    PARDER          reduce using rule 26 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 50
    DIVIDIDO        shift and go to state 51
    MODULO          shift and go to state 53

  ! POR             [ reduce using rule 26 (expresion -> expresion MENOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 26 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 26 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 48 ]
  ! MENOS           [ shift and go to state 49 ]
  ! POTENCIA        [ shift and go to state 52 ]
  ! MAYOR           [ shift and go to state 54 ]
  ! MENOR           [ shift and go to state 55 ]
  ! MAYORIGUAL      [ shift and go to state 56 ]
  ! MENORIGUAL      [ shift and go to state 57 ]
  ! IGUALACION      [ shift and go to state 58 ]
  ! DISTINTO        [ shift and go to state 59 ]
  ! AND             [ shift and go to state 60 ]
  ! OR              [ shift and go to state 61 ]


state 83

    (27) expresion -> expresion POR expresion .
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion

    MAS             reduce using rule 27 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 27 (expresion -> expresion POR expresion .)
    POR             reduce using rule 27 (expresion -> expresion POR expresion .)
    DIVIDIDO        reduce using rule 27 (expresion -> expresion POR expresion .)
    POTENCIA        reduce using rule 27 (expresion -> expresion POR expresion .)
    MODULO          reduce using rule 27 (expresion -> expresion POR expresion .)
    MAYOR           reduce using rule 27 (expresion -> expresion POR expresion .)
    MENOR           reduce using rule 27 (expresion -> expresion POR expresion .)
    MAYORIGUAL      reduce using rule 27 (expresion -> expresion POR expresion .)
    MENORIGUAL      reduce using rule 27 (expresion -> expresion POR expresion .)
    IGUALACION      reduce using rule 27 (expresion -> expresion POR expresion .)
    DISTINTO        reduce using rule 27 (expresion -> expresion POR expresion .)
    AND             reduce using rule 27 (expresion -> expresion POR expresion .)
    OR              reduce using rule 27 (expresion -> expresion POR expresion .)
    PTOYCOMA        reduce using rule 27 (expresion -> expresion POR expresion .)
    error           reduce using rule 27 (expresion -> expresion POR expresion .)
    LET             reduce using rule 27 (expresion -> expresion POR expresion .)
    ID              reduce using rule 27 (expresion -> expresion POR expresion .)
    CONSOLE         reduce using rule 27 (expresion -> expresion POR expresion .)
    RETURN          reduce using rule 27 (expresion -> expresion POR expresion .)
    BREAK           reduce using rule 27 (expresion -> expresion POR expresion .)
    CONTINUE        reduce using rule 27 (expresion -> expresion POR expresion .)
    IF              reduce using rule 27 (expresion -> expresion POR expresion .)
    WHILE           reduce using rule 27 (expresion -> expresion POR expresion .)
    FOR             reduce using rule 27 (expresion -> expresion POR expresion .)
    $end            reduce using rule 27 (expresion -> expresion POR expresion .)
    LLADER          reduce using rule 27 (expresion -> expresion POR expresion .)
    PARDER          reduce using rule 27 (expresion -> expresion POR expresion .)

  ! MAS             [ shift and go to state 48 ]
  ! MENOS           [ shift and go to state 49 ]
  ! POR             [ shift and go to state 50 ]
  ! DIVIDIDO        [ shift and go to state 51 ]
  ! POTENCIA        [ shift and go to state 52 ]
  ! MODULO          [ shift and go to state 53 ]
  ! MAYOR           [ shift and go to state 54 ]
  ! MENOR           [ shift and go to state 55 ]
  ! MAYORIGUAL      [ shift and go to state 56 ]
  ! MENORIGUAL      [ shift and go to state 57 ]
  ! IGUALACION      [ shift and go to state 58 ]
  ! DISTINTO        [ shift and go to state 59 ]
  ! AND             [ shift and go to state 60 ]
  ! OR              [ shift and go to state 61 ]


state 84

    (28) expresion -> expresion DIVIDIDO expresion .
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion

    MAS             reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    MENOS           reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    POR             reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    DIVIDIDO        reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    POTENCIA        reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    MODULO          reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    MAYOR           reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    MENOR           reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    MAYORIGUAL      reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    MENORIGUAL      reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    IGUALACION      reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    DISTINTO        reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    AND             reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    OR              reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    PTOYCOMA        reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    error           reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    LET             reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    ID              reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    CONSOLE         reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    RETURN          reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    BREAK           reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    CONTINUE        reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    IF              reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    WHILE           reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    FOR             reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    $end            reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    LLADER          reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    PARDER          reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)

  ! MAS             [ shift and go to state 48 ]
  ! MENOS           [ shift and go to state 49 ]
  ! POR             [ shift and go to state 50 ]
  ! DIVIDIDO        [ shift and go to state 51 ]
  ! POTENCIA        [ shift and go to state 52 ]
  ! MODULO          [ shift and go to state 53 ]
  ! MAYOR           [ shift and go to state 54 ]
  ! MENOR           [ shift and go to state 55 ]
  ! MAYORIGUAL      [ shift and go to state 56 ]
  ! MENORIGUAL      [ shift and go to state 57 ]
  ! IGUALACION      [ shift and go to state 58 ]
  ! DISTINTO        [ shift and go to state 59 ]
  ! AND             [ shift and go to state 60 ]
  ! OR              [ shift and go to state 61 ]


state 85

    (29) expresion -> expresion POTENCIA expresion .
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for IGUALACION resolved as shift
  ! shift/reduce conflict for DISTINTO resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    PTOYCOMA        reduce using rule 29 (expresion -> expresion POTENCIA expresion .)
    error           reduce using rule 29 (expresion -> expresion POTENCIA expresion .)
    LET             reduce using rule 29 (expresion -> expresion POTENCIA expresion .)
    ID              reduce using rule 29 (expresion -> expresion POTENCIA expresion .)
    CONSOLE         reduce using rule 29 (expresion -> expresion POTENCIA expresion .)
    RETURN          reduce using rule 29 (expresion -> expresion POTENCIA expresion .)
    BREAK           reduce using rule 29 (expresion -> expresion POTENCIA expresion .)
    CONTINUE        reduce using rule 29 (expresion -> expresion POTENCIA expresion .)
    IF              reduce using rule 29 (expresion -> expresion POTENCIA expresion .)
    WHILE           reduce using rule 29 (expresion -> expresion POTENCIA expresion .)
    FOR             reduce using rule 29 (expresion -> expresion POTENCIA expresion .)
    $end            reduce using rule 29 (expresion -> expresion POTENCIA expresion .)
    LLADER          reduce using rule 29 (expresion -> expresion POTENCIA expresion .)
    PARDER          reduce using rule 29 (expresion -> expresion POTENCIA expresion .)
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    POR             shift and go to state 50
    DIVIDIDO        shift and go to state 51
    POTENCIA        shift and go to state 52
    MODULO          shift and go to state 53
    MAYOR           shift and go to state 54
    MENOR           shift and go to state 55
    MAYORIGUAL      shift and go to state 56
    MENORIGUAL      shift and go to state 57
    IGUALACION      shift and go to state 58
    DISTINTO        shift and go to state 59
    AND             shift and go to state 60
    OR              shift and go to state 61

  ! MAS             [ reduce using rule 29 (expresion -> expresion POTENCIA expresion .) ]
  ! MENOS           [ reduce using rule 29 (expresion -> expresion POTENCIA expresion .) ]
  ! POR             [ reduce using rule 29 (expresion -> expresion POTENCIA expresion .) ]
  ! DIVIDIDO        [ reduce using rule 29 (expresion -> expresion POTENCIA expresion .) ]
  ! POTENCIA        [ reduce using rule 29 (expresion -> expresion POTENCIA expresion .) ]
  ! MODULO          [ reduce using rule 29 (expresion -> expresion POTENCIA expresion .) ]
  ! MAYOR           [ reduce using rule 29 (expresion -> expresion POTENCIA expresion .) ]
  ! MENOR           [ reduce using rule 29 (expresion -> expresion POTENCIA expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 29 (expresion -> expresion POTENCIA expresion .) ]
  ! MENORIGUAL      [ reduce using rule 29 (expresion -> expresion POTENCIA expresion .) ]
  ! IGUALACION      [ reduce using rule 29 (expresion -> expresion POTENCIA expresion .) ]
  ! DISTINTO        [ reduce using rule 29 (expresion -> expresion POTENCIA expresion .) ]
  ! AND             [ reduce using rule 29 (expresion -> expresion POTENCIA expresion .) ]
  ! OR              [ reduce using rule 29 (expresion -> expresion POTENCIA expresion .) ]


state 86

    (30) expresion -> expresion MODULO expresion .
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion

    MAS             reduce using rule 30 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 30 (expresion -> expresion MODULO expresion .)
    POR             reduce using rule 30 (expresion -> expresion MODULO expresion .)
    DIVIDIDO        reduce using rule 30 (expresion -> expresion MODULO expresion .)
    POTENCIA        reduce using rule 30 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 30 (expresion -> expresion MODULO expresion .)
    MAYOR           reduce using rule 30 (expresion -> expresion MODULO expresion .)
    MENOR           reduce using rule 30 (expresion -> expresion MODULO expresion .)
    MAYORIGUAL      reduce using rule 30 (expresion -> expresion MODULO expresion .)
    MENORIGUAL      reduce using rule 30 (expresion -> expresion MODULO expresion .)
    IGUALACION      reduce using rule 30 (expresion -> expresion MODULO expresion .)
    DISTINTO        reduce using rule 30 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 30 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 30 (expresion -> expresion MODULO expresion .)
    PTOYCOMA        reduce using rule 30 (expresion -> expresion MODULO expresion .)
    error           reduce using rule 30 (expresion -> expresion MODULO expresion .)
    LET             reduce using rule 30 (expresion -> expresion MODULO expresion .)
    ID              reduce using rule 30 (expresion -> expresion MODULO expresion .)
    CONSOLE         reduce using rule 30 (expresion -> expresion MODULO expresion .)
    RETURN          reduce using rule 30 (expresion -> expresion MODULO expresion .)
    BREAK           reduce using rule 30 (expresion -> expresion MODULO expresion .)
    CONTINUE        reduce using rule 30 (expresion -> expresion MODULO expresion .)
    IF              reduce using rule 30 (expresion -> expresion MODULO expresion .)
    WHILE           reduce using rule 30 (expresion -> expresion MODULO expresion .)
    FOR             reduce using rule 30 (expresion -> expresion MODULO expresion .)
    $end            reduce using rule 30 (expresion -> expresion MODULO expresion .)
    LLADER          reduce using rule 30 (expresion -> expresion MODULO expresion .)
    PARDER          reduce using rule 30 (expresion -> expresion MODULO expresion .)

  ! MAS             [ shift and go to state 48 ]
  ! MENOS           [ shift and go to state 49 ]
  ! POR             [ shift and go to state 50 ]
  ! DIVIDIDO        [ shift and go to state 51 ]
  ! POTENCIA        [ shift and go to state 52 ]
  ! MODULO          [ shift and go to state 53 ]
  ! MAYOR           [ shift and go to state 54 ]
  ! MENOR           [ shift and go to state 55 ]
  ! MAYORIGUAL      [ shift and go to state 56 ]
  ! MENORIGUAL      [ shift and go to state 57 ]
  ! IGUALACION      [ shift and go to state 58 ]
  ! DISTINTO        [ shift and go to state 59 ]
  ! AND             [ shift and go to state 60 ]
  ! OR              [ shift and go to state 61 ]


state 87

    (33) expresion -> expresion MAYOR expresion .
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion

    POTENCIA        reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    MAYOR           reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    MENOR           reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    MAYORIGUAL      reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    MENORIGUAL      reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    IGUALACION      reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    DISTINTO        reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    AND             reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    OR              reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    PTOYCOMA        reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    error           reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    LET             reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    ID              reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    CONSOLE         reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    RETURN          reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    BREAK           reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    CONTINUE        reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    IF              reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    WHILE           reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    FOR             reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    $end            reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    LLADER          reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    PARDER          reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    POR             shift and go to state 50
    DIVIDIDO        shift and go to state 51
    MODULO          shift and go to state 53

  ! MAS             [ reduce using rule 33 (expresion -> expresion MAYOR expresion .) ]
  ! MENOS           [ reduce using rule 33 (expresion -> expresion MAYOR expresion .) ]
  ! POR             [ reduce using rule 33 (expresion -> expresion MAYOR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 33 (expresion -> expresion MAYOR expresion .) ]
  ! MODULO          [ reduce using rule 33 (expresion -> expresion MAYOR expresion .) ]
  ! POTENCIA        [ shift and go to state 52 ]
  ! MAYOR           [ shift and go to state 54 ]
  ! MENOR           [ shift and go to state 55 ]
  ! MAYORIGUAL      [ shift and go to state 56 ]
  ! MENORIGUAL      [ shift and go to state 57 ]
  ! IGUALACION      [ shift and go to state 58 ]
  ! DISTINTO        [ shift and go to state 59 ]
  ! AND             [ shift and go to state 60 ]
  ! OR              [ shift and go to state 61 ]


state 88

    (34) expresion -> expresion MENOR expresion .
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion

    POTENCIA        reduce using rule 34 (expresion -> expresion MENOR expresion .)
    MAYOR           reduce using rule 34 (expresion -> expresion MENOR expresion .)
    MENOR           reduce using rule 34 (expresion -> expresion MENOR expresion .)
    MAYORIGUAL      reduce using rule 34 (expresion -> expresion MENOR expresion .)
    MENORIGUAL      reduce using rule 34 (expresion -> expresion MENOR expresion .)
    IGUALACION      reduce using rule 34 (expresion -> expresion MENOR expresion .)
    DISTINTO        reduce using rule 34 (expresion -> expresion MENOR expresion .)
    AND             reduce using rule 34 (expresion -> expresion MENOR expresion .)
    OR              reduce using rule 34 (expresion -> expresion MENOR expresion .)
    PTOYCOMA        reduce using rule 34 (expresion -> expresion MENOR expresion .)
    error           reduce using rule 34 (expresion -> expresion MENOR expresion .)
    LET             reduce using rule 34 (expresion -> expresion MENOR expresion .)
    ID              reduce using rule 34 (expresion -> expresion MENOR expresion .)
    CONSOLE         reduce using rule 34 (expresion -> expresion MENOR expresion .)
    RETURN          reduce using rule 34 (expresion -> expresion MENOR expresion .)
    BREAK           reduce using rule 34 (expresion -> expresion MENOR expresion .)
    CONTINUE        reduce using rule 34 (expresion -> expresion MENOR expresion .)
    IF              reduce using rule 34 (expresion -> expresion MENOR expresion .)
    WHILE           reduce using rule 34 (expresion -> expresion MENOR expresion .)
    FOR             reduce using rule 34 (expresion -> expresion MENOR expresion .)
    $end            reduce using rule 34 (expresion -> expresion MENOR expresion .)
    LLADER          reduce using rule 34 (expresion -> expresion MENOR expresion .)
    PARDER          reduce using rule 34 (expresion -> expresion MENOR expresion .)
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    POR             shift and go to state 50
    DIVIDIDO        shift and go to state 51
    MODULO          shift and go to state 53

  ! MAS             [ reduce using rule 34 (expresion -> expresion MENOR expresion .) ]
  ! MENOS           [ reduce using rule 34 (expresion -> expresion MENOR expresion .) ]
  ! POR             [ reduce using rule 34 (expresion -> expresion MENOR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 34 (expresion -> expresion MENOR expresion .) ]
  ! MODULO          [ reduce using rule 34 (expresion -> expresion MENOR expresion .) ]
  ! POTENCIA        [ shift and go to state 52 ]
  ! MAYOR           [ shift and go to state 54 ]
  ! MENOR           [ shift and go to state 55 ]
  ! MAYORIGUAL      [ shift and go to state 56 ]
  ! MENORIGUAL      [ shift and go to state 57 ]
  ! IGUALACION      [ shift and go to state 58 ]
  ! DISTINTO        [ shift and go to state 59 ]
  ! AND             [ shift and go to state 60 ]
  ! OR              [ shift and go to state 61 ]


state 89

    (35) expresion -> expresion MAYORIGUAL expresion .
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion

    POTENCIA        reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .)
    MAYOR           reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .)
    MENOR           reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .)
    MENORIGUAL      reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .)
    IGUALACION      reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .)
    DISTINTO        reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .)
    AND             reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .)
    OR              reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .)
    PTOYCOMA        reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .)
    error           reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .)
    LET             reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .)
    ID              reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .)
    CONSOLE         reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .)
    RETURN          reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .)
    BREAK           reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .)
    CONTINUE        reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .)
    IF              reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .)
    WHILE           reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .)
    FOR             reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .)
    $end            reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .)
    LLADER          reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .)
    PARDER          reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .)
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    POR             shift and go to state 50
    DIVIDIDO        shift and go to state 51
    MODULO          shift and go to state 53

  ! MAS             [ reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! POR             [ reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! DIVIDIDO        [ reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! POTENCIA        [ shift and go to state 52 ]
  ! MAYOR           [ shift and go to state 54 ]
  ! MENOR           [ shift and go to state 55 ]
  ! MAYORIGUAL      [ shift and go to state 56 ]
  ! MENORIGUAL      [ shift and go to state 57 ]
  ! IGUALACION      [ shift and go to state 58 ]
  ! DISTINTO        [ shift and go to state 59 ]
  ! AND             [ shift and go to state 60 ]
  ! OR              [ shift and go to state 61 ]


state 90

    (36) expresion -> expresion MENORIGUAL expresion .
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion

    POTENCIA        reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .)
    MAYOR           reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .)
    MENOR           reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .)
    MENORIGUAL      reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .)
    IGUALACION      reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .)
    DISTINTO        reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .)
    AND             reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .)
    OR              reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .)
    PTOYCOMA        reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .)
    error           reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .)
    LET             reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .)
    ID              reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .)
    CONSOLE         reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .)
    RETURN          reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .)
    BREAK           reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .)
    CONTINUE        reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .)
    IF              reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .)
    WHILE           reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .)
    FOR             reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .)
    $end            reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .)
    LLADER          reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .)
    PARDER          reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .)
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    POR             shift and go to state 50
    DIVIDIDO        shift and go to state 51
    MODULO          shift and go to state 53

  ! MAS             [ reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .) ]
  ! POR             [ reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .) ]
  ! DIVIDIDO        [ reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .) ]
  ! POTENCIA        [ shift and go to state 52 ]
  ! MAYOR           [ shift and go to state 54 ]
  ! MENOR           [ shift and go to state 55 ]
  ! MAYORIGUAL      [ shift and go to state 56 ]
  ! MENORIGUAL      [ shift and go to state 57 ]
  ! IGUALACION      [ shift and go to state 58 ]
  ! DISTINTO        [ shift and go to state 59 ]
  ! AND             [ shift and go to state 60 ]
  ! OR              [ shift and go to state 61 ]


state 91

    (37) expresion -> expresion IGUALACION expresion .
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion

    POTENCIA        reduce using rule 37 (expresion -> expresion IGUALACION expresion .)
    MAYOR           reduce using rule 37 (expresion -> expresion IGUALACION expresion .)
    MENOR           reduce using rule 37 (expresion -> expresion IGUALACION expresion .)
    MAYORIGUAL      reduce using rule 37 (expresion -> expresion IGUALACION expresion .)
    MENORIGUAL      reduce using rule 37 (expresion -> expresion IGUALACION expresion .)
    IGUALACION      reduce using rule 37 (expresion -> expresion IGUALACION expresion .)
    DISTINTO        reduce using rule 37 (expresion -> expresion IGUALACION expresion .)
    AND             reduce using rule 37 (expresion -> expresion IGUALACION expresion .)
    OR              reduce using rule 37 (expresion -> expresion IGUALACION expresion .)
    PTOYCOMA        reduce using rule 37 (expresion -> expresion IGUALACION expresion .)
    error           reduce using rule 37 (expresion -> expresion IGUALACION expresion .)
    LET             reduce using rule 37 (expresion -> expresion IGUALACION expresion .)
    ID              reduce using rule 37 (expresion -> expresion IGUALACION expresion .)
    CONSOLE         reduce using rule 37 (expresion -> expresion IGUALACION expresion .)
    RETURN          reduce using rule 37 (expresion -> expresion IGUALACION expresion .)
    BREAK           reduce using rule 37 (expresion -> expresion IGUALACION expresion .)
    CONTINUE        reduce using rule 37 (expresion -> expresion IGUALACION expresion .)
    IF              reduce using rule 37 (expresion -> expresion IGUALACION expresion .)
    WHILE           reduce using rule 37 (expresion -> expresion IGUALACION expresion .)
    FOR             reduce using rule 37 (expresion -> expresion IGUALACION expresion .)
    $end            reduce using rule 37 (expresion -> expresion IGUALACION expresion .)
    LLADER          reduce using rule 37 (expresion -> expresion IGUALACION expresion .)
    PARDER          reduce using rule 37 (expresion -> expresion IGUALACION expresion .)
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    POR             shift and go to state 50
    DIVIDIDO        shift and go to state 51
    MODULO          shift and go to state 53

  ! MAS             [ reduce using rule 37 (expresion -> expresion IGUALACION expresion .) ]
  ! MENOS           [ reduce using rule 37 (expresion -> expresion IGUALACION expresion .) ]
  ! POR             [ reduce using rule 37 (expresion -> expresion IGUALACION expresion .) ]
  ! DIVIDIDO        [ reduce using rule 37 (expresion -> expresion IGUALACION expresion .) ]
  ! MODULO          [ reduce using rule 37 (expresion -> expresion IGUALACION expresion .) ]
  ! POTENCIA        [ shift and go to state 52 ]
  ! MAYOR           [ shift and go to state 54 ]
  ! MENOR           [ shift and go to state 55 ]
  ! MAYORIGUAL      [ shift and go to state 56 ]
  ! MENORIGUAL      [ shift and go to state 57 ]
  ! IGUALACION      [ shift and go to state 58 ]
  ! DISTINTO        [ shift and go to state 59 ]
  ! AND             [ shift and go to state 60 ]
  ! OR              [ shift and go to state 61 ]


state 92

    (38) expresion -> expresion DISTINTO expresion .
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion

    POTENCIA        reduce using rule 38 (expresion -> expresion DISTINTO expresion .)
    MAYOR           reduce using rule 38 (expresion -> expresion DISTINTO expresion .)
    MENOR           reduce using rule 38 (expresion -> expresion DISTINTO expresion .)
    MAYORIGUAL      reduce using rule 38 (expresion -> expresion DISTINTO expresion .)
    MENORIGUAL      reduce using rule 38 (expresion -> expresion DISTINTO expresion .)
    IGUALACION      reduce using rule 38 (expresion -> expresion DISTINTO expresion .)
    DISTINTO        reduce using rule 38 (expresion -> expresion DISTINTO expresion .)
    AND             reduce using rule 38 (expresion -> expresion DISTINTO expresion .)
    OR              reduce using rule 38 (expresion -> expresion DISTINTO expresion .)
    PTOYCOMA        reduce using rule 38 (expresion -> expresion DISTINTO expresion .)
    error           reduce using rule 38 (expresion -> expresion DISTINTO expresion .)
    LET             reduce using rule 38 (expresion -> expresion DISTINTO expresion .)
    ID              reduce using rule 38 (expresion -> expresion DISTINTO expresion .)
    CONSOLE         reduce using rule 38 (expresion -> expresion DISTINTO expresion .)
    RETURN          reduce using rule 38 (expresion -> expresion DISTINTO expresion .)
    BREAK           reduce using rule 38 (expresion -> expresion DISTINTO expresion .)
    CONTINUE        reduce using rule 38 (expresion -> expresion DISTINTO expresion .)
    IF              reduce using rule 38 (expresion -> expresion DISTINTO expresion .)
    WHILE           reduce using rule 38 (expresion -> expresion DISTINTO expresion .)
    FOR             reduce using rule 38 (expresion -> expresion DISTINTO expresion .)
    $end            reduce using rule 38 (expresion -> expresion DISTINTO expresion .)
    LLADER          reduce using rule 38 (expresion -> expresion DISTINTO expresion .)
    PARDER          reduce using rule 38 (expresion -> expresion DISTINTO expresion .)
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    POR             shift and go to state 50
    DIVIDIDO        shift and go to state 51
    MODULO          shift and go to state 53

  ! MAS             [ reduce using rule 38 (expresion -> expresion DISTINTO expresion .) ]
  ! MENOS           [ reduce using rule 38 (expresion -> expresion DISTINTO expresion .) ]
  ! POR             [ reduce using rule 38 (expresion -> expresion DISTINTO expresion .) ]
  ! DIVIDIDO        [ reduce using rule 38 (expresion -> expresion DISTINTO expresion .) ]
  ! MODULO          [ reduce using rule 38 (expresion -> expresion DISTINTO expresion .) ]
  ! POTENCIA        [ shift and go to state 52 ]
  ! MAYOR           [ shift and go to state 54 ]
  ! MENOR           [ shift and go to state 55 ]
  ! MAYORIGUAL      [ shift and go to state 56 ]
  ! MENORIGUAL      [ shift and go to state 57 ]
  ! IGUALACION      [ shift and go to state 58 ]
  ! DISTINTO        [ shift and go to state 59 ]
  ! AND             [ shift and go to state 60 ]
  ! OR              [ shift and go to state 61 ]


state 93

    (39) expresion -> expresion AND expresion .
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion

    POTENCIA        reduce using rule 39 (expresion -> expresion AND expresion .)
    AND             reduce using rule 39 (expresion -> expresion AND expresion .)
    OR              reduce using rule 39 (expresion -> expresion AND expresion .)
    PTOYCOMA        reduce using rule 39 (expresion -> expresion AND expresion .)
    error           reduce using rule 39 (expresion -> expresion AND expresion .)
    LET             reduce using rule 39 (expresion -> expresion AND expresion .)
    ID              reduce using rule 39 (expresion -> expresion AND expresion .)
    CONSOLE         reduce using rule 39 (expresion -> expresion AND expresion .)
    RETURN          reduce using rule 39 (expresion -> expresion AND expresion .)
    BREAK           reduce using rule 39 (expresion -> expresion AND expresion .)
    CONTINUE        reduce using rule 39 (expresion -> expresion AND expresion .)
    IF              reduce using rule 39 (expresion -> expresion AND expresion .)
    WHILE           reduce using rule 39 (expresion -> expresion AND expresion .)
    FOR             reduce using rule 39 (expresion -> expresion AND expresion .)
    $end            reduce using rule 39 (expresion -> expresion AND expresion .)
    LLADER          reduce using rule 39 (expresion -> expresion AND expresion .)
    PARDER          reduce using rule 39 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    POR             shift and go to state 50
    DIVIDIDO        shift and go to state 51
    MODULO          shift and go to state 53
    MAYOR           shift and go to state 54
    MENOR           shift and go to state 55
    MAYORIGUAL      shift and go to state 56
    MENORIGUAL      shift and go to state 57
    IGUALACION      shift and go to state 58
    DISTINTO        shift and go to state 59

  ! MAS             [ reduce using rule 39 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 39 (expresion -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 39 (expresion -> expresion AND expresion .) ]
  ! DIVIDIDO        [ reduce using rule 39 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 39 (expresion -> expresion AND expresion .) ]
  ! MAYOR           [ reduce using rule 39 (expresion -> expresion AND expresion .) ]
  ! MENOR           [ reduce using rule 39 (expresion -> expresion AND expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 39 (expresion -> expresion AND expresion .) ]
  ! MENORIGUAL      [ reduce using rule 39 (expresion -> expresion AND expresion .) ]
  ! IGUALACION      [ reduce using rule 39 (expresion -> expresion AND expresion .) ]
  ! DISTINTO        [ reduce using rule 39 (expresion -> expresion AND expresion .) ]
  ! POTENCIA        [ shift and go to state 52 ]
  ! AND             [ shift and go to state 60 ]
  ! OR              [ shift and go to state 61 ]


state 94

    (40) expresion -> expresion OR expresion .
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion

    POTENCIA        reduce using rule 40 (expresion -> expresion OR expresion .)
    OR              reduce using rule 40 (expresion -> expresion OR expresion .)
    PTOYCOMA        reduce using rule 40 (expresion -> expresion OR expresion .)
    error           reduce using rule 40 (expresion -> expresion OR expresion .)
    LET             reduce using rule 40 (expresion -> expresion OR expresion .)
    ID              reduce using rule 40 (expresion -> expresion OR expresion .)
    CONSOLE         reduce using rule 40 (expresion -> expresion OR expresion .)
    RETURN          reduce using rule 40 (expresion -> expresion OR expresion .)
    BREAK           reduce using rule 40 (expresion -> expresion OR expresion .)
    CONTINUE        reduce using rule 40 (expresion -> expresion OR expresion .)
    IF              reduce using rule 40 (expresion -> expresion OR expresion .)
    WHILE           reduce using rule 40 (expresion -> expresion OR expresion .)
    FOR             reduce using rule 40 (expresion -> expresion OR expresion .)
    $end            reduce using rule 40 (expresion -> expresion OR expresion .)
    LLADER          reduce using rule 40 (expresion -> expresion OR expresion .)
    PARDER          reduce using rule 40 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    POR             shift and go to state 50
    DIVIDIDO        shift and go to state 51
    MODULO          shift and go to state 53
    MAYOR           shift and go to state 54
    MENOR           shift and go to state 55
    MAYORIGUAL      shift and go to state 56
    MENORIGUAL      shift and go to state 57
    IGUALACION      shift and go to state 58
    DISTINTO        shift and go to state 59
    AND             shift and go to state 60

  ! MAS             [ reduce using rule 40 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 40 (expresion -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 40 (expresion -> expresion OR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 40 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 40 (expresion -> expresion OR expresion .) ]
  ! MAYOR           [ reduce using rule 40 (expresion -> expresion OR expresion .) ]
  ! MENOR           [ reduce using rule 40 (expresion -> expresion OR expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 40 (expresion -> expresion OR expresion .) ]
  ! MENORIGUAL      [ reduce using rule 40 (expresion -> expresion OR expresion .) ]
  ! IGUALACION      [ reduce using rule 40 (expresion -> expresion OR expresion .) ]
  ! DISTINTO        [ reduce using rule 40 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 40 (expresion -> expresion OR expresion .) ]
  ! POTENCIA        [ shift and go to state 52 ]
  ! OR              [ shift and go to state 61 ]


state 95

    (49) expresion -> MAS MAS ID .

    MAS             reduce using rule 49 (expresion -> MAS MAS ID .)
    MENOS           reduce using rule 49 (expresion -> MAS MAS ID .)
    POR             reduce using rule 49 (expresion -> MAS MAS ID .)
    DIVIDIDO        reduce using rule 49 (expresion -> MAS MAS ID .)
    POTENCIA        reduce using rule 49 (expresion -> MAS MAS ID .)
    MODULO          reduce using rule 49 (expresion -> MAS MAS ID .)
    MAYOR           reduce using rule 49 (expresion -> MAS MAS ID .)
    MENOR           reduce using rule 49 (expresion -> MAS MAS ID .)
    MAYORIGUAL      reduce using rule 49 (expresion -> MAS MAS ID .)
    MENORIGUAL      reduce using rule 49 (expresion -> MAS MAS ID .)
    IGUALACION      reduce using rule 49 (expresion -> MAS MAS ID .)
    DISTINTO        reduce using rule 49 (expresion -> MAS MAS ID .)
    AND             reduce using rule 49 (expresion -> MAS MAS ID .)
    OR              reduce using rule 49 (expresion -> MAS MAS ID .)
    PTOYCOMA        reduce using rule 49 (expresion -> MAS MAS ID .)
    error           reduce using rule 49 (expresion -> MAS MAS ID .)
    LET             reduce using rule 49 (expresion -> MAS MAS ID .)
    ID              reduce using rule 49 (expresion -> MAS MAS ID .)
    CONSOLE         reduce using rule 49 (expresion -> MAS MAS ID .)
    RETURN          reduce using rule 49 (expresion -> MAS MAS ID .)
    BREAK           reduce using rule 49 (expresion -> MAS MAS ID .)
    CONTINUE        reduce using rule 49 (expresion -> MAS MAS ID .)
    IF              reduce using rule 49 (expresion -> MAS MAS ID .)
    WHILE           reduce using rule 49 (expresion -> MAS MAS ID .)
    FOR             reduce using rule 49 (expresion -> MAS MAS ID .)
    $end            reduce using rule 49 (expresion -> MAS MAS ID .)
    LLADER          reduce using rule 49 (expresion -> MAS MAS ID .)
    PARDER          reduce using rule 49 (expresion -> MAS MAS ID .)


state 96

    (32) expresion -> PARIZQ expresion PARDER .

    MAS             reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    POR             reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    MODULO          reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    MENOR           reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    IGUALACION      reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    DISTINTO        reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    AND             reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    OR              reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    PTOYCOMA        reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    error           reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    LET             reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    ID              reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    RETURN          reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    BREAK           reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    IF              reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    WHILE           reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    FOR             reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    $end            reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    LLADER          reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)


state 97

    (47) expresion -> ID MAS MAS .

    MAS             reduce using rule 47 (expresion -> ID MAS MAS .)
    MENOS           reduce using rule 47 (expresion -> ID MAS MAS .)
    POR             reduce using rule 47 (expresion -> ID MAS MAS .)
    DIVIDIDO        reduce using rule 47 (expresion -> ID MAS MAS .)
    POTENCIA        reduce using rule 47 (expresion -> ID MAS MAS .)
    MODULO          reduce using rule 47 (expresion -> ID MAS MAS .)
    MAYOR           reduce using rule 47 (expresion -> ID MAS MAS .)
    MENOR           reduce using rule 47 (expresion -> ID MAS MAS .)
    MAYORIGUAL      reduce using rule 47 (expresion -> ID MAS MAS .)
    MENORIGUAL      reduce using rule 47 (expresion -> ID MAS MAS .)
    IGUALACION      reduce using rule 47 (expresion -> ID MAS MAS .)
    DISTINTO        reduce using rule 47 (expresion -> ID MAS MAS .)
    AND             reduce using rule 47 (expresion -> ID MAS MAS .)
    OR              reduce using rule 47 (expresion -> ID MAS MAS .)
    PTOYCOMA        reduce using rule 47 (expresion -> ID MAS MAS .)
    error           reduce using rule 47 (expresion -> ID MAS MAS .)
    LET             reduce using rule 47 (expresion -> ID MAS MAS .)
    ID              reduce using rule 47 (expresion -> ID MAS MAS .)
    CONSOLE         reduce using rule 47 (expresion -> ID MAS MAS .)
    RETURN          reduce using rule 47 (expresion -> ID MAS MAS .)
    BREAK           reduce using rule 47 (expresion -> ID MAS MAS .)
    CONTINUE        reduce using rule 47 (expresion -> ID MAS MAS .)
    IF              reduce using rule 47 (expresion -> ID MAS MAS .)
    WHILE           reduce using rule 47 (expresion -> ID MAS MAS .)
    FOR             reduce using rule 47 (expresion -> ID MAS MAS .)
    $end            reduce using rule 47 (expresion -> ID MAS MAS .)
    LLADER          reduce using rule 47 (expresion -> ID MAS MAS .)
    PARDER          reduce using rule 47 (expresion -> ID MAS MAS .)


state 98

    (59) condicional_if -> IF PARIZQ expresion PARDER . bloque
    (60) condicional_if -> IF PARIZQ expresion PARDER . bloque ELSE bloque
    (61) condicional_if -> IF PARIZQ expresion PARDER . bloque lista_elif
    (62) condicional_if -> IF PARIZQ expresion PARDER . bloque lista_elif ELSE bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 106

    bloque                         shift and go to state 105

state 99

    (66) ciclo_while -> WHILE PARIZQ expresion PARDER . bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 106

    bloque                         shift and go to state 107

state 100

    (67) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA . expresion PTOYCOMA asignacion PARDER bloque
    (69) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA . expresion PTOYCOMA expresion PARDER bloque
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . NUMERO
    (43) expresion -> . CADENA
    (44) expresion -> . ID
    (45) expresion -> . TRUE
    (46) expresion -> . FALSE
    (47) expresion -> . ID MAS MAS
    (48) expresion -> . ID DECREMENTO
    (49) expresion -> . MAS MAS ID
    (50) expresion -> . DECREMENTO ID

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    NOT             shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    MAS             shift and go to state 31
    DECREMENTO      shift and go to state 40

    expresion                      shift and go to state 108

state 101

    (68) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA . expresion PTOYCOMA asignacion PARDER bloque
    (70) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA . expresion PTOYCOMA expresion PARDER bloque
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . NUMERO
    (43) expresion -> . CADENA
    (44) expresion -> . ID
    (45) expresion -> . TRUE
    (46) expresion -> . FALSE
    (47) expresion -> . ID MAS MAS
    (48) expresion -> . ID DECREMENTO
    (49) expresion -> . MAS MAS ID
    (50) expresion -> . DECREMENTO ID

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    NOT             shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    MAS             shift and go to state 31
    DECREMENTO      shift and go to state 40

    expresion                      shift and go to state 109

state 102

    (71) ciclo_for_of -> FOR PARIZQ LET ID . OF expresion PARDER bloque
    (21) declaracion -> LET ID . DOSPUNTOS tipo IGUAL expresion
    (22) declaracion -> LET ID . IGUAL expresion

    OF              shift and go to state 110
    DOSPUNTOS       shift and go to state 44
    IGUAL           shift and go to state 45


state 103

    (21) declaracion -> LET ID DOSPUNTOS tipo IGUAL . expresion
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . NUMERO
    (43) expresion -> . CADENA
    (44) expresion -> . ID
    (45) expresion -> . TRUE
    (46) expresion -> . FALSE
    (47) expresion -> . ID MAS MAS
    (48) expresion -> . ID DECREMENTO
    (49) expresion -> . MAS MAS ID
    (50) expresion -> . DECREMENTO ID

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    NOT             shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    MAS             shift and go to state 31
    DECREMENTO      shift and go to state 40

    expresion                      shift and go to state 111

state 104

    (24) impresion -> CONSOLE PUNTO LOG PARIZQ expresion . PARDER
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion

    PARDER          shift and go to state 112
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    POR             shift and go to state 50
    DIVIDIDO        shift and go to state 51
    POTENCIA        shift and go to state 52
    MODULO          shift and go to state 53
    MAYOR           shift and go to state 54
    MENOR           shift and go to state 55
    MAYORIGUAL      shift and go to state 56
    MENORIGUAL      shift and go to state 57
    IGUALACION      shift and go to state 58
    DISTINTO        shift and go to state 59
    AND             shift and go to state 60
    OR              shift and go to state 61


state 105

    (59) condicional_if -> IF PARIZQ expresion PARDER bloque .
    (60) condicional_if -> IF PARIZQ expresion PARDER bloque . ELSE bloque
    (61) condicional_if -> IF PARIZQ expresion PARDER bloque . lista_elif
    (62) condicional_if -> IF PARIZQ expresion PARDER bloque . lista_elif ELSE bloque
    (63) lista_elif -> . lista_elif elif
    (64) lista_elif -> . elif
    (65) elif -> . ELSE IF PARIZQ expresion PARDER bloque

    PTOYCOMA        reduce using rule 59 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    error           reduce using rule 59 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    LET             reduce using rule 59 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    ID              reduce using rule 59 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    CONSOLE         reduce using rule 59 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    RETURN          reduce using rule 59 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    BREAK           reduce using rule 59 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    CONTINUE        reduce using rule 59 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    IF              reduce using rule 59 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    WHILE           reduce using rule 59 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    FOR             reduce using rule 59 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    $end            reduce using rule 59 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    LLADER          reduce using rule 59 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    ELSE            shift and go to state 113

    lista_elif                     shift and go to state 114
    elif                           shift and go to state 115

state 106

    (9) bloque -> LLAIZQ . instruccion3 LLADER
    (10) bloque -> LLAIZQ . LLADER
    (5) instruccion3 -> . instruccion3 instruccion2
    (6) instruccion3 -> . instruccion3 instruccion2 PTOYCOMA
    (7) instruccion3 -> . instruccion2
    (8) instruccion3 -> . instruccion2 PTOYCOMA
    (11) instruccion2 -> . declaracion
    (12) instruccion2 -> . asignacion
    (13) instruccion2 -> . impresion
    (14) instruccion2 -> . return
    (15) instruccion2 -> . break
    (16) instruccion2 -> . continue
    (17) instruccion2 -> . condicional_if
    (18) instruccion2 -> . ciclo_while
    (19) instruccion2 -> . ciclo_for
    (20) instruccion2 -> . ciclo_for_of
    (21) declaracion -> . LET ID DOSPUNTOS tipo IGUAL expresion
    (22) declaracion -> . LET ID IGUAL expresion
    (23) asignacion -> . ID IGUAL expresion
    (24) impresion -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER
    (55) return -> . RETURN
    (56) return -> . RETURN expresion
    (58) break -> . BREAK
    (57) continue -> . CONTINUE
    (59) condicional_if -> . IF PARIZQ expresion PARDER bloque
    (60) condicional_if -> . IF PARIZQ expresion PARDER bloque ELSE bloque
    (61) condicional_if -> . IF PARIZQ expresion PARDER bloque lista_elif
    (62) condicional_if -> . IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque
    (66) ciclo_while -> . WHILE PARIZQ expresion PARDER bloque
    (67) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (68) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (69) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (70) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (71) ciclo_for_of -> . FOR PARIZQ LET ID OF expresion PARDER bloque

    LLADER          shift and go to state 117
    LET             shift and go to state 15
    ID              shift and go to state 16
    CONSOLE         shift and go to state 17
    RETURN          shift and go to state 18
    BREAK           shift and go to state 19
    CONTINUE        shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    FOR             shift and go to state 23

    instruccion3                   shift and go to state 116
    instruccion2                   shift and go to state 118
    declaracion                    shift and go to state 5
    asignacion                     shift and go to state 6
    impresion                      shift and go to state 7
    return                         shift and go to state 8
    break                          shift and go to state 9
    continue                       shift and go to state 10
    condicional_if                 shift and go to state 11
    ciclo_while                    shift and go to state 12
    ciclo_for                      shift and go to state 13
    ciclo_for_of                   shift and go to state 14

state 107

    (66) ciclo_while -> WHILE PARIZQ expresion PARDER bloque .

    PTOYCOMA        reduce using rule 66 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    error           reduce using rule 66 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    LET             reduce using rule 66 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    ID              reduce using rule 66 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    CONSOLE         reduce using rule 66 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    RETURN          reduce using rule 66 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    BREAK           reduce using rule 66 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    CONTINUE        reduce using rule 66 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    IF              reduce using rule 66 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    WHILE           reduce using rule 66 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    FOR             reduce using rule 66 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    $end            reduce using rule 66 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    LLADER          reduce using rule 66 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)


state 108

    (67) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion . PTOYCOMA asignacion PARDER bloque
    (69) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion . PTOYCOMA expresion PARDER bloque
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion

    PTOYCOMA        shift and go to state 119
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    POR             shift and go to state 50
    DIVIDIDO        shift and go to state 51
    POTENCIA        shift and go to state 52
    MODULO          shift and go to state 53
    MAYOR           shift and go to state 54
    MENOR           shift and go to state 55
    MAYORIGUAL      shift and go to state 56
    MENORIGUAL      shift and go to state 57
    IGUALACION      shift and go to state 58
    DISTINTO        shift and go to state 59
    AND             shift and go to state 60
    OR              shift and go to state 61


state 109

    (68) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion . PTOYCOMA asignacion PARDER bloque
    (70) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion . PTOYCOMA expresion PARDER bloque
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion

    PTOYCOMA        shift and go to state 120
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    POR             shift and go to state 50
    DIVIDIDO        shift and go to state 51
    POTENCIA        shift and go to state 52
    MODULO          shift and go to state 53
    MAYOR           shift and go to state 54
    MENOR           shift and go to state 55
    MAYORIGUAL      shift and go to state 56
    MENORIGUAL      shift and go to state 57
    IGUALACION      shift and go to state 58
    DISTINTO        shift and go to state 59
    AND             shift and go to state 60
    OR              shift and go to state 61


state 110

    (71) ciclo_for_of -> FOR PARIZQ LET ID OF . expresion PARDER bloque
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . NUMERO
    (43) expresion -> . CADENA
    (44) expresion -> . ID
    (45) expresion -> . TRUE
    (46) expresion -> . FALSE
    (47) expresion -> . ID MAS MAS
    (48) expresion -> . ID DECREMENTO
    (49) expresion -> . MAS MAS ID
    (50) expresion -> . DECREMENTO ID

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    NOT             shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    MAS             shift and go to state 31
    DECREMENTO      shift and go to state 40

    expresion                      shift and go to state 121

state 111

    (21) declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion

    PTOYCOMA        reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    error           reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    LET             reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    ID              reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    CONSOLE         reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    RETURN          reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    BREAK           reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    CONTINUE        reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    IF              reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    WHILE           reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    FOR             reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    $end            reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    LLADER          reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    POR             shift and go to state 50
    DIVIDIDO        shift and go to state 51
    POTENCIA        shift and go to state 52
    MODULO          shift and go to state 53
    MAYOR           shift and go to state 54
    MENOR           shift and go to state 55
    MAYORIGUAL      shift and go to state 56
    MENORIGUAL      shift and go to state 57
    IGUALACION      shift and go to state 58
    DISTINTO        shift and go to state 59
    AND             shift and go to state 60
    OR              shift and go to state 61


state 112

    (24) impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .

    PTOYCOMA        reduce using rule 24 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    error           reduce using rule 24 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    LET             reduce using rule 24 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    ID              reduce using rule 24 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 24 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    RETURN          reduce using rule 24 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    BREAK           reduce using rule 24 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 24 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    IF              reduce using rule 24 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    WHILE           reduce using rule 24 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    FOR             reduce using rule 24 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    $end            reduce using rule 24 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    LLADER          reduce using rule 24 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)


state 113

    (60) condicional_if -> IF PARIZQ expresion PARDER bloque ELSE . bloque
    (65) elif -> ELSE . IF PARIZQ expresion PARDER bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    IF              shift and go to state 122
    LLAIZQ          shift and go to state 106

    bloque                         shift and go to state 123

state 114

    (61) condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .
    (62) condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif . ELSE bloque
    (63) lista_elif -> lista_elif . elif
    (65) elif -> . ELSE IF PARIZQ expresion PARDER bloque

    PTOYCOMA        reduce using rule 61 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    error           reduce using rule 61 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    LET             reduce using rule 61 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    ID              reduce using rule 61 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    CONSOLE         reduce using rule 61 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    RETURN          reduce using rule 61 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    BREAK           reduce using rule 61 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    CONTINUE        reduce using rule 61 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    IF              reduce using rule 61 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    WHILE           reduce using rule 61 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    FOR             reduce using rule 61 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    $end            reduce using rule 61 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    LLADER          reduce using rule 61 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    ELSE            shift and go to state 124

    elif                           shift and go to state 125

state 115

    (64) lista_elif -> elif .

    ELSE            reduce using rule 64 (lista_elif -> elif .)
    PTOYCOMA        reduce using rule 64 (lista_elif -> elif .)
    error           reduce using rule 64 (lista_elif -> elif .)
    LET             reduce using rule 64 (lista_elif -> elif .)
    ID              reduce using rule 64 (lista_elif -> elif .)
    CONSOLE         reduce using rule 64 (lista_elif -> elif .)
    RETURN          reduce using rule 64 (lista_elif -> elif .)
    BREAK           reduce using rule 64 (lista_elif -> elif .)
    CONTINUE        reduce using rule 64 (lista_elif -> elif .)
    IF              reduce using rule 64 (lista_elif -> elif .)
    WHILE           reduce using rule 64 (lista_elif -> elif .)
    FOR             reduce using rule 64 (lista_elif -> elif .)
    $end            reduce using rule 64 (lista_elif -> elif .)
    LLADER          reduce using rule 64 (lista_elif -> elif .)


state 116

    (9) bloque -> LLAIZQ instruccion3 . LLADER
    (5) instruccion3 -> instruccion3 . instruccion2
    (6) instruccion3 -> instruccion3 . instruccion2 PTOYCOMA
    (11) instruccion2 -> . declaracion
    (12) instruccion2 -> . asignacion
    (13) instruccion2 -> . impresion
    (14) instruccion2 -> . return
    (15) instruccion2 -> . break
    (16) instruccion2 -> . continue
    (17) instruccion2 -> . condicional_if
    (18) instruccion2 -> . ciclo_while
    (19) instruccion2 -> . ciclo_for
    (20) instruccion2 -> . ciclo_for_of
    (21) declaracion -> . LET ID DOSPUNTOS tipo IGUAL expresion
    (22) declaracion -> . LET ID IGUAL expresion
    (23) asignacion -> . ID IGUAL expresion
    (24) impresion -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER
    (55) return -> . RETURN
    (56) return -> . RETURN expresion
    (58) break -> . BREAK
    (57) continue -> . CONTINUE
    (59) condicional_if -> . IF PARIZQ expresion PARDER bloque
    (60) condicional_if -> . IF PARIZQ expresion PARDER bloque ELSE bloque
    (61) condicional_if -> . IF PARIZQ expresion PARDER bloque lista_elif
    (62) condicional_if -> . IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque
    (66) ciclo_while -> . WHILE PARIZQ expresion PARDER bloque
    (67) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (68) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (69) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (70) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (71) ciclo_for_of -> . FOR PARIZQ LET ID OF expresion PARDER bloque

    LLADER          shift and go to state 126
    LET             shift and go to state 15
    ID              shift and go to state 16
    CONSOLE         shift and go to state 17
    RETURN          shift and go to state 18
    BREAK           shift and go to state 19
    CONTINUE        shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    FOR             shift and go to state 23

    instruccion2                   shift and go to state 127
    declaracion                    shift and go to state 5
    asignacion                     shift and go to state 6
    impresion                      shift and go to state 7
    return                         shift and go to state 8
    break                          shift and go to state 9
    continue                       shift and go to state 10
    condicional_if                 shift and go to state 11
    ciclo_while                    shift and go to state 12
    ciclo_for                      shift and go to state 13
    ciclo_for_of                   shift and go to state 14

state 117

    (10) bloque -> LLAIZQ LLADER .

    ELSE            reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    PTOYCOMA        reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    error           reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    LET             reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    ID              reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    CONSOLE         reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    RETURN          reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    BREAK           reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    CONTINUE        reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    IF              reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    WHILE           reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    FOR             reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    $end            reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    LLADER          reduce using rule 10 (bloque -> LLAIZQ LLADER .)


state 118

    (7) instruccion3 -> instruccion2 .
    (8) instruccion3 -> instruccion2 . PTOYCOMA

    LLADER          reduce using rule 7 (instruccion3 -> instruccion2 .)
    LET             reduce using rule 7 (instruccion3 -> instruccion2 .)
    ID              reduce using rule 7 (instruccion3 -> instruccion2 .)
    CONSOLE         reduce using rule 7 (instruccion3 -> instruccion2 .)
    RETURN          reduce using rule 7 (instruccion3 -> instruccion2 .)
    BREAK           reduce using rule 7 (instruccion3 -> instruccion2 .)
    CONTINUE        reduce using rule 7 (instruccion3 -> instruccion2 .)
    IF              reduce using rule 7 (instruccion3 -> instruccion2 .)
    WHILE           reduce using rule 7 (instruccion3 -> instruccion2 .)
    FOR             reduce using rule 7 (instruccion3 -> instruccion2 .)
    PTOYCOMA        shift and go to state 128


state 119

    (67) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA . asignacion PARDER bloque
    (69) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA . expresion PARDER bloque
    (23) asignacion -> . ID IGUAL expresion
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . NUMERO
    (43) expresion -> . CADENA
    (44) expresion -> . ID
    (45) expresion -> . TRUE
    (46) expresion -> . FALSE
    (47) expresion -> . ID MAS MAS
    (48) expresion -> . ID DECREMENTO
    (49) expresion -> . MAS MAS ID
    (50) expresion -> . DECREMENTO ID

    ID              shift and go to state 131
    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    NOT             shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 36
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    MAS             shift and go to state 31
    DECREMENTO      shift and go to state 40

    expresion                      shift and go to state 129
    asignacion                     shift and go to state 130

state 120

    (68) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA . asignacion PARDER bloque
    (70) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA . expresion PARDER bloque
    (23) asignacion -> . ID IGUAL expresion
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . NUMERO
    (43) expresion -> . CADENA
    (44) expresion -> . ID
    (45) expresion -> . TRUE
    (46) expresion -> . FALSE
    (47) expresion -> . ID MAS MAS
    (48) expresion -> . ID DECREMENTO
    (49) expresion -> . MAS MAS ID
    (50) expresion -> . DECREMENTO ID

    ID              shift and go to state 131
    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    NOT             shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 36
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    MAS             shift and go to state 31
    DECREMENTO      shift and go to state 40

    asignacion                     shift and go to state 132
    expresion                      shift and go to state 133

state 121

    (71) ciclo_for_of -> FOR PARIZQ LET ID OF expresion . PARDER bloque
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion

    PARDER          shift and go to state 134
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    POR             shift and go to state 50
    DIVIDIDO        shift and go to state 51
    POTENCIA        shift and go to state 52
    MODULO          shift and go to state 53
    MAYOR           shift and go to state 54
    MENOR           shift and go to state 55
    MAYORIGUAL      shift and go to state 56
    MENORIGUAL      shift and go to state 57
    IGUALACION      shift and go to state 58
    DISTINTO        shift and go to state 59
    AND             shift and go to state 60
    OR              shift and go to state 61


state 122

    (65) elif -> ELSE IF . PARIZQ expresion PARDER bloque

    PARIZQ          shift and go to state 135


state 123

    (60) condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .

    PTOYCOMA        reduce using rule 60 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    error           reduce using rule 60 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    LET             reduce using rule 60 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    ID              reduce using rule 60 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    CONSOLE         reduce using rule 60 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    RETURN          reduce using rule 60 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    BREAK           reduce using rule 60 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    CONTINUE        reduce using rule 60 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    IF              reduce using rule 60 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    WHILE           reduce using rule 60 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    FOR             reduce using rule 60 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    $end            reduce using rule 60 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    LLADER          reduce using rule 60 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)


state 124

    (62) condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE . bloque
    (65) elif -> ELSE . IF PARIZQ expresion PARDER bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    IF              shift and go to state 122
    LLAIZQ          shift and go to state 106

    bloque                         shift and go to state 136

state 125

    (63) lista_elif -> lista_elif elif .

    ELSE            reduce using rule 63 (lista_elif -> lista_elif elif .)
    PTOYCOMA        reduce using rule 63 (lista_elif -> lista_elif elif .)
    error           reduce using rule 63 (lista_elif -> lista_elif elif .)
    LET             reduce using rule 63 (lista_elif -> lista_elif elif .)
    ID              reduce using rule 63 (lista_elif -> lista_elif elif .)
    CONSOLE         reduce using rule 63 (lista_elif -> lista_elif elif .)
    RETURN          reduce using rule 63 (lista_elif -> lista_elif elif .)
    BREAK           reduce using rule 63 (lista_elif -> lista_elif elif .)
    CONTINUE        reduce using rule 63 (lista_elif -> lista_elif elif .)
    IF              reduce using rule 63 (lista_elif -> lista_elif elif .)
    WHILE           reduce using rule 63 (lista_elif -> lista_elif elif .)
    FOR             reduce using rule 63 (lista_elif -> lista_elif elif .)
    $end            reduce using rule 63 (lista_elif -> lista_elif elif .)
    LLADER          reduce using rule 63 (lista_elif -> lista_elif elif .)


state 126

    (9) bloque -> LLAIZQ instruccion3 LLADER .

    ELSE            reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    PTOYCOMA        reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    error           reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    LET             reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    ID              reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    CONSOLE         reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    RETURN          reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    BREAK           reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    CONTINUE        reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    IF              reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    WHILE           reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    FOR             reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    $end            reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    LLADER          reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)


state 127

    (5) instruccion3 -> instruccion3 instruccion2 .
    (6) instruccion3 -> instruccion3 instruccion2 . PTOYCOMA

    LLADER          reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    LET             reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    ID              reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    CONSOLE         reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    RETURN          reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    BREAK           reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    CONTINUE        reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    IF              reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    WHILE           reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    FOR             reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    PTOYCOMA        shift and go to state 137


state 128

    (8) instruccion3 -> instruccion2 PTOYCOMA .

    LLADER          reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    LET             reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    ID              reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    CONSOLE         reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    RETURN          reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    BREAK           reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    CONTINUE        reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    IF              reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    WHILE           reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    FOR             reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)


state 129

    (69) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion . PARDER bloque
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion

    PARDER          shift and go to state 138
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    POR             shift and go to state 50
    DIVIDIDO        shift and go to state 51
    POTENCIA        shift and go to state 52
    MODULO          shift and go to state 53
    MAYOR           shift and go to state 54
    MENOR           shift and go to state 55
    MAYORIGUAL      shift and go to state 56
    MENORIGUAL      shift and go to state 57
    IGUALACION      shift and go to state 58
    DISTINTO        shift and go to state 59
    AND             shift and go to state 60
    OR              shift and go to state 61


state 130

    (67) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion . PARDER bloque

    PARDER          shift and go to state 139


state 131

    (23) asignacion -> ID . IGUAL expresion
    (44) expresion -> ID .
    (47) expresion -> ID . MAS MAS
    (48) expresion -> ID . DECREMENTO

  ! shift/reduce conflict for MAS resolved as shift
    IGUAL           shift and go to state 28
    PARDER          reduce using rule 44 (expresion -> ID .)
    MENOS           reduce using rule 44 (expresion -> ID .)
    POR             reduce using rule 44 (expresion -> ID .)
    DIVIDIDO        reduce using rule 44 (expresion -> ID .)
    POTENCIA        reduce using rule 44 (expresion -> ID .)
    MODULO          reduce using rule 44 (expresion -> ID .)
    MAYOR           reduce using rule 44 (expresion -> ID .)
    MENOR           reduce using rule 44 (expresion -> ID .)
    MAYORIGUAL      reduce using rule 44 (expresion -> ID .)
    MENORIGUAL      reduce using rule 44 (expresion -> ID .)
    IGUALACION      reduce using rule 44 (expresion -> ID .)
    DISTINTO        reduce using rule 44 (expresion -> ID .)
    AND             reduce using rule 44 (expresion -> ID .)
    OR              reduce using rule 44 (expresion -> ID .)
    MAS             shift and go to state 66
    DECREMENTO      shift and go to state 67

  ! MAS             [ reduce using rule 44 (expresion -> ID .) ]


state 132

    (68) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion . PARDER bloque

    PARDER          shift and go to state 140


state 133

    (70) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion . PARDER bloque
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion

    PARDER          shift and go to state 141
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    POR             shift and go to state 50
    DIVIDIDO        shift and go to state 51
    POTENCIA        shift and go to state 52
    MODULO          shift and go to state 53
    MAYOR           shift and go to state 54
    MENOR           shift and go to state 55
    MAYORIGUAL      shift and go to state 56
    MENORIGUAL      shift and go to state 57
    IGUALACION      shift and go to state 58
    DISTINTO        shift and go to state 59
    AND             shift and go to state 60
    OR              shift and go to state 61


state 134

    (71) ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER . bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 106

    bloque                         shift and go to state 142

state 135

    (65) elif -> ELSE IF PARIZQ . expresion PARDER bloque
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . NUMERO
    (43) expresion -> . CADENA
    (44) expresion -> . ID
    (45) expresion -> . TRUE
    (46) expresion -> . FALSE
    (47) expresion -> . ID MAS MAS
    (48) expresion -> . ID DECREMENTO
    (49) expresion -> . MAS MAS ID
    (50) expresion -> . DECREMENTO ID

    MENOS           shift and go to state 32
    PARIZQ          shift and go to state 33
    NOT             shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    MAS             shift and go to state 31
    DECREMENTO      shift and go to state 40

    expresion                      shift and go to state 143

state 136

    (62) condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .

    PTOYCOMA        reduce using rule 62 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    error           reduce using rule 62 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    LET             reduce using rule 62 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    ID              reduce using rule 62 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    CONSOLE         reduce using rule 62 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    RETURN          reduce using rule 62 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    BREAK           reduce using rule 62 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    CONTINUE        reduce using rule 62 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    IF              reduce using rule 62 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    WHILE           reduce using rule 62 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    FOR             reduce using rule 62 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    $end            reduce using rule 62 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    LLADER          reduce using rule 62 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)


state 137

    (6) instruccion3 -> instruccion3 instruccion2 PTOYCOMA .

    LLADER          reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    LET             reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    ID              reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    CONSOLE         reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    RETURN          reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    BREAK           reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    CONTINUE        reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    IF              reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    WHILE           reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    FOR             reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)


state 138

    (69) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER . bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 106

    bloque                         shift and go to state 144

state 139

    (67) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER . bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 106

    bloque                         shift and go to state 145

state 140

    (68) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER . bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 106

    bloque                         shift and go to state 146

state 141

    (70) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER . bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 106

    bloque                         shift and go to state 147

state 142

    (71) ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .

    PTOYCOMA        reduce using rule 71 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    error           reduce using rule 71 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    LET             reduce using rule 71 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    ID              reduce using rule 71 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    CONSOLE         reduce using rule 71 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    RETURN          reduce using rule 71 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    BREAK           reduce using rule 71 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    CONTINUE        reduce using rule 71 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    IF              reduce using rule 71 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    WHILE           reduce using rule 71 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    FOR             reduce using rule 71 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    $end            reduce using rule 71 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    LLADER          reduce using rule 71 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)


state 143

    (65) elif -> ELSE IF PARIZQ expresion . PARDER bloque
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion

    PARDER          shift and go to state 148
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    POR             shift and go to state 50
    DIVIDIDO        shift and go to state 51
    POTENCIA        shift and go to state 52
    MODULO          shift and go to state 53
    MAYOR           shift and go to state 54
    MENOR           shift and go to state 55
    MAYORIGUAL      shift and go to state 56
    MENORIGUAL      shift and go to state 57
    IGUALACION      shift and go to state 58
    DISTINTO        shift and go to state 59
    AND             shift and go to state 60
    OR              shift and go to state 61


state 144

    (69) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .

    PTOYCOMA        reduce using rule 69 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    error           reduce using rule 69 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    LET             reduce using rule 69 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    ID              reduce using rule 69 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    CONSOLE         reduce using rule 69 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    RETURN          reduce using rule 69 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    BREAK           reduce using rule 69 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    CONTINUE        reduce using rule 69 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    IF              reduce using rule 69 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    WHILE           reduce using rule 69 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    FOR             reduce using rule 69 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    $end            reduce using rule 69 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    LLADER          reduce using rule 69 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)


state 145

    (67) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .

    PTOYCOMA        reduce using rule 67 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    error           reduce using rule 67 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    LET             reduce using rule 67 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    ID              reduce using rule 67 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    CONSOLE         reduce using rule 67 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    RETURN          reduce using rule 67 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    BREAK           reduce using rule 67 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    CONTINUE        reduce using rule 67 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    IF              reduce using rule 67 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    WHILE           reduce using rule 67 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    FOR             reduce using rule 67 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    $end            reduce using rule 67 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    LLADER          reduce using rule 67 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)


state 146

    (68) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .

    PTOYCOMA        reduce using rule 68 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    error           reduce using rule 68 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    LET             reduce using rule 68 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    ID              reduce using rule 68 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    CONSOLE         reduce using rule 68 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    RETURN          reduce using rule 68 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    BREAK           reduce using rule 68 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    CONTINUE        reduce using rule 68 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    IF              reduce using rule 68 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    WHILE           reduce using rule 68 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    FOR             reduce using rule 68 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    $end            reduce using rule 68 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    LLADER          reduce using rule 68 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)


state 147

    (70) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .

    PTOYCOMA        reduce using rule 70 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    error           reduce using rule 70 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    LET             reduce using rule 70 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    ID              reduce using rule 70 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    CONSOLE         reduce using rule 70 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    RETURN          reduce using rule 70 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    BREAK           reduce using rule 70 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    CONTINUE        reduce using rule 70 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    IF              reduce using rule 70 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    WHILE           reduce using rule 70 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    FOR             reduce using rule 70 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    $end            reduce using rule 70 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    LLADER          reduce using rule 70 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)


state 148

    (65) elif -> ELSE IF PARIZQ expresion PARDER . bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 106

    bloque                         shift and go to state 149

state 149

    (65) elif -> ELSE IF PARIZQ expresion PARDER bloque .

    ELSE            reduce using rule 65 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    PTOYCOMA        reduce using rule 65 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    error           reduce using rule 65 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    LET             reduce using rule 65 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    ID              reduce using rule 65 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    CONSOLE         reduce using rule 65 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    RETURN          reduce using rule 65 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    BREAK           reduce using rule 65 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    CONTINUE        reduce using rule 65 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    IF              reduce using rule 65 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    WHILE           reduce using rule 65 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    FOR             reduce using rule 65 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    $end            reduce using rule 65 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    LLADER          reduce using rule 65 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 18 resolved as shift
WARNING: shift/reduce conflict for MAS in state 37 resolved as shift
WARNING: shift/reduce conflict for MAS in state 85 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 85 resolved as shift
WARNING: shift/reduce conflict for POR in state 85 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 85 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 85 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 85 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 85 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 85 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 85 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 85 resolved as shift
WARNING: shift/reduce conflict for IGUALACION in state 85 resolved as shift
WARNING: shift/reduce conflict for DISTINTO in state 85 resolved as shift
WARNING: shift/reduce conflict for AND in state 85 resolved as shift
WARNING: shift/reduce conflict for OR in state 85 resolved as shift
WARNING: shift/reduce conflict for MAS in state 131 resolved as shift
