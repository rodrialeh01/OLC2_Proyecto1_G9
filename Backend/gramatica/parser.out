Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ARRAY
    COMA
    CORDER
    CORIZQ
    FUNCTION
    INTERFACE
    NULL

Grammar

Rule 0     S' -> instrucciones
Rule 1     instrucciones -> instrucciones instruccion
Rule 2     instrucciones -> instruccion
Rule 3     instruccion -> instruccion2 PTOYCOMA
Rule 4     instruccion -> instruccion2
Rule 5     instruccion3 -> instruccion3 instruccion2
Rule 6     instruccion3 -> instruccion3 instruccion2 PTOYCOMA
Rule 7     instruccion3 -> instruccion2
Rule 8     instruccion3 -> instruccion2 PTOYCOMA
Rule 9     bloque -> LLAIZQ instruccion3 LLADER
Rule 10    bloque -> LLAIZQ LLADER
Rule 11    instruccion2 -> declaracion
Rule 12    instruccion2 -> asignacion
Rule 13    instruccion2 -> impresion
Rule 14    instruccion2 -> return
Rule 15    instruccion2 -> break
Rule 16    instruccion2 -> continue
Rule 17    instruccion2 -> condicional_if
Rule 18    instruccion2 -> ciclo_while
Rule 19    instruccion2 -> ciclo_for
Rule 20    instruccion2 -> ciclo_for_of
Rule 21    declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion
Rule 22    declaracion -> LET ID IGUAL expresion
Rule 23    asignacion -> ID IGUAL expresion
Rule 24    impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER
Rule 25    expresion -> expresion MAS expresion
Rule 26    expresion -> expresion MENOS expresion
Rule 27    expresion -> expresion POR expresion
Rule 28    expresion -> expresion DIVIDIDO expresion
Rule 29    expresion -> expresion POTENCIA expresion
Rule 30    expresion -> expresion MODULO expresion
Rule 31    expresion -> MENOS expresion
Rule 32    expresion -> PARIZQ expresion PARDER
Rule 33    expresion -> expresion MAYOR expresion
Rule 34    expresion -> expresion MENOR expresion
Rule 35    expresion -> expresion MAYORIGUAL expresion
Rule 36    expresion -> expresion MENORIGUAL expresion
Rule 37    expresion -> expresion IGUALACION expresion
Rule 38    expresion -> expresion DISTINTO expresion
Rule 39    expresion -> expresion AND expresion
Rule 40    expresion -> expresion OR expresion
Rule 41    expresion -> NOT expresion
Rule 42    expresion -> ENTERO
Rule 43    expresion -> DECIMAL
Rule 44    expresion -> CADENA
Rule 45    expresion -> ID
Rule 46    expresion -> TRUE
Rule 47    expresion -> FALSE
Rule 48    expresion -> ID INCREMENTO
Rule 49    expresion -> ID DECREMENTO
Rule 50    expresion -> INCREMENTO ID
Rule 51    expresion -> DECREMENTO ID
Rule 52    expresion -> aproximacion
Rule 53    expresion -> exponencial
Rule 54    expresion -> to_string
Rule 55    expresion -> to_minusculas
Rule 56    expresion -> to_mayusculas
Rule 57    expresion -> separador
Rule 58    expresion -> concatenacion
Rule 59    aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER
Rule 60    exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
Rule 61    to_string -> expresion PUNTO TOSTRING PARIZQ PARDER
Rule 62    to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER
Rule 63    to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER
Rule 64    separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER
Rule 65    concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER
Rule 66    tipo -> NUMBER
Rule 67    tipo -> STRING
Rule 68    tipo -> BOOLEAN
Rule 69    tipo -> ANY
Rule 70    return -> RETURN
Rule 71    return -> RETURN expresion
Rule 72    continue -> CONTINUE
Rule 73    break -> BREAK
Rule 74    condicional_if -> IF PARIZQ expresion PARDER bloque
Rule 75    condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque
Rule 76    condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif
Rule 77    condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque
Rule 78    lista_elif -> lista_elif elif
Rule 79    lista_elif -> elif
Rule 80    elif -> ELSE IF PARIZQ expresion PARDER bloque
Rule 81    ciclo_while -> WHILE PARIZQ expresion PARDER bloque
Rule 82    ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
Rule 83    ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
Rule 84    ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
Rule 85    ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
Rule 86    ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque
Rule 87    instruccion -> error PTOYCOMA

Terminals, with rules where they appear

AND                  : 39
ANY                  : 69
ARRAY                : 
BOOLEAN              : 68
BREAK                : 73
CADENA               : 44
COMA                 : 
CONCAT               : 65
CONSOLE              : 24
CONTINUE             : 72
CORDER               : 
CORIZQ               : 
DECIMAL              : 43
DECREMENTO           : 49 51
DISTINTO             : 38
DIVIDIDO             : 28
DOSPUNTOS            : 21
ELSE                 : 75 77 80
ENTERO               : 42
FALSE                : 47
FOR                  : 82 83 84 85 86
FUNCTION             : 
ID                   : 21 22 23 45 48 49 50 51 86
IF                   : 74 75 76 77 80
IGUAL                : 21 22 23
IGUALACION           : 37
INCREMENTO           : 48 50
INTERFACE            : 
LET                  : 21 22 86
LLADER               : 9 10
LLAIZQ               : 9 10
LOG                  : 24
MAS                  : 25
MAYOR                : 33
MAYORIGUAL           : 35
MENOR                : 34
MENORIGUAL           : 36
MENOS                : 26 31
MODULO               : 30
NOT                  : 41
NULL                 : 
NUMBER               : 66
OF                   : 86
OR                   : 40
PARDER               : 24 32 59 60 61 62 63 64 65 74 75 76 77 80 81 82 83 84 85 86
PARIZQ               : 24 32 59 60 61 62 63 64 65 74 75 76 77 80 81 82 83 84 85 86
POR                  : 27
POTENCIA             : 29
PTOYCOMA             : 3 6 8 82 82 83 83 84 84 85 85 87
PUNTO                : 24 59 60 61 62 63 64 65
RETURN               : 70 71
SPLIT                : 64
STRING               : 67
TOEXPONENTIAL        : 60
TOFIXED              : 59
TOLOWERCASE          : 62
TOSTRING             : 61
TOUPPERCASE          : 63
TRUE                 : 46
WHILE                : 81
error                : 87

Nonterminals, with rules where they appear

aproximacion         : 52
asignacion           : 12 82 83 83 85
bloque               : 74 75 75 76 77 77 80 81 82 83 84 85 86
break                : 15
ciclo_for            : 19
ciclo_for_of         : 20
ciclo_while          : 18
concatenacion        : 58
condicional_if       : 17
continue             : 16
declaracion          : 11 82 84
elif                 : 78 79
exponencial          : 53
expresion            : 21 22 23 24 25 25 26 26 27 27 28 28 29 29 30 30 31 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 59 59 60 60 61 62 63 64 64 65 65 71 74 75 76 77 80 81 82 83 84 84 85 85 86
impresion            : 13
instruccion          : 1 2
instruccion2         : 3 4 5 6 7 8
instruccion3         : 5 6 9
instrucciones        : 1 0
lista_elif           : 76 77 78
return               : 14
separador            : 57
tipo                 : 21
to_mayusculas        : 56
to_minusculas        : 55
to_string            : 54

Parsing method: LALR

state 0

    (0) S' -> . instrucciones
    (1) instrucciones -> . instrucciones instruccion
    (2) instrucciones -> . instruccion
    (3) instruccion -> . instruccion2 PTOYCOMA
    (4) instruccion -> . instruccion2
    (87) instruccion -> . error PTOYCOMA
    (11) instruccion2 -> . declaracion
    (12) instruccion2 -> . asignacion
    (13) instruccion2 -> . impresion
    (14) instruccion2 -> . return
    (15) instruccion2 -> . break
    (16) instruccion2 -> . continue
    (17) instruccion2 -> . condicional_if
    (18) instruccion2 -> . ciclo_while
    (19) instruccion2 -> . ciclo_for
    (20) instruccion2 -> . ciclo_for_of
    (21) declaracion -> . LET ID DOSPUNTOS tipo IGUAL expresion
    (22) declaracion -> . LET ID IGUAL expresion
    (23) asignacion -> . ID IGUAL expresion
    (24) impresion -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER
    (70) return -> . RETURN
    (71) return -> . RETURN expresion
    (73) break -> . BREAK
    (72) continue -> . CONTINUE
    (74) condicional_if -> . IF PARIZQ expresion PARDER bloque
    (75) condicional_if -> . IF PARIZQ expresion PARDER bloque ELSE bloque
    (76) condicional_if -> . IF PARIZQ expresion PARDER bloque lista_elif
    (77) condicional_if -> . IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque
    (81) ciclo_while -> . WHILE PARIZQ expresion PARDER bloque
    (82) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (83) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (84) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (85) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (86) ciclo_for_of -> . FOR PARIZQ LET ID OF expresion PARDER bloque

    error           shift and go to state 4
    LET             shift and go to state 15
    ID              shift and go to state 16
    CONSOLE         shift and go to state 17
    RETURN          shift and go to state 18
    BREAK           shift and go to state 19
    CONTINUE        shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    FOR             shift and go to state 23

    instrucciones                  shift and go to state 1
    instruccion                    shift and go to state 2
    instruccion2                   shift and go to state 3
    declaracion                    shift and go to state 5
    asignacion                     shift and go to state 6
    impresion                      shift and go to state 7
    return                         shift and go to state 8
    break                          shift and go to state 9
    continue                       shift and go to state 10
    condicional_if                 shift and go to state 11
    ciclo_while                    shift and go to state 12
    ciclo_for                      shift and go to state 13
    ciclo_for_of                   shift and go to state 14

state 1

    (0) S' -> instrucciones .
    (1) instrucciones -> instrucciones . instruccion
    (3) instruccion -> . instruccion2 PTOYCOMA
    (4) instruccion -> . instruccion2
    (87) instruccion -> . error PTOYCOMA
    (11) instruccion2 -> . declaracion
    (12) instruccion2 -> . asignacion
    (13) instruccion2 -> . impresion
    (14) instruccion2 -> . return
    (15) instruccion2 -> . break
    (16) instruccion2 -> . continue
    (17) instruccion2 -> . condicional_if
    (18) instruccion2 -> . ciclo_while
    (19) instruccion2 -> . ciclo_for
    (20) instruccion2 -> . ciclo_for_of
    (21) declaracion -> . LET ID DOSPUNTOS tipo IGUAL expresion
    (22) declaracion -> . LET ID IGUAL expresion
    (23) asignacion -> . ID IGUAL expresion
    (24) impresion -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER
    (70) return -> . RETURN
    (71) return -> . RETURN expresion
    (73) break -> . BREAK
    (72) continue -> . CONTINUE
    (74) condicional_if -> . IF PARIZQ expresion PARDER bloque
    (75) condicional_if -> . IF PARIZQ expresion PARDER bloque ELSE bloque
    (76) condicional_if -> . IF PARIZQ expresion PARDER bloque lista_elif
    (77) condicional_if -> . IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque
    (81) ciclo_while -> . WHILE PARIZQ expresion PARDER bloque
    (82) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (83) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (84) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (85) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (86) ciclo_for_of -> . FOR PARIZQ LET ID OF expresion PARDER bloque

    error           shift and go to state 4
    LET             shift and go to state 15
    ID              shift and go to state 16
    CONSOLE         shift and go to state 17
    RETURN          shift and go to state 18
    BREAK           shift and go to state 19
    CONTINUE        shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    FOR             shift and go to state 23

    instruccion                    shift and go to state 24
    instruccion2                   shift and go to state 3
    declaracion                    shift and go to state 5
    asignacion                     shift and go to state 6
    impresion                      shift and go to state 7
    return                         shift and go to state 8
    break                          shift and go to state 9
    continue                       shift and go to state 10
    condicional_if                 shift and go to state 11
    ciclo_while                    shift and go to state 12
    ciclo_for                      shift and go to state 13
    ciclo_for_of                   shift and go to state 14

state 2

    (2) instrucciones -> instruccion .

    error           reduce using rule 2 (instrucciones -> instruccion .)
    LET             reduce using rule 2 (instrucciones -> instruccion .)
    ID              reduce using rule 2 (instrucciones -> instruccion .)
    CONSOLE         reduce using rule 2 (instrucciones -> instruccion .)
    RETURN          reduce using rule 2 (instrucciones -> instruccion .)
    BREAK           reduce using rule 2 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 2 (instrucciones -> instruccion .)
    IF              reduce using rule 2 (instrucciones -> instruccion .)
    WHILE           reduce using rule 2 (instrucciones -> instruccion .)
    FOR             reduce using rule 2 (instrucciones -> instruccion .)
    $end            reduce using rule 2 (instrucciones -> instruccion .)


state 3

    (3) instruccion -> instruccion2 . PTOYCOMA
    (4) instruccion -> instruccion2 .

    PTOYCOMA        shift and go to state 25
    error           reduce using rule 4 (instruccion -> instruccion2 .)
    LET             reduce using rule 4 (instruccion -> instruccion2 .)
    ID              reduce using rule 4 (instruccion -> instruccion2 .)
    CONSOLE         reduce using rule 4 (instruccion -> instruccion2 .)
    RETURN          reduce using rule 4 (instruccion -> instruccion2 .)
    BREAK           reduce using rule 4 (instruccion -> instruccion2 .)
    CONTINUE        reduce using rule 4 (instruccion -> instruccion2 .)
    IF              reduce using rule 4 (instruccion -> instruccion2 .)
    WHILE           reduce using rule 4 (instruccion -> instruccion2 .)
    FOR             reduce using rule 4 (instruccion -> instruccion2 .)
    $end            reduce using rule 4 (instruccion -> instruccion2 .)


state 4

    (87) instruccion -> error . PTOYCOMA

    PTOYCOMA        shift and go to state 26


state 5

    (11) instruccion2 -> declaracion .

    PTOYCOMA        reduce using rule 11 (instruccion2 -> declaracion .)
    error           reduce using rule 11 (instruccion2 -> declaracion .)
    LET             reduce using rule 11 (instruccion2 -> declaracion .)
    ID              reduce using rule 11 (instruccion2 -> declaracion .)
    CONSOLE         reduce using rule 11 (instruccion2 -> declaracion .)
    RETURN          reduce using rule 11 (instruccion2 -> declaracion .)
    BREAK           reduce using rule 11 (instruccion2 -> declaracion .)
    CONTINUE        reduce using rule 11 (instruccion2 -> declaracion .)
    IF              reduce using rule 11 (instruccion2 -> declaracion .)
    WHILE           reduce using rule 11 (instruccion2 -> declaracion .)
    FOR             reduce using rule 11 (instruccion2 -> declaracion .)
    $end            reduce using rule 11 (instruccion2 -> declaracion .)
    LLADER          reduce using rule 11 (instruccion2 -> declaracion .)


state 6

    (12) instruccion2 -> asignacion .

    PTOYCOMA        reduce using rule 12 (instruccion2 -> asignacion .)
    error           reduce using rule 12 (instruccion2 -> asignacion .)
    LET             reduce using rule 12 (instruccion2 -> asignacion .)
    ID              reduce using rule 12 (instruccion2 -> asignacion .)
    CONSOLE         reduce using rule 12 (instruccion2 -> asignacion .)
    RETURN          reduce using rule 12 (instruccion2 -> asignacion .)
    BREAK           reduce using rule 12 (instruccion2 -> asignacion .)
    CONTINUE        reduce using rule 12 (instruccion2 -> asignacion .)
    IF              reduce using rule 12 (instruccion2 -> asignacion .)
    WHILE           reduce using rule 12 (instruccion2 -> asignacion .)
    FOR             reduce using rule 12 (instruccion2 -> asignacion .)
    $end            reduce using rule 12 (instruccion2 -> asignacion .)
    LLADER          reduce using rule 12 (instruccion2 -> asignacion .)


state 7

    (13) instruccion2 -> impresion .

    PTOYCOMA        reduce using rule 13 (instruccion2 -> impresion .)
    error           reduce using rule 13 (instruccion2 -> impresion .)
    LET             reduce using rule 13 (instruccion2 -> impresion .)
    ID              reduce using rule 13 (instruccion2 -> impresion .)
    CONSOLE         reduce using rule 13 (instruccion2 -> impresion .)
    RETURN          reduce using rule 13 (instruccion2 -> impresion .)
    BREAK           reduce using rule 13 (instruccion2 -> impresion .)
    CONTINUE        reduce using rule 13 (instruccion2 -> impresion .)
    IF              reduce using rule 13 (instruccion2 -> impresion .)
    WHILE           reduce using rule 13 (instruccion2 -> impresion .)
    FOR             reduce using rule 13 (instruccion2 -> impresion .)
    $end            reduce using rule 13 (instruccion2 -> impresion .)
    LLADER          reduce using rule 13 (instruccion2 -> impresion .)


state 8

    (14) instruccion2 -> return .

    PTOYCOMA        reduce using rule 14 (instruccion2 -> return .)
    error           reduce using rule 14 (instruccion2 -> return .)
    LET             reduce using rule 14 (instruccion2 -> return .)
    ID              reduce using rule 14 (instruccion2 -> return .)
    CONSOLE         reduce using rule 14 (instruccion2 -> return .)
    RETURN          reduce using rule 14 (instruccion2 -> return .)
    BREAK           reduce using rule 14 (instruccion2 -> return .)
    CONTINUE        reduce using rule 14 (instruccion2 -> return .)
    IF              reduce using rule 14 (instruccion2 -> return .)
    WHILE           reduce using rule 14 (instruccion2 -> return .)
    FOR             reduce using rule 14 (instruccion2 -> return .)
    $end            reduce using rule 14 (instruccion2 -> return .)
    LLADER          reduce using rule 14 (instruccion2 -> return .)


state 9

    (15) instruccion2 -> break .

    PTOYCOMA        reduce using rule 15 (instruccion2 -> break .)
    error           reduce using rule 15 (instruccion2 -> break .)
    LET             reduce using rule 15 (instruccion2 -> break .)
    ID              reduce using rule 15 (instruccion2 -> break .)
    CONSOLE         reduce using rule 15 (instruccion2 -> break .)
    RETURN          reduce using rule 15 (instruccion2 -> break .)
    BREAK           reduce using rule 15 (instruccion2 -> break .)
    CONTINUE        reduce using rule 15 (instruccion2 -> break .)
    IF              reduce using rule 15 (instruccion2 -> break .)
    WHILE           reduce using rule 15 (instruccion2 -> break .)
    FOR             reduce using rule 15 (instruccion2 -> break .)
    $end            reduce using rule 15 (instruccion2 -> break .)
    LLADER          reduce using rule 15 (instruccion2 -> break .)


state 10

    (16) instruccion2 -> continue .

    PTOYCOMA        reduce using rule 16 (instruccion2 -> continue .)
    error           reduce using rule 16 (instruccion2 -> continue .)
    LET             reduce using rule 16 (instruccion2 -> continue .)
    ID              reduce using rule 16 (instruccion2 -> continue .)
    CONSOLE         reduce using rule 16 (instruccion2 -> continue .)
    RETURN          reduce using rule 16 (instruccion2 -> continue .)
    BREAK           reduce using rule 16 (instruccion2 -> continue .)
    CONTINUE        reduce using rule 16 (instruccion2 -> continue .)
    IF              reduce using rule 16 (instruccion2 -> continue .)
    WHILE           reduce using rule 16 (instruccion2 -> continue .)
    FOR             reduce using rule 16 (instruccion2 -> continue .)
    $end            reduce using rule 16 (instruccion2 -> continue .)
    LLADER          reduce using rule 16 (instruccion2 -> continue .)


state 11

    (17) instruccion2 -> condicional_if .

    PTOYCOMA        reduce using rule 17 (instruccion2 -> condicional_if .)
    error           reduce using rule 17 (instruccion2 -> condicional_if .)
    LET             reduce using rule 17 (instruccion2 -> condicional_if .)
    ID              reduce using rule 17 (instruccion2 -> condicional_if .)
    CONSOLE         reduce using rule 17 (instruccion2 -> condicional_if .)
    RETURN          reduce using rule 17 (instruccion2 -> condicional_if .)
    BREAK           reduce using rule 17 (instruccion2 -> condicional_if .)
    CONTINUE        reduce using rule 17 (instruccion2 -> condicional_if .)
    IF              reduce using rule 17 (instruccion2 -> condicional_if .)
    WHILE           reduce using rule 17 (instruccion2 -> condicional_if .)
    FOR             reduce using rule 17 (instruccion2 -> condicional_if .)
    $end            reduce using rule 17 (instruccion2 -> condicional_if .)
    LLADER          reduce using rule 17 (instruccion2 -> condicional_if .)


state 12

    (18) instruccion2 -> ciclo_while .

    PTOYCOMA        reduce using rule 18 (instruccion2 -> ciclo_while .)
    error           reduce using rule 18 (instruccion2 -> ciclo_while .)
    LET             reduce using rule 18 (instruccion2 -> ciclo_while .)
    ID              reduce using rule 18 (instruccion2 -> ciclo_while .)
    CONSOLE         reduce using rule 18 (instruccion2 -> ciclo_while .)
    RETURN          reduce using rule 18 (instruccion2 -> ciclo_while .)
    BREAK           reduce using rule 18 (instruccion2 -> ciclo_while .)
    CONTINUE        reduce using rule 18 (instruccion2 -> ciclo_while .)
    IF              reduce using rule 18 (instruccion2 -> ciclo_while .)
    WHILE           reduce using rule 18 (instruccion2 -> ciclo_while .)
    FOR             reduce using rule 18 (instruccion2 -> ciclo_while .)
    $end            reduce using rule 18 (instruccion2 -> ciclo_while .)
    LLADER          reduce using rule 18 (instruccion2 -> ciclo_while .)


state 13

    (19) instruccion2 -> ciclo_for .

    PTOYCOMA        reduce using rule 19 (instruccion2 -> ciclo_for .)
    error           reduce using rule 19 (instruccion2 -> ciclo_for .)
    LET             reduce using rule 19 (instruccion2 -> ciclo_for .)
    ID              reduce using rule 19 (instruccion2 -> ciclo_for .)
    CONSOLE         reduce using rule 19 (instruccion2 -> ciclo_for .)
    RETURN          reduce using rule 19 (instruccion2 -> ciclo_for .)
    BREAK           reduce using rule 19 (instruccion2 -> ciclo_for .)
    CONTINUE        reduce using rule 19 (instruccion2 -> ciclo_for .)
    IF              reduce using rule 19 (instruccion2 -> ciclo_for .)
    WHILE           reduce using rule 19 (instruccion2 -> ciclo_for .)
    FOR             reduce using rule 19 (instruccion2 -> ciclo_for .)
    $end            reduce using rule 19 (instruccion2 -> ciclo_for .)
    LLADER          reduce using rule 19 (instruccion2 -> ciclo_for .)


state 14

    (20) instruccion2 -> ciclo_for_of .

    PTOYCOMA        reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    error           reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    LET             reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    ID              reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    CONSOLE         reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    RETURN          reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    BREAK           reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    CONTINUE        reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    IF              reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    WHILE           reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    FOR             reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    $end            reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    LLADER          reduce using rule 20 (instruccion2 -> ciclo_for_of .)


state 15

    (21) declaracion -> LET . ID DOSPUNTOS tipo IGUAL expresion
    (22) declaracion -> LET . ID IGUAL expresion

    ID              shift and go to state 27


state 16

    (23) asignacion -> ID . IGUAL expresion

    IGUAL           shift and go to state 28


state 17

    (24) impresion -> CONSOLE . PUNTO LOG PARIZQ expresion PARDER

    PUNTO           shift and go to state 29


state 18

    (70) return -> RETURN .
    (71) return -> RETURN . expresion
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . ID
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE
    (48) expresion -> . ID INCREMENTO
    (49) expresion -> . ID DECREMENTO
    (50) expresion -> . INCREMENTO ID
    (51) expresion -> . DECREMENTO ID
    (52) expresion -> . aproximacion
    (53) expresion -> . exponencial
    (54) expresion -> . to_string
    (55) expresion -> . to_minusculas
    (56) expresion -> . to_mayusculas
    (57) expresion -> . separador
    (58) expresion -> . concatenacion
    (59) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER

  ! shift/reduce conflict for ID resolved as shift
    PTOYCOMA        reduce using rule 70 (return -> RETURN .)
    error           reduce using rule 70 (return -> RETURN .)
    LET             reduce using rule 70 (return -> RETURN .)
    CONSOLE         reduce using rule 70 (return -> RETURN .)
    RETURN          reduce using rule 70 (return -> RETURN .)
    BREAK           reduce using rule 70 (return -> RETURN .)
    CONTINUE        reduce using rule 70 (return -> RETURN .)
    IF              reduce using rule 70 (return -> RETURN .)
    WHILE           reduce using rule 70 (return -> RETURN .)
    FOR             reduce using rule 70 (return -> RETURN .)
    $end            reduce using rule 70 (return -> RETURN .)
    LLADER          reduce using rule 70 (return -> RETURN .)
    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41

  ! ID              [ reduce using rule 70 (return -> RETURN .) ]

    expresion                      shift and go to state 30
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48

state 19

    (73) break -> BREAK .

    PTOYCOMA        reduce using rule 73 (break -> BREAK .)
    error           reduce using rule 73 (break -> BREAK .)
    LET             reduce using rule 73 (break -> BREAK .)
    ID              reduce using rule 73 (break -> BREAK .)
    CONSOLE         reduce using rule 73 (break -> BREAK .)
    RETURN          reduce using rule 73 (break -> BREAK .)
    BREAK           reduce using rule 73 (break -> BREAK .)
    CONTINUE        reduce using rule 73 (break -> BREAK .)
    IF              reduce using rule 73 (break -> BREAK .)
    WHILE           reduce using rule 73 (break -> BREAK .)
    FOR             reduce using rule 73 (break -> BREAK .)
    $end            reduce using rule 73 (break -> BREAK .)
    LLADER          reduce using rule 73 (break -> BREAK .)


state 20

    (72) continue -> CONTINUE .

    PTOYCOMA        reduce using rule 72 (continue -> CONTINUE .)
    error           reduce using rule 72 (continue -> CONTINUE .)
    LET             reduce using rule 72 (continue -> CONTINUE .)
    ID              reduce using rule 72 (continue -> CONTINUE .)
    CONSOLE         reduce using rule 72 (continue -> CONTINUE .)
    RETURN          reduce using rule 72 (continue -> CONTINUE .)
    BREAK           reduce using rule 72 (continue -> CONTINUE .)
    CONTINUE        reduce using rule 72 (continue -> CONTINUE .)
    IF              reduce using rule 72 (continue -> CONTINUE .)
    WHILE           reduce using rule 72 (continue -> CONTINUE .)
    FOR             reduce using rule 72 (continue -> CONTINUE .)
    $end            reduce using rule 72 (continue -> CONTINUE .)
    LLADER          reduce using rule 72 (continue -> CONTINUE .)


state 21

    (74) condicional_if -> IF . PARIZQ expresion PARDER bloque
    (75) condicional_if -> IF . PARIZQ expresion PARDER bloque ELSE bloque
    (76) condicional_if -> IF . PARIZQ expresion PARDER bloque lista_elif
    (77) condicional_if -> IF . PARIZQ expresion PARDER bloque lista_elif ELSE bloque

    PARIZQ          shift and go to state 49


state 22

    (81) ciclo_while -> WHILE . PARIZQ expresion PARDER bloque

    PARIZQ          shift and go to state 50


state 23

    (82) ciclo_for -> FOR . PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (83) ciclo_for -> FOR . PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (84) ciclo_for -> FOR . PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (85) ciclo_for -> FOR . PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (86) ciclo_for_of -> FOR . PARIZQ LET ID OF expresion PARDER bloque

    PARIZQ          shift and go to state 51


state 24

    (1) instrucciones -> instrucciones instruccion .

    error           reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    LET             reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    CONSOLE         reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    RETURN          reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    FOR             reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 1 (instrucciones -> instrucciones instruccion .)


state 25

    (3) instruccion -> instruccion2 PTOYCOMA .

    error           reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    LET             reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    ID              reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    CONSOLE         reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    RETURN          reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    BREAK           reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    CONTINUE        reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    IF              reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    WHILE           reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    FOR             reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    $end            reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)


state 26

    (87) instruccion -> error PTOYCOMA .

    error           reduce using rule 87 (instruccion -> error PTOYCOMA .)
    LET             reduce using rule 87 (instruccion -> error PTOYCOMA .)
    ID              reduce using rule 87 (instruccion -> error PTOYCOMA .)
    CONSOLE         reduce using rule 87 (instruccion -> error PTOYCOMA .)
    RETURN          reduce using rule 87 (instruccion -> error PTOYCOMA .)
    BREAK           reduce using rule 87 (instruccion -> error PTOYCOMA .)
    CONTINUE        reduce using rule 87 (instruccion -> error PTOYCOMA .)
    IF              reduce using rule 87 (instruccion -> error PTOYCOMA .)
    WHILE           reduce using rule 87 (instruccion -> error PTOYCOMA .)
    FOR             reduce using rule 87 (instruccion -> error PTOYCOMA .)
    $end            reduce using rule 87 (instruccion -> error PTOYCOMA .)


state 27

    (21) declaracion -> LET ID . DOSPUNTOS tipo IGUAL expresion
    (22) declaracion -> LET ID . IGUAL expresion

    DOSPUNTOS       shift and go to state 52
    IGUAL           shift and go to state 53


state 28

    (23) asignacion -> ID IGUAL . expresion
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . ID
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE
    (48) expresion -> . ID INCREMENTO
    (49) expresion -> . ID DECREMENTO
    (50) expresion -> . INCREMENTO ID
    (51) expresion -> . DECREMENTO ID
    (52) expresion -> . aproximacion
    (53) expresion -> . exponencial
    (54) expresion -> . to_string
    (55) expresion -> . to_minusculas
    (56) expresion -> . to_mayusculas
    (57) expresion -> . separador
    (58) expresion -> . concatenacion
    (59) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41

    expresion                      shift and go to state 54
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48

state 29

    (24) impresion -> CONSOLE PUNTO . LOG PARIZQ expresion PARDER

    LOG             shift and go to state 55


state 30

    (71) return -> RETURN expresion .
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion
    (59) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PTOYCOMA        reduce using rule 71 (return -> RETURN expresion .)
    error           reduce using rule 71 (return -> RETURN expresion .)
    LET             reduce using rule 71 (return -> RETURN expresion .)
    ID              reduce using rule 71 (return -> RETURN expresion .)
    CONSOLE         reduce using rule 71 (return -> RETURN expresion .)
    RETURN          reduce using rule 71 (return -> RETURN expresion .)
    BREAK           reduce using rule 71 (return -> RETURN expresion .)
    CONTINUE        reduce using rule 71 (return -> RETURN expresion .)
    IF              reduce using rule 71 (return -> RETURN expresion .)
    WHILE           reduce using rule 71 (return -> RETURN expresion .)
    FOR             reduce using rule 71 (return -> RETURN expresion .)
    $end            reduce using rule 71 (return -> RETURN expresion .)
    LLADER          reduce using rule 71 (return -> RETURN expresion .)
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    POR             shift and go to state 58
    DIVIDIDO        shift and go to state 59
    POTENCIA        shift and go to state 60
    MODULO          shift and go to state 61
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    MAYORIGUAL      shift and go to state 64
    MENORIGUAL      shift and go to state 65
    IGUALACION      shift and go to state 66
    DISTINTO        shift and go to state 67
    AND             shift and go to state 68
    OR              shift and go to state 69
    PUNTO           shift and go to state 70


state 31

    (31) expresion -> MENOS . expresion
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . ID
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE
    (48) expresion -> . ID INCREMENTO
    (49) expresion -> . ID DECREMENTO
    (50) expresion -> . INCREMENTO ID
    (51) expresion -> . DECREMENTO ID
    (52) expresion -> . aproximacion
    (53) expresion -> . exponencial
    (54) expresion -> . to_string
    (55) expresion -> . to_minusculas
    (56) expresion -> . to_mayusculas
    (57) expresion -> . separador
    (58) expresion -> . concatenacion
    (59) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41

    expresion                      shift and go to state 71
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48

state 32

    (32) expresion -> PARIZQ . expresion PARDER
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . ID
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE
    (48) expresion -> . ID INCREMENTO
    (49) expresion -> . ID DECREMENTO
    (50) expresion -> . INCREMENTO ID
    (51) expresion -> . DECREMENTO ID
    (52) expresion -> . aproximacion
    (53) expresion -> . exponencial
    (54) expresion -> . to_string
    (55) expresion -> . to_minusculas
    (56) expresion -> . to_mayusculas
    (57) expresion -> . separador
    (58) expresion -> . concatenacion
    (59) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41

    expresion                      shift and go to state 72
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48

state 33

    (41) expresion -> NOT . expresion
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . ID
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE
    (48) expresion -> . ID INCREMENTO
    (49) expresion -> . ID DECREMENTO
    (50) expresion -> . INCREMENTO ID
    (51) expresion -> . DECREMENTO ID
    (52) expresion -> . aproximacion
    (53) expresion -> . exponencial
    (54) expresion -> . to_string
    (55) expresion -> . to_minusculas
    (56) expresion -> . to_mayusculas
    (57) expresion -> . separador
    (58) expresion -> . concatenacion
    (59) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41

    expresion                      shift and go to state 73
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48

state 34

    (42) expresion -> ENTERO .

    MAS             reduce using rule 42 (expresion -> ENTERO .)
    MENOS           reduce using rule 42 (expresion -> ENTERO .)
    POR             reduce using rule 42 (expresion -> ENTERO .)
    DIVIDIDO        reduce using rule 42 (expresion -> ENTERO .)
    POTENCIA        reduce using rule 42 (expresion -> ENTERO .)
    MODULO          reduce using rule 42 (expresion -> ENTERO .)
    MAYOR           reduce using rule 42 (expresion -> ENTERO .)
    MENOR           reduce using rule 42 (expresion -> ENTERO .)
    MAYORIGUAL      reduce using rule 42 (expresion -> ENTERO .)
    MENORIGUAL      reduce using rule 42 (expresion -> ENTERO .)
    IGUALACION      reduce using rule 42 (expresion -> ENTERO .)
    DISTINTO        reduce using rule 42 (expresion -> ENTERO .)
    AND             reduce using rule 42 (expresion -> ENTERO .)
    OR              reduce using rule 42 (expresion -> ENTERO .)
    PUNTO           reduce using rule 42 (expresion -> ENTERO .)
    PTOYCOMA        reduce using rule 42 (expresion -> ENTERO .)
    error           reduce using rule 42 (expresion -> ENTERO .)
    LET             reduce using rule 42 (expresion -> ENTERO .)
    ID              reduce using rule 42 (expresion -> ENTERO .)
    CONSOLE         reduce using rule 42 (expresion -> ENTERO .)
    RETURN          reduce using rule 42 (expresion -> ENTERO .)
    BREAK           reduce using rule 42 (expresion -> ENTERO .)
    CONTINUE        reduce using rule 42 (expresion -> ENTERO .)
    IF              reduce using rule 42 (expresion -> ENTERO .)
    WHILE           reduce using rule 42 (expresion -> ENTERO .)
    FOR             reduce using rule 42 (expresion -> ENTERO .)
    $end            reduce using rule 42 (expresion -> ENTERO .)
    LLADER          reduce using rule 42 (expresion -> ENTERO .)
    PARDER          reduce using rule 42 (expresion -> ENTERO .)


state 35

    (43) expresion -> DECIMAL .

    MAS             reduce using rule 43 (expresion -> DECIMAL .)
    MENOS           reduce using rule 43 (expresion -> DECIMAL .)
    POR             reduce using rule 43 (expresion -> DECIMAL .)
    DIVIDIDO        reduce using rule 43 (expresion -> DECIMAL .)
    POTENCIA        reduce using rule 43 (expresion -> DECIMAL .)
    MODULO          reduce using rule 43 (expresion -> DECIMAL .)
    MAYOR           reduce using rule 43 (expresion -> DECIMAL .)
    MENOR           reduce using rule 43 (expresion -> DECIMAL .)
    MAYORIGUAL      reduce using rule 43 (expresion -> DECIMAL .)
    MENORIGUAL      reduce using rule 43 (expresion -> DECIMAL .)
    IGUALACION      reduce using rule 43 (expresion -> DECIMAL .)
    DISTINTO        reduce using rule 43 (expresion -> DECIMAL .)
    AND             reduce using rule 43 (expresion -> DECIMAL .)
    OR              reduce using rule 43 (expresion -> DECIMAL .)
    PUNTO           reduce using rule 43 (expresion -> DECIMAL .)
    PTOYCOMA        reduce using rule 43 (expresion -> DECIMAL .)
    error           reduce using rule 43 (expresion -> DECIMAL .)
    LET             reduce using rule 43 (expresion -> DECIMAL .)
    ID              reduce using rule 43 (expresion -> DECIMAL .)
    CONSOLE         reduce using rule 43 (expresion -> DECIMAL .)
    RETURN          reduce using rule 43 (expresion -> DECIMAL .)
    BREAK           reduce using rule 43 (expresion -> DECIMAL .)
    CONTINUE        reduce using rule 43 (expresion -> DECIMAL .)
    IF              reduce using rule 43 (expresion -> DECIMAL .)
    WHILE           reduce using rule 43 (expresion -> DECIMAL .)
    FOR             reduce using rule 43 (expresion -> DECIMAL .)
    $end            reduce using rule 43 (expresion -> DECIMAL .)
    LLADER          reduce using rule 43 (expresion -> DECIMAL .)
    PARDER          reduce using rule 43 (expresion -> DECIMAL .)


state 36

    (44) expresion -> CADENA .

    MAS             reduce using rule 44 (expresion -> CADENA .)
    MENOS           reduce using rule 44 (expresion -> CADENA .)
    POR             reduce using rule 44 (expresion -> CADENA .)
    DIVIDIDO        reduce using rule 44 (expresion -> CADENA .)
    POTENCIA        reduce using rule 44 (expresion -> CADENA .)
    MODULO          reduce using rule 44 (expresion -> CADENA .)
    MAYOR           reduce using rule 44 (expresion -> CADENA .)
    MENOR           reduce using rule 44 (expresion -> CADENA .)
    MAYORIGUAL      reduce using rule 44 (expresion -> CADENA .)
    MENORIGUAL      reduce using rule 44 (expresion -> CADENA .)
    IGUALACION      reduce using rule 44 (expresion -> CADENA .)
    DISTINTO        reduce using rule 44 (expresion -> CADENA .)
    AND             reduce using rule 44 (expresion -> CADENA .)
    OR              reduce using rule 44 (expresion -> CADENA .)
    PUNTO           reduce using rule 44 (expresion -> CADENA .)
    PTOYCOMA        reduce using rule 44 (expresion -> CADENA .)
    error           reduce using rule 44 (expresion -> CADENA .)
    LET             reduce using rule 44 (expresion -> CADENA .)
    ID              reduce using rule 44 (expresion -> CADENA .)
    CONSOLE         reduce using rule 44 (expresion -> CADENA .)
    RETURN          reduce using rule 44 (expresion -> CADENA .)
    BREAK           reduce using rule 44 (expresion -> CADENA .)
    CONTINUE        reduce using rule 44 (expresion -> CADENA .)
    IF              reduce using rule 44 (expresion -> CADENA .)
    WHILE           reduce using rule 44 (expresion -> CADENA .)
    FOR             reduce using rule 44 (expresion -> CADENA .)
    $end            reduce using rule 44 (expresion -> CADENA .)
    LLADER          reduce using rule 44 (expresion -> CADENA .)
    PARDER          reduce using rule 44 (expresion -> CADENA .)


state 37

    (45) expresion -> ID .
    (48) expresion -> ID . INCREMENTO
    (49) expresion -> ID . DECREMENTO

    MAS             reduce using rule 45 (expresion -> ID .)
    MENOS           reduce using rule 45 (expresion -> ID .)
    POR             reduce using rule 45 (expresion -> ID .)
    DIVIDIDO        reduce using rule 45 (expresion -> ID .)
    POTENCIA        reduce using rule 45 (expresion -> ID .)
    MODULO          reduce using rule 45 (expresion -> ID .)
    MAYOR           reduce using rule 45 (expresion -> ID .)
    MENOR           reduce using rule 45 (expresion -> ID .)
    MAYORIGUAL      reduce using rule 45 (expresion -> ID .)
    MENORIGUAL      reduce using rule 45 (expresion -> ID .)
    IGUALACION      reduce using rule 45 (expresion -> ID .)
    DISTINTO        reduce using rule 45 (expresion -> ID .)
    AND             reduce using rule 45 (expresion -> ID .)
    OR              reduce using rule 45 (expresion -> ID .)
    PUNTO           reduce using rule 45 (expresion -> ID .)
    PTOYCOMA        reduce using rule 45 (expresion -> ID .)
    error           reduce using rule 45 (expresion -> ID .)
    LET             reduce using rule 45 (expresion -> ID .)
    ID              reduce using rule 45 (expresion -> ID .)
    CONSOLE         reduce using rule 45 (expresion -> ID .)
    RETURN          reduce using rule 45 (expresion -> ID .)
    BREAK           reduce using rule 45 (expresion -> ID .)
    CONTINUE        reduce using rule 45 (expresion -> ID .)
    IF              reduce using rule 45 (expresion -> ID .)
    WHILE           reduce using rule 45 (expresion -> ID .)
    FOR             reduce using rule 45 (expresion -> ID .)
    $end            reduce using rule 45 (expresion -> ID .)
    LLADER          reduce using rule 45 (expresion -> ID .)
    PARDER          reduce using rule 45 (expresion -> ID .)
    INCREMENTO      shift and go to state 74
    DECREMENTO      shift and go to state 75


state 38

    (46) expresion -> TRUE .

    MAS             reduce using rule 46 (expresion -> TRUE .)
    MENOS           reduce using rule 46 (expresion -> TRUE .)
    POR             reduce using rule 46 (expresion -> TRUE .)
    DIVIDIDO        reduce using rule 46 (expresion -> TRUE .)
    POTENCIA        reduce using rule 46 (expresion -> TRUE .)
    MODULO          reduce using rule 46 (expresion -> TRUE .)
    MAYOR           reduce using rule 46 (expresion -> TRUE .)
    MENOR           reduce using rule 46 (expresion -> TRUE .)
    MAYORIGUAL      reduce using rule 46 (expresion -> TRUE .)
    MENORIGUAL      reduce using rule 46 (expresion -> TRUE .)
    IGUALACION      reduce using rule 46 (expresion -> TRUE .)
    DISTINTO        reduce using rule 46 (expresion -> TRUE .)
    AND             reduce using rule 46 (expresion -> TRUE .)
    OR              reduce using rule 46 (expresion -> TRUE .)
    PUNTO           reduce using rule 46 (expresion -> TRUE .)
    PTOYCOMA        reduce using rule 46 (expresion -> TRUE .)
    error           reduce using rule 46 (expresion -> TRUE .)
    LET             reduce using rule 46 (expresion -> TRUE .)
    ID              reduce using rule 46 (expresion -> TRUE .)
    CONSOLE         reduce using rule 46 (expresion -> TRUE .)
    RETURN          reduce using rule 46 (expresion -> TRUE .)
    BREAK           reduce using rule 46 (expresion -> TRUE .)
    CONTINUE        reduce using rule 46 (expresion -> TRUE .)
    IF              reduce using rule 46 (expresion -> TRUE .)
    WHILE           reduce using rule 46 (expresion -> TRUE .)
    FOR             reduce using rule 46 (expresion -> TRUE .)
    $end            reduce using rule 46 (expresion -> TRUE .)
    LLADER          reduce using rule 46 (expresion -> TRUE .)
    PARDER          reduce using rule 46 (expresion -> TRUE .)


state 39

    (47) expresion -> FALSE .

    MAS             reduce using rule 47 (expresion -> FALSE .)
    MENOS           reduce using rule 47 (expresion -> FALSE .)
    POR             reduce using rule 47 (expresion -> FALSE .)
    DIVIDIDO        reduce using rule 47 (expresion -> FALSE .)
    POTENCIA        reduce using rule 47 (expresion -> FALSE .)
    MODULO          reduce using rule 47 (expresion -> FALSE .)
    MAYOR           reduce using rule 47 (expresion -> FALSE .)
    MENOR           reduce using rule 47 (expresion -> FALSE .)
    MAYORIGUAL      reduce using rule 47 (expresion -> FALSE .)
    MENORIGUAL      reduce using rule 47 (expresion -> FALSE .)
    IGUALACION      reduce using rule 47 (expresion -> FALSE .)
    DISTINTO        reduce using rule 47 (expresion -> FALSE .)
    AND             reduce using rule 47 (expresion -> FALSE .)
    OR              reduce using rule 47 (expresion -> FALSE .)
    PUNTO           reduce using rule 47 (expresion -> FALSE .)
    PTOYCOMA        reduce using rule 47 (expresion -> FALSE .)
    error           reduce using rule 47 (expresion -> FALSE .)
    LET             reduce using rule 47 (expresion -> FALSE .)
    ID              reduce using rule 47 (expresion -> FALSE .)
    CONSOLE         reduce using rule 47 (expresion -> FALSE .)
    RETURN          reduce using rule 47 (expresion -> FALSE .)
    BREAK           reduce using rule 47 (expresion -> FALSE .)
    CONTINUE        reduce using rule 47 (expresion -> FALSE .)
    IF              reduce using rule 47 (expresion -> FALSE .)
    WHILE           reduce using rule 47 (expresion -> FALSE .)
    FOR             reduce using rule 47 (expresion -> FALSE .)
    $end            reduce using rule 47 (expresion -> FALSE .)
    LLADER          reduce using rule 47 (expresion -> FALSE .)
    PARDER          reduce using rule 47 (expresion -> FALSE .)


state 40

    (50) expresion -> INCREMENTO . ID

    ID              shift and go to state 76


state 41

    (51) expresion -> DECREMENTO . ID

    ID              shift and go to state 77


state 42

    (52) expresion -> aproximacion .

    MAS             reduce using rule 52 (expresion -> aproximacion .)
    MENOS           reduce using rule 52 (expresion -> aproximacion .)
    POR             reduce using rule 52 (expresion -> aproximacion .)
    DIVIDIDO        reduce using rule 52 (expresion -> aproximacion .)
    POTENCIA        reduce using rule 52 (expresion -> aproximacion .)
    MODULO          reduce using rule 52 (expresion -> aproximacion .)
    MAYOR           reduce using rule 52 (expresion -> aproximacion .)
    MENOR           reduce using rule 52 (expresion -> aproximacion .)
    MAYORIGUAL      reduce using rule 52 (expresion -> aproximacion .)
    MENORIGUAL      reduce using rule 52 (expresion -> aproximacion .)
    IGUALACION      reduce using rule 52 (expresion -> aproximacion .)
    DISTINTO        reduce using rule 52 (expresion -> aproximacion .)
    AND             reduce using rule 52 (expresion -> aproximacion .)
    OR              reduce using rule 52 (expresion -> aproximacion .)
    PUNTO           reduce using rule 52 (expresion -> aproximacion .)
    PTOYCOMA        reduce using rule 52 (expresion -> aproximacion .)
    error           reduce using rule 52 (expresion -> aproximacion .)
    LET             reduce using rule 52 (expresion -> aproximacion .)
    ID              reduce using rule 52 (expresion -> aproximacion .)
    CONSOLE         reduce using rule 52 (expresion -> aproximacion .)
    RETURN          reduce using rule 52 (expresion -> aproximacion .)
    BREAK           reduce using rule 52 (expresion -> aproximacion .)
    CONTINUE        reduce using rule 52 (expresion -> aproximacion .)
    IF              reduce using rule 52 (expresion -> aproximacion .)
    WHILE           reduce using rule 52 (expresion -> aproximacion .)
    FOR             reduce using rule 52 (expresion -> aproximacion .)
    $end            reduce using rule 52 (expresion -> aproximacion .)
    LLADER          reduce using rule 52 (expresion -> aproximacion .)
    PARDER          reduce using rule 52 (expresion -> aproximacion .)


state 43

    (53) expresion -> exponencial .

    MAS             reduce using rule 53 (expresion -> exponencial .)
    MENOS           reduce using rule 53 (expresion -> exponencial .)
    POR             reduce using rule 53 (expresion -> exponencial .)
    DIVIDIDO        reduce using rule 53 (expresion -> exponencial .)
    POTENCIA        reduce using rule 53 (expresion -> exponencial .)
    MODULO          reduce using rule 53 (expresion -> exponencial .)
    MAYOR           reduce using rule 53 (expresion -> exponencial .)
    MENOR           reduce using rule 53 (expresion -> exponencial .)
    MAYORIGUAL      reduce using rule 53 (expresion -> exponencial .)
    MENORIGUAL      reduce using rule 53 (expresion -> exponencial .)
    IGUALACION      reduce using rule 53 (expresion -> exponencial .)
    DISTINTO        reduce using rule 53 (expresion -> exponencial .)
    AND             reduce using rule 53 (expresion -> exponencial .)
    OR              reduce using rule 53 (expresion -> exponencial .)
    PUNTO           reduce using rule 53 (expresion -> exponencial .)
    PTOYCOMA        reduce using rule 53 (expresion -> exponencial .)
    error           reduce using rule 53 (expresion -> exponencial .)
    LET             reduce using rule 53 (expresion -> exponencial .)
    ID              reduce using rule 53 (expresion -> exponencial .)
    CONSOLE         reduce using rule 53 (expresion -> exponencial .)
    RETURN          reduce using rule 53 (expresion -> exponencial .)
    BREAK           reduce using rule 53 (expresion -> exponencial .)
    CONTINUE        reduce using rule 53 (expresion -> exponencial .)
    IF              reduce using rule 53 (expresion -> exponencial .)
    WHILE           reduce using rule 53 (expresion -> exponencial .)
    FOR             reduce using rule 53 (expresion -> exponencial .)
    $end            reduce using rule 53 (expresion -> exponencial .)
    LLADER          reduce using rule 53 (expresion -> exponencial .)
    PARDER          reduce using rule 53 (expresion -> exponencial .)


state 44

    (54) expresion -> to_string .

    MAS             reduce using rule 54 (expresion -> to_string .)
    MENOS           reduce using rule 54 (expresion -> to_string .)
    POR             reduce using rule 54 (expresion -> to_string .)
    DIVIDIDO        reduce using rule 54 (expresion -> to_string .)
    POTENCIA        reduce using rule 54 (expresion -> to_string .)
    MODULO          reduce using rule 54 (expresion -> to_string .)
    MAYOR           reduce using rule 54 (expresion -> to_string .)
    MENOR           reduce using rule 54 (expresion -> to_string .)
    MAYORIGUAL      reduce using rule 54 (expresion -> to_string .)
    MENORIGUAL      reduce using rule 54 (expresion -> to_string .)
    IGUALACION      reduce using rule 54 (expresion -> to_string .)
    DISTINTO        reduce using rule 54 (expresion -> to_string .)
    AND             reduce using rule 54 (expresion -> to_string .)
    OR              reduce using rule 54 (expresion -> to_string .)
    PUNTO           reduce using rule 54 (expresion -> to_string .)
    PTOYCOMA        reduce using rule 54 (expresion -> to_string .)
    error           reduce using rule 54 (expresion -> to_string .)
    LET             reduce using rule 54 (expresion -> to_string .)
    ID              reduce using rule 54 (expresion -> to_string .)
    CONSOLE         reduce using rule 54 (expresion -> to_string .)
    RETURN          reduce using rule 54 (expresion -> to_string .)
    BREAK           reduce using rule 54 (expresion -> to_string .)
    CONTINUE        reduce using rule 54 (expresion -> to_string .)
    IF              reduce using rule 54 (expresion -> to_string .)
    WHILE           reduce using rule 54 (expresion -> to_string .)
    FOR             reduce using rule 54 (expresion -> to_string .)
    $end            reduce using rule 54 (expresion -> to_string .)
    LLADER          reduce using rule 54 (expresion -> to_string .)
    PARDER          reduce using rule 54 (expresion -> to_string .)


state 45

    (55) expresion -> to_minusculas .

    MAS             reduce using rule 55 (expresion -> to_minusculas .)
    MENOS           reduce using rule 55 (expresion -> to_minusculas .)
    POR             reduce using rule 55 (expresion -> to_minusculas .)
    DIVIDIDO        reduce using rule 55 (expresion -> to_minusculas .)
    POTENCIA        reduce using rule 55 (expresion -> to_minusculas .)
    MODULO          reduce using rule 55 (expresion -> to_minusculas .)
    MAYOR           reduce using rule 55 (expresion -> to_minusculas .)
    MENOR           reduce using rule 55 (expresion -> to_minusculas .)
    MAYORIGUAL      reduce using rule 55 (expresion -> to_minusculas .)
    MENORIGUAL      reduce using rule 55 (expresion -> to_minusculas .)
    IGUALACION      reduce using rule 55 (expresion -> to_minusculas .)
    DISTINTO        reduce using rule 55 (expresion -> to_minusculas .)
    AND             reduce using rule 55 (expresion -> to_minusculas .)
    OR              reduce using rule 55 (expresion -> to_minusculas .)
    PUNTO           reduce using rule 55 (expresion -> to_minusculas .)
    PTOYCOMA        reduce using rule 55 (expresion -> to_minusculas .)
    error           reduce using rule 55 (expresion -> to_minusculas .)
    LET             reduce using rule 55 (expresion -> to_minusculas .)
    ID              reduce using rule 55 (expresion -> to_minusculas .)
    CONSOLE         reduce using rule 55 (expresion -> to_minusculas .)
    RETURN          reduce using rule 55 (expresion -> to_minusculas .)
    BREAK           reduce using rule 55 (expresion -> to_minusculas .)
    CONTINUE        reduce using rule 55 (expresion -> to_minusculas .)
    IF              reduce using rule 55 (expresion -> to_minusculas .)
    WHILE           reduce using rule 55 (expresion -> to_minusculas .)
    FOR             reduce using rule 55 (expresion -> to_minusculas .)
    $end            reduce using rule 55 (expresion -> to_minusculas .)
    LLADER          reduce using rule 55 (expresion -> to_minusculas .)
    PARDER          reduce using rule 55 (expresion -> to_minusculas .)


state 46

    (56) expresion -> to_mayusculas .

    MAS             reduce using rule 56 (expresion -> to_mayusculas .)
    MENOS           reduce using rule 56 (expresion -> to_mayusculas .)
    POR             reduce using rule 56 (expresion -> to_mayusculas .)
    DIVIDIDO        reduce using rule 56 (expresion -> to_mayusculas .)
    POTENCIA        reduce using rule 56 (expresion -> to_mayusculas .)
    MODULO          reduce using rule 56 (expresion -> to_mayusculas .)
    MAYOR           reduce using rule 56 (expresion -> to_mayusculas .)
    MENOR           reduce using rule 56 (expresion -> to_mayusculas .)
    MAYORIGUAL      reduce using rule 56 (expresion -> to_mayusculas .)
    MENORIGUAL      reduce using rule 56 (expresion -> to_mayusculas .)
    IGUALACION      reduce using rule 56 (expresion -> to_mayusculas .)
    DISTINTO        reduce using rule 56 (expresion -> to_mayusculas .)
    AND             reduce using rule 56 (expresion -> to_mayusculas .)
    OR              reduce using rule 56 (expresion -> to_mayusculas .)
    PUNTO           reduce using rule 56 (expresion -> to_mayusculas .)
    PTOYCOMA        reduce using rule 56 (expresion -> to_mayusculas .)
    error           reduce using rule 56 (expresion -> to_mayusculas .)
    LET             reduce using rule 56 (expresion -> to_mayusculas .)
    ID              reduce using rule 56 (expresion -> to_mayusculas .)
    CONSOLE         reduce using rule 56 (expresion -> to_mayusculas .)
    RETURN          reduce using rule 56 (expresion -> to_mayusculas .)
    BREAK           reduce using rule 56 (expresion -> to_mayusculas .)
    CONTINUE        reduce using rule 56 (expresion -> to_mayusculas .)
    IF              reduce using rule 56 (expresion -> to_mayusculas .)
    WHILE           reduce using rule 56 (expresion -> to_mayusculas .)
    FOR             reduce using rule 56 (expresion -> to_mayusculas .)
    $end            reduce using rule 56 (expresion -> to_mayusculas .)
    LLADER          reduce using rule 56 (expresion -> to_mayusculas .)
    PARDER          reduce using rule 56 (expresion -> to_mayusculas .)


state 47

    (57) expresion -> separador .

    MAS             reduce using rule 57 (expresion -> separador .)
    MENOS           reduce using rule 57 (expresion -> separador .)
    POR             reduce using rule 57 (expresion -> separador .)
    DIVIDIDO        reduce using rule 57 (expresion -> separador .)
    POTENCIA        reduce using rule 57 (expresion -> separador .)
    MODULO          reduce using rule 57 (expresion -> separador .)
    MAYOR           reduce using rule 57 (expresion -> separador .)
    MENOR           reduce using rule 57 (expresion -> separador .)
    MAYORIGUAL      reduce using rule 57 (expresion -> separador .)
    MENORIGUAL      reduce using rule 57 (expresion -> separador .)
    IGUALACION      reduce using rule 57 (expresion -> separador .)
    DISTINTO        reduce using rule 57 (expresion -> separador .)
    AND             reduce using rule 57 (expresion -> separador .)
    OR              reduce using rule 57 (expresion -> separador .)
    PUNTO           reduce using rule 57 (expresion -> separador .)
    PTOYCOMA        reduce using rule 57 (expresion -> separador .)
    error           reduce using rule 57 (expresion -> separador .)
    LET             reduce using rule 57 (expresion -> separador .)
    ID              reduce using rule 57 (expresion -> separador .)
    CONSOLE         reduce using rule 57 (expresion -> separador .)
    RETURN          reduce using rule 57 (expresion -> separador .)
    BREAK           reduce using rule 57 (expresion -> separador .)
    CONTINUE        reduce using rule 57 (expresion -> separador .)
    IF              reduce using rule 57 (expresion -> separador .)
    WHILE           reduce using rule 57 (expresion -> separador .)
    FOR             reduce using rule 57 (expresion -> separador .)
    $end            reduce using rule 57 (expresion -> separador .)
    LLADER          reduce using rule 57 (expresion -> separador .)
    PARDER          reduce using rule 57 (expresion -> separador .)


state 48

    (58) expresion -> concatenacion .

    MAS             reduce using rule 58 (expresion -> concatenacion .)
    MENOS           reduce using rule 58 (expresion -> concatenacion .)
    POR             reduce using rule 58 (expresion -> concatenacion .)
    DIVIDIDO        reduce using rule 58 (expresion -> concatenacion .)
    POTENCIA        reduce using rule 58 (expresion -> concatenacion .)
    MODULO          reduce using rule 58 (expresion -> concatenacion .)
    MAYOR           reduce using rule 58 (expresion -> concatenacion .)
    MENOR           reduce using rule 58 (expresion -> concatenacion .)
    MAYORIGUAL      reduce using rule 58 (expresion -> concatenacion .)
    MENORIGUAL      reduce using rule 58 (expresion -> concatenacion .)
    IGUALACION      reduce using rule 58 (expresion -> concatenacion .)
    DISTINTO        reduce using rule 58 (expresion -> concatenacion .)
    AND             reduce using rule 58 (expresion -> concatenacion .)
    OR              reduce using rule 58 (expresion -> concatenacion .)
    PUNTO           reduce using rule 58 (expresion -> concatenacion .)
    PTOYCOMA        reduce using rule 58 (expresion -> concatenacion .)
    error           reduce using rule 58 (expresion -> concatenacion .)
    LET             reduce using rule 58 (expresion -> concatenacion .)
    ID              reduce using rule 58 (expresion -> concatenacion .)
    CONSOLE         reduce using rule 58 (expresion -> concatenacion .)
    RETURN          reduce using rule 58 (expresion -> concatenacion .)
    BREAK           reduce using rule 58 (expresion -> concatenacion .)
    CONTINUE        reduce using rule 58 (expresion -> concatenacion .)
    IF              reduce using rule 58 (expresion -> concatenacion .)
    WHILE           reduce using rule 58 (expresion -> concatenacion .)
    FOR             reduce using rule 58 (expresion -> concatenacion .)
    $end            reduce using rule 58 (expresion -> concatenacion .)
    LLADER          reduce using rule 58 (expresion -> concatenacion .)
    PARDER          reduce using rule 58 (expresion -> concatenacion .)


state 49

    (74) condicional_if -> IF PARIZQ . expresion PARDER bloque
    (75) condicional_if -> IF PARIZQ . expresion PARDER bloque ELSE bloque
    (76) condicional_if -> IF PARIZQ . expresion PARDER bloque lista_elif
    (77) condicional_if -> IF PARIZQ . expresion PARDER bloque lista_elif ELSE bloque
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . ID
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE
    (48) expresion -> . ID INCREMENTO
    (49) expresion -> . ID DECREMENTO
    (50) expresion -> . INCREMENTO ID
    (51) expresion -> . DECREMENTO ID
    (52) expresion -> . aproximacion
    (53) expresion -> . exponencial
    (54) expresion -> . to_string
    (55) expresion -> . to_minusculas
    (56) expresion -> . to_mayusculas
    (57) expresion -> . separador
    (58) expresion -> . concatenacion
    (59) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41

    expresion                      shift and go to state 78
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48

state 50

    (81) ciclo_while -> WHILE PARIZQ . expresion PARDER bloque
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . ID
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE
    (48) expresion -> . ID INCREMENTO
    (49) expresion -> . ID DECREMENTO
    (50) expresion -> . INCREMENTO ID
    (51) expresion -> . DECREMENTO ID
    (52) expresion -> . aproximacion
    (53) expresion -> . exponencial
    (54) expresion -> . to_string
    (55) expresion -> . to_minusculas
    (56) expresion -> . to_mayusculas
    (57) expresion -> . separador
    (58) expresion -> . concatenacion
    (59) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41

    expresion                      shift and go to state 79
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48

state 51

    (82) ciclo_for -> FOR PARIZQ . declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (83) ciclo_for -> FOR PARIZQ . asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (84) ciclo_for -> FOR PARIZQ . declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (85) ciclo_for -> FOR PARIZQ . asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (86) ciclo_for_of -> FOR PARIZQ . LET ID OF expresion PARDER bloque
    (21) declaracion -> . LET ID DOSPUNTOS tipo IGUAL expresion
    (22) declaracion -> . LET ID IGUAL expresion
    (23) asignacion -> . ID IGUAL expresion

    LET             shift and go to state 82
    ID              shift and go to state 16

    declaracion                    shift and go to state 80
    asignacion                     shift and go to state 81

state 52

    (21) declaracion -> LET ID DOSPUNTOS . tipo IGUAL expresion
    (66) tipo -> . NUMBER
    (67) tipo -> . STRING
    (68) tipo -> . BOOLEAN
    (69) tipo -> . ANY

    NUMBER          shift and go to state 84
    STRING          shift and go to state 85
    BOOLEAN         shift and go to state 86
    ANY             shift and go to state 87

    tipo                           shift and go to state 83

state 53

    (22) declaracion -> LET ID IGUAL . expresion
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . ID
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE
    (48) expresion -> . ID INCREMENTO
    (49) expresion -> . ID DECREMENTO
    (50) expresion -> . INCREMENTO ID
    (51) expresion -> . DECREMENTO ID
    (52) expresion -> . aproximacion
    (53) expresion -> . exponencial
    (54) expresion -> . to_string
    (55) expresion -> . to_minusculas
    (56) expresion -> . to_mayusculas
    (57) expresion -> . separador
    (58) expresion -> . concatenacion
    (59) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41

    expresion                      shift and go to state 88
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48

state 54

    (23) asignacion -> ID IGUAL expresion .
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion
    (59) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PTOYCOMA        reduce using rule 23 (asignacion -> ID IGUAL expresion .)
    error           reduce using rule 23 (asignacion -> ID IGUAL expresion .)
    LET             reduce using rule 23 (asignacion -> ID IGUAL expresion .)
    ID              reduce using rule 23 (asignacion -> ID IGUAL expresion .)
    CONSOLE         reduce using rule 23 (asignacion -> ID IGUAL expresion .)
    RETURN          reduce using rule 23 (asignacion -> ID IGUAL expresion .)
    BREAK           reduce using rule 23 (asignacion -> ID IGUAL expresion .)
    CONTINUE        reduce using rule 23 (asignacion -> ID IGUAL expresion .)
    IF              reduce using rule 23 (asignacion -> ID IGUAL expresion .)
    WHILE           reduce using rule 23 (asignacion -> ID IGUAL expresion .)
    FOR             reduce using rule 23 (asignacion -> ID IGUAL expresion .)
    $end            reduce using rule 23 (asignacion -> ID IGUAL expresion .)
    LLADER          reduce using rule 23 (asignacion -> ID IGUAL expresion .)
    PARDER          reduce using rule 23 (asignacion -> ID IGUAL expresion .)
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    POR             shift and go to state 58
    DIVIDIDO        shift and go to state 59
    POTENCIA        shift and go to state 60
    MODULO          shift and go to state 61
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    MAYORIGUAL      shift and go to state 64
    MENORIGUAL      shift and go to state 65
    IGUALACION      shift and go to state 66
    DISTINTO        shift and go to state 67
    AND             shift and go to state 68
    OR              shift and go to state 69
    PUNTO           shift and go to state 70


state 55

    (24) impresion -> CONSOLE PUNTO LOG . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 89


state 56

    (25) expresion -> expresion MAS . expresion
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . ID
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE
    (48) expresion -> . ID INCREMENTO
    (49) expresion -> . ID DECREMENTO
    (50) expresion -> . INCREMENTO ID
    (51) expresion -> . DECREMENTO ID
    (52) expresion -> . aproximacion
    (53) expresion -> . exponencial
    (54) expresion -> . to_string
    (55) expresion -> . to_minusculas
    (56) expresion -> . to_mayusculas
    (57) expresion -> . separador
    (58) expresion -> . concatenacion
    (59) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41

    expresion                      shift and go to state 90
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48

state 57

    (26) expresion -> expresion MENOS . expresion
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . ID
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE
    (48) expresion -> . ID INCREMENTO
    (49) expresion -> . ID DECREMENTO
    (50) expresion -> . INCREMENTO ID
    (51) expresion -> . DECREMENTO ID
    (52) expresion -> . aproximacion
    (53) expresion -> . exponencial
    (54) expresion -> . to_string
    (55) expresion -> . to_minusculas
    (56) expresion -> . to_mayusculas
    (57) expresion -> . separador
    (58) expresion -> . concatenacion
    (59) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41

    expresion                      shift and go to state 91
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48

state 58

    (27) expresion -> expresion POR . expresion
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . ID
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE
    (48) expresion -> . ID INCREMENTO
    (49) expresion -> . ID DECREMENTO
    (50) expresion -> . INCREMENTO ID
    (51) expresion -> . DECREMENTO ID
    (52) expresion -> . aproximacion
    (53) expresion -> . exponencial
    (54) expresion -> . to_string
    (55) expresion -> . to_minusculas
    (56) expresion -> . to_mayusculas
    (57) expresion -> . separador
    (58) expresion -> . concatenacion
    (59) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41

    expresion                      shift and go to state 92
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48

state 59

    (28) expresion -> expresion DIVIDIDO . expresion
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . ID
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE
    (48) expresion -> . ID INCREMENTO
    (49) expresion -> . ID DECREMENTO
    (50) expresion -> . INCREMENTO ID
    (51) expresion -> . DECREMENTO ID
    (52) expresion -> . aproximacion
    (53) expresion -> . exponencial
    (54) expresion -> . to_string
    (55) expresion -> . to_minusculas
    (56) expresion -> . to_mayusculas
    (57) expresion -> . separador
    (58) expresion -> . concatenacion
    (59) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41

    expresion                      shift and go to state 93
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48

state 60

    (29) expresion -> expresion POTENCIA . expresion
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . ID
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE
    (48) expresion -> . ID INCREMENTO
    (49) expresion -> . ID DECREMENTO
    (50) expresion -> . INCREMENTO ID
    (51) expresion -> . DECREMENTO ID
    (52) expresion -> . aproximacion
    (53) expresion -> . exponencial
    (54) expresion -> . to_string
    (55) expresion -> . to_minusculas
    (56) expresion -> . to_mayusculas
    (57) expresion -> . separador
    (58) expresion -> . concatenacion
    (59) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41

    expresion                      shift and go to state 94
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48

state 61

    (30) expresion -> expresion MODULO . expresion
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . ID
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE
    (48) expresion -> . ID INCREMENTO
    (49) expresion -> . ID DECREMENTO
    (50) expresion -> . INCREMENTO ID
    (51) expresion -> . DECREMENTO ID
    (52) expresion -> . aproximacion
    (53) expresion -> . exponencial
    (54) expresion -> . to_string
    (55) expresion -> . to_minusculas
    (56) expresion -> . to_mayusculas
    (57) expresion -> . separador
    (58) expresion -> . concatenacion
    (59) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41

    expresion                      shift and go to state 95
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48

state 62

    (33) expresion -> expresion MAYOR . expresion
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . ID
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE
    (48) expresion -> . ID INCREMENTO
    (49) expresion -> . ID DECREMENTO
    (50) expresion -> . INCREMENTO ID
    (51) expresion -> . DECREMENTO ID
    (52) expresion -> . aproximacion
    (53) expresion -> . exponencial
    (54) expresion -> . to_string
    (55) expresion -> . to_minusculas
    (56) expresion -> . to_mayusculas
    (57) expresion -> . separador
    (58) expresion -> . concatenacion
    (59) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41

    expresion                      shift and go to state 96
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48

state 63

    (34) expresion -> expresion MENOR . expresion
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . ID
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE
    (48) expresion -> . ID INCREMENTO
    (49) expresion -> . ID DECREMENTO
    (50) expresion -> . INCREMENTO ID
    (51) expresion -> . DECREMENTO ID
    (52) expresion -> . aproximacion
    (53) expresion -> . exponencial
    (54) expresion -> . to_string
    (55) expresion -> . to_minusculas
    (56) expresion -> . to_mayusculas
    (57) expresion -> . separador
    (58) expresion -> . concatenacion
    (59) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41

    expresion                      shift and go to state 97
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48

state 64

    (35) expresion -> expresion MAYORIGUAL . expresion
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . ID
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE
    (48) expresion -> . ID INCREMENTO
    (49) expresion -> . ID DECREMENTO
    (50) expresion -> . INCREMENTO ID
    (51) expresion -> . DECREMENTO ID
    (52) expresion -> . aproximacion
    (53) expresion -> . exponencial
    (54) expresion -> . to_string
    (55) expresion -> . to_minusculas
    (56) expresion -> . to_mayusculas
    (57) expresion -> . separador
    (58) expresion -> . concatenacion
    (59) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41

    expresion                      shift and go to state 98
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48

state 65

    (36) expresion -> expresion MENORIGUAL . expresion
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . ID
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE
    (48) expresion -> . ID INCREMENTO
    (49) expresion -> . ID DECREMENTO
    (50) expresion -> . INCREMENTO ID
    (51) expresion -> . DECREMENTO ID
    (52) expresion -> . aproximacion
    (53) expresion -> . exponencial
    (54) expresion -> . to_string
    (55) expresion -> . to_minusculas
    (56) expresion -> . to_mayusculas
    (57) expresion -> . separador
    (58) expresion -> . concatenacion
    (59) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41

    expresion                      shift and go to state 99
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48

state 66

    (37) expresion -> expresion IGUALACION . expresion
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . ID
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE
    (48) expresion -> . ID INCREMENTO
    (49) expresion -> . ID DECREMENTO
    (50) expresion -> . INCREMENTO ID
    (51) expresion -> . DECREMENTO ID
    (52) expresion -> . aproximacion
    (53) expresion -> . exponencial
    (54) expresion -> . to_string
    (55) expresion -> . to_minusculas
    (56) expresion -> . to_mayusculas
    (57) expresion -> . separador
    (58) expresion -> . concatenacion
    (59) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41

    expresion                      shift and go to state 100
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48

state 67

    (38) expresion -> expresion DISTINTO . expresion
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . ID
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE
    (48) expresion -> . ID INCREMENTO
    (49) expresion -> . ID DECREMENTO
    (50) expresion -> . INCREMENTO ID
    (51) expresion -> . DECREMENTO ID
    (52) expresion -> . aproximacion
    (53) expresion -> . exponencial
    (54) expresion -> . to_string
    (55) expresion -> . to_minusculas
    (56) expresion -> . to_mayusculas
    (57) expresion -> . separador
    (58) expresion -> . concatenacion
    (59) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41

    expresion                      shift and go to state 101
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48

state 68

    (39) expresion -> expresion AND . expresion
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . ID
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE
    (48) expresion -> . ID INCREMENTO
    (49) expresion -> . ID DECREMENTO
    (50) expresion -> . INCREMENTO ID
    (51) expresion -> . DECREMENTO ID
    (52) expresion -> . aproximacion
    (53) expresion -> . exponencial
    (54) expresion -> . to_string
    (55) expresion -> . to_minusculas
    (56) expresion -> . to_mayusculas
    (57) expresion -> . separador
    (58) expresion -> . concatenacion
    (59) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41

    expresion                      shift and go to state 102
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48

state 69

    (40) expresion -> expresion OR . expresion
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . ID
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE
    (48) expresion -> . ID INCREMENTO
    (49) expresion -> . ID DECREMENTO
    (50) expresion -> . INCREMENTO ID
    (51) expresion -> . DECREMENTO ID
    (52) expresion -> . aproximacion
    (53) expresion -> . exponencial
    (54) expresion -> . to_string
    (55) expresion -> . to_minusculas
    (56) expresion -> . to_mayusculas
    (57) expresion -> . separador
    (58) expresion -> . concatenacion
    (59) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41

    expresion                      shift and go to state 103
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48

state 70

    (59) aproximacion -> expresion PUNTO . TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> expresion PUNTO . TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> expresion PUNTO . TOSTRING PARIZQ PARDER
    (62) to_minusculas -> expresion PUNTO . TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> expresion PUNTO . TOUPPERCASE PARIZQ PARDER
    (64) separador -> expresion PUNTO . SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> expresion PUNTO . CONCAT PARIZQ expresion PARDER

    TOFIXED         shift and go to state 104
    TOEXPONENTIAL   shift and go to state 105
    TOSTRING        shift and go to state 106
    TOLOWERCASE     shift and go to state 107
    TOUPPERCASE     shift and go to state 108
    SPLIT           shift and go to state 109
    CONCAT          shift and go to state 110


state 71

    (31) expresion -> MENOS expresion .
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion
    (59) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAS             reduce using rule 31 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 31 (expresion -> MENOS expresion .)
    POR             reduce using rule 31 (expresion -> MENOS expresion .)
    DIVIDIDO        reduce using rule 31 (expresion -> MENOS expresion .)
    POTENCIA        reduce using rule 31 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 31 (expresion -> MENOS expresion .)
    MAYOR           reduce using rule 31 (expresion -> MENOS expresion .)
    MENOR           reduce using rule 31 (expresion -> MENOS expresion .)
    MAYORIGUAL      reduce using rule 31 (expresion -> MENOS expresion .)
    MENORIGUAL      reduce using rule 31 (expresion -> MENOS expresion .)
    IGUALACION      reduce using rule 31 (expresion -> MENOS expresion .)
    DISTINTO        reduce using rule 31 (expresion -> MENOS expresion .)
    AND             reduce using rule 31 (expresion -> MENOS expresion .)
    OR              reduce using rule 31 (expresion -> MENOS expresion .)
    PUNTO           reduce using rule 31 (expresion -> MENOS expresion .)
    PTOYCOMA        reduce using rule 31 (expresion -> MENOS expresion .)
    error           reduce using rule 31 (expresion -> MENOS expresion .)
    LET             reduce using rule 31 (expresion -> MENOS expresion .)
    ID              reduce using rule 31 (expresion -> MENOS expresion .)
    CONSOLE         reduce using rule 31 (expresion -> MENOS expresion .)
    RETURN          reduce using rule 31 (expresion -> MENOS expresion .)
    BREAK           reduce using rule 31 (expresion -> MENOS expresion .)
    CONTINUE        reduce using rule 31 (expresion -> MENOS expresion .)
    IF              reduce using rule 31 (expresion -> MENOS expresion .)
    WHILE           reduce using rule 31 (expresion -> MENOS expresion .)
    FOR             reduce using rule 31 (expresion -> MENOS expresion .)
    $end            reduce using rule 31 (expresion -> MENOS expresion .)
    LLADER          reduce using rule 31 (expresion -> MENOS expresion .)
    PARDER          reduce using rule 31 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 56 ]
  ! MENOS           [ shift and go to state 57 ]
  ! POR             [ shift and go to state 58 ]
  ! DIVIDIDO        [ shift and go to state 59 ]
  ! POTENCIA        [ shift and go to state 60 ]
  ! MODULO          [ shift and go to state 61 ]
  ! MAYOR           [ shift and go to state 62 ]
  ! MENOR           [ shift and go to state 63 ]
  ! MAYORIGUAL      [ shift and go to state 64 ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! IGUALACION      [ shift and go to state 66 ]
  ! DISTINTO        [ shift and go to state 67 ]
  ! AND             [ shift and go to state 68 ]
  ! OR              [ shift and go to state 69 ]
  ! PUNTO           [ shift and go to state 70 ]


state 72

    (32) expresion -> PARIZQ expresion . PARDER
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion
    (59) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 111
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    POR             shift and go to state 58
    DIVIDIDO        shift and go to state 59
    POTENCIA        shift and go to state 60
    MODULO          shift and go to state 61
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    MAYORIGUAL      shift and go to state 64
    MENORIGUAL      shift and go to state 65
    IGUALACION      shift and go to state 66
    DISTINTO        shift and go to state 67
    AND             shift and go to state 68
    OR              shift and go to state 69
    PUNTO           shift and go to state 70


state 73

    (41) expresion -> NOT expresion .
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion
    (59) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    AND             reduce using rule 41 (expresion -> NOT expresion .)
    OR              reduce using rule 41 (expresion -> NOT expresion .)
    PUNTO           reduce using rule 41 (expresion -> NOT expresion .)
    PTOYCOMA        reduce using rule 41 (expresion -> NOT expresion .)
    error           reduce using rule 41 (expresion -> NOT expresion .)
    LET             reduce using rule 41 (expresion -> NOT expresion .)
    ID              reduce using rule 41 (expresion -> NOT expresion .)
    CONSOLE         reduce using rule 41 (expresion -> NOT expresion .)
    RETURN          reduce using rule 41 (expresion -> NOT expresion .)
    BREAK           reduce using rule 41 (expresion -> NOT expresion .)
    CONTINUE        reduce using rule 41 (expresion -> NOT expresion .)
    IF              reduce using rule 41 (expresion -> NOT expresion .)
    WHILE           reduce using rule 41 (expresion -> NOT expresion .)
    FOR             reduce using rule 41 (expresion -> NOT expresion .)
    $end            reduce using rule 41 (expresion -> NOT expresion .)
    LLADER          reduce using rule 41 (expresion -> NOT expresion .)
    PARDER          reduce using rule 41 (expresion -> NOT expresion .)
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    POR             shift and go to state 58
    DIVIDIDO        shift and go to state 59
    POTENCIA        shift and go to state 60
    MODULO          shift and go to state 61
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    MAYORIGUAL      shift and go to state 64
    MENORIGUAL      shift and go to state 65
    IGUALACION      shift and go to state 66
    DISTINTO        shift and go to state 67

  ! MAS             [ reduce using rule 41 (expresion -> NOT expresion .) ]
  ! MENOS           [ reduce using rule 41 (expresion -> NOT expresion .) ]
  ! POR             [ reduce using rule 41 (expresion -> NOT expresion .) ]
  ! DIVIDIDO        [ reduce using rule 41 (expresion -> NOT expresion .) ]
  ! POTENCIA        [ reduce using rule 41 (expresion -> NOT expresion .) ]
  ! MODULO          [ reduce using rule 41 (expresion -> NOT expresion .) ]
  ! MAYOR           [ reduce using rule 41 (expresion -> NOT expresion .) ]
  ! MENOR           [ reduce using rule 41 (expresion -> NOT expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 41 (expresion -> NOT expresion .) ]
  ! MENORIGUAL      [ reduce using rule 41 (expresion -> NOT expresion .) ]
  ! IGUALACION      [ reduce using rule 41 (expresion -> NOT expresion .) ]
  ! DISTINTO        [ reduce using rule 41 (expresion -> NOT expresion .) ]
  ! AND             [ shift and go to state 68 ]
  ! OR              [ shift and go to state 69 ]
  ! PUNTO           [ shift and go to state 70 ]


state 74

    (48) expresion -> ID INCREMENTO .

    MAS             reduce using rule 48 (expresion -> ID INCREMENTO .)
    MENOS           reduce using rule 48 (expresion -> ID INCREMENTO .)
    POR             reduce using rule 48 (expresion -> ID INCREMENTO .)
    DIVIDIDO        reduce using rule 48 (expresion -> ID INCREMENTO .)
    POTENCIA        reduce using rule 48 (expresion -> ID INCREMENTO .)
    MODULO          reduce using rule 48 (expresion -> ID INCREMENTO .)
    MAYOR           reduce using rule 48 (expresion -> ID INCREMENTO .)
    MENOR           reduce using rule 48 (expresion -> ID INCREMENTO .)
    MAYORIGUAL      reduce using rule 48 (expresion -> ID INCREMENTO .)
    MENORIGUAL      reduce using rule 48 (expresion -> ID INCREMENTO .)
    IGUALACION      reduce using rule 48 (expresion -> ID INCREMENTO .)
    DISTINTO        reduce using rule 48 (expresion -> ID INCREMENTO .)
    AND             reduce using rule 48 (expresion -> ID INCREMENTO .)
    OR              reduce using rule 48 (expresion -> ID INCREMENTO .)
    PUNTO           reduce using rule 48 (expresion -> ID INCREMENTO .)
    PTOYCOMA        reduce using rule 48 (expresion -> ID INCREMENTO .)
    error           reduce using rule 48 (expresion -> ID INCREMENTO .)
    LET             reduce using rule 48 (expresion -> ID INCREMENTO .)
    ID              reduce using rule 48 (expresion -> ID INCREMENTO .)
    CONSOLE         reduce using rule 48 (expresion -> ID INCREMENTO .)
    RETURN          reduce using rule 48 (expresion -> ID INCREMENTO .)
    BREAK           reduce using rule 48 (expresion -> ID INCREMENTO .)
    CONTINUE        reduce using rule 48 (expresion -> ID INCREMENTO .)
    IF              reduce using rule 48 (expresion -> ID INCREMENTO .)
    WHILE           reduce using rule 48 (expresion -> ID INCREMENTO .)
    FOR             reduce using rule 48 (expresion -> ID INCREMENTO .)
    $end            reduce using rule 48 (expresion -> ID INCREMENTO .)
    LLADER          reduce using rule 48 (expresion -> ID INCREMENTO .)
    PARDER          reduce using rule 48 (expresion -> ID INCREMENTO .)


state 75

    (49) expresion -> ID DECREMENTO .

    MAS             reduce using rule 49 (expresion -> ID DECREMENTO .)
    MENOS           reduce using rule 49 (expresion -> ID DECREMENTO .)
    POR             reduce using rule 49 (expresion -> ID DECREMENTO .)
    DIVIDIDO        reduce using rule 49 (expresion -> ID DECREMENTO .)
    POTENCIA        reduce using rule 49 (expresion -> ID DECREMENTO .)
    MODULO          reduce using rule 49 (expresion -> ID DECREMENTO .)
    MAYOR           reduce using rule 49 (expresion -> ID DECREMENTO .)
    MENOR           reduce using rule 49 (expresion -> ID DECREMENTO .)
    MAYORIGUAL      reduce using rule 49 (expresion -> ID DECREMENTO .)
    MENORIGUAL      reduce using rule 49 (expresion -> ID DECREMENTO .)
    IGUALACION      reduce using rule 49 (expresion -> ID DECREMENTO .)
    DISTINTO        reduce using rule 49 (expresion -> ID DECREMENTO .)
    AND             reduce using rule 49 (expresion -> ID DECREMENTO .)
    OR              reduce using rule 49 (expresion -> ID DECREMENTO .)
    PUNTO           reduce using rule 49 (expresion -> ID DECREMENTO .)
    PTOYCOMA        reduce using rule 49 (expresion -> ID DECREMENTO .)
    error           reduce using rule 49 (expresion -> ID DECREMENTO .)
    LET             reduce using rule 49 (expresion -> ID DECREMENTO .)
    ID              reduce using rule 49 (expresion -> ID DECREMENTO .)
    CONSOLE         reduce using rule 49 (expresion -> ID DECREMENTO .)
    RETURN          reduce using rule 49 (expresion -> ID DECREMENTO .)
    BREAK           reduce using rule 49 (expresion -> ID DECREMENTO .)
    CONTINUE        reduce using rule 49 (expresion -> ID DECREMENTO .)
    IF              reduce using rule 49 (expresion -> ID DECREMENTO .)
    WHILE           reduce using rule 49 (expresion -> ID DECREMENTO .)
    FOR             reduce using rule 49 (expresion -> ID DECREMENTO .)
    $end            reduce using rule 49 (expresion -> ID DECREMENTO .)
    LLADER          reduce using rule 49 (expresion -> ID DECREMENTO .)
    PARDER          reduce using rule 49 (expresion -> ID DECREMENTO .)


state 76

    (50) expresion -> INCREMENTO ID .

    MAS             reduce using rule 50 (expresion -> INCREMENTO ID .)
    MENOS           reduce using rule 50 (expresion -> INCREMENTO ID .)
    POR             reduce using rule 50 (expresion -> INCREMENTO ID .)
    DIVIDIDO        reduce using rule 50 (expresion -> INCREMENTO ID .)
    POTENCIA        reduce using rule 50 (expresion -> INCREMENTO ID .)
    MODULO          reduce using rule 50 (expresion -> INCREMENTO ID .)
    MAYOR           reduce using rule 50 (expresion -> INCREMENTO ID .)
    MENOR           reduce using rule 50 (expresion -> INCREMENTO ID .)
    MAYORIGUAL      reduce using rule 50 (expresion -> INCREMENTO ID .)
    MENORIGUAL      reduce using rule 50 (expresion -> INCREMENTO ID .)
    IGUALACION      reduce using rule 50 (expresion -> INCREMENTO ID .)
    DISTINTO        reduce using rule 50 (expresion -> INCREMENTO ID .)
    AND             reduce using rule 50 (expresion -> INCREMENTO ID .)
    OR              reduce using rule 50 (expresion -> INCREMENTO ID .)
    PUNTO           reduce using rule 50 (expresion -> INCREMENTO ID .)
    PTOYCOMA        reduce using rule 50 (expresion -> INCREMENTO ID .)
    error           reduce using rule 50 (expresion -> INCREMENTO ID .)
    LET             reduce using rule 50 (expresion -> INCREMENTO ID .)
    ID              reduce using rule 50 (expresion -> INCREMENTO ID .)
    CONSOLE         reduce using rule 50 (expresion -> INCREMENTO ID .)
    RETURN          reduce using rule 50 (expresion -> INCREMENTO ID .)
    BREAK           reduce using rule 50 (expresion -> INCREMENTO ID .)
    CONTINUE        reduce using rule 50 (expresion -> INCREMENTO ID .)
    IF              reduce using rule 50 (expresion -> INCREMENTO ID .)
    WHILE           reduce using rule 50 (expresion -> INCREMENTO ID .)
    FOR             reduce using rule 50 (expresion -> INCREMENTO ID .)
    $end            reduce using rule 50 (expresion -> INCREMENTO ID .)
    LLADER          reduce using rule 50 (expresion -> INCREMENTO ID .)
    PARDER          reduce using rule 50 (expresion -> INCREMENTO ID .)


state 77

    (51) expresion -> DECREMENTO ID .

    MAS             reduce using rule 51 (expresion -> DECREMENTO ID .)
    MENOS           reduce using rule 51 (expresion -> DECREMENTO ID .)
    POR             reduce using rule 51 (expresion -> DECREMENTO ID .)
    DIVIDIDO        reduce using rule 51 (expresion -> DECREMENTO ID .)
    POTENCIA        reduce using rule 51 (expresion -> DECREMENTO ID .)
    MODULO          reduce using rule 51 (expresion -> DECREMENTO ID .)
    MAYOR           reduce using rule 51 (expresion -> DECREMENTO ID .)
    MENOR           reduce using rule 51 (expresion -> DECREMENTO ID .)
    MAYORIGUAL      reduce using rule 51 (expresion -> DECREMENTO ID .)
    MENORIGUAL      reduce using rule 51 (expresion -> DECREMENTO ID .)
    IGUALACION      reduce using rule 51 (expresion -> DECREMENTO ID .)
    DISTINTO        reduce using rule 51 (expresion -> DECREMENTO ID .)
    AND             reduce using rule 51 (expresion -> DECREMENTO ID .)
    OR              reduce using rule 51 (expresion -> DECREMENTO ID .)
    PUNTO           reduce using rule 51 (expresion -> DECREMENTO ID .)
    PTOYCOMA        reduce using rule 51 (expresion -> DECREMENTO ID .)
    error           reduce using rule 51 (expresion -> DECREMENTO ID .)
    LET             reduce using rule 51 (expresion -> DECREMENTO ID .)
    ID              reduce using rule 51 (expresion -> DECREMENTO ID .)
    CONSOLE         reduce using rule 51 (expresion -> DECREMENTO ID .)
    RETURN          reduce using rule 51 (expresion -> DECREMENTO ID .)
    BREAK           reduce using rule 51 (expresion -> DECREMENTO ID .)
    CONTINUE        reduce using rule 51 (expresion -> DECREMENTO ID .)
    IF              reduce using rule 51 (expresion -> DECREMENTO ID .)
    WHILE           reduce using rule 51 (expresion -> DECREMENTO ID .)
    FOR             reduce using rule 51 (expresion -> DECREMENTO ID .)
    $end            reduce using rule 51 (expresion -> DECREMENTO ID .)
    LLADER          reduce using rule 51 (expresion -> DECREMENTO ID .)
    PARDER          reduce using rule 51 (expresion -> DECREMENTO ID .)


state 78

    (74) condicional_if -> IF PARIZQ expresion . PARDER bloque
    (75) condicional_if -> IF PARIZQ expresion . PARDER bloque ELSE bloque
    (76) condicional_if -> IF PARIZQ expresion . PARDER bloque lista_elif
    (77) condicional_if -> IF PARIZQ expresion . PARDER bloque lista_elif ELSE bloque
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion
    (59) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 112
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    POR             shift and go to state 58
    DIVIDIDO        shift and go to state 59
    POTENCIA        shift and go to state 60
    MODULO          shift and go to state 61
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    MAYORIGUAL      shift and go to state 64
    MENORIGUAL      shift and go to state 65
    IGUALACION      shift and go to state 66
    DISTINTO        shift and go to state 67
    AND             shift and go to state 68
    OR              shift and go to state 69
    PUNTO           shift and go to state 70


state 79

    (81) ciclo_while -> WHILE PARIZQ expresion . PARDER bloque
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion
    (59) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 113
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    POR             shift and go to state 58
    DIVIDIDO        shift and go to state 59
    POTENCIA        shift and go to state 60
    MODULO          shift and go to state 61
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    MAYORIGUAL      shift and go to state 64
    MENORIGUAL      shift and go to state 65
    IGUALACION      shift and go to state 66
    DISTINTO        shift and go to state 67
    AND             shift and go to state 68
    OR              shift and go to state 69
    PUNTO           shift and go to state 70


state 80

    (82) ciclo_for -> FOR PARIZQ declaracion . PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (84) ciclo_for -> FOR PARIZQ declaracion . PTOYCOMA expresion PTOYCOMA expresion PARDER bloque

    PTOYCOMA        shift and go to state 114


state 81

    (83) ciclo_for -> FOR PARIZQ asignacion . PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (85) ciclo_for -> FOR PARIZQ asignacion . PTOYCOMA expresion PTOYCOMA expresion PARDER bloque

    PTOYCOMA        shift and go to state 115


state 82

    (86) ciclo_for_of -> FOR PARIZQ LET . ID OF expresion PARDER bloque
    (21) declaracion -> LET . ID DOSPUNTOS tipo IGUAL expresion
    (22) declaracion -> LET . ID IGUAL expresion

    ID              shift and go to state 116


state 83

    (21) declaracion -> LET ID DOSPUNTOS tipo . IGUAL expresion

    IGUAL           shift and go to state 117


state 84

    (66) tipo -> NUMBER .

    IGUAL           reduce using rule 66 (tipo -> NUMBER .)


state 85

    (67) tipo -> STRING .

    IGUAL           reduce using rule 67 (tipo -> STRING .)


state 86

    (68) tipo -> BOOLEAN .

    IGUAL           reduce using rule 68 (tipo -> BOOLEAN .)


state 87

    (69) tipo -> ANY .

    IGUAL           reduce using rule 69 (tipo -> ANY .)


state 88

    (22) declaracion -> LET ID IGUAL expresion .
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion
    (59) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PTOYCOMA        reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    error           reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    LET             reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    ID              reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    CONSOLE         reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    RETURN          reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    BREAK           reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    CONTINUE        reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    IF              reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    WHILE           reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    FOR             reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    $end            reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    LLADER          reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    POR             shift and go to state 58
    DIVIDIDO        shift and go to state 59
    POTENCIA        shift and go to state 60
    MODULO          shift and go to state 61
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    MAYORIGUAL      shift and go to state 64
    MENORIGUAL      shift and go to state 65
    IGUALACION      shift and go to state 66
    DISTINTO        shift and go to state 67
    AND             shift and go to state 68
    OR              shift and go to state 69
    PUNTO           shift and go to state 70


state 89

    (24) impresion -> CONSOLE PUNTO LOG PARIZQ . expresion PARDER
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . ID
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE
    (48) expresion -> . ID INCREMENTO
    (49) expresion -> . ID DECREMENTO
    (50) expresion -> . INCREMENTO ID
    (51) expresion -> . DECREMENTO ID
    (52) expresion -> . aproximacion
    (53) expresion -> . exponencial
    (54) expresion -> . to_string
    (55) expresion -> . to_minusculas
    (56) expresion -> . to_mayusculas
    (57) expresion -> . separador
    (58) expresion -> . concatenacion
    (59) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41

    expresion                      shift and go to state 118
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48

state 90

    (25) expresion -> expresion MAS expresion .
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion
    (59) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAS             reduce using rule 25 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 25 (expresion -> expresion MAS expresion .)
    MAYOR           reduce using rule 25 (expresion -> expresion MAS expresion .)
    MENOR           reduce using rule 25 (expresion -> expresion MAS expresion .)
    MAYORIGUAL      reduce using rule 25 (expresion -> expresion MAS expresion .)
    MENORIGUAL      reduce using rule 25 (expresion -> expresion MAS expresion .)
    IGUALACION      reduce using rule 25 (expresion -> expresion MAS expresion .)
    DISTINTO        reduce using rule 25 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 25 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 25 (expresion -> expresion MAS expresion .)
    PUNTO           reduce using rule 25 (expresion -> expresion MAS expresion .)
    PTOYCOMA        reduce using rule 25 (expresion -> expresion MAS expresion .)
    error           reduce using rule 25 (expresion -> expresion MAS expresion .)
    LET             reduce using rule 25 (expresion -> expresion MAS expresion .)
    ID              reduce using rule 25 (expresion -> expresion MAS expresion .)
    CONSOLE         reduce using rule 25 (expresion -> expresion MAS expresion .)
    RETURN          reduce using rule 25 (expresion -> expresion MAS expresion .)
    BREAK           reduce using rule 25 (expresion -> expresion MAS expresion .)
    CONTINUE        reduce using rule 25 (expresion -> expresion MAS expresion .)
    IF              reduce using rule 25 (expresion -> expresion MAS expresion .)
    WHILE           reduce using rule 25 (expresion -> expresion MAS expresion .)
    FOR             reduce using rule 25 (expresion -> expresion MAS expresion .)
    $end            reduce using rule 25 (expresion -> expresion MAS expresion .)
    LLADER          reduce using rule 25 (expresion -> expresion MAS expresion .)
    PARDER          reduce using rule 25 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 58
    DIVIDIDO        shift and go to state 59
    POTENCIA        shift and go to state 60
    MODULO          shift and go to state 61

  ! POR             [ reduce using rule 25 (expresion -> expresion MAS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 25 (expresion -> expresion MAS expresion .) ]
  ! POTENCIA        [ reduce using rule 25 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 25 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 56 ]
  ! MENOS           [ shift and go to state 57 ]
  ! MAYOR           [ shift and go to state 62 ]
  ! MENOR           [ shift and go to state 63 ]
  ! MAYORIGUAL      [ shift and go to state 64 ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! IGUALACION      [ shift and go to state 66 ]
  ! DISTINTO        [ shift and go to state 67 ]
  ! AND             [ shift and go to state 68 ]
  ! OR              [ shift and go to state 69 ]
  ! PUNTO           [ shift and go to state 70 ]


state 91

    (26) expresion -> expresion MENOS expresion .
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion
    (59) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAS             reduce using rule 26 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 26 (expresion -> expresion MENOS expresion .)
    MAYOR           reduce using rule 26 (expresion -> expresion MENOS expresion .)
    MENOR           reduce using rule 26 (expresion -> expresion MENOS expresion .)
    MAYORIGUAL      reduce using rule 26 (expresion -> expresion MENOS expresion .)
    MENORIGUAL      reduce using rule 26 (expresion -> expresion MENOS expresion .)
    IGUALACION      reduce using rule 26 (expresion -> expresion MENOS expresion .)
    DISTINTO        reduce using rule 26 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 26 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 26 (expresion -> expresion MENOS expresion .)
    PUNTO           reduce using rule 26 (expresion -> expresion MENOS expresion .)
    PTOYCOMA        reduce using rule 26 (expresion -> expresion MENOS expresion .)
    error           reduce using rule 26 (expresion -> expresion MENOS expresion .)
    LET             reduce using rule 26 (expresion -> expresion MENOS expresion .)
    ID              reduce using rule 26 (expresion -> expresion MENOS expresion .)
    CONSOLE         reduce using rule 26 (expresion -> expresion MENOS expresion .)
    RETURN          reduce using rule 26 (expresion -> expresion MENOS expresion .)
    BREAK           reduce using rule 26 (expresion -> expresion MENOS expresion .)
    CONTINUE        reduce using rule 26 (expresion -> expresion MENOS expresion .)
    IF              reduce using rule 26 (expresion -> expresion MENOS expresion .)
    WHILE           reduce using rule 26 (expresion -> expresion MENOS expresion .)
    FOR             reduce using rule 26 (expresion -> expresion MENOS expresion .)
    $end            reduce using rule 26 (expresion -> expresion MENOS expresion .)
    LLADER          reduce using rule 26 (expresion -> expresion MENOS expresion .)
    PARDER          reduce using rule 26 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 58
    DIVIDIDO        shift and go to state 59
    POTENCIA        shift and go to state 60
    MODULO          shift and go to state 61

  ! POR             [ reduce using rule 26 (expresion -> expresion MENOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 26 (expresion -> expresion MENOS expresion .) ]
  ! POTENCIA        [ reduce using rule 26 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 26 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 56 ]
  ! MENOS           [ shift and go to state 57 ]
  ! MAYOR           [ shift and go to state 62 ]
  ! MENOR           [ shift and go to state 63 ]
  ! MAYORIGUAL      [ shift and go to state 64 ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! IGUALACION      [ shift and go to state 66 ]
  ! DISTINTO        [ shift and go to state 67 ]
  ! AND             [ shift and go to state 68 ]
  ! OR              [ shift and go to state 69 ]
  ! PUNTO           [ shift and go to state 70 ]


state 92

    (27) expresion -> expresion POR expresion .
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion
    (59) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAS             reduce using rule 27 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 27 (expresion -> expresion POR expresion .)
    POR             reduce using rule 27 (expresion -> expresion POR expresion .)
    DIVIDIDO        reduce using rule 27 (expresion -> expresion POR expresion .)
    MODULO          reduce using rule 27 (expresion -> expresion POR expresion .)
    MAYOR           reduce using rule 27 (expresion -> expresion POR expresion .)
    MENOR           reduce using rule 27 (expresion -> expresion POR expresion .)
    MAYORIGUAL      reduce using rule 27 (expresion -> expresion POR expresion .)
    MENORIGUAL      reduce using rule 27 (expresion -> expresion POR expresion .)
    IGUALACION      reduce using rule 27 (expresion -> expresion POR expresion .)
    DISTINTO        reduce using rule 27 (expresion -> expresion POR expresion .)
    AND             reduce using rule 27 (expresion -> expresion POR expresion .)
    OR              reduce using rule 27 (expresion -> expresion POR expresion .)
    PUNTO           reduce using rule 27 (expresion -> expresion POR expresion .)
    PTOYCOMA        reduce using rule 27 (expresion -> expresion POR expresion .)
    error           reduce using rule 27 (expresion -> expresion POR expresion .)
    LET             reduce using rule 27 (expresion -> expresion POR expresion .)
    ID              reduce using rule 27 (expresion -> expresion POR expresion .)
    CONSOLE         reduce using rule 27 (expresion -> expresion POR expresion .)
    RETURN          reduce using rule 27 (expresion -> expresion POR expresion .)
    BREAK           reduce using rule 27 (expresion -> expresion POR expresion .)
    CONTINUE        reduce using rule 27 (expresion -> expresion POR expresion .)
    IF              reduce using rule 27 (expresion -> expresion POR expresion .)
    WHILE           reduce using rule 27 (expresion -> expresion POR expresion .)
    FOR             reduce using rule 27 (expresion -> expresion POR expresion .)
    $end            reduce using rule 27 (expresion -> expresion POR expresion .)
    LLADER          reduce using rule 27 (expresion -> expresion POR expresion .)
    PARDER          reduce using rule 27 (expresion -> expresion POR expresion .)
    POTENCIA        shift and go to state 60

  ! POTENCIA        [ reduce using rule 27 (expresion -> expresion POR expresion .) ]
  ! MAS             [ shift and go to state 56 ]
  ! MENOS           [ shift and go to state 57 ]
  ! POR             [ shift and go to state 58 ]
  ! DIVIDIDO        [ shift and go to state 59 ]
  ! MODULO          [ shift and go to state 61 ]
  ! MAYOR           [ shift and go to state 62 ]
  ! MENOR           [ shift and go to state 63 ]
  ! MAYORIGUAL      [ shift and go to state 64 ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! IGUALACION      [ shift and go to state 66 ]
  ! DISTINTO        [ shift and go to state 67 ]
  ! AND             [ shift and go to state 68 ]
  ! OR              [ shift and go to state 69 ]
  ! PUNTO           [ shift and go to state 70 ]


state 93

    (28) expresion -> expresion DIVIDIDO expresion .
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion
    (59) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAS             reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    MENOS           reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    POR             reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    DIVIDIDO        reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    MODULO          reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    MAYOR           reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    MENOR           reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    MAYORIGUAL      reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    MENORIGUAL      reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    IGUALACION      reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    DISTINTO        reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    AND             reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    OR              reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    PUNTO           reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    PTOYCOMA        reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    error           reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    LET             reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    ID              reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    CONSOLE         reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    RETURN          reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    BREAK           reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    CONTINUE        reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    IF              reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    WHILE           reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    FOR             reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    $end            reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    LLADER          reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    PARDER          reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .)
    POTENCIA        shift and go to state 60

  ! POTENCIA        [ reduce using rule 28 (expresion -> expresion DIVIDIDO expresion .) ]
  ! MAS             [ shift and go to state 56 ]
  ! MENOS           [ shift and go to state 57 ]
  ! POR             [ shift and go to state 58 ]
  ! DIVIDIDO        [ shift and go to state 59 ]
  ! MODULO          [ shift and go to state 61 ]
  ! MAYOR           [ shift and go to state 62 ]
  ! MENOR           [ shift and go to state 63 ]
  ! MAYORIGUAL      [ shift and go to state 64 ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! IGUALACION      [ shift and go to state 66 ]
  ! DISTINTO        [ shift and go to state 67 ]
  ! AND             [ shift and go to state 68 ]
  ! OR              [ shift and go to state 69 ]
  ! PUNTO           [ shift and go to state 70 ]


state 94

    (29) expresion -> expresion POTENCIA expresion .
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion
    (59) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAS             reduce using rule 29 (expresion -> expresion POTENCIA expresion .)
    MENOS           reduce using rule 29 (expresion -> expresion POTENCIA expresion .)
    POR             reduce using rule 29 (expresion -> expresion POTENCIA expresion .)
    DIVIDIDO        reduce using rule 29 (expresion -> expresion POTENCIA expresion .)
    POTENCIA        reduce using rule 29 (expresion -> expresion POTENCIA expresion .)
    MODULO          reduce using rule 29 (expresion -> expresion POTENCIA expresion .)
    MAYOR           reduce using rule 29 (expresion -> expresion POTENCIA expresion .)
    MENOR           reduce using rule 29 (expresion -> expresion POTENCIA expresion .)
    MAYORIGUAL      reduce using rule 29 (expresion -> expresion POTENCIA expresion .)
    MENORIGUAL      reduce using rule 29 (expresion -> expresion POTENCIA expresion .)
    IGUALACION      reduce using rule 29 (expresion -> expresion POTENCIA expresion .)
    DISTINTO        reduce using rule 29 (expresion -> expresion POTENCIA expresion .)
    AND             reduce using rule 29 (expresion -> expresion POTENCIA expresion .)
    OR              reduce using rule 29 (expresion -> expresion POTENCIA expresion .)
    PUNTO           reduce using rule 29 (expresion -> expresion POTENCIA expresion .)
    PTOYCOMA        reduce using rule 29 (expresion -> expresion POTENCIA expresion .)
    error           reduce using rule 29 (expresion -> expresion POTENCIA expresion .)
    LET             reduce using rule 29 (expresion -> expresion POTENCIA expresion .)
    ID              reduce using rule 29 (expresion -> expresion POTENCIA expresion .)
    CONSOLE         reduce using rule 29 (expresion -> expresion POTENCIA expresion .)
    RETURN          reduce using rule 29 (expresion -> expresion POTENCIA expresion .)
    BREAK           reduce using rule 29 (expresion -> expresion POTENCIA expresion .)
    CONTINUE        reduce using rule 29 (expresion -> expresion POTENCIA expresion .)
    IF              reduce using rule 29 (expresion -> expresion POTENCIA expresion .)
    WHILE           reduce using rule 29 (expresion -> expresion POTENCIA expresion .)
    FOR             reduce using rule 29 (expresion -> expresion POTENCIA expresion .)
    $end            reduce using rule 29 (expresion -> expresion POTENCIA expresion .)
    LLADER          reduce using rule 29 (expresion -> expresion POTENCIA expresion .)
    PARDER          reduce using rule 29 (expresion -> expresion POTENCIA expresion .)

  ! MAS             [ shift and go to state 56 ]
  ! MENOS           [ shift and go to state 57 ]
  ! POR             [ shift and go to state 58 ]
  ! DIVIDIDO        [ shift and go to state 59 ]
  ! POTENCIA        [ shift and go to state 60 ]
  ! MODULO          [ shift and go to state 61 ]
  ! MAYOR           [ shift and go to state 62 ]
  ! MENOR           [ shift and go to state 63 ]
  ! MAYORIGUAL      [ shift and go to state 64 ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! IGUALACION      [ shift and go to state 66 ]
  ! DISTINTO        [ shift and go to state 67 ]
  ! AND             [ shift and go to state 68 ]
  ! OR              [ shift and go to state 69 ]
  ! PUNTO           [ shift and go to state 70 ]


state 95

    (30) expresion -> expresion MODULO expresion .
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion
    (59) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAS             reduce using rule 30 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 30 (expresion -> expresion MODULO expresion .)
    POR             reduce using rule 30 (expresion -> expresion MODULO expresion .)
    DIVIDIDO        reduce using rule 30 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 30 (expresion -> expresion MODULO expresion .)
    MAYOR           reduce using rule 30 (expresion -> expresion MODULO expresion .)
    MENOR           reduce using rule 30 (expresion -> expresion MODULO expresion .)
    MAYORIGUAL      reduce using rule 30 (expresion -> expresion MODULO expresion .)
    MENORIGUAL      reduce using rule 30 (expresion -> expresion MODULO expresion .)
    IGUALACION      reduce using rule 30 (expresion -> expresion MODULO expresion .)
    DISTINTO        reduce using rule 30 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 30 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 30 (expresion -> expresion MODULO expresion .)
    PUNTO           reduce using rule 30 (expresion -> expresion MODULO expresion .)
    PTOYCOMA        reduce using rule 30 (expresion -> expresion MODULO expresion .)
    error           reduce using rule 30 (expresion -> expresion MODULO expresion .)
    LET             reduce using rule 30 (expresion -> expresion MODULO expresion .)
    ID              reduce using rule 30 (expresion -> expresion MODULO expresion .)
    CONSOLE         reduce using rule 30 (expresion -> expresion MODULO expresion .)
    RETURN          reduce using rule 30 (expresion -> expresion MODULO expresion .)
    BREAK           reduce using rule 30 (expresion -> expresion MODULO expresion .)
    CONTINUE        reduce using rule 30 (expresion -> expresion MODULO expresion .)
    IF              reduce using rule 30 (expresion -> expresion MODULO expresion .)
    WHILE           reduce using rule 30 (expresion -> expresion MODULO expresion .)
    FOR             reduce using rule 30 (expresion -> expresion MODULO expresion .)
    $end            reduce using rule 30 (expresion -> expresion MODULO expresion .)
    LLADER          reduce using rule 30 (expresion -> expresion MODULO expresion .)
    PARDER          reduce using rule 30 (expresion -> expresion MODULO expresion .)
    POTENCIA        shift and go to state 60

  ! POTENCIA        [ reduce using rule 30 (expresion -> expresion MODULO expresion .) ]
  ! MAS             [ shift and go to state 56 ]
  ! MENOS           [ shift and go to state 57 ]
  ! POR             [ shift and go to state 58 ]
  ! DIVIDIDO        [ shift and go to state 59 ]
  ! MODULO          [ shift and go to state 61 ]
  ! MAYOR           [ shift and go to state 62 ]
  ! MENOR           [ shift and go to state 63 ]
  ! MAYORIGUAL      [ shift and go to state 64 ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! IGUALACION      [ shift and go to state 66 ]
  ! DISTINTO        [ shift and go to state 67 ]
  ! AND             [ shift and go to state 68 ]
  ! OR              [ shift and go to state 69 ]
  ! PUNTO           [ shift and go to state 70 ]


state 96

    (33) expresion -> expresion MAYOR expresion .
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion
    (59) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAYOR           reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    MENOR           reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    MAYORIGUAL      reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    MENORIGUAL      reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    IGUALACION      reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    DISTINTO        reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    AND             reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    OR              reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    PUNTO           reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    PTOYCOMA        reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    error           reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    LET             reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    ID              reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    CONSOLE         reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    RETURN          reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    BREAK           reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    CONTINUE        reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    IF              reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    WHILE           reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    FOR             reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    $end            reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    LLADER          reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    PARDER          reduce using rule 33 (expresion -> expresion MAYOR expresion .)
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    POR             shift and go to state 58
    DIVIDIDO        shift and go to state 59
    POTENCIA        shift and go to state 60
    MODULO          shift and go to state 61

  ! MAS             [ reduce using rule 33 (expresion -> expresion MAYOR expresion .) ]
  ! MENOS           [ reduce using rule 33 (expresion -> expresion MAYOR expresion .) ]
  ! POR             [ reduce using rule 33 (expresion -> expresion MAYOR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 33 (expresion -> expresion MAYOR expresion .) ]
  ! POTENCIA        [ reduce using rule 33 (expresion -> expresion MAYOR expresion .) ]
  ! MODULO          [ reduce using rule 33 (expresion -> expresion MAYOR expresion .) ]
  ! MAYOR           [ shift and go to state 62 ]
  ! MENOR           [ shift and go to state 63 ]
  ! MAYORIGUAL      [ shift and go to state 64 ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! IGUALACION      [ shift and go to state 66 ]
  ! DISTINTO        [ shift and go to state 67 ]
  ! AND             [ shift and go to state 68 ]
  ! OR              [ shift and go to state 69 ]
  ! PUNTO           [ shift and go to state 70 ]


state 97

    (34) expresion -> expresion MENOR expresion .
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion
    (59) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAYOR           reduce using rule 34 (expresion -> expresion MENOR expresion .)
    MENOR           reduce using rule 34 (expresion -> expresion MENOR expresion .)
    MAYORIGUAL      reduce using rule 34 (expresion -> expresion MENOR expresion .)
    MENORIGUAL      reduce using rule 34 (expresion -> expresion MENOR expresion .)
    IGUALACION      reduce using rule 34 (expresion -> expresion MENOR expresion .)
    DISTINTO        reduce using rule 34 (expresion -> expresion MENOR expresion .)
    AND             reduce using rule 34 (expresion -> expresion MENOR expresion .)
    OR              reduce using rule 34 (expresion -> expresion MENOR expresion .)
    PUNTO           reduce using rule 34 (expresion -> expresion MENOR expresion .)
    PTOYCOMA        reduce using rule 34 (expresion -> expresion MENOR expresion .)
    error           reduce using rule 34 (expresion -> expresion MENOR expresion .)
    LET             reduce using rule 34 (expresion -> expresion MENOR expresion .)
    ID              reduce using rule 34 (expresion -> expresion MENOR expresion .)
    CONSOLE         reduce using rule 34 (expresion -> expresion MENOR expresion .)
    RETURN          reduce using rule 34 (expresion -> expresion MENOR expresion .)
    BREAK           reduce using rule 34 (expresion -> expresion MENOR expresion .)
    CONTINUE        reduce using rule 34 (expresion -> expresion MENOR expresion .)
    IF              reduce using rule 34 (expresion -> expresion MENOR expresion .)
    WHILE           reduce using rule 34 (expresion -> expresion MENOR expresion .)
    FOR             reduce using rule 34 (expresion -> expresion MENOR expresion .)
    $end            reduce using rule 34 (expresion -> expresion MENOR expresion .)
    LLADER          reduce using rule 34 (expresion -> expresion MENOR expresion .)
    PARDER          reduce using rule 34 (expresion -> expresion MENOR expresion .)
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    POR             shift and go to state 58
    DIVIDIDO        shift and go to state 59
    POTENCIA        shift and go to state 60
    MODULO          shift and go to state 61

  ! MAS             [ reduce using rule 34 (expresion -> expresion MENOR expresion .) ]
  ! MENOS           [ reduce using rule 34 (expresion -> expresion MENOR expresion .) ]
  ! POR             [ reduce using rule 34 (expresion -> expresion MENOR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 34 (expresion -> expresion MENOR expresion .) ]
  ! POTENCIA        [ reduce using rule 34 (expresion -> expresion MENOR expresion .) ]
  ! MODULO          [ reduce using rule 34 (expresion -> expresion MENOR expresion .) ]
  ! MAYOR           [ shift and go to state 62 ]
  ! MENOR           [ shift and go to state 63 ]
  ! MAYORIGUAL      [ shift and go to state 64 ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! IGUALACION      [ shift and go to state 66 ]
  ! DISTINTO        [ shift and go to state 67 ]
  ! AND             [ shift and go to state 68 ]
  ! OR              [ shift and go to state 69 ]
  ! PUNTO           [ shift and go to state 70 ]


state 98

    (35) expresion -> expresion MAYORIGUAL expresion .
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion
    (59) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAYOR           reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .)
    MENOR           reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .)
    MENORIGUAL      reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .)
    IGUALACION      reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .)
    DISTINTO        reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .)
    AND             reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .)
    OR              reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .)
    PUNTO           reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .)
    PTOYCOMA        reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .)
    error           reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .)
    LET             reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .)
    ID              reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .)
    CONSOLE         reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .)
    RETURN          reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .)
    BREAK           reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .)
    CONTINUE        reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .)
    IF              reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .)
    WHILE           reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .)
    FOR             reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .)
    $end            reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .)
    LLADER          reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .)
    PARDER          reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .)
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    POR             shift and go to state 58
    DIVIDIDO        shift and go to state 59
    POTENCIA        shift and go to state 60
    MODULO          shift and go to state 61

  ! MAS             [ reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! POR             [ reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! DIVIDIDO        [ reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! POTENCIA        [ reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 35 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MAYOR           [ shift and go to state 62 ]
  ! MENOR           [ shift and go to state 63 ]
  ! MAYORIGUAL      [ shift and go to state 64 ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! IGUALACION      [ shift and go to state 66 ]
  ! DISTINTO        [ shift and go to state 67 ]
  ! AND             [ shift and go to state 68 ]
  ! OR              [ shift and go to state 69 ]
  ! PUNTO           [ shift and go to state 70 ]


state 99

    (36) expresion -> expresion MENORIGUAL expresion .
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion
    (59) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAYOR           reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .)
    MENOR           reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .)
    MENORIGUAL      reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .)
    IGUALACION      reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .)
    DISTINTO        reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .)
    AND             reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .)
    OR              reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .)
    PUNTO           reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .)
    PTOYCOMA        reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .)
    error           reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .)
    LET             reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .)
    ID              reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .)
    CONSOLE         reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .)
    RETURN          reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .)
    BREAK           reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .)
    CONTINUE        reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .)
    IF              reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .)
    WHILE           reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .)
    FOR             reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .)
    $end            reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .)
    LLADER          reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .)
    PARDER          reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .)
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    POR             shift and go to state 58
    DIVIDIDO        shift and go to state 59
    POTENCIA        shift and go to state 60
    MODULO          shift and go to state 61

  ! MAS             [ reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .) ]
  ! POR             [ reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .) ]
  ! DIVIDIDO        [ reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .) ]
  ! POTENCIA        [ reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 36 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MAYOR           [ shift and go to state 62 ]
  ! MENOR           [ shift and go to state 63 ]
  ! MAYORIGUAL      [ shift and go to state 64 ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! IGUALACION      [ shift and go to state 66 ]
  ! DISTINTO        [ shift and go to state 67 ]
  ! AND             [ shift and go to state 68 ]
  ! OR              [ shift and go to state 69 ]
  ! PUNTO           [ shift and go to state 70 ]


state 100

    (37) expresion -> expresion IGUALACION expresion .
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion
    (59) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAYOR           reduce using rule 37 (expresion -> expresion IGUALACION expresion .)
    MENOR           reduce using rule 37 (expresion -> expresion IGUALACION expresion .)
    MAYORIGUAL      reduce using rule 37 (expresion -> expresion IGUALACION expresion .)
    MENORIGUAL      reduce using rule 37 (expresion -> expresion IGUALACION expresion .)
    IGUALACION      reduce using rule 37 (expresion -> expresion IGUALACION expresion .)
    DISTINTO        reduce using rule 37 (expresion -> expresion IGUALACION expresion .)
    AND             reduce using rule 37 (expresion -> expresion IGUALACION expresion .)
    OR              reduce using rule 37 (expresion -> expresion IGUALACION expresion .)
    PUNTO           reduce using rule 37 (expresion -> expresion IGUALACION expresion .)
    PTOYCOMA        reduce using rule 37 (expresion -> expresion IGUALACION expresion .)
    error           reduce using rule 37 (expresion -> expresion IGUALACION expresion .)
    LET             reduce using rule 37 (expresion -> expresion IGUALACION expresion .)
    ID              reduce using rule 37 (expresion -> expresion IGUALACION expresion .)
    CONSOLE         reduce using rule 37 (expresion -> expresion IGUALACION expresion .)
    RETURN          reduce using rule 37 (expresion -> expresion IGUALACION expresion .)
    BREAK           reduce using rule 37 (expresion -> expresion IGUALACION expresion .)
    CONTINUE        reduce using rule 37 (expresion -> expresion IGUALACION expresion .)
    IF              reduce using rule 37 (expresion -> expresion IGUALACION expresion .)
    WHILE           reduce using rule 37 (expresion -> expresion IGUALACION expresion .)
    FOR             reduce using rule 37 (expresion -> expresion IGUALACION expresion .)
    $end            reduce using rule 37 (expresion -> expresion IGUALACION expresion .)
    LLADER          reduce using rule 37 (expresion -> expresion IGUALACION expresion .)
    PARDER          reduce using rule 37 (expresion -> expresion IGUALACION expresion .)
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    POR             shift and go to state 58
    DIVIDIDO        shift and go to state 59
    POTENCIA        shift and go to state 60
    MODULO          shift and go to state 61

  ! MAS             [ reduce using rule 37 (expresion -> expresion IGUALACION expresion .) ]
  ! MENOS           [ reduce using rule 37 (expresion -> expresion IGUALACION expresion .) ]
  ! POR             [ reduce using rule 37 (expresion -> expresion IGUALACION expresion .) ]
  ! DIVIDIDO        [ reduce using rule 37 (expresion -> expresion IGUALACION expresion .) ]
  ! POTENCIA        [ reduce using rule 37 (expresion -> expresion IGUALACION expresion .) ]
  ! MODULO          [ reduce using rule 37 (expresion -> expresion IGUALACION expresion .) ]
  ! MAYOR           [ shift and go to state 62 ]
  ! MENOR           [ shift and go to state 63 ]
  ! MAYORIGUAL      [ shift and go to state 64 ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! IGUALACION      [ shift and go to state 66 ]
  ! DISTINTO        [ shift and go to state 67 ]
  ! AND             [ shift and go to state 68 ]
  ! OR              [ shift and go to state 69 ]
  ! PUNTO           [ shift and go to state 70 ]


state 101

    (38) expresion -> expresion DISTINTO expresion .
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion
    (59) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAYOR           reduce using rule 38 (expresion -> expresion DISTINTO expresion .)
    MENOR           reduce using rule 38 (expresion -> expresion DISTINTO expresion .)
    MAYORIGUAL      reduce using rule 38 (expresion -> expresion DISTINTO expresion .)
    MENORIGUAL      reduce using rule 38 (expresion -> expresion DISTINTO expresion .)
    IGUALACION      reduce using rule 38 (expresion -> expresion DISTINTO expresion .)
    DISTINTO        reduce using rule 38 (expresion -> expresion DISTINTO expresion .)
    AND             reduce using rule 38 (expresion -> expresion DISTINTO expresion .)
    OR              reduce using rule 38 (expresion -> expresion DISTINTO expresion .)
    PUNTO           reduce using rule 38 (expresion -> expresion DISTINTO expresion .)
    PTOYCOMA        reduce using rule 38 (expresion -> expresion DISTINTO expresion .)
    error           reduce using rule 38 (expresion -> expresion DISTINTO expresion .)
    LET             reduce using rule 38 (expresion -> expresion DISTINTO expresion .)
    ID              reduce using rule 38 (expresion -> expresion DISTINTO expresion .)
    CONSOLE         reduce using rule 38 (expresion -> expresion DISTINTO expresion .)
    RETURN          reduce using rule 38 (expresion -> expresion DISTINTO expresion .)
    BREAK           reduce using rule 38 (expresion -> expresion DISTINTO expresion .)
    CONTINUE        reduce using rule 38 (expresion -> expresion DISTINTO expresion .)
    IF              reduce using rule 38 (expresion -> expresion DISTINTO expresion .)
    WHILE           reduce using rule 38 (expresion -> expresion DISTINTO expresion .)
    FOR             reduce using rule 38 (expresion -> expresion DISTINTO expresion .)
    $end            reduce using rule 38 (expresion -> expresion DISTINTO expresion .)
    LLADER          reduce using rule 38 (expresion -> expresion DISTINTO expresion .)
    PARDER          reduce using rule 38 (expresion -> expresion DISTINTO expresion .)
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    POR             shift and go to state 58
    DIVIDIDO        shift and go to state 59
    POTENCIA        shift and go to state 60
    MODULO          shift and go to state 61

  ! MAS             [ reduce using rule 38 (expresion -> expresion DISTINTO expresion .) ]
  ! MENOS           [ reduce using rule 38 (expresion -> expresion DISTINTO expresion .) ]
  ! POR             [ reduce using rule 38 (expresion -> expresion DISTINTO expresion .) ]
  ! DIVIDIDO        [ reduce using rule 38 (expresion -> expresion DISTINTO expresion .) ]
  ! POTENCIA        [ reduce using rule 38 (expresion -> expresion DISTINTO expresion .) ]
  ! MODULO          [ reduce using rule 38 (expresion -> expresion DISTINTO expresion .) ]
  ! MAYOR           [ shift and go to state 62 ]
  ! MENOR           [ shift and go to state 63 ]
  ! MAYORIGUAL      [ shift and go to state 64 ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! IGUALACION      [ shift and go to state 66 ]
  ! DISTINTO        [ shift and go to state 67 ]
  ! AND             [ shift and go to state 68 ]
  ! OR              [ shift and go to state 69 ]
  ! PUNTO           [ shift and go to state 70 ]


state 102

    (39) expresion -> expresion AND expresion .
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion
    (59) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    AND             reduce using rule 39 (expresion -> expresion AND expresion .)
    OR              reduce using rule 39 (expresion -> expresion AND expresion .)
    PUNTO           reduce using rule 39 (expresion -> expresion AND expresion .)
    PTOYCOMA        reduce using rule 39 (expresion -> expresion AND expresion .)
    error           reduce using rule 39 (expresion -> expresion AND expresion .)
    LET             reduce using rule 39 (expresion -> expresion AND expresion .)
    ID              reduce using rule 39 (expresion -> expresion AND expresion .)
    CONSOLE         reduce using rule 39 (expresion -> expresion AND expresion .)
    RETURN          reduce using rule 39 (expresion -> expresion AND expresion .)
    BREAK           reduce using rule 39 (expresion -> expresion AND expresion .)
    CONTINUE        reduce using rule 39 (expresion -> expresion AND expresion .)
    IF              reduce using rule 39 (expresion -> expresion AND expresion .)
    WHILE           reduce using rule 39 (expresion -> expresion AND expresion .)
    FOR             reduce using rule 39 (expresion -> expresion AND expresion .)
    $end            reduce using rule 39 (expresion -> expresion AND expresion .)
    LLADER          reduce using rule 39 (expresion -> expresion AND expresion .)
    PARDER          reduce using rule 39 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    POR             shift and go to state 58
    DIVIDIDO        shift and go to state 59
    POTENCIA        shift and go to state 60
    MODULO          shift and go to state 61
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    MAYORIGUAL      shift and go to state 64
    MENORIGUAL      shift and go to state 65
    IGUALACION      shift and go to state 66
    DISTINTO        shift and go to state 67

  ! MAS             [ reduce using rule 39 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 39 (expresion -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 39 (expresion -> expresion AND expresion .) ]
  ! DIVIDIDO        [ reduce using rule 39 (expresion -> expresion AND expresion .) ]
  ! POTENCIA        [ reduce using rule 39 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 39 (expresion -> expresion AND expresion .) ]
  ! MAYOR           [ reduce using rule 39 (expresion -> expresion AND expresion .) ]
  ! MENOR           [ reduce using rule 39 (expresion -> expresion AND expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 39 (expresion -> expresion AND expresion .) ]
  ! MENORIGUAL      [ reduce using rule 39 (expresion -> expresion AND expresion .) ]
  ! IGUALACION      [ reduce using rule 39 (expresion -> expresion AND expresion .) ]
  ! DISTINTO        [ reduce using rule 39 (expresion -> expresion AND expresion .) ]
  ! AND             [ shift and go to state 68 ]
  ! OR              [ shift and go to state 69 ]
  ! PUNTO           [ shift and go to state 70 ]


state 103

    (40) expresion -> expresion OR expresion .
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion
    (59) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    OR              reduce using rule 40 (expresion -> expresion OR expresion .)
    PUNTO           reduce using rule 40 (expresion -> expresion OR expresion .)
    PTOYCOMA        reduce using rule 40 (expresion -> expresion OR expresion .)
    error           reduce using rule 40 (expresion -> expresion OR expresion .)
    LET             reduce using rule 40 (expresion -> expresion OR expresion .)
    ID              reduce using rule 40 (expresion -> expresion OR expresion .)
    CONSOLE         reduce using rule 40 (expresion -> expresion OR expresion .)
    RETURN          reduce using rule 40 (expresion -> expresion OR expresion .)
    BREAK           reduce using rule 40 (expresion -> expresion OR expresion .)
    CONTINUE        reduce using rule 40 (expresion -> expresion OR expresion .)
    IF              reduce using rule 40 (expresion -> expresion OR expresion .)
    WHILE           reduce using rule 40 (expresion -> expresion OR expresion .)
    FOR             reduce using rule 40 (expresion -> expresion OR expresion .)
    $end            reduce using rule 40 (expresion -> expresion OR expresion .)
    LLADER          reduce using rule 40 (expresion -> expresion OR expresion .)
    PARDER          reduce using rule 40 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    POR             shift and go to state 58
    DIVIDIDO        shift and go to state 59
    POTENCIA        shift and go to state 60
    MODULO          shift and go to state 61
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    MAYORIGUAL      shift and go to state 64
    MENORIGUAL      shift and go to state 65
    IGUALACION      shift and go to state 66
    DISTINTO        shift and go to state 67
    AND             shift and go to state 68

  ! MAS             [ reduce using rule 40 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 40 (expresion -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 40 (expresion -> expresion OR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 40 (expresion -> expresion OR expresion .) ]
  ! POTENCIA        [ reduce using rule 40 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 40 (expresion -> expresion OR expresion .) ]
  ! MAYOR           [ reduce using rule 40 (expresion -> expresion OR expresion .) ]
  ! MENOR           [ reduce using rule 40 (expresion -> expresion OR expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 40 (expresion -> expresion OR expresion .) ]
  ! MENORIGUAL      [ reduce using rule 40 (expresion -> expresion OR expresion .) ]
  ! IGUALACION      [ reduce using rule 40 (expresion -> expresion OR expresion .) ]
  ! DISTINTO        [ reduce using rule 40 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 40 (expresion -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 69 ]
  ! PUNTO           [ shift and go to state 70 ]


state 104

    (59) aproximacion -> expresion PUNTO TOFIXED . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 119


state 105

    (60) exponencial -> expresion PUNTO TOEXPONENTIAL . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 120


state 106

    (61) to_string -> expresion PUNTO TOSTRING . PARIZQ PARDER

    PARIZQ          shift and go to state 121


state 107

    (62) to_minusculas -> expresion PUNTO TOLOWERCASE . PARIZQ PARDER

    PARIZQ          shift and go to state 122


state 108

    (63) to_mayusculas -> expresion PUNTO TOUPPERCASE . PARIZQ PARDER

    PARIZQ          shift and go to state 123


state 109

    (64) separador -> expresion PUNTO SPLIT . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 124


state 110

    (65) concatenacion -> expresion PUNTO CONCAT . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 125


state 111

    (32) expresion -> PARIZQ expresion PARDER .

    MAS             reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    POR             reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    MODULO          reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    MENOR           reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    IGUALACION      reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    DISTINTO        reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    AND             reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    OR              reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    PTOYCOMA        reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    error           reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    LET             reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    ID              reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    RETURN          reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    BREAK           reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    IF              reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    WHILE           reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    FOR             reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    $end            reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    LLADER          reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 32 (expresion -> PARIZQ expresion PARDER .)


state 112

    (74) condicional_if -> IF PARIZQ expresion PARDER . bloque
    (75) condicional_if -> IF PARIZQ expresion PARDER . bloque ELSE bloque
    (76) condicional_if -> IF PARIZQ expresion PARDER . bloque lista_elif
    (77) condicional_if -> IF PARIZQ expresion PARDER . bloque lista_elif ELSE bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 127

    bloque                         shift and go to state 126

state 113

    (81) ciclo_while -> WHILE PARIZQ expresion PARDER . bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 127

    bloque                         shift and go to state 128

state 114

    (82) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA . expresion PTOYCOMA asignacion PARDER bloque
    (84) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA . expresion PTOYCOMA expresion PARDER bloque
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . ID
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE
    (48) expresion -> . ID INCREMENTO
    (49) expresion -> . ID DECREMENTO
    (50) expresion -> . INCREMENTO ID
    (51) expresion -> . DECREMENTO ID
    (52) expresion -> . aproximacion
    (53) expresion -> . exponencial
    (54) expresion -> . to_string
    (55) expresion -> . to_minusculas
    (56) expresion -> . to_mayusculas
    (57) expresion -> . separador
    (58) expresion -> . concatenacion
    (59) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41

    expresion                      shift and go to state 129
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48

state 115

    (83) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA . expresion PTOYCOMA asignacion PARDER bloque
    (85) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA . expresion PTOYCOMA expresion PARDER bloque
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . ID
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE
    (48) expresion -> . ID INCREMENTO
    (49) expresion -> . ID DECREMENTO
    (50) expresion -> . INCREMENTO ID
    (51) expresion -> . DECREMENTO ID
    (52) expresion -> . aproximacion
    (53) expresion -> . exponencial
    (54) expresion -> . to_string
    (55) expresion -> . to_minusculas
    (56) expresion -> . to_mayusculas
    (57) expresion -> . separador
    (58) expresion -> . concatenacion
    (59) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41

    expresion                      shift and go to state 130
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48

state 116

    (86) ciclo_for_of -> FOR PARIZQ LET ID . OF expresion PARDER bloque
    (21) declaracion -> LET ID . DOSPUNTOS tipo IGUAL expresion
    (22) declaracion -> LET ID . IGUAL expresion

    OF              shift and go to state 131
    DOSPUNTOS       shift and go to state 52
    IGUAL           shift and go to state 53


state 117

    (21) declaracion -> LET ID DOSPUNTOS tipo IGUAL . expresion
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . ID
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE
    (48) expresion -> . ID INCREMENTO
    (49) expresion -> . ID DECREMENTO
    (50) expresion -> . INCREMENTO ID
    (51) expresion -> . DECREMENTO ID
    (52) expresion -> . aproximacion
    (53) expresion -> . exponencial
    (54) expresion -> . to_string
    (55) expresion -> . to_minusculas
    (56) expresion -> . to_mayusculas
    (57) expresion -> . separador
    (58) expresion -> . concatenacion
    (59) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41

    expresion                      shift and go to state 132
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48

state 118

    (24) impresion -> CONSOLE PUNTO LOG PARIZQ expresion . PARDER
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion
    (59) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 133
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    POR             shift and go to state 58
    DIVIDIDO        shift and go to state 59
    POTENCIA        shift and go to state 60
    MODULO          shift and go to state 61
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    MAYORIGUAL      shift and go to state 64
    MENORIGUAL      shift and go to state 65
    IGUALACION      shift and go to state 66
    DISTINTO        shift and go to state 67
    AND             shift and go to state 68
    OR              shift and go to state 69
    PUNTO           shift and go to state 70


state 119

    (59) aproximacion -> expresion PUNTO TOFIXED PARIZQ . expresion PARDER
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . ID
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE
    (48) expresion -> . ID INCREMENTO
    (49) expresion -> . ID DECREMENTO
    (50) expresion -> . INCREMENTO ID
    (51) expresion -> . DECREMENTO ID
    (52) expresion -> . aproximacion
    (53) expresion -> . exponencial
    (54) expresion -> . to_string
    (55) expresion -> . to_minusculas
    (56) expresion -> . to_mayusculas
    (57) expresion -> . separador
    (58) expresion -> . concatenacion
    (59) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41

    expresion                      shift and go to state 134
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48

state 120

    (60) exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ . expresion PARDER
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . ID
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE
    (48) expresion -> . ID INCREMENTO
    (49) expresion -> . ID DECREMENTO
    (50) expresion -> . INCREMENTO ID
    (51) expresion -> . DECREMENTO ID
    (52) expresion -> . aproximacion
    (53) expresion -> . exponencial
    (54) expresion -> . to_string
    (55) expresion -> . to_minusculas
    (56) expresion -> . to_mayusculas
    (57) expresion -> . separador
    (58) expresion -> . concatenacion
    (59) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41

    expresion                      shift and go to state 135
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48

state 121

    (61) to_string -> expresion PUNTO TOSTRING PARIZQ . PARDER

    PARDER          shift and go to state 136


state 122

    (62) to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ . PARDER

    PARDER          shift and go to state 137


state 123

    (63) to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ . PARDER

    PARDER          shift and go to state 138


state 124

    (64) separador -> expresion PUNTO SPLIT PARIZQ . expresion PARDER
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . ID
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE
    (48) expresion -> . ID INCREMENTO
    (49) expresion -> . ID DECREMENTO
    (50) expresion -> . INCREMENTO ID
    (51) expresion -> . DECREMENTO ID
    (52) expresion -> . aproximacion
    (53) expresion -> . exponencial
    (54) expresion -> . to_string
    (55) expresion -> . to_minusculas
    (56) expresion -> . to_mayusculas
    (57) expresion -> . separador
    (58) expresion -> . concatenacion
    (59) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41

    expresion                      shift and go to state 139
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48

state 125

    (65) concatenacion -> expresion PUNTO CONCAT PARIZQ . expresion PARDER
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . ID
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE
    (48) expresion -> . ID INCREMENTO
    (49) expresion -> . ID DECREMENTO
    (50) expresion -> . INCREMENTO ID
    (51) expresion -> . DECREMENTO ID
    (52) expresion -> . aproximacion
    (53) expresion -> . exponencial
    (54) expresion -> . to_string
    (55) expresion -> . to_minusculas
    (56) expresion -> . to_mayusculas
    (57) expresion -> . separador
    (58) expresion -> . concatenacion
    (59) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41

    expresion                      shift and go to state 140
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48

state 126

    (74) condicional_if -> IF PARIZQ expresion PARDER bloque .
    (75) condicional_if -> IF PARIZQ expresion PARDER bloque . ELSE bloque
    (76) condicional_if -> IF PARIZQ expresion PARDER bloque . lista_elif
    (77) condicional_if -> IF PARIZQ expresion PARDER bloque . lista_elif ELSE bloque
    (78) lista_elif -> . lista_elif elif
    (79) lista_elif -> . elif
    (80) elif -> . ELSE IF PARIZQ expresion PARDER bloque

    PTOYCOMA        reduce using rule 74 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    error           reduce using rule 74 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    LET             reduce using rule 74 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    ID              reduce using rule 74 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    CONSOLE         reduce using rule 74 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    RETURN          reduce using rule 74 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    BREAK           reduce using rule 74 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    CONTINUE        reduce using rule 74 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    IF              reduce using rule 74 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    WHILE           reduce using rule 74 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    FOR             reduce using rule 74 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    $end            reduce using rule 74 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    LLADER          reduce using rule 74 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    ELSE            shift and go to state 141

    lista_elif                     shift and go to state 142
    elif                           shift and go to state 143

state 127

    (9) bloque -> LLAIZQ . instruccion3 LLADER
    (10) bloque -> LLAIZQ . LLADER
    (5) instruccion3 -> . instruccion3 instruccion2
    (6) instruccion3 -> . instruccion3 instruccion2 PTOYCOMA
    (7) instruccion3 -> . instruccion2
    (8) instruccion3 -> . instruccion2 PTOYCOMA
    (11) instruccion2 -> . declaracion
    (12) instruccion2 -> . asignacion
    (13) instruccion2 -> . impresion
    (14) instruccion2 -> . return
    (15) instruccion2 -> . break
    (16) instruccion2 -> . continue
    (17) instruccion2 -> . condicional_if
    (18) instruccion2 -> . ciclo_while
    (19) instruccion2 -> . ciclo_for
    (20) instruccion2 -> . ciclo_for_of
    (21) declaracion -> . LET ID DOSPUNTOS tipo IGUAL expresion
    (22) declaracion -> . LET ID IGUAL expresion
    (23) asignacion -> . ID IGUAL expresion
    (24) impresion -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER
    (70) return -> . RETURN
    (71) return -> . RETURN expresion
    (73) break -> . BREAK
    (72) continue -> . CONTINUE
    (74) condicional_if -> . IF PARIZQ expresion PARDER bloque
    (75) condicional_if -> . IF PARIZQ expresion PARDER bloque ELSE bloque
    (76) condicional_if -> . IF PARIZQ expresion PARDER bloque lista_elif
    (77) condicional_if -> . IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque
    (81) ciclo_while -> . WHILE PARIZQ expresion PARDER bloque
    (82) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (83) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (84) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (85) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (86) ciclo_for_of -> . FOR PARIZQ LET ID OF expresion PARDER bloque

    LLADER          shift and go to state 145
    LET             shift and go to state 15
    ID              shift and go to state 16
    CONSOLE         shift and go to state 17
    RETURN          shift and go to state 18
    BREAK           shift and go to state 19
    CONTINUE        shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    FOR             shift and go to state 23

    instruccion3                   shift and go to state 144
    instruccion2                   shift and go to state 146
    declaracion                    shift and go to state 5
    asignacion                     shift and go to state 6
    impresion                      shift and go to state 7
    return                         shift and go to state 8
    break                          shift and go to state 9
    continue                       shift and go to state 10
    condicional_if                 shift and go to state 11
    ciclo_while                    shift and go to state 12
    ciclo_for                      shift and go to state 13
    ciclo_for_of                   shift and go to state 14

state 128

    (81) ciclo_while -> WHILE PARIZQ expresion PARDER bloque .

    PTOYCOMA        reduce using rule 81 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    error           reduce using rule 81 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    LET             reduce using rule 81 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    ID              reduce using rule 81 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    CONSOLE         reduce using rule 81 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    RETURN          reduce using rule 81 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    BREAK           reduce using rule 81 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    CONTINUE        reduce using rule 81 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    IF              reduce using rule 81 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    WHILE           reduce using rule 81 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    FOR             reduce using rule 81 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    $end            reduce using rule 81 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    LLADER          reduce using rule 81 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)


state 129

    (82) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion . PTOYCOMA asignacion PARDER bloque
    (84) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion . PTOYCOMA expresion PARDER bloque
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion
    (59) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PTOYCOMA        shift and go to state 147
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    POR             shift and go to state 58
    DIVIDIDO        shift and go to state 59
    POTENCIA        shift and go to state 60
    MODULO          shift and go to state 61
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    MAYORIGUAL      shift and go to state 64
    MENORIGUAL      shift and go to state 65
    IGUALACION      shift and go to state 66
    DISTINTO        shift and go to state 67
    AND             shift and go to state 68
    OR              shift and go to state 69
    PUNTO           shift and go to state 70


state 130

    (83) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion . PTOYCOMA asignacion PARDER bloque
    (85) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion . PTOYCOMA expresion PARDER bloque
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion
    (59) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PTOYCOMA        shift and go to state 148
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    POR             shift and go to state 58
    DIVIDIDO        shift and go to state 59
    POTENCIA        shift and go to state 60
    MODULO          shift and go to state 61
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    MAYORIGUAL      shift and go to state 64
    MENORIGUAL      shift and go to state 65
    IGUALACION      shift and go to state 66
    DISTINTO        shift and go to state 67
    AND             shift and go to state 68
    OR              shift and go to state 69
    PUNTO           shift and go to state 70


state 131

    (86) ciclo_for_of -> FOR PARIZQ LET ID OF . expresion PARDER bloque
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . ID
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE
    (48) expresion -> . ID INCREMENTO
    (49) expresion -> . ID DECREMENTO
    (50) expresion -> . INCREMENTO ID
    (51) expresion -> . DECREMENTO ID
    (52) expresion -> . aproximacion
    (53) expresion -> . exponencial
    (54) expresion -> . to_string
    (55) expresion -> . to_minusculas
    (56) expresion -> . to_mayusculas
    (57) expresion -> . separador
    (58) expresion -> . concatenacion
    (59) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41

    expresion                      shift and go to state 149
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48

state 132

    (21) declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion
    (59) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PTOYCOMA        reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    error           reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    LET             reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    ID              reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    CONSOLE         reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    RETURN          reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    BREAK           reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    CONTINUE        reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    IF              reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    WHILE           reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    FOR             reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    $end            reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    LLADER          reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    POR             shift and go to state 58
    DIVIDIDO        shift and go to state 59
    POTENCIA        shift and go to state 60
    MODULO          shift and go to state 61
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    MAYORIGUAL      shift and go to state 64
    MENORIGUAL      shift and go to state 65
    IGUALACION      shift and go to state 66
    DISTINTO        shift and go to state 67
    AND             shift and go to state 68
    OR              shift and go to state 69
    PUNTO           shift and go to state 70


state 133

    (24) impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .

    PTOYCOMA        reduce using rule 24 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    error           reduce using rule 24 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    LET             reduce using rule 24 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    ID              reduce using rule 24 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 24 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    RETURN          reduce using rule 24 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    BREAK           reduce using rule 24 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 24 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    IF              reduce using rule 24 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    WHILE           reduce using rule 24 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    FOR             reduce using rule 24 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    $end            reduce using rule 24 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    LLADER          reduce using rule 24 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)


state 134

    (59) aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion . PARDER
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion
    (59) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 150
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    POR             shift and go to state 58
    DIVIDIDO        shift and go to state 59
    POTENCIA        shift and go to state 60
    MODULO          shift and go to state 61
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    MAYORIGUAL      shift and go to state 64
    MENORIGUAL      shift and go to state 65
    IGUALACION      shift and go to state 66
    DISTINTO        shift and go to state 67
    AND             shift and go to state 68
    OR              shift and go to state 69
    PUNTO           shift and go to state 70


state 135

    (60) exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion . PARDER
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion
    (59) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 151
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    POR             shift and go to state 58
    DIVIDIDO        shift and go to state 59
    POTENCIA        shift and go to state 60
    MODULO          shift and go to state 61
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    MAYORIGUAL      shift and go to state 64
    MENORIGUAL      shift and go to state 65
    IGUALACION      shift and go to state 66
    DISTINTO        shift and go to state 67
    AND             shift and go to state 68
    OR              shift and go to state 69
    PUNTO           shift and go to state 70


state 136

    (61) to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .

    MAS             reduce using rule 61 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    MENOS           reduce using rule 61 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    POR             reduce using rule 61 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 61 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    POTENCIA        reduce using rule 61 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    MODULO          reduce using rule 61 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    MAYOR           reduce using rule 61 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    MENOR           reduce using rule 61 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    MAYORIGUAL      reduce using rule 61 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    MENORIGUAL      reduce using rule 61 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    IGUALACION      reduce using rule 61 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    DISTINTO        reduce using rule 61 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    AND             reduce using rule 61 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    OR              reduce using rule 61 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    PUNTO           reduce using rule 61 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    PTOYCOMA        reduce using rule 61 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    error           reduce using rule 61 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    LET             reduce using rule 61 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    ID              reduce using rule 61 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    CONSOLE         reduce using rule 61 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    RETURN          reduce using rule 61 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    BREAK           reduce using rule 61 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    CONTINUE        reduce using rule 61 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    IF              reduce using rule 61 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    WHILE           reduce using rule 61 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    FOR             reduce using rule 61 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    $end            reduce using rule 61 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    LLADER          reduce using rule 61 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)
    PARDER          reduce using rule 61 (to_string -> expresion PUNTO TOSTRING PARIZQ PARDER .)


state 137

    (62) to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .

    MAS             reduce using rule 62 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    MENOS           reduce using rule 62 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    POR             reduce using rule 62 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 62 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    POTENCIA        reduce using rule 62 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    MODULO          reduce using rule 62 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    MAYOR           reduce using rule 62 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    MENOR           reduce using rule 62 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    MAYORIGUAL      reduce using rule 62 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    MENORIGUAL      reduce using rule 62 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    IGUALACION      reduce using rule 62 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    DISTINTO        reduce using rule 62 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    AND             reduce using rule 62 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    OR              reduce using rule 62 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    PUNTO           reduce using rule 62 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    PTOYCOMA        reduce using rule 62 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    error           reduce using rule 62 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    LET             reduce using rule 62 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    ID              reduce using rule 62 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    CONSOLE         reduce using rule 62 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    RETURN          reduce using rule 62 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    BREAK           reduce using rule 62 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    CONTINUE        reduce using rule 62 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    IF              reduce using rule 62 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    WHILE           reduce using rule 62 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    FOR             reduce using rule 62 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    $end            reduce using rule 62 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    LLADER          reduce using rule 62 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    PARDER          reduce using rule 62 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)


state 138

    (63) to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .

    MAS             reduce using rule 63 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    MENOS           reduce using rule 63 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    POR             reduce using rule 63 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 63 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    POTENCIA        reduce using rule 63 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    MODULO          reduce using rule 63 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    MAYOR           reduce using rule 63 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    MENOR           reduce using rule 63 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    MAYORIGUAL      reduce using rule 63 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    MENORIGUAL      reduce using rule 63 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    IGUALACION      reduce using rule 63 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    DISTINTO        reduce using rule 63 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    AND             reduce using rule 63 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    OR              reduce using rule 63 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    PUNTO           reduce using rule 63 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    PTOYCOMA        reduce using rule 63 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    error           reduce using rule 63 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    LET             reduce using rule 63 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    ID              reduce using rule 63 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    CONSOLE         reduce using rule 63 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    RETURN          reduce using rule 63 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    BREAK           reduce using rule 63 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    CONTINUE        reduce using rule 63 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    IF              reduce using rule 63 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    WHILE           reduce using rule 63 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    FOR             reduce using rule 63 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    $end            reduce using rule 63 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    LLADER          reduce using rule 63 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    PARDER          reduce using rule 63 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)


state 139

    (64) separador -> expresion PUNTO SPLIT PARIZQ expresion . PARDER
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion
    (59) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 152
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    POR             shift and go to state 58
    DIVIDIDO        shift and go to state 59
    POTENCIA        shift and go to state 60
    MODULO          shift and go to state 61
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    MAYORIGUAL      shift and go to state 64
    MENORIGUAL      shift and go to state 65
    IGUALACION      shift and go to state 66
    DISTINTO        shift and go to state 67
    AND             shift and go to state 68
    OR              shift and go to state 69
    PUNTO           shift and go to state 70


state 140

    (65) concatenacion -> expresion PUNTO CONCAT PARIZQ expresion . PARDER
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion
    (59) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 153
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    POR             shift and go to state 58
    DIVIDIDO        shift and go to state 59
    POTENCIA        shift and go to state 60
    MODULO          shift and go to state 61
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    MAYORIGUAL      shift and go to state 64
    MENORIGUAL      shift and go to state 65
    IGUALACION      shift and go to state 66
    DISTINTO        shift and go to state 67
    AND             shift and go to state 68
    OR              shift and go to state 69
    PUNTO           shift and go to state 70


state 141

    (75) condicional_if -> IF PARIZQ expresion PARDER bloque ELSE . bloque
    (80) elif -> ELSE . IF PARIZQ expresion PARDER bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    IF              shift and go to state 154
    LLAIZQ          shift and go to state 127

    bloque                         shift and go to state 155

state 142

    (76) condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .
    (77) condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif . ELSE bloque
    (78) lista_elif -> lista_elif . elif
    (80) elif -> . ELSE IF PARIZQ expresion PARDER bloque

    PTOYCOMA        reduce using rule 76 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    error           reduce using rule 76 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    LET             reduce using rule 76 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    ID              reduce using rule 76 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    CONSOLE         reduce using rule 76 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    RETURN          reduce using rule 76 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    BREAK           reduce using rule 76 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    CONTINUE        reduce using rule 76 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    IF              reduce using rule 76 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    WHILE           reduce using rule 76 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    FOR             reduce using rule 76 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    $end            reduce using rule 76 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    LLADER          reduce using rule 76 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    ELSE            shift and go to state 156

    elif                           shift and go to state 157

state 143

    (79) lista_elif -> elif .

    ELSE            reduce using rule 79 (lista_elif -> elif .)
    PTOYCOMA        reduce using rule 79 (lista_elif -> elif .)
    error           reduce using rule 79 (lista_elif -> elif .)
    LET             reduce using rule 79 (lista_elif -> elif .)
    ID              reduce using rule 79 (lista_elif -> elif .)
    CONSOLE         reduce using rule 79 (lista_elif -> elif .)
    RETURN          reduce using rule 79 (lista_elif -> elif .)
    BREAK           reduce using rule 79 (lista_elif -> elif .)
    CONTINUE        reduce using rule 79 (lista_elif -> elif .)
    IF              reduce using rule 79 (lista_elif -> elif .)
    WHILE           reduce using rule 79 (lista_elif -> elif .)
    FOR             reduce using rule 79 (lista_elif -> elif .)
    $end            reduce using rule 79 (lista_elif -> elif .)
    LLADER          reduce using rule 79 (lista_elif -> elif .)


state 144

    (9) bloque -> LLAIZQ instruccion3 . LLADER
    (5) instruccion3 -> instruccion3 . instruccion2
    (6) instruccion3 -> instruccion3 . instruccion2 PTOYCOMA
    (11) instruccion2 -> . declaracion
    (12) instruccion2 -> . asignacion
    (13) instruccion2 -> . impresion
    (14) instruccion2 -> . return
    (15) instruccion2 -> . break
    (16) instruccion2 -> . continue
    (17) instruccion2 -> . condicional_if
    (18) instruccion2 -> . ciclo_while
    (19) instruccion2 -> . ciclo_for
    (20) instruccion2 -> . ciclo_for_of
    (21) declaracion -> . LET ID DOSPUNTOS tipo IGUAL expresion
    (22) declaracion -> . LET ID IGUAL expresion
    (23) asignacion -> . ID IGUAL expresion
    (24) impresion -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER
    (70) return -> . RETURN
    (71) return -> . RETURN expresion
    (73) break -> . BREAK
    (72) continue -> . CONTINUE
    (74) condicional_if -> . IF PARIZQ expresion PARDER bloque
    (75) condicional_if -> . IF PARIZQ expresion PARDER bloque ELSE bloque
    (76) condicional_if -> . IF PARIZQ expresion PARDER bloque lista_elif
    (77) condicional_if -> . IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque
    (81) ciclo_while -> . WHILE PARIZQ expresion PARDER bloque
    (82) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (83) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (84) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (85) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (86) ciclo_for_of -> . FOR PARIZQ LET ID OF expresion PARDER bloque

    LLADER          shift and go to state 158
    LET             shift and go to state 15
    ID              shift and go to state 16
    CONSOLE         shift and go to state 17
    RETURN          shift and go to state 18
    BREAK           shift and go to state 19
    CONTINUE        shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    FOR             shift and go to state 23

    instruccion2                   shift and go to state 159
    declaracion                    shift and go to state 5
    asignacion                     shift and go to state 6
    impresion                      shift and go to state 7
    return                         shift and go to state 8
    break                          shift and go to state 9
    continue                       shift and go to state 10
    condicional_if                 shift and go to state 11
    ciclo_while                    shift and go to state 12
    ciclo_for                      shift and go to state 13
    ciclo_for_of                   shift and go to state 14

state 145

    (10) bloque -> LLAIZQ LLADER .

    ELSE            reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    PTOYCOMA        reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    error           reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    LET             reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    ID              reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    CONSOLE         reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    RETURN          reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    BREAK           reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    CONTINUE        reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    IF              reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    WHILE           reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    FOR             reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    $end            reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    LLADER          reduce using rule 10 (bloque -> LLAIZQ LLADER .)


state 146

    (7) instruccion3 -> instruccion2 .
    (8) instruccion3 -> instruccion2 . PTOYCOMA

    LLADER          reduce using rule 7 (instruccion3 -> instruccion2 .)
    LET             reduce using rule 7 (instruccion3 -> instruccion2 .)
    ID              reduce using rule 7 (instruccion3 -> instruccion2 .)
    CONSOLE         reduce using rule 7 (instruccion3 -> instruccion2 .)
    RETURN          reduce using rule 7 (instruccion3 -> instruccion2 .)
    BREAK           reduce using rule 7 (instruccion3 -> instruccion2 .)
    CONTINUE        reduce using rule 7 (instruccion3 -> instruccion2 .)
    IF              reduce using rule 7 (instruccion3 -> instruccion2 .)
    WHILE           reduce using rule 7 (instruccion3 -> instruccion2 .)
    FOR             reduce using rule 7 (instruccion3 -> instruccion2 .)
    PTOYCOMA        shift and go to state 160


state 147

    (82) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA . asignacion PARDER bloque
    (84) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA . expresion PARDER bloque
    (23) asignacion -> . ID IGUAL expresion
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . ID
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE
    (48) expresion -> . ID INCREMENTO
    (49) expresion -> . ID DECREMENTO
    (50) expresion -> . INCREMENTO ID
    (51) expresion -> . DECREMENTO ID
    (52) expresion -> . aproximacion
    (53) expresion -> . exponencial
    (54) expresion -> . to_string
    (55) expresion -> . to_minusculas
    (56) expresion -> . to_mayusculas
    (57) expresion -> . separador
    (58) expresion -> . concatenacion
    (59) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER

    ID              shift and go to state 163
    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41

    expresion                      shift and go to state 161
    asignacion                     shift and go to state 162
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48

state 148

    (83) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA . asignacion PARDER bloque
    (85) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA . expresion PARDER bloque
    (23) asignacion -> . ID IGUAL expresion
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . ID
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE
    (48) expresion -> . ID INCREMENTO
    (49) expresion -> . ID DECREMENTO
    (50) expresion -> . INCREMENTO ID
    (51) expresion -> . DECREMENTO ID
    (52) expresion -> . aproximacion
    (53) expresion -> . exponencial
    (54) expresion -> . to_string
    (55) expresion -> . to_minusculas
    (56) expresion -> . to_mayusculas
    (57) expresion -> . separador
    (58) expresion -> . concatenacion
    (59) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER

    ID              shift and go to state 163
    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41

    asignacion                     shift and go to state 164
    expresion                      shift and go to state 165
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48

state 149

    (86) ciclo_for_of -> FOR PARIZQ LET ID OF expresion . PARDER bloque
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion
    (59) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 166
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    POR             shift and go to state 58
    DIVIDIDO        shift and go to state 59
    POTENCIA        shift and go to state 60
    MODULO          shift and go to state 61
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    MAYORIGUAL      shift and go to state 64
    MENORIGUAL      shift and go to state 65
    IGUALACION      shift and go to state 66
    DISTINTO        shift and go to state 67
    AND             shift and go to state 68
    OR              shift and go to state 69
    PUNTO           shift and go to state 70


state 150

    (59) aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .

    MAS             reduce using rule 59 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    MENOS           reduce using rule 59 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    POR             reduce using rule 59 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 59 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 59 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    MODULO          reduce using rule 59 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 59 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    MENOR           reduce using rule 59 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 59 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 59 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    IGUALACION      reduce using rule 59 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    DISTINTO        reduce using rule 59 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    AND             reduce using rule 59 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    OR              reduce using rule 59 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 59 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    PTOYCOMA        reduce using rule 59 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    error           reduce using rule 59 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    LET             reduce using rule 59 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    ID              reduce using rule 59 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 59 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    RETURN          reduce using rule 59 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    BREAK           reduce using rule 59 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 59 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    IF              reduce using rule 59 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    WHILE           reduce using rule 59 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    FOR             reduce using rule 59 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    $end            reduce using rule 59 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    LLADER          reduce using rule 59 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    PARDER          reduce using rule 59 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)


state 151

    (60) exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .

    MAS             reduce using rule 60 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    MENOS           reduce using rule 60 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    POR             reduce using rule 60 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 60 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 60 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    MODULO          reduce using rule 60 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 60 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    MENOR           reduce using rule 60 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 60 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 60 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    IGUALACION      reduce using rule 60 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    DISTINTO        reduce using rule 60 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    AND             reduce using rule 60 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    OR              reduce using rule 60 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 60 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    PTOYCOMA        reduce using rule 60 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    error           reduce using rule 60 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    LET             reduce using rule 60 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    ID              reduce using rule 60 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 60 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    RETURN          reduce using rule 60 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    BREAK           reduce using rule 60 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 60 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    IF              reduce using rule 60 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    WHILE           reduce using rule 60 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    FOR             reduce using rule 60 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    $end            reduce using rule 60 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    LLADER          reduce using rule 60 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    PARDER          reduce using rule 60 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)


state 152

    (64) separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .

    MAS             reduce using rule 64 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    MENOS           reduce using rule 64 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    POR             reduce using rule 64 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 64 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 64 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    MODULO          reduce using rule 64 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 64 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    MENOR           reduce using rule 64 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 64 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 64 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    IGUALACION      reduce using rule 64 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    DISTINTO        reduce using rule 64 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    AND             reduce using rule 64 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    OR              reduce using rule 64 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 64 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    PTOYCOMA        reduce using rule 64 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    error           reduce using rule 64 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    LET             reduce using rule 64 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    ID              reduce using rule 64 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 64 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    RETURN          reduce using rule 64 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    BREAK           reduce using rule 64 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 64 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    IF              reduce using rule 64 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    WHILE           reduce using rule 64 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    FOR             reduce using rule 64 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    $end            reduce using rule 64 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    LLADER          reduce using rule 64 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    PARDER          reduce using rule 64 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)


state 153

    (65) concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .

    MAS             reduce using rule 65 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    MENOS           reduce using rule 65 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    POR             reduce using rule 65 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 65 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 65 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    MODULO          reduce using rule 65 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 65 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    MENOR           reduce using rule 65 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 65 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 65 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    IGUALACION      reduce using rule 65 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    DISTINTO        reduce using rule 65 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    AND             reduce using rule 65 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    OR              reduce using rule 65 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 65 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    PTOYCOMA        reduce using rule 65 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    error           reduce using rule 65 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    LET             reduce using rule 65 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    ID              reduce using rule 65 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 65 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    RETURN          reduce using rule 65 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    BREAK           reduce using rule 65 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 65 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    IF              reduce using rule 65 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    WHILE           reduce using rule 65 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    FOR             reduce using rule 65 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    $end            reduce using rule 65 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    LLADER          reduce using rule 65 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    PARDER          reduce using rule 65 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)


state 154

    (80) elif -> ELSE IF . PARIZQ expresion PARDER bloque

    PARIZQ          shift and go to state 167


state 155

    (75) condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .

    PTOYCOMA        reduce using rule 75 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    error           reduce using rule 75 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    LET             reduce using rule 75 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    ID              reduce using rule 75 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    CONSOLE         reduce using rule 75 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    RETURN          reduce using rule 75 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    BREAK           reduce using rule 75 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    CONTINUE        reduce using rule 75 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    IF              reduce using rule 75 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    WHILE           reduce using rule 75 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    FOR             reduce using rule 75 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    $end            reduce using rule 75 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    LLADER          reduce using rule 75 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)


state 156

    (77) condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE . bloque
    (80) elif -> ELSE . IF PARIZQ expresion PARDER bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    IF              shift and go to state 154
    LLAIZQ          shift and go to state 127

    bloque                         shift and go to state 168

state 157

    (78) lista_elif -> lista_elif elif .

    ELSE            reduce using rule 78 (lista_elif -> lista_elif elif .)
    PTOYCOMA        reduce using rule 78 (lista_elif -> lista_elif elif .)
    error           reduce using rule 78 (lista_elif -> lista_elif elif .)
    LET             reduce using rule 78 (lista_elif -> lista_elif elif .)
    ID              reduce using rule 78 (lista_elif -> lista_elif elif .)
    CONSOLE         reduce using rule 78 (lista_elif -> lista_elif elif .)
    RETURN          reduce using rule 78 (lista_elif -> lista_elif elif .)
    BREAK           reduce using rule 78 (lista_elif -> lista_elif elif .)
    CONTINUE        reduce using rule 78 (lista_elif -> lista_elif elif .)
    IF              reduce using rule 78 (lista_elif -> lista_elif elif .)
    WHILE           reduce using rule 78 (lista_elif -> lista_elif elif .)
    FOR             reduce using rule 78 (lista_elif -> lista_elif elif .)
    $end            reduce using rule 78 (lista_elif -> lista_elif elif .)
    LLADER          reduce using rule 78 (lista_elif -> lista_elif elif .)


state 158

    (9) bloque -> LLAIZQ instruccion3 LLADER .

    ELSE            reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    PTOYCOMA        reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    error           reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    LET             reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    ID              reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    CONSOLE         reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    RETURN          reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    BREAK           reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    CONTINUE        reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    IF              reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    WHILE           reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    FOR             reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    $end            reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    LLADER          reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)


state 159

    (5) instruccion3 -> instruccion3 instruccion2 .
    (6) instruccion3 -> instruccion3 instruccion2 . PTOYCOMA

    LLADER          reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    LET             reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    ID              reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    CONSOLE         reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    RETURN          reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    BREAK           reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    CONTINUE        reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    IF              reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    WHILE           reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    FOR             reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    PTOYCOMA        shift and go to state 169


state 160

    (8) instruccion3 -> instruccion2 PTOYCOMA .

    LLADER          reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    LET             reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    ID              reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    CONSOLE         reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    RETURN          reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    BREAK           reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    CONTINUE        reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    IF              reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    WHILE           reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    FOR             reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)


state 161

    (84) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion . PARDER bloque
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion
    (59) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 170
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    POR             shift and go to state 58
    DIVIDIDO        shift and go to state 59
    POTENCIA        shift and go to state 60
    MODULO          shift and go to state 61
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    MAYORIGUAL      shift and go to state 64
    MENORIGUAL      shift and go to state 65
    IGUALACION      shift and go to state 66
    DISTINTO        shift and go to state 67
    AND             shift and go to state 68
    OR              shift and go to state 69
    PUNTO           shift and go to state 70


state 162

    (82) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion . PARDER bloque

    PARDER          shift and go to state 171


state 163

    (23) asignacion -> ID . IGUAL expresion
    (45) expresion -> ID .
    (48) expresion -> ID . INCREMENTO
    (49) expresion -> ID . DECREMENTO

    IGUAL           shift and go to state 28
    PARDER          reduce using rule 45 (expresion -> ID .)
    MAS             reduce using rule 45 (expresion -> ID .)
    MENOS           reduce using rule 45 (expresion -> ID .)
    POR             reduce using rule 45 (expresion -> ID .)
    DIVIDIDO        reduce using rule 45 (expresion -> ID .)
    POTENCIA        reduce using rule 45 (expresion -> ID .)
    MODULO          reduce using rule 45 (expresion -> ID .)
    MAYOR           reduce using rule 45 (expresion -> ID .)
    MENOR           reduce using rule 45 (expresion -> ID .)
    MAYORIGUAL      reduce using rule 45 (expresion -> ID .)
    MENORIGUAL      reduce using rule 45 (expresion -> ID .)
    IGUALACION      reduce using rule 45 (expresion -> ID .)
    DISTINTO        reduce using rule 45 (expresion -> ID .)
    AND             reduce using rule 45 (expresion -> ID .)
    OR              reduce using rule 45 (expresion -> ID .)
    PUNTO           reduce using rule 45 (expresion -> ID .)
    INCREMENTO      shift and go to state 74
    DECREMENTO      shift and go to state 75


state 164

    (83) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion . PARDER bloque

    PARDER          shift and go to state 172


state 165

    (85) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion . PARDER bloque
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion
    (59) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 173
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    POR             shift and go to state 58
    DIVIDIDO        shift and go to state 59
    POTENCIA        shift and go to state 60
    MODULO          shift and go to state 61
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    MAYORIGUAL      shift and go to state 64
    MENORIGUAL      shift and go to state 65
    IGUALACION      shift and go to state 66
    DISTINTO        shift and go to state 67
    AND             shift and go to state 68
    OR              shift and go to state 69
    PUNTO           shift and go to state 70


state 166

    (86) ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER . bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 127

    bloque                         shift and go to state 174

state 167

    (80) elif -> ELSE IF PARIZQ . expresion PARDER bloque
    (25) expresion -> . expresion MAS expresion
    (26) expresion -> . expresion MENOS expresion
    (27) expresion -> . expresion POR expresion
    (28) expresion -> . expresion DIVIDIDO expresion
    (29) expresion -> . expresion POTENCIA expresion
    (30) expresion -> . expresion MODULO expresion
    (31) expresion -> . MENOS expresion
    (32) expresion -> . PARIZQ expresion PARDER
    (33) expresion -> . expresion MAYOR expresion
    (34) expresion -> . expresion MENOR expresion
    (35) expresion -> . expresion MAYORIGUAL expresion
    (36) expresion -> . expresion MENORIGUAL expresion
    (37) expresion -> . expresion IGUALACION expresion
    (38) expresion -> . expresion DISTINTO expresion
    (39) expresion -> . expresion AND expresion
    (40) expresion -> . expresion OR expresion
    (41) expresion -> . NOT expresion
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . ID
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE
    (48) expresion -> . ID INCREMENTO
    (49) expresion -> . ID DECREMENTO
    (50) expresion -> . INCREMENTO ID
    (51) expresion -> . DECREMENTO ID
    (52) expresion -> . aproximacion
    (53) expresion -> . exponencial
    (54) expresion -> . to_string
    (55) expresion -> . to_minusculas
    (56) expresion -> . to_mayusculas
    (57) expresion -> . separador
    (58) expresion -> . concatenacion
    (59) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> . expresion PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER

    MENOS           shift and go to state 31
    PARIZQ          shift and go to state 32
    NOT             shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    INCREMENTO      shift and go to state 40
    DECREMENTO      shift and go to state 41

    expresion                      shift and go to state 175
    aproximacion                   shift and go to state 42
    exponencial                    shift and go to state 43
    to_string                      shift and go to state 44
    to_minusculas                  shift and go to state 45
    to_mayusculas                  shift and go to state 46
    separador                      shift and go to state 47
    concatenacion                  shift and go to state 48

state 168

    (77) condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .

    PTOYCOMA        reduce using rule 77 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    error           reduce using rule 77 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    LET             reduce using rule 77 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    ID              reduce using rule 77 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    CONSOLE         reduce using rule 77 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    RETURN          reduce using rule 77 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    BREAK           reduce using rule 77 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    CONTINUE        reduce using rule 77 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    IF              reduce using rule 77 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    WHILE           reduce using rule 77 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    FOR             reduce using rule 77 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    $end            reduce using rule 77 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    LLADER          reduce using rule 77 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)


state 169

    (6) instruccion3 -> instruccion3 instruccion2 PTOYCOMA .

    LLADER          reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    LET             reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    ID              reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    CONSOLE         reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    RETURN          reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    BREAK           reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    CONTINUE        reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    IF              reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    WHILE           reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    FOR             reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)


state 170

    (84) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER . bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 127

    bloque                         shift and go to state 176

state 171

    (82) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER . bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 127

    bloque                         shift and go to state 177

state 172

    (83) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER . bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 127

    bloque                         shift and go to state 178

state 173

    (85) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER . bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 127

    bloque                         shift and go to state 179

state 174

    (86) ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .

    PTOYCOMA        reduce using rule 86 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    error           reduce using rule 86 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    LET             reduce using rule 86 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    ID              reduce using rule 86 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    CONSOLE         reduce using rule 86 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    RETURN          reduce using rule 86 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    BREAK           reduce using rule 86 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    CONTINUE        reduce using rule 86 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    IF              reduce using rule 86 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    WHILE           reduce using rule 86 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    FOR             reduce using rule 86 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    $end            reduce using rule 86 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    LLADER          reduce using rule 86 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)


state 175

    (80) elif -> ELSE IF PARIZQ expresion . PARDER bloque
    (25) expresion -> expresion . MAS expresion
    (26) expresion -> expresion . MENOS expresion
    (27) expresion -> expresion . POR expresion
    (28) expresion -> expresion . DIVIDIDO expresion
    (29) expresion -> expresion . POTENCIA expresion
    (30) expresion -> expresion . MODULO expresion
    (33) expresion -> expresion . MAYOR expresion
    (34) expresion -> expresion . MENOR expresion
    (35) expresion -> expresion . MAYORIGUAL expresion
    (36) expresion -> expresion . MENORIGUAL expresion
    (37) expresion -> expresion . IGUALACION expresion
    (38) expresion -> expresion . DISTINTO expresion
    (39) expresion -> expresion . AND expresion
    (40) expresion -> expresion . OR expresion
    (59) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (60) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (61) to_string -> expresion . PUNTO TOSTRING PARIZQ PARDER
    (62) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (63) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (64) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (65) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 180
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    POR             shift and go to state 58
    DIVIDIDO        shift and go to state 59
    POTENCIA        shift and go to state 60
    MODULO          shift and go to state 61
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    MAYORIGUAL      shift and go to state 64
    MENORIGUAL      shift and go to state 65
    IGUALACION      shift and go to state 66
    DISTINTO        shift and go to state 67
    AND             shift and go to state 68
    OR              shift and go to state 69
    PUNTO           shift and go to state 70


state 176

    (84) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .

    PTOYCOMA        reduce using rule 84 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    error           reduce using rule 84 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    LET             reduce using rule 84 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    ID              reduce using rule 84 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    CONSOLE         reduce using rule 84 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    RETURN          reduce using rule 84 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    BREAK           reduce using rule 84 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    CONTINUE        reduce using rule 84 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    IF              reduce using rule 84 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    WHILE           reduce using rule 84 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    FOR             reduce using rule 84 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    $end            reduce using rule 84 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    LLADER          reduce using rule 84 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)


state 177

    (82) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .

    PTOYCOMA        reduce using rule 82 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    error           reduce using rule 82 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    LET             reduce using rule 82 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    ID              reduce using rule 82 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    CONSOLE         reduce using rule 82 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    RETURN          reduce using rule 82 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    BREAK           reduce using rule 82 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    CONTINUE        reduce using rule 82 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    IF              reduce using rule 82 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    WHILE           reduce using rule 82 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    FOR             reduce using rule 82 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    $end            reduce using rule 82 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    LLADER          reduce using rule 82 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)


state 178

    (83) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .

    PTOYCOMA        reduce using rule 83 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    error           reduce using rule 83 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    LET             reduce using rule 83 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    ID              reduce using rule 83 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    CONSOLE         reduce using rule 83 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    RETURN          reduce using rule 83 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    BREAK           reduce using rule 83 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    CONTINUE        reduce using rule 83 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    IF              reduce using rule 83 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    WHILE           reduce using rule 83 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    FOR             reduce using rule 83 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    $end            reduce using rule 83 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    LLADER          reduce using rule 83 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)


state 179

    (85) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .

    PTOYCOMA        reduce using rule 85 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    error           reduce using rule 85 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    LET             reduce using rule 85 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    ID              reduce using rule 85 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    CONSOLE         reduce using rule 85 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    RETURN          reduce using rule 85 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    BREAK           reduce using rule 85 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    CONTINUE        reduce using rule 85 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    IF              reduce using rule 85 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    WHILE           reduce using rule 85 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    FOR             reduce using rule 85 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    $end            reduce using rule 85 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    LLADER          reduce using rule 85 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)


state 180

    (80) elif -> ELSE IF PARIZQ expresion PARDER . bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 127

    bloque                         shift and go to state 181

state 181

    (80) elif -> ELSE IF PARIZQ expresion PARDER bloque .

    ELSE            reduce using rule 80 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    PTOYCOMA        reduce using rule 80 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    error           reduce using rule 80 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    LET             reduce using rule 80 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    ID              reduce using rule 80 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    CONSOLE         reduce using rule 80 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    RETURN          reduce using rule 80 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    BREAK           reduce using rule 80 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    CONTINUE        reduce using rule 80 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    IF              reduce using rule 80 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    WHILE           reduce using rule 80 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    FOR             reduce using rule 80 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    $end            reduce using rule 80 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    LLADER          reduce using rule 80 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 18 resolved as shift
