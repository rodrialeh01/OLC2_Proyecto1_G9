Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ARRAY
    CORDER
    CORIZQ
    INTERFACE
    NULL

Grammar

Rule 0     S' -> instrucciones
Rule 1     instrucciones -> instrucciones instruccion
Rule 2     instrucciones -> instruccion
Rule 3     instruccion -> instruccion2 PTOYCOMA
Rule 4     instruccion -> instruccion2
Rule 5     instruccion3 -> instruccion3 instruccion2
Rule 6     instruccion3 -> instruccion3 instruccion2 PTOYCOMA
Rule 7     instruccion3 -> instruccion2
Rule 8     instruccion3 -> instruccion2 PTOYCOMA
Rule 9     bloque -> LLAIZQ instruccion3 LLADER
Rule 10    bloque -> LLAIZQ LLADER
Rule 11    instruccion2 -> declaracion
Rule 12    instruccion2 -> asignacion
Rule 13    instruccion2 -> impresion
Rule 14    instruccion2 -> return
Rule 15    instruccion2 -> break
Rule 16    instruccion2 -> continue
Rule 17    instruccion2 -> condicional_if
Rule 18    instruccion2 -> ciclo_while
Rule 19    instruccion2 -> ciclo_for
Rule 20    instruccion2 -> ciclo_for_of
Rule 21    declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion
Rule 22    declaracion -> LET ID IGUAL expresion
Rule 23    declaracion -> LET ID DOSPUNTOS tipo
Rule 24    declaracion -> LET ID
Rule 25    asignacion -> ID IGUAL expresion
Rule 26    instruccion2 -> ID INCREMENTO
Rule 27    instruccion2 -> INCREMENTO ID
Rule 28    instruccion2 -> ID DECREMENTO
Rule 29    instruccion2 -> DECREMENTO ID
Rule 30    impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER
Rule 31    expresion -> expresion MAS expresion
Rule 32    expresion -> expresion MENOS expresion
Rule 33    expresion -> expresion POR expresion
Rule 34    expresion -> expresion DIVIDIDO expresion
Rule 35    expresion -> expresion POTENCIA expresion
Rule 36    expresion -> expresion MODULO expresion
Rule 37    expresion -> MENOS expresion
Rule 38    expresion -> PARIZQ expresion PARDER
Rule 39    expresion -> expresion MAYOR expresion
Rule 40    expresion -> expresion MENOR expresion
Rule 41    expresion -> expresion MAYORIGUAL expresion
Rule 42    expresion -> expresion MENORIGUAL expresion
Rule 43    expresion -> expresion IGUALACION expresion
Rule 44    expresion -> expresion DISTINTO expresion
Rule 45    expresion -> expresion AND expresion
Rule 46    expresion -> expresion OR expresion
Rule 47    expresion -> NOT expresion
Rule 48    expresion -> ENTERO
Rule 49    expresion -> DECIMAL
Rule 50    expresion -> CADENA
Rule 51    expresion -> ID
Rule 52    expresion -> TRUE
Rule 53    expresion -> FALSE
Rule 54    expresion -> ID INCREMENTO
Rule 55    expresion -> ID DECREMENTO
Rule 56    expresion -> INCREMENTO ID
Rule 57    expresion -> DECREMENTO ID
Rule 58    expresion -> aproximacion
Rule 59    expresion -> exponencial
Rule 60    expresion -> to_minusculas
Rule 61    expresion -> to_mayusculas
Rule 62    expresion -> separador
Rule 63    expresion -> concatenacion
Rule 64    expresion -> casteo_string
Rule 65    aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER
Rule 66    exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
Rule 67    expresion -> ID PUNTO TOSTRING PARIZQ PARDER
Rule 68    to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER
Rule 69    to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER
Rule 70    separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER
Rule 71    concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER
Rule 72    casteo_string -> CAST_STRING PARIZQ expresion PARDER
Rule 73    tipo -> NUMBER
Rule 74    tipo -> STRING
Rule 75    tipo -> BOOLEAN
Rule 76    tipo -> ANY
Rule 77    return -> RETURN
Rule 78    return -> RETURN expresion
Rule 79    continue -> CONTINUE
Rule 80    break -> BREAK
Rule 81    condicional_if -> IF PARIZQ expresion PARDER bloque
Rule 82    condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque
Rule 83    condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif
Rule 84    condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque
Rule 85    lista_elif -> lista_elif elif
Rule 86    lista_elif -> elif
Rule 87    elif -> ELSE IF PARIZQ expresion PARDER bloque
Rule 88    ciclo_while -> WHILE PARIZQ expresion PARDER bloque
Rule 89    ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
Rule 90    ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
Rule 91    ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
Rule 92    ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
Rule 93    ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque
Rule 94    funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque
Rule 95    funcion -> FUNCTION ID PARIZQ PARDER bloque
Rule 96    lista_parametros -> lista_parametros COMA ID
Rule 97    lista_parametros -> ID
Rule 98    llamada_funcion -> ID PARIZQ lista_argumentos PARDER
Rule 99    llamada_funcion -> ID PARIZQ PARDER
Rule 100   lista_argumentos -> lista_argumentos COMA expresion
Rule 101   lista_argumentos -> expresion
Rule 102   instruccion -> error PTOYCOMA

Terminals, with rules where they appear

AND                  : 45
ANY                  : 76
ARRAY                : 
BOOLEAN              : 75
BREAK                : 80
CADENA               : 50
CAST_STRING          : 72
COMA                 : 96 100
CONCAT               : 71
CONSOLE              : 30
CONTINUE             : 79
CORDER               : 
CORIZQ               : 
DECIMAL              : 49
DECREMENTO           : 28 29 55 57
DISTINTO             : 44
DIVIDIDO             : 34
DOSPUNTOS            : 21 23
ELSE                 : 82 84 87
ENTERO               : 48
FALSE                : 53
FOR                  : 89 90 91 92 93
FUNCTION             : 94 95
ID                   : 21 22 23 24 25 26 27 28 29 51 54 55 56 57 67 93 94 95 96 97 98 99
IF                   : 81 82 83 84 87
IGUAL                : 21 22 25
IGUALACION           : 43
INCREMENTO           : 26 27 54 56
INTERFACE            : 
LET                  : 21 22 23 24 93
LLADER               : 9 10
LLAIZQ               : 9 10
LOG                  : 30
MAS                  : 31
MAYOR                : 39
MAYORIGUAL           : 41
MENOR                : 40
MENORIGUAL           : 42
MENOS                : 32 37
MODULO               : 36
NOT                  : 47
NULL                 : 
NUMBER               : 73
OF                   : 93
OR                   : 46
PARDER               : 30 38 65 66 67 68 69 70 71 72 81 82 83 84 87 88 89 90 91 92 93 94 95 98 99
PARIZQ               : 30 38 65 66 67 68 69 70 71 72 81 82 83 84 87 88 89 90 91 92 93 94 95 98 99
POR                  : 33
POTENCIA             : 35
PTOYCOMA             : 3 6 8 89 89 90 90 91 91 92 92 102
PUNTO                : 30 65 66 67 68 69 70 71
RETURN               : 77 78
SPLIT                : 70
STRING               : 74
TOEXPONENTIAL        : 66
TOFIXED              : 65
TOLOWERCASE          : 68
TOSTRING             : 67
TOUPPERCASE          : 69
TRUE                 : 52
WHILE                : 88
error                : 102

Nonterminals, with rules where they appear

aproximacion         : 58
asignacion           : 12 89 90 90 92
bloque               : 81 82 82 83 84 84 87 88 89 90 91 92 93 94 95
break                : 15
casteo_string        : 64
ciclo_for            : 19
ciclo_for_of         : 20
ciclo_while          : 18
concatenacion        : 63
condicional_if       : 17
continue             : 16
declaracion          : 11 89 91
elif                 : 85 86
exponencial          : 59
expresion            : 21 22 25 30 31 31 32 32 33 33 34 34 35 35 36 36 37 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 65 65 66 66 68 69 70 70 71 71 72 78 81 82 83 84 87 88 89 90 91 91 92 92 93 100 101
funcion              : 
impresion            : 13
instruccion          : 1 2
instruccion2         : 3 4 5 6 7 8
instruccion3         : 5 6 9
instrucciones        : 1 0
lista_argumentos     : 98 100
lista_elif           : 83 84 85
lista_parametros     : 94 96
llamada_funcion      : 
return               : 14
separador            : 62
tipo                 : 21 23
to_mayusculas        : 61
to_minusculas        : 60

Parsing method: LALR

state 0

    (0) S' -> . instrucciones
    (1) instrucciones -> . instrucciones instruccion
    (2) instrucciones -> . instruccion
    (3) instruccion -> . instruccion2 PTOYCOMA
    (4) instruccion -> . instruccion2
    (102) instruccion -> . error PTOYCOMA
    (11) instruccion2 -> . declaracion
    (12) instruccion2 -> . asignacion
    (13) instruccion2 -> . impresion
    (14) instruccion2 -> . return
    (15) instruccion2 -> . break
    (16) instruccion2 -> . continue
    (17) instruccion2 -> . condicional_if
    (18) instruccion2 -> . ciclo_while
    (19) instruccion2 -> . ciclo_for
    (20) instruccion2 -> . ciclo_for_of
    (26) instruccion2 -> . ID INCREMENTO
    (27) instruccion2 -> . INCREMENTO ID
    (28) instruccion2 -> . ID DECREMENTO
    (29) instruccion2 -> . DECREMENTO ID
    (21) declaracion -> . LET ID DOSPUNTOS tipo IGUAL expresion
    (22) declaracion -> . LET ID IGUAL expresion
    (23) declaracion -> . LET ID DOSPUNTOS tipo
    (24) declaracion -> . LET ID
    (25) asignacion -> . ID IGUAL expresion
    (30) impresion -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER
    (77) return -> . RETURN
    (78) return -> . RETURN expresion
    (80) break -> . BREAK
    (79) continue -> . CONTINUE
    (81) condicional_if -> . IF PARIZQ expresion PARDER bloque
    (82) condicional_if -> . IF PARIZQ expresion PARDER bloque ELSE bloque
    (83) condicional_if -> . IF PARIZQ expresion PARDER bloque lista_elif
    (84) condicional_if -> . IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque
    (88) ciclo_while -> . WHILE PARIZQ expresion PARDER bloque
    (89) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (90) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (91) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (92) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (93) ciclo_for_of -> . FOR PARIZQ LET ID OF expresion PARDER bloque

    error           shift and go to state 4
    ID              shift and go to state 15
    INCREMENTO      shift and go to state 16
    DECREMENTO      shift and go to state 17
    LET             shift and go to state 18
    CONSOLE         shift and go to state 19
    RETURN          shift and go to state 20
    BREAK           shift and go to state 21
    CONTINUE        shift and go to state 22
    IF              shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25

    instrucciones                  shift and go to state 1
    instruccion                    shift and go to state 2
    instruccion2                   shift and go to state 3
    declaracion                    shift and go to state 5
    asignacion                     shift and go to state 6
    impresion                      shift and go to state 7
    return                         shift and go to state 8
    break                          shift and go to state 9
    continue                       shift and go to state 10
    condicional_if                 shift and go to state 11
    ciclo_while                    shift and go to state 12
    ciclo_for                      shift and go to state 13
    ciclo_for_of                   shift and go to state 14

state 1

    (0) S' -> instrucciones .
    (1) instrucciones -> instrucciones . instruccion
    (3) instruccion -> . instruccion2 PTOYCOMA
    (4) instruccion -> . instruccion2
    (102) instruccion -> . error PTOYCOMA
    (11) instruccion2 -> . declaracion
    (12) instruccion2 -> . asignacion
    (13) instruccion2 -> . impresion
    (14) instruccion2 -> . return
    (15) instruccion2 -> . break
    (16) instruccion2 -> . continue
    (17) instruccion2 -> . condicional_if
    (18) instruccion2 -> . ciclo_while
    (19) instruccion2 -> . ciclo_for
    (20) instruccion2 -> . ciclo_for_of
    (26) instruccion2 -> . ID INCREMENTO
    (27) instruccion2 -> . INCREMENTO ID
    (28) instruccion2 -> . ID DECREMENTO
    (29) instruccion2 -> . DECREMENTO ID
    (21) declaracion -> . LET ID DOSPUNTOS tipo IGUAL expresion
    (22) declaracion -> . LET ID IGUAL expresion
    (23) declaracion -> . LET ID DOSPUNTOS tipo
    (24) declaracion -> . LET ID
    (25) asignacion -> . ID IGUAL expresion
    (30) impresion -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER
    (77) return -> . RETURN
    (78) return -> . RETURN expresion
    (80) break -> . BREAK
    (79) continue -> . CONTINUE
    (81) condicional_if -> . IF PARIZQ expresion PARDER bloque
    (82) condicional_if -> . IF PARIZQ expresion PARDER bloque ELSE bloque
    (83) condicional_if -> . IF PARIZQ expresion PARDER bloque lista_elif
    (84) condicional_if -> . IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque
    (88) ciclo_while -> . WHILE PARIZQ expresion PARDER bloque
    (89) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (90) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (91) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (92) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (93) ciclo_for_of -> . FOR PARIZQ LET ID OF expresion PARDER bloque

    error           shift and go to state 4
    ID              shift and go to state 15
    INCREMENTO      shift and go to state 16
    DECREMENTO      shift and go to state 17
    LET             shift and go to state 18
    CONSOLE         shift and go to state 19
    RETURN          shift and go to state 20
    BREAK           shift and go to state 21
    CONTINUE        shift and go to state 22
    IF              shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25

    instruccion                    shift and go to state 26
    instruccion2                   shift and go to state 3
    declaracion                    shift and go to state 5
    asignacion                     shift and go to state 6
    impresion                      shift and go to state 7
    return                         shift and go to state 8
    break                          shift and go to state 9
    continue                       shift and go to state 10
    condicional_if                 shift and go to state 11
    ciclo_while                    shift and go to state 12
    ciclo_for                      shift and go to state 13
    ciclo_for_of                   shift and go to state 14

state 2

    (2) instrucciones -> instruccion .

    error           reduce using rule 2 (instrucciones -> instruccion .)
    ID              reduce using rule 2 (instrucciones -> instruccion .)
    INCREMENTO      reduce using rule 2 (instrucciones -> instruccion .)
    DECREMENTO      reduce using rule 2 (instrucciones -> instruccion .)
    LET             reduce using rule 2 (instrucciones -> instruccion .)
    CONSOLE         reduce using rule 2 (instrucciones -> instruccion .)
    RETURN          reduce using rule 2 (instrucciones -> instruccion .)
    BREAK           reduce using rule 2 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 2 (instrucciones -> instruccion .)
    IF              reduce using rule 2 (instrucciones -> instruccion .)
    WHILE           reduce using rule 2 (instrucciones -> instruccion .)
    FOR             reduce using rule 2 (instrucciones -> instruccion .)
    $end            reduce using rule 2 (instrucciones -> instruccion .)


state 3

    (3) instruccion -> instruccion2 . PTOYCOMA
    (4) instruccion -> instruccion2 .

    PTOYCOMA        shift and go to state 27
    error           reduce using rule 4 (instruccion -> instruccion2 .)
    ID              reduce using rule 4 (instruccion -> instruccion2 .)
    INCREMENTO      reduce using rule 4 (instruccion -> instruccion2 .)
    DECREMENTO      reduce using rule 4 (instruccion -> instruccion2 .)
    LET             reduce using rule 4 (instruccion -> instruccion2 .)
    CONSOLE         reduce using rule 4 (instruccion -> instruccion2 .)
    RETURN          reduce using rule 4 (instruccion -> instruccion2 .)
    BREAK           reduce using rule 4 (instruccion -> instruccion2 .)
    CONTINUE        reduce using rule 4 (instruccion -> instruccion2 .)
    IF              reduce using rule 4 (instruccion -> instruccion2 .)
    WHILE           reduce using rule 4 (instruccion -> instruccion2 .)
    FOR             reduce using rule 4 (instruccion -> instruccion2 .)
    $end            reduce using rule 4 (instruccion -> instruccion2 .)


state 4

    (102) instruccion -> error . PTOYCOMA

    PTOYCOMA        shift and go to state 28


state 5

    (11) instruccion2 -> declaracion .

    PTOYCOMA        reduce using rule 11 (instruccion2 -> declaracion .)
    error           reduce using rule 11 (instruccion2 -> declaracion .)
    ID              reduce using rule 11 (instruccion2 -> declaracion .)
    INCREMENTO      reduce using rule 11 (instruccion2 -> declaracion .)
    DECREMENTO      reduce using rule 11 (instruccion2 -> declaracion .)
    LET             reduce using rule 11 (instruccion2 -> declaracion .)
    CONSOLE         reduce using rule 11 (instruccion2 -> declaracion .)
    RETURN          reduce using rule 11 (instruccion2 -> declaracion .)
    BREAK           reduce using rule 11 (instruccion2 -> declaracion .)
    CONTINUE        reduce using rule 11 (instruccion2 -> declaracion .)
    IF              reduce using rule 11 (instruccion2 -> declaracion .)
    WHILE           reduce using rule 11 (instruccion2 -> declaracion .)
    FOR             reduce using rule 11 (instruccion2 -> declaracion .)
    $end            reduce using rule 11 (instruccion2 -> declaracion .)
    LLADER          reduce using rule 11 (instruccion2 -> declaracion .)


state 6

    (12) instruccion2 -> asignacion .

    PTOYCOMA        reduce using rule 12 (instruccion2 -> asignacion .)
    error           reduce using rule 12 (instruccion2 -> asignacion .)
    ID              reduce using rule 12 (instruccion2 -> asignacion .)
    INCREMENTO      reduce using rule 12 (instruccion2 -> asignacion .)
    DECREMENTO      reduce using rule 12 (instruccion2 -> asignacion .)
    LET             reduce using rule 12 (instruccion2 -> asignacion .)
    CONSOLE         reduce using rule 12 (instruccion2 -> asignacion .)
    RETURN          reduce using rule 12 (instruccion2 -> asignacion .)
    BREAK           reduce using rule 12 (instruccion2 -> asignacion .)
    CONTINUE        reduce using rule 12 (instruccion2 -> asignacion .)
    IF              reduce using rule 12 (instruccion2 -> asignacion .)
    WHILE           reduce using rule 12 (instruccion2 -> asignacion .)
    FOR             reduce using rule 12 (instruccion2 -> asignacion .)
    $end            reduce using rule 12 (instruccion2 -> asignacion .)
    LLADER          reduce using rule 12 (instruccion2 -> asignacion .)


state 7

    (13) instruccion2 -> impresion .

    PTOYCOMA        reduce using rule 13 (instruccion2 -> impresion .)
    error           reduce using rule 13 (instruccion2 -> impresion .)
    ID              reduce using rule 13 (instruccion2 -> impresion .)
    INCREMENTO      reduce using rule 13 (instruccion2 -> impresion .)
    DECREMENTO      reduce using rule 13 (instruccion2 -> impresion .)
    LET             reduce using rule 13 (instruccion2 -> impresion .)
    CONSOLE         reduce using rule 13 (instruccion2 -> impresion .)
    RETURN          reduce using rule 13 (instruccion2 -> impresion .)
    BREAK           reduce using rule 13 (instruccion2 -> impresion .)
    CONTINUE        reduce using rule 13 (instruccion2 -> impresion .)
    IF              reduce using rule 13 (instruccion2 -> impresion .)
    WHILE           reduce using rule 13 (instruccion2 -> impresion .)
    FOR             reduce using rule 13 (instruccion2 -> impresion .)
    $end            reduce using rule 13 (instruccion2 -> impresion .)
    LLADER          reduce using rule 13 (instruccion2 -> impresion .)


state 8

    (14) instruccion2 -> return .

    PTOYCOMA        reduce using rule 14 (instruccion2 -> return .)
    error           reduce using rule 14 (instruccion2 -> return .)
    ID              reduce using rule 14 (instruccion2 -> return .)
    INCREMENTO      reduce using rule 14 (instruccion2 -> return .)
    DECREMENTO      reduce using rule 14 (instruccion2 -> return .)
    LET             reduce using rule 14 (instruccion2 -> return .)
    CONSOLE         reduce using rule 14 (instruccion2 -> return .)
    RETURN          reduce using rule 14 (instruccion2 -> return .)
    BREAK           reduce using rule 14 (instruccion2 -> return .)
    CONTINUE        reduce using rule 14 (instruccion2 -> return .)
    IF              reduce using rule 14 (instruccion2 -> return .)
    WHILE           reduce using rule 14 (instruccion2 -> return .)
    FOR             reduce using rule 14 (instruccion2 -> return .)
    $end            reduce using rule 14 (instruccion2 -> return .)
    LLADER          reduce using rule 14 (instruccion2 -> return .)


state 9

    (15) instruccion2 -> break .

    PTOYCOMA        reduce using rule 15 (instruccion2 -> break .)
    error           reduce using rule 15 (instruccion2 -> break .)
    ID              reduce using rule 15 (instruccion2 -> break .)
    INCREMENTO      reduce using rule 15 (instruccion2 -> break .)
    DECREMENTO      reduce using rule 15 (instruccion2 -> break .)
    LET             reduce using rule 15 (instruccion2 -> break .)
    CONSOLE         reduce using rule 15 (instruccion2 -> break .)
    RETURN          reduce using rule 15 (instruccion2 -> break .)
    BREAK           reduce using rule 15 (instruccion2 -> break .)
    CONTINUE        reduce using rule 15 (instruccion2 -> break .)
    IF              reduce using rule 15 (instruccion2 -> break .)
    WHILE           reduce using rule 15 (instruccion2 -> break .)
    FOR             reduce using rule 15 (instruccion2 -> break .)
    $end            reduce using rule 15 (instruccion2 -> break .)
    LLADER          reduce using rule 15 (instruccion2 -> break .)


state 10

    (16) instruccion2 -> continue .

    PTOYCOMA        reduce using rule 16 (instruccion2 -> continue .)
    error           reduce using rule 16 (instruccion2 -> continue .)
    ID              reduce using rule 16 (instruccion2 -> continue .)
    INCREMENTO      reduce using rule 16 (instruccion2 -> continue .)
    DECREMENTO      reduce using rule 16 (instruccion2 -> continue .)
    LET             reduce using rule 16 (instruccion2 -> continue .)
    CONSOLE         reduce using rule 16 (instruccion2 -> continue .)
    RETURN          reduce using rule 16 (instruccion2 -> continue .)
    BREAK           reduce using rule 16 (instruccion2 -> continue .)
    CONTINUE        reduce using rule 16 (instruccion2 -> continue .)
    IF              reduce using rule 16 (instruccion2 -> continue .)
    WHILE           reduce using rule 16 (instruccion2 -> continue .)
    FOR             reduce using rule 16 (instruccion2 -> continue .)
    $end            reduce using rule 16 (instruccion2 -> continue .)
    LLADER          reduce using rule 16 (instruccion2 -> continue .)


state 11

    (17) instruccion2 -> condicional_if .

    PTOYCOMA        reduce using rule 17 (instruccion2 -> condicional_if .)
    error           reduce using rule 17 (instruccion2 -> condicional_if .)
    ID              reduce using rule 17 (instruccion2 -> condicional_if .)
    INCREMENTO      reduce using rule 17 (instruccion2 -> condicional_if .)
    DECREMENTO      reduce using rule 17 (instruccion2 -> condicional_if .)
    LET             reduce using rule 17 (instruccion2 -> condicional_if .)
    CONSOLE         reduce using rule 17 (instruccion2 -> condicional_if .)
    RETURN          reduce using rule 17 (instruccion2 -> condicional_if .)
    BREAK           reduce using rule 17 (instruccion2 -> condicional_if .)
    CONTINUE        reduce using rule 17 (instruccion2 -> condicional_if .)
    IF              reduce using rule 17 (instruccion2 -> condicional_if .)
    WHILE           reduce using rule 17 (instruccion2 -> condicional_if .)
    FOR             reduce using rule 17 (instruccion2 -> condicional_if .)
    $end            reduce using rule 17 (instruccion2 -> condicional_if .)
    LLADER          reduce using rule 17 (instruccion2 -> condicional_if .)


state 12

    (18) instruccion2 -> ciclo_while .

    PTOYCOMA        reduce using rule 18 (instruccion2 -> ciclo_while .)
    error           reduce using rule 18 (instruccion2 -> ciclo_while .)
    ID              reduce using rule 18 (instruccion2 -> ciclo_while .)
    INCREMENTO      reduce using rule 18 (instruccion2 -> ciclo_while .)
    DECREMENTO      reduce using rule 18 (instruccion2 -> ciclo_while .)
    LET             reduce using rule 18 (instruccion2 -> ciclo_while .)
    CONSOLE         reduce using rule 18 (instruccion2 -> ciclo_while .)
    RETURN          reduce using rule 18 (instruccion2 -> ciclo_while .)
    BREAK           reduce using rule 18 (instruccion2 -> ciclo_while .)
    CONTINUE        reduce using rule 18 (instruccion2 -> ciclo_while .)
    IF              reduce using rule 18 (instruccion2 -> ciclo_while .)
    WHILE           reduce using rule 18 (instruccion2 -> ciclo_while .)
    FOR             reduce using rule 18 (instruccion2 -> ciclo_while .)
    $end            reduce using rule 18 (instruccion2 -> ciclo_while .)
    LLADER          reduce using rule 18 (instruccion2 -> ciclo_while .)


state 13

    (19) instruccion2 -> ciclo_for .

    PTOYCOMA        reduce using rule 19 (instruccion2 -> ciclo_for .)
    error           reduce using rule 19 (instruccion2 -> ciclo_for .)
    ID              reduce using rule 19 (instruccion2 -> ciclo_for .)
    INCREMENTO      reduce using rule 19 (instruccion2 -> ciclo_for .)
    DECREMENTO      reduce using rule 19 (instruccion2 -> ciclo_for .)
    LET             reduce using rule 19 (instruccion2 -> ciclo_for .)
    CONSOLE         reduce using rule 19 (instruccion2 -> ciclo_for .)
    RETURN          reduce using rule 19 (instruccion2 -> ciclo_for .)
    BREAK           reduce using rule 19 (instruccion2 -> ciclo_for .)
    CONTINUE        reduce using rule 19 (instruccion2 -> ciclo_for .)
    IF              reduce using rule 19 (instruccion2 -> ciclo_for .)
    WHILE           reduce using rule 19 (instruccion2 -> ciclo_for .)
    FOR             reduce using rule 19 (instruccion2 -> ciclo_for .)
    $end            reduce using rule 19 (instruccion2 -> ciclo_for .)
    LLADER          reduce using rule 19 (instruccion2 -> ciclo_for .)


state 14

    (20) instruccion2 -> ciclo_for_of .

    PTOYCOMA        reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    error           reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    ID              reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    INCREMENTO      reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    DECREMENTO      reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    LET             reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    CONSOLE         reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    RETURN          reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    BREAK           reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    CONTINUE        reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    IF              reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    WHILE           reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    FOR             reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    $end            reduce using rule 20 (instruccion2 -> ciclo_for_of .)
    LLADER          reduce using rule 20 (instruccion2 -> ciclo_for_of .)


state 15

    (26) instruccion2 -> ID . INCREMENTO
    (28) instruccion2 -> ID . DECREMENTO
    (25) asignacion -> ID . IGUAL expresion

    INCREMENTO      shift and go to state 29
    DECREMENTO      shift and go to state 30
    IGUAL           shift and go to state 31


state 16

    (27) instruccion2 -> INCREMENTO . ID

    ID              shift and go to state 32


state 17

    (29) instruccion2 -> DECREMENTO . ID

    ID              shift and go to state 33


state 18

    (21) declaracion -> LET . ID DOSPUNTOS tipo IGUAL expresion
    (22) declaracion -> LET . ID IGUAL expresion
    (23) declaracion -> LET . ID DOSPUNTOS tipo
    (24) declaracion -> LET . ID

    ID              shift and go to state 34


state 19

    (30) impresion -> CONSOLE . PUNTO LOG PARIZQ expresion PARDER

    PUNTO           shift and go to state 35


state 20

    (77) return -> RETURN .
    (78) return -> RETURN . expresion
    (31) expresion -> . expresion MAS expresion
    (32) expresion -> . expresion MENOS expresion
    (33) expresion -> . expresion POR expresion
    (34) expresion -> . expresion DIVIDIDO expresion
    (35) expresion -> . expresion POTENCIA expresion
    (36) expresion -> . expresion MODULO expresion
    (37) expresion -> . MENOS expresion
    (38) expresion -> . PARIZQ expresion PARDER
    (39) expresion -> . expresion MAYOR expresion
    (40) expresion -> . expresion MENOR expresion
    (41) expresion -> . expresion MAYORIGUAL expresion
    (42) expresion -> . expresion MENORIGUAL expresion
    (43) expresion -> . expresion IGUALACION expresion
    (44) expresion -> . expresion DISTINTO expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . expresion OR expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . ENTERO
    (49) expresion -> . DECIMAL
    (50) expresion -> . CADENA
    (51) expresion -> . ID
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . ID INCREMENTO
    (55) expresion -> . ID DECREMENTO
    (56) expresion -> . INCREMENTO ID
    (57) expresion -> . DECREMENTO ID
    (58) expresion -> . aproximacion
    (59) expresion -> . exponencial
    (60) expresion -> . to_minusculas
    (61) expresion -> . to_mayusculas
    (62) expresion -> . separador
    (63) expresion -> . concatenacion
    (64) expresion -> . casteo_string
    (67) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (65) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (72) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for INCREMENTO resolved as shift
  ! shift/reduce conflict for DECREMENTO resolved as shift
    PTOYCOMA        reduce using rule 77 (return -> RETURN .)
    error           reduce using rule 77 (return -> RETURN .)
    LET             reduce using rule 77 (return -> RETURN .)
    CONSOLE         reduce using rule 77 (return -> RETURN .)
    RETURN          reduce using rule 77 (return -> RETURN .)
    BREAK           reduce using rule 77 (return -> RETURN .)
    CONTINUE        reduce using rule 77 (return -> RETURN .)
    IF              reduce using rule 77 (return -> RETURN .)
    WHILE           reduce using rule 77 (return -> RETURN .)
    FOR             reduce using rule 77 (return -> RETURN .)
    $end            reduce using rule 77 (return -> RETURN .)
    LLADER          reduce using rule 77 (return -> RETURN .)
    MENOS           shift and go to state 37
    PARIZQ          shift and go to state 38
    NOT             shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    CADENA          shift and go to state 42
    ID              shift and go to state 43
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    INCREMENTO      shift and go to state 46
    DECREMENTO      shift and go to state 47
    CAST_STRING     shift and go to state 55

  ! ID              [ reduce using rule 77 (return -> RETURN .) ]
  ! INCREMENTO      [ reduce using rule 77 (return -> RETURN .) ]
  ! DECREMENTO      [ reduce using rule 77 (return -> RETURN .) ]

    expresion                      shift and go to state 36
    aproximacion                   shift and go to state 48
    exponencial                    shift and go to state 49
    to_minusculas                  shift and go to state 50
    to_mayusculas                  shift and go to state 51
    separador                      shift and go to state 52
    concatenacion                  shift and go to state 53
    casteo_string                  shift and go to state 54

state 21

    (80) break -> BREAK .

    PTOYCOMA        reduce using rule 80 (break -> BREAK .)
    error           reduce using rule 80 (break -> BREAK .)
    ID              reduce using rule 80 (break -> BREAK .)
    INCREMENTO      reduce using rule 80 (break -> BREAK .)
    DECREMENTO      reduce using rule 80 (break -> BREAK .)
    LET             reduce using rule 80 (break -> BREAK .)
    CONSOLE         reduce using rule 80 (break -> BREAK .)
    RETURN          reduce using rule 80 (break -> BREAK .)
    BREAK           reduce using rule 80 (break -> BREAK .)
    CONTINUE        reduce using rule 80 (break -> BREAK .)
    IF              reduce using rule 80 (break -> BREAK .)
    WHILE           reduce using rule 80 (break -> BREAK .)
    FOR             reduce using rule 80 (break -> BREAK .)
    $end            reduce using rule 80 (break -> BREAK .)
    LLADER          reduce using rule 80 (break -> BREAK .)


state 22

    (79) continue -> CONTINUE .

    PTOYCOMA        reduce using rule 79 (continue -> CONTINUE .)
    error           reduce using rule 79 (continue -> CONTINUE .)
    ID              reduce using rule 79 (continue -> CONTINUE .)
    INCREMENTO      reduce using rule 79 (continue -> CONTINUE .)
    DECREMENTO      reduce using rule 79 (continue -> CONTINUE .)
    LET             reduce using rule 79 (continue -> CONTINUE .)
    CONSOLE         reduce using rule 79 (continue -> CONTINUE .)
    RETURN          reduce using rule 79 (continue -> CONTINUE .)
    BREAK           reduce using rule 79 (continue -> CONTINUE .)
    CONTINUE        reduce using rule 79 (continue -> CONTINUE .)
    IF              reduce using rule 79 (continue -> CONTINUE .)
    WHILE           reduce using rule 79 (continue -> CONTINUE .)
    FOR             reduce using rule 79 (continue -> CONTINUE .)
    $end            reduce using rule 79 (continue -> CONTINUE .)
    LLADER          reduce using rule 79 (continue -> CONTINUE .)


state 23

    (81) condicional_if -> IF . PARIZQ expresion PARDER bloque
    (82) condicional_if -> IF . PARIZQ expresion PARDER bloque ELSE bloque
    (83) condicional_if -> IF . PARIZQ expresion PARDER bloque lista_elif
    (84) condicional_if -> IF . PARIZQ expresion PARDER bloque lista_elif ELSE bloque

    PARIZQ          shift and go to state 56


state 24

    (88) ciclo_while -> WHILE . PARIZQ expresion PARDER bloque

    PARIZQ          shift and go to state 57


state 25

    (89) ciclo_for -> FOR . PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (90) ciclo_for -> FOR . PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (91) ciclo_for -> FOR . PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (92) ciclo_for -> FOR . PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (93) ciclo_for_of -> FOR . PARIZQ LET ID OF expresion PARDER bloque

    PARIZQ          shift and go to state 58


state 26

    (1) instrucciones -> instrucciones instruccion .

    error           reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    INCREMENTO      reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    DECREMENTO      reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    LET             reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    CONSOLE         reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    RETURN          reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    FOR             reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 1 (instrucciones -> instrucciones instruccion .)


state 27

    (3) instruccion -> instruccion2 PTOYCOMA .

    error           reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    ID              reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    INCREMENTO      reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    DECREMENTO      reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    LET             reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    CONSOLE         reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    RETURN          reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    BREAK           reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    CONTINUE        reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    IF              reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    WHILE           reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    FOR             reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)
    $end            reduce using rule 3 (instruccion -> instruccion2 PTOYCOMA .)


state 28

    (102) instruccion -> error PTOYCOMA .

    error           reduce using rule 102 (instruccion -> error PTOYCOMA .)
    ID              reduce using rule 102 (instruccion -> error PTOYCOMA .)
    INCREMENTO      reduce using rule 102 (instruccion -> error PTOYCOMA .)
    DECREMENTO      reduce using rule 102 (instruccion -> error PTOYCOMA .)
    LET             reduce using rule 102 (instruccion -> error PTOYCOMA .)
    CONSOLE         reduce using rule 102 (instruccion -> error PTOYCOMA .)
    RETURN          reduce using rule 102 (instruccion -> error PTOYCOMA .)
    BREAK           reduce using rule 102 (instruccion -> error PTOYCOMA .)
    CONTINUE        reduce using rule 102 (instruccion -> error PTOYCOMA .)
    IF              reduce using rule 102 (instruccion -> error PTOYCOMA .)
    WHILE           reduce using rule 102 (instruccion -> error PTOYCOMA .)
    FOR             reduce using rule 102 (instruccion -> error PTOYCOMA .)
    $end            reduce using rule 102 (instruccion -> error PTOYCOMA .)


state 29

    (26) instruccion2 -> ID INCREMENTO .

    PTOYCOMA        reduce using rule 26 (instruccion2 -> ID INCREMENTO .)
    error           reduce using rule 26 (instruccion2 -> ID INCREMENTO .)
    ID              reduce using rule 26 (instruccion2 -> ID INCREMENTO .)
    INCREMENTO      reduce using rule 26 (instruccion2 -> ID INCREMENTO .)
    DECREMENTO      reduce using rule 26 (instruccion2 -> ID INCREMENTO .)
    LET             reduce using rule 26 (instruccion2 -> ID INCREMENTO .)
    CONSOLE         reduce using rule 26 (instruccion2 -> ID INCREMENTO .)
    RETURN          reduce using rule 26 (instruccion2 -> ID INCREMENTO .)
    BREAK           reduce using rule 26 (instruccion2 -> ID INCREMENTO .)
    CONTINUE        reduce using rule 26 (instruccion2 -> ID INCREMENTO .)
    IF              reduce using rule 26 (instruccion2 -> ID INCREMENTO .)
    WHILE           reduce using rule 26 (instruccion2 -> ID INCREMENTO .)
    FOR             reduce using rule 26 (instruccion2 -> ID INCREMENTO .)
    $end            reduce using rule 26 (instruccion2 -> ID INCREMENTO .)
    LLADER          reduce using rule 26 (instruccion2 -> ID INCREMENTO .)


state 30

    (28) instruccion2 -> ID DECREMENTO .

    PTOYCOMA        reduce using rule 28 (instruccion2 -> ID DECREMENTO .)
    error           reduce using rule 28 (instruccion2 -> ID DECREMENTO .)
    ID              reduce using rule 28 (instruccion2 -> ID DECREMENTO .)
    INCREMENTO      reduce using rule 28 (instruccion2 -> ID DECREMENTO .)
    DECREMENTO      reduce using rule 28 (instruccion2 -> ID DECREMENTO .)
    LET             reduce using rule 28 (instruccion2 -> ID DECREMENTO .)
    CONSOLE         reduce using rule 28 (instruccion2 -> ID DECREMENTO .)
    RETURN          reduce using rule 28 (instruccion2 -> ID DECREMENTO .)
    BREAK           reduce using rule 28 (instruccion2 -> ID DECREMENTO .)
    CONTINUE        reduce using rule 28 (instruccion2 -> ID DECREMENTO .)
    IF              reduce using rule 28 (instruccion2 -> ID DECREMENTO .)
    WHILE           reduce using rule 28 (instruccion2 -> ID DECREMENTO .)
    FOR             reduce using rule 28 (instruccion2 -> ID DECREMENTO .)
    $end            reduce using rule 28 (instruccion2 -> ID DECREMENTO .)
    LLADER          reduce using rule 28 (instruccion2 -> ID DECREMENTO .)


state 31

    (25) asignacion -> ID IGUAL . expresion
    (31) expresion -> . expresion MAS expresion
    (32) expresion -> . expresion MENOS expresion
    (33) expresion -> . expresion POR expresion
    (34) expresion -> . expresion DIVIDIDO expresion
    (35) expresion -> . expresion POTENCIA expresion
    (36) expresion -> . expresion MODULO expresion
    (37) expresion -> . MENOS expresion
    (38) expresion -> . PARIZQ expresion PARDER
    (39) expresion -> . expresion MAYOR expresion
    (40) expresion -> . expresion MENOR expresion
    (41) expresion -> . expresion MAYORIGUAL expresion
    (42) expresion -> . expresion MENORIGUAL expresion
    (43) expresion -> . expresion IGUALACION expresion
    (44) expresion -> . expresion DISTINTO expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . expresion OR expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . ENTERO
    (49) expresion -> . DECIMAL
    (50) expresion -> . CADENA
    (51) expresion -> . ID
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . ID INCREMENTO
    (55) expresion -> . ID DECREMENTO
    (56) expresion -> . INCREMENTO ID
    (57) expresion -> . DECREMENTO ID
    (58) expresion -> . aproximacion
    (59) expresion -> . exponencial
    (60) expresion -> . to_minusculas
    (61) expresion -> . to_mayusculas
    (62) expresion -> . separador
    (63) expresion -> . concatenacion
    (64) expresion -> . casteo_string
    (67) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (65) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (72) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 37
    PARIZQ          shift and go to state 38
    NOT             shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    CADENA          shift and go to state 42
    ID              shift and go to state 43
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    INCREMENTO      shift and go to state 46
    DECREMENTO      shift and go to state 47
    CAST_STRING     shift and go to state 55

    expresion                      shift and go to state 59
    aproximacion                   shift and go to state 48
    exponencial                    shift and go to state 49
    to_minusculas                  shift and go to state 50
    to_mayusculas                  shift and go to state 51
    separador                      shift and go to state 52
    concatenacion                  shift and go to state 53
    casteo_string                  shift and go to state 54

state 32

    (27) instruccion2 -> INCREMENTO ID .

    PTOYCOMA        reduce using rule 27 (instruccion2 -> INCREMENTO ID .)
    error           reduce using rule 27 (instruccion2 -> INCREMENTO ID .)
    ID              reduce using rule 27 (instruccion2 -> INCREMENTO ID .)
    INCREMENTO      reduce using rule 27 (instruccion2 -> INCREMENTO ID .)
    DECREMENTO      reduce using rule 27 (instruccion2 -> INCREMENTO ID .)
    LET             reduce using rule 27 (instruccion2 -> INCREMENTO ID .)
    CONSOLE         reduce using rule 27 (instruccion2 -> INCREMENTO ID .)
    RETURN          reduce using rule 27 (instruccion2 -> INCREMENTO ID .)
    BREAK           reduce using rule 27 (instruccion2 -> INCREMENTO ID .)
    CONTINUE        reduce using rule 27 (instruccion2 -> INCREMENTO ID .)
    IF              reduce using rule 27 (instruccion2 -> INCREMENTO ID .)
    WHILE           reduce using rule 27 (instruccion2 -> INCREMENTO ID .)
    FOR             reduce using rule 27 (instruccion2 -> INCREMENTO ID .)
    $end            reduce using rule 27 (instruccion2 -> INCREMENTO ID .)
    LLADER          reduce using rule 27 (instruccion2 -> INCREMENTO ID .)


state 33

    (29) instruccion2 -> DECREMENTO ID .

    PTOYCOMA        reduce using rule 29 (instruccion2 -> DECREMENTO ID .)
    error           reduce using rule 29 (instruccion2 -> DECREMENTO ID .)
    ID              reduce using rule 29 (instruccion2 -> DECREMENTO ID .)
    INCREMENTO      reduce using rule 29 (instruccion2 -> DECREMENTO ID .)
    DECREMENTO      reduce using rule 29 (instruccion2 -> DECREMENTO ID .)
    LET             reduce using rule 29 (instruccion2 -> DECREMENTO ID .)
    CONSOLE         reduce using rule 29 (instruccion2 -> DECREMENTO ID .)
    RETURN          reduce using rule 29 (instruccion2 -> DECREMENTO ID .)
    BREAK           reduce using rule 29 (instruccion2 -> DECREMENTO ID .)
    CONTINUE        reduce using rule 29 (instruccion2 -> DECREMENTO ID .)
    IF              reduce using rule 29 (instruccion2 -> DECREMENTO ID .)
    WHILE           reduce using rule 29 (instruccion2 -> DECREMENTO ID .)
    FOR             reduce using rule 29 (instruccion2 -> DECREMENTO ID .)
    $end            reduce using rule 29 (instruccion2 -> DECREMENTO ID .)
    LLADER          reduce using rule 29 (instruccion2 -> DECREMENTO ID .)


state 34

    (21) declaracion -> LET ID . DOSPUNTOS tipo IGUAL expresion
    (22) declaracion -> LET ID . IGUAL expresion
    (23) declaracion -> LET ID . DOSPUNTOS tipo
    (24) declaracion -> LET ID .

    DOSPUNTOS       shift and go to state 60
    IGUAL           shift and go to state 61
    PTOYCOMA        reduce using rule 24 (declaracion -> LET ID .)
    error           reduce using rule 24 (declaracion -> LET ID .)
    ID              reduce using rule 24 (declaracion -> LET ID .)
    INCREMENTO      reduce using rule 24 (declaracion -> LET ID .)
    DECREMENTO      reduce using rule 24 (declaracion -> LET ID .)
    LET             reduce using rule 24 (declaracion -> LET ID .)
    CONSOLE         reduce using rule 24 (declaracion -> LET ID .)
    RETURN          reduce using rule 24 (declaracion -> LET ID .)
    BREAK           reduce using rule 24 (declaracion -> LET ID .)
    CONTINUE        reduce using rule 24 (declaracion -> LET ID .)
    IF              reduce using rule 24 (declaracion -> LET ID .)
    WHILE           reduce using rule 24 (declaracion -> LET ID .)
    FOR             reduce using rule 24 (declaracion -> LET ID .)
    $end            reduce using rule 24 (declaracion -> LET ID .)
    LLADER          reduce using rule 24 (declaracion -> LET ID .)


state 35

    (30) impresion -> CONSOLE PUNTO . LOG PARIZQ expresion PARDER

    LOG             shift and go to state 62


state 36

    (78) return -> RETURN expresion .
    (31) expresion -> expresion . MAS expresion
    (32) expresion -> expresion . MENOS expresion
    (33) expresion -> expresion . POR expresion
    (34) expresion -> expresion . DIVIDIDO expresion
    (35) expresion -> expresion . POTENCIA expresion
    (36) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . MAYOR expresion
    (40) expresion -> expresion . MENOR expresion
    (41) expresion -> expresion . MAYORIGUAL expresion
    (42) expresion -> expresion . MENORIGUAL expresion
    (43) expresion -> expresion . IGUALACION expresion
    (44) expresion -> expresion . DISTINTO expresion
    (45) expresion -> expresion . AND expresion
    (46) expresion -> expresion . OR expresion
    (65) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PTOYCOMA        reduce using rule 78 (return -> RETURN expresion .)
    error           reduce using rule 78 (return -> RETURN expresion .)
    ID              reduce using rule 78 (return -> RETURN expresion .)
    INCREMENTO      reduce using rule 78 (return -> RETURN expresion .)
    DECREMENTO      reduce using rule 78 (return -> RETURN expresion .)
    LET             reduce using rule 78 (return -> RETURN expresion .)
    CONSOLE         reduce using rule 78 (return -> RETURN expresion .)
    RETURN          reduce using rule 78 (return -> RETURN expresion .)
    BREAK           reduce using rule 78 (return -> RETURN expresion .)
    CONTINUE        reduce using rule 78 (return -> RETURN expresion .)
    IF              reduce using rule 78 (return -> RETURN expresion .)
    WHILE           reduce using rule 78 (return -> RETURN expresion .)
    FOR             reduce using rule 78 (return -> RETURN expresion .)
    $end            reduce using rule 78 (return -> RETURN expresion .)
    LLADER          reduce using rule 78 (return -> RETURN expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALACION      shift and go to state 73
    DISTINTO        shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76
    PUNTO           shift and go to state 77


state 37

    (37) expresion -> MENOS . expresion
    (31) expresion -> . expresion MAS expresion
    (32) expresion -> . expresion MENOS expresion
    (33) expresion -> . expresion POR expresion
    (34) expresion -> . expresion DIVIDIDO expresion
    (35) expresion -> . expresion POTENCIA expresion
    (36) expresion -> . expresion MODULO expresion
    (37) expresion -> . MENOS expresion
    (38) expresion -> . PARIZQ expresion PARDER
    (39) expresion -> . expresion MAYOR expresion
    (40) expresion -> . expresion MENOR expresion
    (41) expresion -> . expresion MAYORIGUAL expresion
    (42) expresion -> . expresion MENORIGUAL expresion
    (43) expresion -> . expresion IGUALACION expresion
    (44) expresion -> . expresion DISTINTO expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . expresion OR expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . ENTERO
    (49) expresion -> . DECIMAL
    (50) expresion -> . CADENA
    (51) expresion -> . ID
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . ID INCREMENTO
    (55) expresion -> . ID DECREMENTO
    (56) expresion -> . INCREMENTO ID
    (57) expresion -> . DECREMENTO ID
    (58) expresion -> . aproximacion
    (59) expresion -> . exponencial
    (60) expresion -> . to_minusculas
    (61) expresion -> . to_mayusculas
    (62) expresion -> . separador
    (63) expresion -> . concatenacion
    (64) expresion -> . casteo_string
    (67) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (65) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (72) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 37
    PARIZQ          shift and go to state 38
    NOT             shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    CADENA          shift and go to state 42
    ID              shift and go to state 43
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    INCREMENTO      shift and go to state 46
    DECREMENTO      shift and go to state 47
    CAST_STRING     shift and go to state 55

    expresion                      shift and go to state 78
    aproximacion                   shift and go to state 48
    exponencial                    shift and go to state 49
    to_minusculas                  shift and go to state 50
    to_mayusculas                  shift and go to state 51
    separador                      shift and go to state 52
    concatenacion                  shift and go to state 53
    casteo_string                  shift and go to state 54

state 38

    (38) expresion -> PARIZQ . expresion PARDER
    (31) expresion -> . expresion MAS expresion
    (32) expresion -> . expresion MENOS expresion
    (33) expresion -> . expresion POR expresion
    (34) expresion -> . expresion DIVIDIDO expresion
    (35) expresion -> . expresion POTENCIA expresion
    (36) expresion -> . expresion MODULO expresion
    (37) expresion -> . MENOS expresion
    (38) expresion -> . PARIZQ expresion PARDER
    (39) expresion -> . expresion MAYOR expresion
    (40) expresion -> . expresion MENOR expresion
    (41) expresion -> . expresion MAYORIGUAL expresion
    (42) expresion -> . expresion MENORIGUAL expresion
    (43) expresion -> . expresion IGUALACION expresion
    (44) expresion -> . expresion DISTINTO expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . expresion OR expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . ENTERO
    (49) expresion -> . DECIMAL
    (50) expresion -> . CADENA
    (51) expresion -> . ID
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . ID INCREMENTO
    (55) expresion -> . ID DECREMENTO
    (56) expresion -> . INCREMENTO ID
    (57) expresion -> . DECREMENTO ID
    (58) expresion -> . aproximacion
    (59) expresion -> . exponencial
    (60) expresion -> . to_minusculas
    (61) expresion -> . to_mayusculas
    (62) expresion -> . separador
    (63) expresion -> . concatenacion
    (64) expresion -> . casteo_string
    (67) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (65) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (72) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 37
    PARIZQ          shift and go to state 38
    NOT             shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    CADENA          shift and go to state 42
    ID              shift and go to state 43
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    INCREMENTO      shift and go to state 46
    DECREMENTO      shift and go to state 47
    CAST_STRING     shift and go to state 55

    expresion                      shift and go to state 79
    aproximacion                   shift and go to state 48
    exponencial                    shift and go to state 49
    to_minusculas                  shift and go to state 50
    to_mayusculas                  shift and go to state 51
    separador                      shift and go to state 52
    concatenacion                  shift and go to state 53
    casteo_string                  shift and go to state 54

state 39

    (47) expresion -> NOT . expresion
    (31) expresion -> . expresion MAS expresion
    (32) expresion -> . expresion MENOS expresion
    (33) expresion -> . expresion POR expresion
    (34) expresion -> . expresion DIVIDIDO expresion
    (35) expresion -> . expresion POTENCIA expresion
    (36) expresion -> . expresion MODULO expresion
    (37) expresion -> . MENOS expresion
    (38) expresion -> . PARIZQ expresion PARDER
    (39) expresion -> . expresion MAYOR expresion
    (40) expresion -> . expresion MENOR expresion
    (41) expresion -> . expresion MAYORIGUAL expresion
    (42) expresion -> . expresion MENORIGUAL expresion
    (43) expresion -> . expresion IGUALACION expresion
    (44) expresion -> . expresion DISTINTO expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . expresion OR expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . ENTERO
    (49) expresion -> . DECIMAL
    (50) expresion -> . CADENA
    (51) expresion -> . ID
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . ID INCREMENTO
    (55) expresion -> . ID DECREMENTO
    (56) expresion -> . INCREMENTO ID
    (57) expresion -> . DECREMENTO ID
    (58) expresion -> . aproximacion
    (59) expresion -> . exponencial
    (60) expresion -> . to_minusculas
    (61) expresion -> . to_mayusculas
    (62) expresion -> . separador
    (63) expresion -> . concatenacion
    (64) expresion -> . casteo_string
    (67) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (65) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (72) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 37
    PARIZQ          shift and go to state 38
    NOT             shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    CADENA          shift and go to state 42
    ID              shift and go to state 43
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    INCREMENTO      shift and go to state 46
    DECREMENTO      shift and go to state 47
    CAST_STRING     shift and go to state 55

    expresion                      shift and go to state 80
    aproximacion                   shift and go to state 48
    exponencial                    shift and go to state 49
    to_minusculas                  shift and go to state 50
    to_mayusculas                  shift and go to state 51
    separador                      shift and go to state 52
    concatenacion                  shift and go to state 53
    casteo_string                  shift and go to state 54

state 40

    (48) expresion -> ENTERO .

    MAS             reduce using rule 48 (expresion -> ENTERO .)
    MENOS           reduce using rule 48 (expresion -> ENTERO .)
    POR             reduce using rule 48 (expresion -> ENTERO .)
    DIVIDIDO        reduce using rule 48 (expresion -> ENTERO .)
    POTENCIA        reduce using rule 48 (expresion -> ENTERO .)
    MODULO          reduce using rule 48 (expresion -> ENTERO .)
    MAYOR           reduce using rule 48 (expresion -> ENTERO .)
    MENOR           reduce using rule 48 (expresion -> ENTERO .)
    MAYORIGUAL      reduce using rule 48 (expresion -> ENTERO .)
    MENORIGUAL      reduce using rule 48 (expresion -> ENTERO .)
    IGUALACION      reduce using rule 48 (expresion -> ENTERO .)
    DISTINTO        reduce using rule 48 (expresion -> ENTERO .)
    AND             reduce using rule 48 (expresion -> ENTERO .)
    OR              reduce using rule 48 (expresion -> ENTERO .)
    PUNTO           reduce using rule 48 (expresion -> ENTERO .)
    PTOYCOMA        reduce using rule 48 (expresion -> ENTERO .)
    error           reduce using rule 48 (expresion -> ENTERO .)
    ID              reduce using rule 48 (expresion -> ENTERO .)
    INCREMENTO      reduce using rule 48 (expresion -> ENTERO .)
    DECREMENTO      reduce using rule 48 (expresion -> ENTERO .)
    LET             reduce using rule 48 (expresion -> ENTERO .)
    CONSOLE         reduce using rule 48 (expresion -> ENTERO .)
    RETURN          reduce using rule 48 (expresion -> ENTERO .)
    BREAK           reduce using rule 48 (expresion -> ENTERO .)
    CONTINUE        reduce using rule 48 (expresion -> ENTERO .)
    IF              reduce using rule 48 (expresion -> ENTERO .)
    WHILE           reduce using rule 48 (expresion -> ENTERO .)
    FOR             reduce using rule 48 (expresion -> ENTERO .)
    $end            reduce using rule 48 (expresion -> ENTERO .)
    LLADER          reduce using rule 48 (expresion -> ENTERO .)
    PARDER          reduce using rule 48 (expresion -> ENTERO .)


state 41

    (49) expresion -> DECIMAL .

    MAS             reduce using rule 49 (expresion -> DECIMAL .)
    MENOS           reduce using rule 49 (expresion -> DECIMAL .)
    POR             reduce using rule 49 (expresion -> DECIMAL .)
    DIVIDIDO        reduce using rule 49 (expresion -> DECIMAL .)
    POTENCIA        reduce using rule 49 (expresion -> DECIMAL .)
    MODULO          reduce using rule 49 (expresion -> DECIMAL .)
    MAYOR           reduce using rule 49 (expresion -> DECIMAL .)
    MENOR           reduce using rule 49 (expresion -> DECIMAL .)
    MAYORIGUAL      reduce using rule 49 (expresion -> DECIMAL .)
    MENORIGUAL      reduce using rule 49 (expresion -> DECIMAL .)
    IGUALACION      reduce using rule 49 (expresion -> DECIMAL .)
    DISTINTO        reduce using rule 49 (expresion -> DECIMAL .)
    AND             reduce using rule 49 (expresion -> DECIMAL .)
    OR              reduce using rule 49 (expresion -> DECIMAL .)
    PUNTO           reduce using rule 49 (expresion -> DECIMAL .)
    PTOYCOMA        reduce using rule 49 (expresion -> DECIMAL .)
    error           reduce using rule 49 (expresion -> DECIMAL .)
    ID              reduce using rule 49 (expresion -> DECIMAL .)
    INCREMENTO      reduce using rule 49 (expresion -> DECIMAL .)
    DECREMENTO      reduce using rule 49 (expresion -> DECIMAL .)
    LET             reduce using rule 49 (expresion -> DECIMAL .)
    CONSOLE         reduce using rule 49 (expresion -> DECIMAL .)
    RETURN          reduce using rule 49 (expresion -> DECIMAL .)
    BREAK           reduce using rule 49 (expresion -> DECIMAL .)
    CONTINUE        reduce using rule 49 (expresion -> DECIMAL .)
    IF              reduce using rule 49 (expresion -> DECIMAL .)
    WHILE           reduce using rule 49 (expresion -> DECIMAL .)
    FOR             reduce using rule 49 (expresion -> DECIMAL .)
    $end            reduce using rule 49 (expresion -> DECIMAL .)
    LLADER          reduce using rule 49 (expresion -> DECIMAL .)
    PARDER          reduce using rule 49 (expresion -> DECIMAL .)


state 42

    (50) expresion -> CADENA .

    MAS             reduce using rule 50 (expresion -> CADENA .)
    MENOS           reduce using rule 50 (expresion -> CADENA .)
    POR             reduce using rule 50 (expresion -> CADENA .)
    DIVIDIDO        reduce using rule 50 (expresion -> CADENA .)
    POTENCIA        reduce using rule 50 (expresion -> CADENA .)
    MODULO          reduce using rule 50 (expresion -> CADENA .)
    MAYOR           reduce using rule 50 (expresion -> CADENA .)
    MENOR           reduce using rule 50 (expresion -> CADENA .)
    MAYORIGUAL      reduce using rule 50 (expresion -> CADENA .)
    MENORIGUAL      reduce using rule 50 (expresion -> CADENA .)
    IGUALACION      reduce using rule 50 (expresion -> CADENA .)
    DISTINTO        reduce using rule 50 (expresion -> CADENA .)
    AND             reduce using rule 50 (expresion -> CADENA .)
    OR              reduce using rule 50 (expresion -> CADENA .)
    PUNTO           reduce using rule 50 (expresion -> CADENA .)
    PTOYCOMA        reduce using rule 50 (expresion -> CADENA .)
    error           reduce using rule 50 (expresion -> CADENA .)
    ID              reduce using rule 50 (expresion -> CADENA .)
    INCREMENTO      reduce using rule 50 (expresion -> CADENA .)
    DECREMENTO      reduce using rule 50 (expresion -> CADENA .)
    LET             reduce using rule 50 (expresion -> CADENA .)
    CONSOLE         reduce using rule 50 (expresion -> CADENA .)
    RETURN          reduce using rule 50 (expresion -> CADENA .)
    BREAK           reduce using rule 50 (expresion -> CADENA .)
    CONTINUE        reduce using rule 50 (expresion -> CADENA .)
    IF              reduce using rule 50 (expresion -> CADENA .)
    WHILE           reduce using rule 50 (expresion -> CADENA .)
    FOR             reduce using rule 50 (expresion -> CADENA .)
    $end            reduce using rule 50 (expresion -> CADENA .)
    LLADER          reduce using rule 50 (expresion -> CADENA .)
    PARDER          reduce using rule 50 (expresion -> CADENA .)


state 43

    (51) expresion -> ID .
    (54) expresion -> ID . INCREMENTO
    (55) expresion -> ID . DECREMENTO
    (67) expresion -> ID . PUNTO TOSTRING PARIZQ PARDER

  ! shift/reduce conflict for INCREMENTO resolved as shift
  ! shift/reduce conflict for DECREMENTO resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
    MAS             reduce using rule 51 (expresion -> ID .)
    MENOS           reduce using rule 51 (expresion -> ID .)
    POR             reduce using rule 51 (expresion -> ID .)
    DIVIDIDO        reduce using rule 51 (expresion -> ID .)
    POTENCIA        reduce using rule 51 (expresion -> ID .)
    MODULO          reduce using rule 51 (expresion -> ID .)
    MAYOR           reduce using rule 51 (expresion -> ID .)
    MENOR           reduce using rule 51 (expresion -> ID .)
    MAYORIGUAL      reduce using rule 51 (expresion -> ID .)
    MENORIGUAL      reduce using rule 51 (expresion -> ID .)
    IGUALACION      reduce using rule 51 (expresion -> ID .)
    DISTINTO        reduce using rule 51 (expresion -> ID .)
    AND             reduce using rule 51 (expresion -> ID .)
    OR              reduce using rule 51 (expresion -> ID .)
    PTOYCOMA        reduce using rule 51 (expresion -> ID .)
    error           reduce using rule 51 (expresion -> ID .)
    ID              reduce using rule 51 (expresion -> ID .)
    LET             reduce using rule 51 (expresion -> ID .)
    CONSOLE         reduce using rule 51 (expresion -> ID .)
    RETURN          reduce using rule 51 (expresion -> ID .)
    BREAK           reduce using rule 51 (expresion -> ID .)
    CONTINUE        reduce using rule 51 (expresion -> ID .)
    IF              reduce using rule 51 (expresion -> ID .)
    WHILE           reduce using rule 51 (expresion -> ID .)
    FOR             reduce using rule 51 (expresion -> ID .)
    $end            reduce using rule 51 (expresion -> ID .)
    LLADER          reduce using rule 51 (expresion -> ID .)
    PARDER          reduce using rule 51 (expresion -> ID .)
    INCREMENTO      shift and go to state 81
    DECREMENTO      shift and go to state 82
    PUNTO           shift and go to state 83

  ! PUNTO           [ reduce using rule 51 (expresion -> ID .) ]
  ! INCREMENTO      [ reduce using rule 51 (expresion -> ID .) ]
  ! DECREMENTO      [ reduce using rule 51 (expresion -> ID .) ]


state 44

    (52) expresion -> TRUE .

    MAS             reduce using rule 52 (expresion -> TRUE .)
    MENOS           reduce using rule 52 (expresion -> TRUE .)
    POR             reduce using rule 52 (expresion -> TRUE .)
    DIVIDIDO        reduce using rule 52 (expresion -> TRUE .)
    POTENCIA        reduce using rule 52 (expresion -> TRUE .)
    MODULO          reduce using rule 52 (expresion -> TRUE .)
    MAYOR           reduce using rule 52 (expresion -> TRUE .)
    MENOR           reduce using rule 52 (expresion -> TRUE .)
    MAYORIGUAL      reduce using rule 52 (expresion -> TRUE .)
    MENORIGUAL      reduce using rule 52 (expresion -> TRUE .)
    IGUALACION      reduce using rule 52 (expresion -> TRUE .)
    DISTINTO        reduce using rule 52 (expresion -> TRUE .)
    AND             reduce using rule 52 (expresion -> TRUE .)
    OR              reduce using rule 52 (expresion -> TRUE .)
    PUNTO           reduce using rule 52 (expresion -> TRUE .)
    PTOYCOMA        reduce using rule 52 (expresion -> TRUE .)
    error           reduce using rule 52 (expresion -> TRUE .)
    ID              reduce using rule 52 (expresion -> TRUE .)
    INCREMENTO      reduce using rule 52 (expresion -> TRUE .)
    DECREMENTO      reduce using rule 52 (expresion -> TRUE .)
    LET             reduce using rule 52 (expresion -> TRUE .)
    CONSOLE         reduce using rule 52 (expresion -> TRUE .)
    RETURN          reduce using rule 52 (expresion -> TRUE .)
    BREAK           reduce using rule 52 (expresion -> TRUE .)
    CONTINUE        reduce using rule 52 (expresion -> TRUE .)
    IF              reduce using rule 52 (expresion -> TRUE .)
    WHILE           reduce using rule 52 (expresion -> TRUE .)
    FOR             reduce using rule 52 (expresion -> TRUE .)
    $end            reduce using rule 52 (expresion -> TRUE .)
    LLADER          reduce using rule 52 (expresion -> TRUE .)
    PARDER          reduce using rule 52 (expresion -> TRUE .)


state 45

    (53) expresion -> FALSE .

    MAS             reduce using rule 53 (expresion -> FALSE .)
    MENOS           reduce using rule 53 (expresion -> FALSE .)
    POR             reduce using rule 53 (expresion -> FALSE .)
    DIVIDIDO        reduce using rule 53 (expresion -> FALSE .)
    POTENCIA        reduce using rule 53 (expresion -> FALSE .)
    MODULO          reduce using rule 53 (expresion -> FALSE .)
    MAYOR           reduce using rule 53 (expresion -> FALSE .)
    MENOR           reduce using rule 53 (expresion -> FALSE .)
    MAYORIGUAL      reduce using rule 53 (expresion -> FALSE .)
    MENORIGUAL      reduce using rule 53 (expresion -> FALSE .)
    IGUALACION      reduce using rule 53 (expresion -> FALSE .)
    DISTINTO        reduce using rule 53 (expresion -> FALSE .)
    AND             reduce using rule 53 (expresion -> FALSE .)
    OR              reduce using rule 53 (expresion -> FALSE .)
    PUNTO           reduce using rule 53 (expresion -> FALSE .)
    PTOYCOMA        reduce using rule 53 (expresion -> FALSE .)
    error           reduce using rule 53 (expresion -> FALSE .)
    ID              reduce using rule 53 (expresion -> FALSE .)
    INCREMENTO      reduce using rule 53 (expresion -> FALSE .)
    DECREMENTO      reduce using rule 53 (expresion -> FALSE .)
    LET             reduce using rule 53 (expresion -> FALSE .)
    CONSOLE         reduce using rule 53 (expresion -> FALSE .)
    RETURN          reduce using rule 53 (expresion -> FALSE .)
    BREAK           reduce using rule 53 (expresion -> FALSE .)
    CONTINUE        reduce using rule 53 (expresion -> FALSE .)
    IF              reduce using rule 53 (expresion -> FALSE .)
    WHILE           reduce using rule 53 (expresion -> FALSE .)
    FOR             reduce using rule 53 (expresion -> FALSE .)
    $end            reduce using rule 53 (expresion -> FALSE .)
    LLADER          reduce using rule 53 (expresion -> FALSE .)
    PARDER          reduce using rule 53 (expresion -> FALSE .)


state 46

    (56) expresion -> INCREMENTO . ID

    ID              shift and go to state 84


state 47

    (57) expresion -> DECREMENTO . ID

    ID              shift and go to state 85


state 48

    (58) expresion -> aproximacion .

    MAS             reduce using rule 58 (expresion -> aproximacion .)
    MENOS           reduce using rule 58 (expresion -> aproximacion .)
    POR             reduce using rule 58 (expresion -> aproximacion .)
    DIVIDIDO        reduce using rule 58 (expresion -> aproximacion .)
    POTENCIA        reduce using rule 58 (expresion -> aproximacion .)
    MODULO          reduce using rule 58 (expresion -> aproximacion .)
    MAYOR           reduce using rule 58 (expresion -> aproximacion .)
    MENOR           reduce using rule 58 (expresion -> aproximacion .)
    MAYORIGUAL      reduce using rule 58 (expresion -> aproximacion .)
    MENORIGUAL      reduce using rule 58 (expresion -> aproximacion .)
    IGUALACION      reduce using rule 58 (expresion -> aproximacion .)
    DISTINTO        reduce using rule 58 (expresion -> aproximacion .)
    AND             reduce using rule 58 (expresion -> aproximacion .)
    OR              reduce using rule 58 (expresion -> aproximacion .)
    PUNTO           reduce using rule 58 (expresion -> aproximacion .)
    PTOYCOMA        reduce using rule 58 (expresion -> aproximacion .)
    error           reduce using rule 58 (expresion -> aproximacion .)
    ID              reduce using rule 58 (expresion -> aproximacion .)
    INCREMENTO      reduce using rule 58 (expresion -> aproximacion .)
    DECREMENTO      reduce using rule 58 (expresion -> aproximacion .)
    LET             reduce using rule 58 (expresion -> aproximacion .)
    CONSOLE         reduce using rule 58 (expresion -> aproximacion .)
    RETURN          reduce using rule 58 (expresion -> aproximacion .)
    BREAK           reduce using rule 58 (expresion -> aproximacion .)
    CONTINUE        reduce using rule 58 (expresion -> aproximacion .)
    IF              reduce using rule 58 (expresion -> aproximacion .)
    WHILE           reduce using rule 58 (expresion -> aproximacion .)
    FOR             reduce using rule 58 (expresion -> aproximacion .)
    $end            reduce using rule 58 (expresion -> aproximacion .)
    LLADER          reduce using rule 58 (expresion -> aproximacion .)
    PARDER          reduce using rule 58 (expresion -> aproximacion .)


state 49

    (59) expresion -> exponencial .

    MAS             reduce using rule 59 (expresion -> exponencial .)
    MENOS           reduce using rule 59 (expresion -> exponencial .)
    POR             reduce using rule 59 (expresion -> exponencial .)
    DIVIDIDO        reduce using rule 59 (expresion -> exponencial .)
    POTENCIA        reduce using rule 59 (expresion -> exponencial .)
    MODULO          reduce using rule 59 (expresion -> exponencial .)
    MAYOR           reduce using rule 59 (expresion -> exponencial .)
    MENOR           reduce using rule 59 (expresion -> exponencial .)
    MAYORIGUAL      reduce using rule 59 (expresion -> exponencial .)
    MENORIGUAL      reduce using rule 59 (expresion -> exponencial .)
    IGUALACION      reduce using rule 59 (expresion -> exponencial .)
    DISTINTO        reduce using rule 59 (expresion -> exponencial .)
    AND             reduce using rule 59 (expresion -> exponencial .)
    OR              reduce using rule 59 (expresion -> exponencial .)
    PUNTO           reduce using rule 59 (expresion -> exponencial .)
    PTOYCOMA        reduce using rule 59 (expresion -> exponencial .)
    error           reduce using rule 59 (expresion -> exponencial .)
    ID              reduce using rule 59 (expresion -> exponencial .)
    INCREMENTO      reduce using rule 59 (expresion -> exponencial .)
    DECREMENTO      reduce using rule 59 (expresion -> exponencial .)
    LET             reduce using rule 59 (expresion -> exponencial .)
    CONSOLE         reduce using rule 59 (expresion -> exponencial .)
    RETURN          reduce using rule 59 (expresion -> exponencial .)
    BREAK           reduce using rule 59 (expresion -> exponencial .)
    CONTINUE        reduce using rule 59 (expresion -> exponencial .)
    IF              reduce using rule 59 (expresion -> exponencial .)
    WHILE           reduce using rule 59 (expresion -> exponencial .)
    FOR             reduce using rule 59 (expresion -> exponencial .)
    $end            reduce using rule 59 (expresion -> exponencial .)
    LLADER          reduce using rule 59 (expresion -> exponencial .)
    PARDER          reduce using rule 59 (expresion -> exponencial .)


state 50

    (60) expresion -> to_minusculas .

    MAS             reduce using rule 60 (expresion -> to_minusculas .)
    MENOS           reduce using rule 60 (expresion -> to_minusculas .)
    POR             reduce using rule 60 (expresion -> to_minusculas .)
    DIVIDIDO        reduce using rule 60 (expresion -> to_minusculas .)
    POTENCIA        reduce using rule 60 (expresion -> to_minusculas .)
    MODULO          reduce using rule 60 (expresion -> to_minusculas .)
    MAYOR           reduce using rule 60 (expresion -> to_minusculas .)
    MENOR           reduce using rule 60 (expresion -> to_minusculas .)
    MAYORIGUAL      reduce using rule 60 (expresion -> to_minusculas .)
    MENORIGUAL      reduce using rule 60 (expresion -> to_minusculas .)
    IGUALACION      reduce using rule 60 (expresion -> to_minusculas .)
    DISTINTO        reduce using rule 60 (expresion -> to_minusculas .)
    AND             reduce using rule 60 (expresion -> to_minusculas .)
    OR              reduce using rule 60 (expresion -> to_minusculas .)
    PUNTO           reduce using rule 60 (expresion -> to_minusculas .)
    PTOYCOMA        reduce using rule 60 (expresion -> to_minusculas .)
    error           reduce using rule 60 (expresion -> to_minusculas .)
    ID              reduce using rule 60 (expresion -> to_minusculas .)
    INCREMENTO      reduce using rule 60 (expresion -> to_minusculas .)
    DECREMENTO      reduce using rule 60 (expresion -> to_minusculas .)
    LET             reduce using rule 60 (expresion -> to_minusculas .)
    CONSOLE         reduce using rule 60 (expresion -> to_minusculas .)
    RETURN          reduce using rule 60 (expresion -> to_minusculas .)
    BREAK           reduce using rule 60 (expresion -> to_minusculas .)
    CONTINUE        reduce using rule 60 (expresion -> to_minusculas .)
    IF              reduce using rule 60 (expresion -> to_minusculas .)
    WHILE           reduce using rule 60 (expresion -> to_minusculas .)
    FOR             reduce using rule 60 (expresion -> to_minusculas .)
    $end            reduce using rule 60 (expresion -> to_minusculas .)
    LLADER          reduce using rule 60 (expresion -> to_minusculas .)
    PARDER          reduce using rule 60 (expresion -> to_minusculas .)


state 51

    (61) expresion -> to_mayusculas .

    MAS             reduce using rule 61 (expresion -> to_mayusculas .)
    MENOS           reduce using rule 61 (expresion -> to_mayusculas .)
    POR             reduce using rule 61 (expresion -> to_mayusculas .)
    DIVIDIDO        reduce using rule 61 (expresion -> to_mayusculas .)
    POTENCIA        reduce using rule 61 (expresion -> to_mayusculas .)
    MODULO          reduce using rule 61 (expresion -> to_mayusculas .)
    MAYOR           reduce using rule 61 (expresion -> to_mayusculas .)
    MENOR           reduce using rule 61 (expresion -> to_mayusculas .)
    MAYORIGUAL      reduce using rule 61 (expresion -> to_mayusculas .)
    MENORIGUAL      reduce using rule 61 (expresion -> to_mayusculas .)
    IGUALACION      reduce using rule 61 (expresion -> to_mayusculas .)
    DISTINTO        reduce using rule 61 (expresion -> to_mayusculas .)
    AND             reduce using rule 61 (expresion -> to_mayusculas .)
    OR              reduce using rule 61 (expresion -> to_mayusculas .)
    PUNTO           reduce using rule 61 (expresion -> to_mayusculas .)
    PTOYCOMA        reduce using rule 61 (expresion -> to_mayusculas .)
    error           reduce using rule 61 (expresion -> to_mayusculas .)
    ID              reduce using rule 61 (expresion -> to_mayusculas .)
    INCREMENTO      reduce using rule 61 (expresion -> to_mayusculas .)
    DECREMENTO      reduce using rule 61 (expresion -> to_mayusculas .)
    LET             reduce using rule 61 (expresion -> to_mayusculas .)
    CONSOLE         reduce using rule 61 (expresion -> to_mayusculas .)
    RETURN          reduce using rule 61 (expresion -> to_mayusculas .)
    BREAK           reduce using rule 61 (expresion -> to_mayusculas .)
    CONTINUE        reduce using rule 61 (expresion -> to_mayusculas .)
    IF              reduce using rule 61 (expresion -> to_mayusculas .)
    WHILE           reduce using rule 61 (expresion -> to_mayusculas .)
    FOR             reduce using rule 61 (expresion -> to_mayusculas .)
    $end            reduce using rule 61 (expresion -> to_mayusculas .)
    LLADER          reduce using rule 61 (expresion -> to_mayusculas .)
    PARDER          reduce using rule 61 (expresion -> to_mayusculas .)


state 52

    (62) expresion -> separador .

    MAS             reduce using rule 62 (expresion -> separador .)
    MENOS           reduce using rule 62 (expresion -> separador .)
    POR             reduce using rule 62 (expresion -> separador .)
    DIVIDIDO        reduce using rule 62 (expresion -> separador .)
    POTENCIA        reduce using rule 62 (expresion -> separador .)
    MODULO          reduce using rule 62 (expresion -> separador .)
    MAYOR           reduce using rule 62 (expresion -> separador .)
    MENOR           reduce using rule 62 (expresion -> separador .)
    MAYORIGUAL      reduce using rule 62 (expresion -> separador .)
    MENORIGUAL      reduce using rule 62 (expresion -> separador .)
    IGUALACION      reduce using rule 62 (expresion -> separador .)
    DISTINTO        reduce using rule 62 (expresion -> separador .)
    AND             reduce using rule 62 (expresion -> separador .)
    OR              reduce using rule 62 (expresion -> separador .)
    PUNTO           reduce using rule 62 (expresion -> separador .)
    PTOYCOMA        reduce using rule 62 (expresion -> separador .)
    error           reduce using rule 62 (expresion -> separador .)
    ID              reduce using rule 62 (expresion -> separador .)
    INCREMENTO      reduce using rule 62 (expresion -> separador .)
    DECREMENTO      reduce using rule 62 (expresion -> separador .)
    LET             reduce using rule 62 (expresion -> separador .)
    CONSOLE         reduce using rule 62 (expresion -> separador .)
    RETURN          reduce using rule 62 (expresion -> separador .)
    BREAK           reduce using rule 62 (expresion -> separador .)
    CONTINUE        reduce using rule 62 (expresion -> separador .)
    IF              reduce using rule 62 (expresion -> separador .)
    WHILE           reduce using rule 62 (expresion -> separador .)
    FOR             reduce using rule 62 (expresion -> separador .)
    $end            reduce using rule 62 (expresion -> separador .)
    LLADER          reduce using rule 62 (expresion -> separador .)
    PARDER          reduce using rule 62 (expresion -> separador .)


state 53

    (63) expresion -> concatenacion .

    MAS             reduce using rule 63 (expresion -> concatenacion .)
    MENOS           reduce using rule 63 (expresion -> concatenacion .)
    POR             reduce using rule 63 (expresion -> concatenacion .)
    DIVIDIDO        reduce using rule 63 (expresion -> concatenacion .)
    POTENCIA        reduce using rule 63 (expresion -> concatenacion .)
    MODULO          reduce using rule 63 (expresion -> concatenacion .)
    MAYOR           reduce using rule 63 (expresion -> concatenacion .)
    MENOR           reduce using rule 63 (expresion -> concatenacion .)
    MAYORIGUAL      reduce using rule 63 (expresion -> concatenacion .)
    MENORIGUAL      reduce using rule 63 (expresion -> concatenacion .)
    IGUALACION      reduce using rule 63 (expresion -> concatenacion .)
    DISTINTO        reduce using rule 63 (expresion -> concatenacion .)
    AND             reduce using rule 63 (expresion -> concatenacion .)
    OR              reduce using rule 63 (expresion -> concatenacion .)
    PUNTO           reduce using rule 63 (expresion -> concatenacion .)
    PTOYCOMA        reduce using rule 63 (expresion -> concatenacion .)
    error           reduce using rule 63 (expresion -> concatenacion .)
    ID              reduce using rule 63 (expresion -> concatenacion .)
    INCREMENTO      reduce using rule 63 (expresion -> concatenacion .)
    DECREMENTO      reduce using rule 63 (expresion -> concatenacion .)
    LET             reduce using rule 63 (expresion -> concatenacion .)
    CONSOLE         reduce using rule 63 (expresion -> concatenacion .)
    RETURN          reduce using rule 63 (expresion -> concatenacion .)
    BREAK           reduce using rule 63 (expresion -> concatenacion .)
    CONTINUE        reduce using rule 63 (expresion -> concatenacion .)
    IF              reduce using rule 63 (expresion -> concatenacion .)
    WHILE           reduce using rule 63 (expresion -> concatenacion .)
    FOR             reduce using rule 63 (expresion -> concatenacion .)
    $end            reduce using rule 63 (expresion -> concatenacion .)
    LLADER          reduce using rule 63 (expresion -> concatenacion .)
    PARDER          reduce using rule 63 (expresion -> concatenacion .)


state 54

    (64) expresion -> casteo_string .

    MAS             reduce using rule 64 (expresion -> casteo_string .)
    MENOS           reduce using rule 64 (expresion -> casteo_string .)
    POR             reduce using rule 64 (expresion -> casteo_string .)
    DIVIDIDO        reduce using rule 64 (expresion -> casteo_string .)
    POTENCIA        reduce using rule 64 (expresion -> casteo_string .)
    MODULO          reduce using rule 64 (expresion -> casteo_string .)
    MAYOR           reduce using rule 64 (expresion -> casteo_string .)
    MENOR           reduce using rule 64 (expresion -> casteo_string .)
    MAYORIGUAL      reduce using rule 64 (expresion -> casteo_string .)
    MENORIGUAL      reduce using rule 64 (expresion -> casteo_string .)
    IGUALACION      reduce using rule 64 (expresion -> casteo_string .)
    DISTINTO        reduce using rule 64 (expresion -> casteo_string .)
    AND             reduce using rule 64 (expresion -> casteo_string .)
    OR              reduce using rule 64 (expresion -> casteo_string .)
    PUNTO           reduce using rule 64 (expresion -> casteo_string .)
    PTOYCOMA        reduce using rule 64 (expresion -> casteo_string .)
    error           reduce using rule 64 (expresion -> casteo_string .)
    ID              reduce using rule 64 (expresion -> casteo_string .)
    INCREMENTO      reduce using rule 64 (expresion -> casteo_string .)
    DECREMENTO      reduce using rule 64 (expresion -> casteo_string .)
    LET             reduce using rule 64 (expresion -> casteo_string .)
    CONSOLE         reduce using rule 64 (expresion -> casteo_string .)
    RETURN          reduce using rule 64 (expresion -> casteo_string .)
    BREAK           reduce using rule 64 (expresion -> casteo_string .)
    CONTINUE        reduce using rule 64 (expresion -> casteo_string .)
    IF              reduce using rule 64 (expresion -> casteo_string .)
    WHILE           reduce using rule 64 (expresion -> casteo_string .)
    FOR             reduce using rule 64 (expresion -> casteo_string .)
    $end            reduce using rule 64 (expresion -> casteo_string .)
    LLADER          reduce using rule 64 (expresion -> casteo_string .)
    PARDER          reduce using rule 64 (expresion -> casteo_string .)


state 55

    (72) casteo_string -> CAST_STRING . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 86


state 56

    (81) condicional_if -> IF PARIZQ . expresion PARDER bloque
    (82) condicional_if -> IF PARIZQ . expresion PARDER bloque ELSE bloque
    (83) condicional_if -> IF PARIZQ . expresion PARDER bloque lista_elif
    (84) condicional_if -> IF PARIZQ . expresion PARDER bloque lista_elif ELSE bloque
    (31) expresion -> . expresion MAS expresion
    (32) expresion -> . expresion MENOS expresion
    (33) expresion -> . expresion POR expresion
    (34) expresion -> . expresion DIVIDIDO expresion
    (35) expresion -> . expresion POTENCIA expresion
    (36) expresion -> . expresion MODULO expresion
    (37) expresion -> . MENOS expresion
    (38) expresion -> . PARIZQ expresion PARDER
    (39) expresion -> . expresion MAYOR expresion
    (40) expresion -> . expresion MENOR expresion
    (41) expresion -> . expresion MAYORIGUAL expresion
    (42) expresion -> . expresion MENORIGUAL expresion
    (43) expresion -> . expresion IGUALACION expresion
    (44) expresion -> . expresion DISTINTO expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . expresion OR expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . ENTERO
    (49) expresion -> . DECIMAL
    (50) expresion -> . CADENA
    (51) expresion -> . ID
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . ID INCREMENTO
    (55) expresion -> . ID DECREMENTO
    (56) expresion -> . INCREMENTO ID
    (57) expresion -> . DECREMENTO ID
    (58) expresion -> . aproximacion
    (59) expresion -> . exponencial
    (60) expresion -> . to_minusculas
    (61) expresion -> . to_mayusculas
    (62) expresion -> . separador
    (63) expresion -> . concatenacion
    (64) expresion -> . casteo_string
    (67) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (65) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (72) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 37
    PARIZQ          shift and go to state 38
    NOT             shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    CADENA          shift and go to state 42
    ID              shift and go to state 43
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    INCREMENTO      shift and go to state 46
    DECREMENTO      shift and go to state 47
    CAST_STRING     shift and go to state 55

    expresion                      shift and go to state 87
    aproximacion                   shift and go to state 48
    exponencial                    shift and go to state 49
    to_minusculas                  shift and go to state 50
    to_mayusculas                  shift and go to state 51
    separador                      shift and go to state 52
    concatenacion                  shift and go to state 53
    casteo_string                  shift and go to state 54

state 57

    (88) ciclo_while -> WHILE PARIZQ . expresion PARDER bloque
    (31) expresion -> . expresion MAS expresion
    (32) expresion -> . expresion MENOS expresion
    (33) expresion -> . expresion POR expresion
    (34) expresion -> . expresion DIVIDIDO expresion
    (35) expresion -> . expresion POTENCIA expresion
    (36) expresion -> . expresion MODULO expresion
    (37) expresion -> . MENOS expresion
    (38) expresion -> . PARIZQ expresion PARDER
    (39) expresion -> . expresion MAYOR expresion
    (40) expresion -> . expresion MENOR expresion
    (41) expresion -> . expresion MAYORIGUAL expresion
    (42) expresion -> . expresion MENORIGUAL expresion
    (43) expresion -> . expresion IGUALACION expresion
    (44) expresion -> . expresion DISTINTO expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . expresion OR expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . ENTERO
    (49) expresion -> . DECIMAL
    (50) expresion -> . CADENA
    (51) expresion -> . ID
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . ID INCREMENTO
    (55) expresion -> . ID DECREMENTO
    (56) expresion -> . INCREMENTO ID
    (57) expresion -> . DECREMENTO ID
    (58) expresion -> . aproximacion
    (59) expresion -> . exponencial
    (60) expresion -> . to_minusculas
    (61) expresion -> . to_mayusculas
    (62) expresion -> . separador
    (63) expresion -> . concatenacion
    (64) expresion -> . casteo_string
    (67) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (65) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (72) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 37
    PARIZQ          shift and go to state 38
    NOT             shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    CADENA          shift and go to state 42
    ID              shift and go to state 43
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    INCREMENTO      shift and go to state 46
    DECREMENTO      shift and go to state 47
    CAST_STRING     shift and go to state 55

    expresion                      shift and go to state 88
    aproximacion                   shift and go to state 48
    exponencial                    shift and go to state 49
    to_minusculas                  shift and go to state 50
    to_mayusculas                  shift and go to state 51
    separador                      shift and go to state 52
    concatenacion                  shift and go to state 53
    casteo_string                  shift and go to state 54

state 58

    (89) ciclo_for -> FOR PARIZQ . declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (90) ciclo_for -> FOR PARIZQ . asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (91) ciclo_for -> FOR PARIZQ . declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (92) ciclo_for -> FOR PARIZQ . asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (93) ciclo_for_of -> FOR PARIZQ . LET ID OF expresion PARDER bloque
    (21) declaracion -> . LET ID DOSPUNTOS tipo IGUAL expresion
    (22) declaracion -> . LET ID IGUAL expresion
    (23) declaracion -> . LET ID DOSPUNTOS tipo
    (24) declaracion -> . LET ID
    (25) asignacion -> . ID IGUAL expresion

    LET             shift and go to state 91
    ID              shift and go to state 92

    declaracion                    shift and go to state 89
    asignacion                     shift and go to state 90

state 59

    (25) asignacion -> ID IGUAL expresion .
    (31) expresion -> expresion . MAS expresion
    (32) expresion -> expresion . MENOS expresion
    (33) expresion -> expresion . POR expresion
    (34) expresion -> expresion . DIVIDIDO expresion
    (35) expresion -> expresion . POTENCIA expresion
    (36) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . MAYOR expresion
    (40) expresion -> expresion . MENOR expresion
    (41) expresion -> expresion . MAYORIGUAL expresion
    (42) expresion -> expresion . MENORIGUAL expresion
    (43) expresion -> expresion . IGUALACION expresion
    (44) expresion -> expresion . DISTINTO expresion
    (45) expresion -> expresion . AND expresion
    (46) expresion -> expresion . OR expresion
    (65) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PTOYCOMA        reduce using rule 25 (asignacion -> ID IGUAL expresion .)
    error           reduce using rule 25 (asignacion -> ID IGUAL expresion .)
    ID              reduce using rule 25 (asignacion -> ID IGUAL expresion .)
    INCREMENTO      reduce using rule 25 (asignacion -> ID IGUAL expresion .)
    DECREMENTO      reduce using rule 25 (asignacion -> ID IGUAL expresion .)
    LET             reduce using rule 25 (asignacion -> ID IGUAL expresion .)
    CONSOLE         reduce using rule 25 (asignacion -> ID IGUAL expresion .)
    RETURN          reduce using rule 25 (asignacion -> ID IGUAL expresion .)
    BREAK           reduce using rule 25 (asignacion -> ID IGUAL expresion .)
    CONTINUE        reduce using rule 25 (asignacion -> ID IGUAL expresion .)
    IF              reduce using rule 25 (asignacion -> ID IGUAL expresion .)
    WHILE           reduce using rule 25 (asignacion -> ID IGUAL expresion .)
    FOR             reduce using rule 25 (asignacion -> ID IGUAL expresion .)
    $end            reduce using rule 25 (asignacion -> ID IGUAL expresion .)
    LLADER          reduce using rule 25 (asignacion -> ID IGUAL expresion .)
    PARDER          reduce using rule 25 (asignacion -> ID IGUAL expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALACION      shift and go to state 73
    DISTINTO        shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76
    PUNTO           shift and go to state 77


state 60

    (21) declaracion -> LET ID DOSPUNTOS . tipo IGUAL expresion
    (23) declaracion -> LET ID DOSPUNTOS . tipo
    (73) tipo -> . NUMBER
    (74) tipo -> . STRING
    (75) tipo -> . BOOLEAN
    (76) tipo -> . ANY

    NUMBER          shift and go to state 94
    STRING          shift and go to state 95
    BOOLEAN         shift and go to state 96
    ANY             shift and go to state 97

    tipo                           shift and go to state 93

state 61

    (22) declaracion -> LET ID IGUAL . expresion
    (31) expresion -> . expresion MAS expresion
    (32) expresion -> . expresion MENOS expresion
    (33) expresion -> . expresion POR expresion
    (34) expresion -> . expresion DIVIDIDO expresion
    (35) expresion -> . expresion POTENCIA expresion
    (36) expresion -> . expresion MODULO expresion
    (37) expresion -> . MENOS expresion
    (38) expresion -> . PARIZQ expresion PARDER
    (39) expresion -> . expresion MAYOR expresion
    (40) expresion -> . expresion MENOR expresion
    (41) expresion -> . expresion MAYORIGUAL expresion
    (42) expresion -> . expresion MENORIGUAL expresion
    (43) expresion -> . expresion IGUALACION expresion
    (44) expresion -> . expresion DISTINTO expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . expresion OR expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . ENTERO
    (49) expresion -> . DECIMAL
    (50) expresion -> . CADENA
    (51) expresion -> . ID
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . ID INCREMENTO
    (55) expresion -> . ID DECREMENTO
    (56) expresion -> . INCREMENTO ID
    (57) expresion -> . DECREMENTO ID
    (58) expresion -> . aproximacion
    (59) expresion -> . exponencial
    (60) expresion -> . to_minusculas
    (61) expresion -> . to_mayusculas
    (62) expresion -> . separador
    (63) expresion -> . concatenacion
    (64) expresion -> . casteo_string
    (67) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (65) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (72) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 37
    PARIZQ          shift and go to state 38
    NOT             shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    CADENA          shift and go to state 42
    ID              shift and go to state 43
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    INCREMENTO      shift and go to state 46
    DECREMENTO      shift and go to state 47
    CAST_STRING     shift and go to state 55

    expresion                      shift and go to state 98
    aproximacion                   shift and go to state 48
    exponencial                    shift and go to state 49
    to_minusculas                  shift and go to state 50
    to_mayusculas                  shift and go to state 51
    separador                      shift and go to state 52
    concatenacion                  shift and go to state 53
    casteo_string                  shift and go to state 54

state 62

    (30) impresion -> CONSOLE PUNTO LOG . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 99


state 63

    (31) expresion -> expresion MAS . expresion
    (31) expresion -> . expresion MAS expresion
    (32) expresion -> . expresion MENOS expresion
    (33) expresion -> . expresion POR expresion
    (34) expresion -> . expresion DIVIDIDO expresion
    (35) expresion -> . expresion POTENCIA expresion
    (36) expresion -> . expresion MODULO expresion
    (37) expresion -> . MENOS expresion
    (38) expresion -> . PARIZQ expresion PARDER
    (39) expresion -> . expresion MAYOR expresion
    (40) expresion -> . expresion MENOR expresion
    (41) expresion -> . expresion MAYORIGUAL expresion
    (42) expresion -> . expresion MENORIGUAL expresion
    (43) expresion -> . expresion IGUALACION expresion
    (44) expresion -> . expresion DISTINTO expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . expresion OR expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . ENTERO
    (49) expresion -> . DECIMAL
    (50) expresion -> . CADENA
    (51) expresion -> . ID
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . ID INCREMENTO
    (55) expresion -> . ID DECREMENTO
    (56) expresion -> . INCREMENTO ID
    (57) expresion -> . DECREMENTO ID
    (58) expresion -> . aproximacion
    (59) expresion -> . exponencial
    (60) expresion -> . to_minusculas
    (61) expresion -> . to_mayusculas
    (62) expresion -> . separador
    (63) expresion -> . concatenacion
    (64) expresion -> . casteo_string
    (67) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (65) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (72) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 37
    PARIZQ          shift and go to state 38
    NOT             shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    CADENA          shift and go to state 42
    ID              shift and go to state 43
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    INCREMENTO      shift and go to state 46
    DECREMENTO      shift and go to state 47
    CAST_STRING     shift and go to state 55

    expresion                      shift and go to state 100
    aproximacion                   shift and go to state 48
    exponencial                    shift and go to state 49
    to_minusculas                  shift and go to state 50
    to_mayusculas                  shift and go to state 51
    separador                      shift and go to state 52
    concatenacion                  shift and go to state 53
    casteo_string                  shift and go to state 54

state 64

    (32) expresion -> expresion MENOS . expresion
    (31) expresion -> . expresion MAS expresion
    (32) expresion -> . expresion MENOS expresion
    (33) expresion -> . expresion POR expresion
    (34) expresion -> . expresion DIVIDIDO expresion
    (35) expresion -> . expresion POTENCIA expresion
    (36) expresion -> . expresion MODULO expresion
    (37) expresion -> . MENOS expresion
    (38) expresion -> . PARIZQ expresion PARDER
    (39) expresion -> . expresion MAYOR expresion
    (40) expresion -> . expresion MENOR expresion
    (41) expresion -> . expresion MAYORIGUAL expresion
    (42) expresion -> . expresion MENORIGUAL expresion
    (43) expresion -> . expresion IGUALACION expresion
    (44) expresion -> . expresion DISTINTO expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . expresion OR expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . ENTERO
    (49) expresion -> . DECIMAL
    (50) expresion -> . CADENA
    (51) expresion -> . ID
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . ID INCREMENTO
    (55) expresion -> . ID DECREMENTO
    (56) expresion -> . INCREMENTO ID
    (57) expresion -> . DECREMENTO ID
    (58) expresion -> . aproximacion
    (59) expresion -> . exponencial
    (60) expresion -> . to_minusculas
    (61) expresion -> . to_mayusculas
    (62) expresion -> . separador
    (63) expresion -> . concatenacion
    (64) expresion -> . casteo_string
    (67) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (65) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (72) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 37
    PARIZQ          shift and go to state 38
    NOT             shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    CADENA          shift and go to state 42
    ID              shift and go to state 43
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    INCREMENTO      shift and go to state 46
    DECREMENTO      shift and go to state 47
    CAST_STRING     shift and go to state 55

    expresion                      shift and go to state 101
    aproximacion                   shift and go to state 48
    exponencial                    shift and go to state 49
    to_minusculas                  shift and go to state 50
    to_mayusculas                  shift and go to state 51
    separador                      shift and go to state 52
    concatenacion                  shift and go to state 53
    casteo_string                  shift and go to state 54

state 65

    (33) expresion -> expresion POR . expresion
    (31) expresion -> . expresion MAS expresion
    (32) expresion -> . expresion MENOS expresion
    (33) expresion -> . expresion POR expresion
    (34) expresion -> . expresion DIVIDIDO expresion
    (35) expresion -> . expresion POTENCIA expresion
    (36) expresion -> . expresion MODULO expresion
    (37) expresion -> . MENOS expresion
    (38) expresion -> . PARIZQ expresion PARDER
    (39) expresion -> . expresion MAYOR expresion
    (40) expresion -> . expresion MENOR expresion
    (41) expresion -> . expresion MAYORIGUAL expresion
    (42) expresion -> . expresion MENORIGUAL expresion
    (43) expresion -> . expresion IGUALACION expresion
    (44) expresion -> . expresion DISTINTO expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . expresion OR expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . ENTERO
    (49) expresion -> . DECIMAL
    (50) expresion -> . CADENA
    (51) expresion -> . ID
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . ID INCREMENTO
    (55) expresion -> . ID DECREMENTO
    (56) expresion -> . INCREMENTO ID
    (57) expresion -> . DECREMENTO ID
    (58) expresion -> . aproximacion
    (59) expresion -> . exponencial
    (60) expresion -> . to_minusculas
    (61) expresion -> . to_mayusculas
    (62) expresion -> . separador
    (63) expresion -> . concatenacion
    (64) expresion -> . casteo_string
    (67) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (65) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (72) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 37
    PARIZQ          shift and go to state 38
    NOT             shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    CADENA          shift and go to state 42
    ID              shift and go to state 43
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    INCREMENTO      shift and go to state 46
    DECREMENTO      shift and go to state 47
    CAST_STRING     shift and go to state 55

    expresion                      shift and go to state 102
    aproximacion                   shift and go to state 48
    exponencial                    shift and go to state 49
    to_minusculas                  shift and go to state 50
    to_mayusculas                  shift and go to state 51
    separador                      shift and go to state 52
    concatenacion                  shift and go to state 53
    casteo_string                  shift and go to state 54

state 66

    (34) expresion -> expresion DIVIDIDO . expresion
    (31) expresion -> . expresion MAS expresion
    (32) expresion -> . expresion MENOS expresion
    (33) expresion -> . expresion POR expresion
    (34) expresion -> . expresion DIVIDIDO expresion
    (35) expresion -> . expresion POTENCIA expresion
    (36) expresion -> . expresion MODULO expresion
    (37) expresion -> . MENOS expresion
    (38) expresion -> . PARIZQ expresion PARDER
    (39) expresion -> . expresion MAYOR expresion
    (40) expresion -> . expresion MENOR expresion
    (41) expresion -> . expresion MAYORIGUAL expresion
    (42) expresion -> . expresion MENORIGUAL expresion
    (43) expresion -> . expresion IGUALACION expresion
    (44) expresion -> . expresion DISTINTO expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . expresion OR expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . ENTERO
    (49) expresion -> . DECIMAL
    (50) expresion -> . CADENA
    (51) expresion -> . ID
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . ID INCREMENTO
    (55) expresion -> . ID DECREMENTO
    (56) expresion -> . INCREMENTO ID
    (57) expresion -> . DECREMENTO ID
    (58) expresion -> . aproximacion
    (59) expresion -> . exponencial
    (60) expresion -> . to_minusculas
    (61) expresion -> . to_mayusculas
    (62) expresion -> . separador
    (63) expresion -> . concatenacion
    (64) expresion -> . casteo_string
    (67) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (65) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (72) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 37
    PARIZQ          shift and go to state 38
    NOT             shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    CADENA          shift and go to state 42
    ID              shift and go to state 43
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    INCREMENTO      shift and go to state 46
    DECREMENTO      shift and go to state 47
    CAST_STRING     shift and go to state 55

    expresion                      shift and go to state 103
    aproximacion                   shift and go to state 48
    exponencial                    shift and go to state 49
    to_minusculas                  shift and go to state 50
    to_mayusculas                  shift and go to state 51
    separador                      shift and go to state 52
    concatenacion                  shift and go to state 53
    casteo_string                  shift and go to state 54

state 67

    (35) expresion -> expresion POTENCIA . expresion
    (31) expresion -> . expresion MAS expresion
    (32) expresion -> . expresion MENOS expresion
    (33) expresion -> . expresion POR expresion
    (34) expresion -> . expresion DIVIDIDO expresion
    (35) expresion -> . expresion POTENCIA expresion
    (36) expresion -> . expresion MODULO expresion
    (37) expresion -> . MENOS expresion
    (38) expresion -> . PARIZQ expresion PARDER
    (39) expresion -> . expresion MAYOR expresion
    (40) expresion -> . expresion MENOR expresion
    (41) expresion -> . expresion MAYORIGUAL expresion
    (42) expresion -> . expresion MENORIGUAL expresion
    (43) expresion -> . expresion IGUALACION expresion
    (44) expresion -> . expresion DISTINTO expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . expresion OR expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . ENTERO
    (49) expresion -> . DECIMAL
    (50) expresion -> . CADENA
    (51) expresion -> . ID
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . ID INCREMENTO
    (55) expresion -> . ID DECREMENTO
    (56) expresion -> . INCREMENTO ID
    (57) expresion -> . DECREMENTO ID
    (58) expresion -> . aproximacion
    (59) expresion -> . exponencial
    (60) expresion -> . to_minusculas
    (61) expresion -> . to_mayusculas
    (62) expresion -> . separador
    (63) expresion -> . concatenacion
    (64) expresion -> . casteo_string
    (67) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (65) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (72) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 37
    PARIZQ          shift and go to state 38
    NOT             shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    CADENA          shift and go to state 42
    ID              shift and go to state 43
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    INCREMENTO      shift and go to state 46
    DECREMENTO      shift and go to state 47
    CAST_STRING     shift and go to state 55

    expresion                      shift and go to state 104
    aproximacion                   shift and go to state 48
    exponencial                    shift and go to state 49
    to_minusculas                  shift and go to state 50
    to_mayusculas                  shift and go to state 51
    separador                      shift and go to state 52
    concatenacion                  shift and go to state 53
    casteo_string                  shift and go to state 54

state 68

    (36) expresion -> expresion MODULO . expresion
    (31) expresion -> . expresion MAS expresion
    (32) expresion -> . expresion MENOS expresion
    (33) expresion -> . expresion POR expresion
    (34) expresion -> . expresion DIVIDIDO expresion
    (35) expresion -> . expresion POTENCIA expresion
    (36) expresion -> . expresion MODULO expresion
    (37) expresion -> . MENOS expresion
    (38) expresion -> . PARIZQ expresion PARDER
    (39) expresion -> . expresion MAYOR expresion
    (40) expresion -> . expresion MENOR expresion
    (41) expresion -> . expresion MAYORIGUAL expresion
    (42) expresion -> . expresion MENORIGUAL expresion
    (43) expresion -> . expresion IGUALACION expresion
    (44) expresion -> . expresion DISTINTO expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . expresion OR expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . ENTERO
    (49) expresion -> . DECIMAL
    (50) expresion -> . CADENA
    (51) expresion -> . ID
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . ID INCREMENTO
    (55) expresion -> . ID DECREMENTO
    (56) expresion -> . INCREMENTO ID
    (57) expresion -> . DECREMENTO ID
    (58) expresion -> . aproximacion
    (59) expresion -> . exponencial
    (60) expresion -> . to_minusculas
    (61) expresion -> . to_mayusculas
    (62) expresion -> . separador
    (63) expresion -> . concatenacion
    (64) expresion -> . casteo_string
    (67) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (65) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (72) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 37
    PARIZQ          shift and go to state 38
    NOT             shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    CADENA          shift and go to state 42
    ID              shift and go to state 43
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    INCREMENTO      shift and go to state 46
    DECREMENTO      shift and go to state 47
    CAST_STRING     shift and go to state 55

    expresion                      shift and go to state 105
    aproximacion                   shift and go to state 48
    exponencial                    shift and go to state 49
    to_minusculas                  shift and go to state 50
    to_mayusculas                  shift and go to state 51
    separador                      shift and go to state 52
    concatenacion                  shift and go to state 53
    casteo_string                  shift and go to state 54

state 69

    (39) expresion -> expresion MAYOR . expresion
    (31) expresion -> . expresion MAS expresion
    (32) expresion -> . expresion MENOS expresion
    (33) expresion -> . expresion POR expresion
    (34) expresion -> . expresion DIVIDIDO expresion
    (35) expresion -> . expresion POTENCIA expresion
    (36) expresion -> . expresion MODULO expresion
    (37) expresion -> . MENOS expresion
    (38) expresion -> . PARIZQ expresion PARDER
    (39) expresion -> . expresion MAYOR expresion
    (40) expresion -> . expresion MENOR expresion
    (41) expresion -> . expresion MAYORIGUAL expresion
    (42) expresion -> . expresion MENORIGUAL expresion
    (43) expresion -> . expresion IGUALACION expresion
    (44) expresion -> . expresion DISTINTO expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . expresion OR expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . ENTERO
    (49) expresion -> . DECIMAL
    (50) expresion -> . CADENA
    (51) expresion -> . ID
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . ID INCREMENTO
    (55) expresion -> . ID DECREMENTO
    (56) expresion -> . INCREMENTO ID
    (57) expresion -> . DECREMENTO ID
    (58) expresion -> . aproximacion
    (59) expresion -> . exponencial
    (60) expresion -> . to_minusculas
    (61) expresion -> . to_mayusculas
    (62) expresion -> . separador
    (63) expresion -> . concatenacion
    (64) expresion -> . casteo_string
    (67) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (65) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (72) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 37
    PARIZQ          shift and go to state 38
    NOT             shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    CADENA          shift and go to state 42
    ID              shift and go to state 43
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    INCREMENTO      shift and go to state 46
    DECREMENTO      shift and go to state 47
    CAST_STRING     shift and go to state 55

    expresion                      shift and go to state 106
    aproximacion                   shift and go to state 48
    exponencial                    shift and go to state 49
    to_minusculas                  shift and go to state 50
    to_mayusculas                  shift and go to state 51
    separador                      shift and go to state 52
    concatenacion                  shift and go to state 53
    casteo_string                  shift and go to state 54

state 70

    (40) expresion -> expresion MENOR . expresion
    (31) expresion -> . expresion MAS expresion
    (32) expresion -> . expresion MENOS expresion
    (33) expresion -> . expresion POR expresion
    (34) expresion -> . expresion DIVIDIDO expresion
    (35) expresion -> . expresion POTENCIA expresion
    (36) expresion -> . expresion MODULO expresion
    (37) expresion -> . MENOS expresion
    (38) expresion -> . PARIZQ expresion PARDER
    (39) expresion -> . expresion MAYOR expresion
    (40) expresion -> . expresion MENOR expresion
    (41) expresion -> . expresion MAYORIGUAL expresion
    (42) expresion -> . expresion MENORIGUAL expresion
    (43) expresion -> . expresion IGUALACION expresion
    (44) expresion -> . expresion DISTINTO expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . expresion OR expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . ENTERO
    (49) expresion -> . DECIMAL
    (50) expresion -> . CADENA
    (51) expresion -> . ID
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . ID INCREMENTO
    (55) expresion -> . ID DECREMENTO
    (56) expresion -> . INCREMENTO ID
    (57) expresion -> . DECREMENTO ID
    (58) expresion -> . aproximacion
    (59) expresion -> . exponencial
    (60) expresion -> . to_minusculas
    (61) expresion -> . to_mayusculas
    (62) expresion -> . separador
    (63) expresion -> . concatenacion
    (64) expresion -> . casteo_string
    (67) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (65) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (72) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 37
    PARIZQ          shift and go to state 38
    NOT             shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    CADENA          shift and go to state 42
    ID              shift and go to state 43
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    INCREMENTO      shift and go to state 46
    DECREMENTO      shift and go to state 47
    CAST_STRING     shift and go to state 55

    expresion                      shift and go to state 107
    aproximacion                   shift and go to state 48
    exponencial                    shift and go to state 49
    to_minusculas                  shift and go to state 50
    to_mayusculas                  shift and go to state 51
    separador                      shift and go to state 52
    concatenacion                  shift and go to state 53
    casteo_string                  shift and go to state 54

state 71

    (41) expresion -> expresion MAYORIGUAL . expresion
    (31) expresion -> . expresion MAS expresion
    (32) expresion -> . expresion MENOS expresion
    (33) expresion -> . expresion POR expresion
    (34) expresion -> . expresion DIVIDIDO expresion
    (35) expresion -> . expresion POTENCIA expresion
    (36) expresion -> . expresion MODULO expresion
    (37) expresion -> . MENOS expresion
    (38) expresion -> . PARIZQ expresion PARDER
    (39) expresion -> . expresion MAYOR expresion
    (40) expresion -> . expresion MENOR expresion
    (41) expresion -> . expresion MAYORIGUAL expresion
    (42) expresion -> . expresion MENORIGUAL expresion
    (43) expresion -> . expresion IGUALACION expresion
    (44) expresion -> . expresion DISTINTO expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . expresion OR expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . ENTERO
    (49) expresion -> . DECIMAL
    (50) expresion -> . CADENA
    (51) expresion -> . ID
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . ID INCREMENTO
    (55) expresion -> . ID DECREMENTO
    (56) expresion -> . INCREMENTO ID
    (57) expresion -> . DECREMENTO ID
    (58) expresion -> . aproximacion
    (59) expresion -> . exponencial
    (60) expresion -> . to_minusculas
    (61) expresion -> . to_mayusculas
    (62) expresion -> . separador
    (63) expresion -> . concatenacion
    (64) expresion -> . casteo_string
    (67) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (65) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (72) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 37
    PARIZQ          shift and go to state 38
    NOT             shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    CADENA          shift and go to state 42
    ID              shift and go to state 43
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    INCREMENTO      shift and go to state 46
    DECREMENTO      shift and go to state 47
    CAST_STRING     shift and go to state 55

    expresion                      shift and go to state 108
    aproximacion                   shift and go to state 48
    exponencial                    shift and go to state 49
    to_minusculas                  shift and go to state 50
    to_mayusculas                  shift and go to state 51
    separador                      shift and go to state 52
    concatenacion                  shift and go to state 53
    casteo_string                  shift and go to state 54

state 72

    (42) expresion -> expresion MENORIGUAL . expresion
    (31) expresion -> . expresion MAS expresion
    (32) expresion -> . expresion MENOS expresion
    (33) expresion -> . expresion POR expresion
    (34) expresion -> . expresion DIVIDIDO expresion
    (35) expresion -> . expresion POTENCIA expresion
    (36) expresion -> . expresion MODULO expresion
    (37) expresion -> . MENOS expresion
    (38) expresion -> . PARIZQ expresion PARDER
    (39) expresion -> . expresion MAYOR expresion
    (40) expresion -> . expresion MENOR expresion
    (41) expresion -> . expresion MAYORIGUAL expresion
    (42) expresion -> . expresion MENORIGUAL expresion
    (43) expresion -> . expresion IGUALACION expresion
    (44) expresion -> . expresion DISTINTO expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . expresion OR expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . ENTERO
    (49) expresion -> . DECIMAL
    (50) expresion -> . CADENA
    (51) expresion -> . ID
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . ID INCREMENTO
    (55) expresion -> . ID DECREMENTO
    (56) expresion -> . INCREMENTO ID
    (57) expresion -> . DECREMENTO ID
    (58) expresion -> . aproximacion
    (59) expresion -> . exponencial
    (60) expresion -> . to_minusculas
    (61) expresion -> . to_mayusculas
    (62) expresion -> . separador
    (63) expresion -> . concatenacion
    (64) expresion -> . casteo_string
    (67) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (65) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (72) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 37
    PARIZQ          shift and go to state 38
    NOT             shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    CADENA          shift and go to state 42
    ID              shift and go to state 43
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    INCREMENTO      shift and go to state 46
    DECREMENTO      shift and go to state 47
    CAST_STRING     shift and go to state 55

    expresion                      shift and go to state 109
    aproximacion                   shift and go to state 48
    exponencial                    shift and go to state 49
    to_minusculas                  shift and go to state 50
    to_mayusculas                  shift and go to state 51
    separador                      shift and go to state 52
    concatenacion                  shift and go to state 53
    casteo_string                  shift and go to state 54

state 73

    (43) expresion -> expresion IGUALACION . expresion
    (31) expresion -> . expresion MAS expresion
    (32) expresion -> . expresion MENOS expresion
    (33) expresion -> . expresion POR expresion
    (34) expresion -> . expresion DIVIDIDO expresion
    (35) expresion -> . expresion POTENCIA expresion
    (36) expresion -> . expresion MODULO expresion
    (37) expresion -> . MENOS expresion
    (38) expresion -> . PARIZQ expresion PARDER
    (39) expresion -> . expresion MAYOR expresion
    (40) expresion -> . expresion MENOR expresion
    (41) expresion -> . expresion MAYORIGUAL expresion
    (42) expresion -> . expresion MENORIGUAL expresion
    (43) expresion -> . expresion IGUALACION expresion
    (44) expresion -> . expresion DISTINTO expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . expresion OR expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . ENTERO
    (49) expresion -> . DECIMAL
    (50) expresion -> . CADENA
    (51) expresion -> . ID
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . ID INCREMENTO
    (55) expresion -> . ID DECREMENTO
    (56) expresion -> . INCREMENTO ID
    (57) expresion -> . DECREMENTO ID
    (58) expresion -> . aproximacion
    (59) expresion -> . exponencial
    (60) expresion -> . to_minusculas
    (61) expresion -> . to_mayusculas
    (62) expresion -> . separador
    (63) expresion -> . concatenacion
    (64) expresion -> . casteo_string
    (67) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (65) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (72) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 37
    PARIZQ          shift and go to state 38
    NOT             shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    CADENA          shift and go to state 42
    ID              shift and go to state 43
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    INCREMENTO      shift and go to state 46
    DECREMENTO      shift and go to state 47
    CAST_STRING     shift and go to state 55

    expresion                      shift and go to state 110
    aproximacion                   shift and go to state 48
    exponencial                    shift and go to state 49
    to_minusculas                  shift and go to state 50
    to_mayusculas                  shift and go to state 51
    separador                      shift and go to state 52
    concatenacion                  shift and go to state 53
    casteo_string                  shift and go to state 54

state 74

    (44) expresion -> expresion DISTINTO . expresion
    (31) expresion -> . expresion MAS expresion
    (32) expresion -> . expresion MENOS expresion
    (33) expresion -> . expresion POR expresion
    (34) expresion -> . expresion DIVIDIDO expresion
    (35) expresion -> . expresion POTENCIA expresion
    (36) expresion -> . expresion MODULO expresion
    (37) expresion -> . MENOS expresion
    (38) expresion -> . PARIZQ expresion PARDER
    (39) expresion -> . expresion MAYOR expresion
    (40) expresion -> . expresion MENOR expresion
    (41) expresion -> . expresion MAYORIGUAL expresion
    (42) expresion -> . expresion MENORIGUAL expresion
    (43) expresion -> . expresion IGUALACION expresion
    (44) expresion -> . expresion DISTINTO expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . expresion OR expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . ENTERO
    (49) expresion -> . DECIMAL
    (50) expresion -> . CADENA
    (51) expresion -> . ID
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . ID INCREMENTO
    (55) expresion -> . ID DECREMENTO
    (56) expresion -> . INCREMENTO ID
    (57) expresion -> . DECREMENTO ID
    (58) expresion -> . aproximacion
    (59) expresion -> . exponencial
    (60) expresion -> . to_minusculas
    (61) expresion -> . to_mayusculas
    (62) expresion -> . separador
    (63) expresion -> . concatenacion
    (64) expresion -> . casteo_string
    (67) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (65) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (72) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 37
    PARIZQ          shift and go to state 38
    NOT             shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    CADENA          shift and go to state 42
    ID              shift and go to state 43
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    INCREMENTO      shift and go to state 46
    DECREMENTO      shift and go to state 47
    CAST_STRING     shift and go to state 55

    expresion                      shift and go to state 111
    aproximacion                   shift and go to state 48
    exponencial                    shift and go to state 49
    to_minusculas                  shift and go to state 50
    to_mayusculas                  shift and go to state 51
    separador                      shift and go to state 52
    concatenacion                  shift and go to state 53
    casteo_string                  shift and go to state 54

state 75

    (45) expresion -> expresion AND . expresion
    (31) expresion -> . expresion MAS expresion
    (32) expresion -> . expresion MENOS expresion
    (33) expresion -> . expresion POR expresion
    (34) expresion -> . expresion DIVIDIDO expresion
    (35) expresion -> . expresion POTENCIA expresion
    (36) expresion -> . expresion MODULO expresion
    (37) expresion -> . MENOS expresion
    (38) expresion -> . PARIZQ expresion PARDER
    (39) expresion -> . expresion MAYOR expresion
    (40) expresion -> . expresion MENOR expresion
    (41) expresion -> . expresion MAYORIGUAL expresion
    (42) expresion -> . expresion MENORIGUAL expresion
    (43) expresion -> . expresion IGUALACION expresion
    (44) expresion -> . expresion DISTINTO expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . expresion OR expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . ENTERO
    (49) expresion -> . DECIMAL
    (50) expresion -> . CADENA
    (51) expresion -> . ID
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . ID INCREMENTO
    (55) expresion -> . ID DECREMENTO
    (56) expresion -> . INCREMENTO ID
    (57) expresion -> . DECREMENTO ID
    (58) expresion -> . aproximacion
    (59) expresion -> . exponencial
    (60) expresion -> . to_minusculas
    (61) expresion -> . to_mayusculas
    (62) expresion -> . separador
    (63) expresion -> . concatenacion
    (64) expresion -> . casteo_string
    (67) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (65) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (72) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 37
    PARIZQ          shift and go to state 38
    NOT             shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    CADENA          shift and go to state 42
    ID              shift and go to state 43
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    INCREMENTO      shift and go to state 46
    DECREMENTO      shift and go to state 47
    CAST_STRING     shift and go to state 55

    expresion                      shift and go to state 112
    aproximacion                   shift and go to state 48
    exponencial                    shift and go to state 49
    to_minusculas                  shift and go to state 50
    to_mayusculas                  shift and go to state 51
    separador                      shift and go to state 52
    concatenacion                  shift and go to state 53
    casteo_string                  shift and go to state 54

state 76

    (46) expresion -> expresion OR . expresion
    (31) expresion -> . expresion MAS expresion
    (32) expresion -> . expresion MENOS expresion
    (33) expresion -> . expresion POR expresion
    (34) expresion -> . expresion DIVIDIDO expresion
    (35) expresion -> . expresion POTENCIA expresion
    (36) expresion -> . expresion MODULO expresion
    (37) expresion -> . MENOS expresion
    (38) expresion -> . PARIZQ expresion PARDER
    (39) expresion -> . expresion MAYOR expresion
    (40) expresion -> . expresion MENOR expresion
    (41) expresion -> . expresion MAYORIGUAL expresion
    (42) expresion -> . expresion MENORIGUAL expresion
    (43) expresion -> . expresion IGUALACION expresion
    (44) expresion -> . expresion DISTINTO expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . expresion OR expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . ENTERO
    (49) expresion -> . DECIMAL
    (50) expresion -> . CADENA
    (51) expresion -> . ID
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . ID INCREMENTO
    (55) expresion -> . ID DECREMENTO
    (56) expresion -> . INCREMENTO ID
    (57) expresion -> . DECREMENTO ID
    (58) expresion -> . aproximacion
    (59) expresion -> . exponencial
    (60) expresion -> . to_minusculas
    (61) expresion -> . to_mayusculas
    (62) expresion -> . separador
    (63) expresion -> . concatenacion
    (64) expresion -> . casteo_string
    (67) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (65) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (72) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 37
    PARIZQ          shift and go to state 38
    NOT             shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    CADENA          shift and go to state 42
    ID              shift and go to state 43
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    INCREMENTO      shift and go to state 46
    DECREMENTO      shift and go to state 47
    CAST_STRING     shift and go to state 55

    expresion                      shift and go to state 113
    aproximacion                   shift and go to state 48
    exponencial                    shift and go to state 49
    to_minusculas                  shift and go to state 50
    to_mayusculas                  shift and go to state 51
    separador                      shift and go to state 52
    concatenacion                  shift and go to state 53
    casteo_string                  shift and go to state 54

state 77

    (65) aproximacion -> expresion PUNTO . TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> expresion PUNTO . TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> expresion PUNTO . TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> expresion PUNTO . TOUPPERCASE PARIZQ PARDER
    (70) separador -> expresion PUNTO . SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> expresion PUNTO . CONCAT PARIZQ expresion PARDER

    TOFIXED         shift and go to state 114
    TOEXPONENTIAL   shift and go to state 115
    TOLOWERCASE     shift and go to state 116
    TOUPPERCASE     shift and go to state 117
    SPLIT           shift and go to state 118
    CONCAT          shift and go to state 119


state 78

    (37) expresion -> MENOS expresion .
    (31) expresion -> expresion . MAS expresion
    (32) expresion -> expresion . MENOS expresion
    (33) expresion -> expresion . POR expresion
    (34) expresion -> expresion . DIVIDIDO expresion
    (35) expresion -> expresion . POTENCIA expresion
    (36) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . MAYOR expresion
    (40) expresion -> expresion . MENOR expresion
    (41) expresion -> expresion . MAYORIGUAL expresion
    (42) expresion -> expresion . MENORIGUAL expresion
    (43) expresion -> expresion . IGUALACION expresion
    (44) expresion -> expresion . DISTINTO expresion
    (45) expresion -> expresion . AND expresion
    (46) expresion -> expresion . OR expresion
    (65) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAS             reduce using rule 37 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 37 (expresion -> MENOS expresion .)
    POR             reduce using rule 37 (expresion -> MENOS expresion .)
    DIVIDIDO        reduce using rule 37 (expresion -> MENOS expresion .)
    POTENCIA        reduce using rule 37 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 37 (expresion -> MENOS expresion .)
    MAYOR           reduce using rule 37 (expresion -> MENOS expresion .)
    MENOR           reduce using rule 37 (expresion -> MENOS expresion .)
    MAYORIGUAL      reduce using rule 37 (expresion -> MENOS expresion .)
    MENORIGUAL      reduce using rule 37 (expresion -> MENOS expresion .)
    IGUALACION      reduce using rule 37 (expresion -> MENOS expresion .)
    DISTINTO        reduce using rule 37 (expresion -> MENOS expresion .)
    AND             reduce using rule 37 (expresion -> MENOS expresion .)
    OR              reduce using rule 37 (expresion -> MENOS expresion .)
    PUNTO           reduce using rule 37 (expresion -> MENOS expresion .)
    PTOYCOMA        reduce using rule 37 (expresion -> MENOS expresion .)
    error           reduce using rule 37 (expresion -> MENOS expresion .)
    ID              reduce using rule 37 (expresion -> MENOS expresion .)
    INCREMENTO      reduce using rule 37 (expresion -> MENOS expresion .)
    DECREMENTO      reduce using rule 37 (expresion -> MENOS expresion .)
    LET             reduce using rule 37 (expresion -> MENOS expresion .)
    CONSOLE         reduce using rule 37 (expresion -> MENOS expresion .)
    RETURN          reduce using rule 37 (expresion -> MENOS expresion .)
    BREAK           reduce using rule 37 (expresion -> MENOS expresion .)
    CONTINUE        reduce using rule 37 (expresion -> MENOS expresion .)
    IF              reduce using rule 37 (expresion -> MENOS expresion .)
    WHILE           reduce using rule 37 (expresion -> MENOS expresion .)
    FOR             reduce using rule 37 (expresion -> MENOS expresion .)
    $end            reduce using rule 37 (expresion -> MENOS expresion .)
    LLADER          reduce using rule 37 (expresion -> MENOS expresion .)
    PARDER          reduce using rule 37 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 63 ]
  ! MENOS           [ shift and go to state 64 ]
  ! POR             [ shift and go to state 65 ]
  ! DIVIDIDO        [ shift and go to state 66 ]
  ! POTENCIA        [ shift and go to state 67 ]
  ! MODULO          [ shift and go to state 68 ]
  ! MAYOR           [ shift and go to state 69 ]
  ! MENOR           [ shift and go to state 70 ]
  ! MAYORIGUAL      [ shift and go to state 71 ]
  ! MENORIGUAL      [ shift and go to state 72 ]
  ! IGUALACION      [ shift and go to state 73 ]
  ! DISTINTO        [ shift and go to state 74 ]
  ! AND             [ shift and go to state 75 ]
  ! OR              [ shift and go to state 76 ]
  ! PUNTO           [ shift and go to state 77 ]


state 79

    (38) expresion -> PARIZQ expresion . PARDER
    (31) expresion -> expresion . MAS expresion
    (32) expresion -> expresion . MENOS expresion
    (33) expresion -> expresion . POR expresion
    (34) expresion -> expresion . DIVIDIDO expresion
    (35) expresion -> expresion . POTENCIA expresion
    (36) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . MAYOR expresion
    (40) expresion -> expresion . MENOR expresion
    (41) expresion -> expresion . MAYORIGUAL expresion
    (42) expresion -> expresion . MENORIGUAL expresion
    (43) expresion -> expresion . IGUALACION expresion
    (44) expresion -> expresion . DISTINTO expresion
    (45) expresion -> expresion . AND expresion
    (46) expresion -> expresion . OR expresion
    (65) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 120
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALACION      shift and go to state 73
    DISTINTO        shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76
    PUNTO           shift and go to state 77


state 80

    (47) expresion -> NOT expresion .
    (31) expresion -> expresion . MAS expresion
    (32) expresion -> expresion . MENOS expresion
    (33) expresion -> expresion . POR expresion
    (34) expresion -> expresion . DIVIDIDO expresion
    (35) expresion -> expresion . POTENCIA expresion
    (36) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . MAYOR expresion
    (40) expresion -> expresion . MENOR expresion
    (41) expresion -> expresion . MAYORIGUAL expresion
    (42) expresion -> expresion . MENORIGUAL expresion
    (43) expresion -> expresion . IGUALACION expresion
    (44) expresion -> expresion . DISTINTO expresion
    (45) expresion -> expresion . AND expresion
    (46) expresion -> expresion . OR expresion
    (65) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    AND             reduce using rule 47 (expresion -> NOT expresion .)
    OR              reduce using rule 47 (expresion -> NOT expresion .)
    PUNTO           reduce using rule 47 (expresion -> NOT expresion .)
    PTOYCOMA        reduce using rule 47 (expresion -> NOT expresion .)
    error           reduce using rule 47 (expresion -> NOT expresion .)
    ID              reduce using rule 47 (expresion -> NOT expresion .)
    INCREMENTO      reduce using rule 47 (expresion -> NOT expresion .)
    DECREMENTO      reduce using rule 47 (expresion -> NOT expresion .)
    LET             reduce using rule 47 (expresion -> NOT expresion .)
    CONSOLE         reduce using rule 47 (expresion -> NOT expresion .)
    RETURN          reduce using rule 47 (expresion -> NOT expresion .)
    BREAK           reduce using rule 47 (expresion -> NOT expresion .)
    CONTINUE        reduce using rule 47 (expresion -> NOT expresion .)
    IF              reduce using rule 47 (expresion -> NOT expresion .)
    WHILE           reduce using rule 47 (expresion -> NOT expresion .)
    FOR             reduce using rule 47 (expresion -> NOT expresion .)
    $end            reduce using rule 47 (expresion -> NOT expresion .)
    LLADER          reduce using rule 47 (expresion -> NOT expresion .)
    PARDER          reduce using rule 47 (expresion -> NOT expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALACION      shift and go to state 73
    DISTINTO        shift and go to state 74

  ! MAS             [ reduce using rule 47 (expresion -> NOT expresion .) ]
  ! MENOS           [ reduce using rule 47 (expresion -> NOT expresion .) ]
  ! POR             [ reduce using rule 47 (expresion -> NOT expresion .) ]
  ! DIVIDIDO        [ reduce using rule 47 (expresion -> NOT expresion .) ]
  ! POTENCIA        [ reduce using rule 47 (expresion -> NOT expresion .) ]
  ! MODULO          [ reduce using rule 47 (expresion -> NOT expresion .) ]
  ! MAYOR           [ reduce using rule 47 (expresion -> NOT expresion .) ]
  ! MENOR           [ reduce using rule 47 (expresion -> NOT expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 47 (expresion -> NOT expresion .) ]
  ! MENORIGUAL      [ reduce using rule 47 (expresion -> NOT expresion .) ]
  ! IGUALACION      [ reduce using rule 47 (expresion -> NOT expresion .) ]
  ! DISTINTO        [ reduce using rule 47 (expresion -> NOT expresion .) ]
  ! AND             [ shift and go to state 75 ]
  ! OR              [ shift and go to state 76 ]
  ! PUNTO           [ shift and go to state 77 ]


state 81

    (54) expresion -> ID INCREMENTO .

    MAS             reduce using rule 54 (expresion -> ID INCREMENTO .)
    MENOS           reduce using rule 54 (expresion -> ID INCREMENTO .)
    POR             reduce using rule 54 (expresion -> ID INCREMENTO .)
    DIVIDIDO        reduce using rule 54 (expresion -> ID INCREMENTO .)
    POTENCIA        reduce using rule 54 (expresion -> ID INCREMENTO .)
    MODULO          reduce using rule 54 (expresion -> ID INCREMENTO .)
    MAYOR           reduce using rule 54 (expresion -> ID INCREMENTO .)
    MENOR           reduce using rule 54 (expresion -> ID INCREMENTO .)
    MAYORIGUAL      reduce using rule 54 (expresion -> ID INCREMENTO .)
    MENORIGUAL      reduce using rule 54 (expresion -> ID INCREMENTO .)
    IGUALACION      reduce using rule 54 (expresion -> ID INCREMENTO .)
    DISTINTO        reduce using rule 54 (expresion -> ID INCREMENTO .)
    AND             reduce using rule 54 (expresion -> ID INCREMENTO .)
    OR              reduce using rule 54 (expresion -> ID INCREMENTO .)
    PUNTO           reduce using rule 54 (expresion -> ID INCREMENTO .)
    PTOYCOMA        reduce using rule 54 (expresion -> ID INCREMENTO .)
    error           reduce using rule 54 (expresion -> ID INCREMENTO .)
    ID              reduce using rule 54 (expresion -> ID INCREMENTO .)
    INCREMENTO      reduce using rule 54 (expresion -> ID INCREMENTO .)
    DECREMENTO      reduce using rule 54 (expresion -> ID INCREMENTO .)
    LET             reduce using rule 54 (expresion -> ID INCREMENTO .)
    CONSOLE         reduce using rule 54 (expresion -> ID INCREMENTO .)
    RETURN          reduce using rule 54 (expresion -> ID INCREMENTO .)
    BREAK           reduce using rule 54 (expresion -> ID INCREMENTO .)
    CONTINUE        reduce using rule 54 (expresion -> ID INCREMENTO .)
    IF              reduce using rule 54 (expresion -> ID INCREMENTO .)
    WHILE           reduce using rule 54 (expresion -> ID INCREMENTO .)
    FOR             reduce using rule 54 (expresion -> ID INCREMENTO .)
    $end            reduce using rule 54 (expresion -> ID INCREMENTO .)
    LLADER          reduce using rule 54 (expresion -> ID INCREMENTO .)
    PARDER          reduce using rule 54 (expresion -> ID INCREMENTO .)


state 82

    (55) expresion -> ID DECREMENTO .

    MAS             reduce using rule 55 (expresion -> ID DECREMENTO .)
    MENOS           reduce using rule 55 (expresion -> ID DECREMENTO .)
    POR             reduce using rule 55 (expresion -> ID DECREMENTO .)
    DIVIDIDO        reduce using rule 55 (expresion -> ID DECREMENTO .)
    POTENCIA        reduce using rule 55 (expresion -> ID DECREMENTO .)
    MODULO          reduce using rule 55 (expresion -> ID DECREMENTO .)
    MAYOR           reduce using rule 55 (expresion -> ID DECREMENTO .)
    MENOR           reduce using rule 55 (expresion -> ID DECREMENTO .)
    MAYORIGUAL      reduce using rule 55 (expresion -> ID DECREMENTO .)
    MENORIGUAL      reduce using rule 55 (expresion -> ID DECREMENTO .)
    IGUALACION      reduce using rule 55 (expresion -> ID DECREMENTO .)
    DISTINTO        reduce using rule 55 (expresion -> ID DECREMENTO .)
    AND             reduce using rule 55 (expresion -> ID DECREMENTO .)
    OR              reduce using rule 55 (expresion -> ID DECREMENTO .)
    PUNTO           reduce using rule 55 (expresion -> ID DECREMENTO .)
    PTOYCOMA        reduce using rule 55 (expresion -> ID DECREMENTO .)
    error           reduce using rule 55 (expresion -> ID DECREMENTO .)
    ID              reduce using rule 55 (expresion -> ID DECREMENTO .)
    INCREMENTO      reduce using rule 55 (expresion -> ID DECREMENTO .)
    DECREMENTO      reduce using rule 55 (expresion -> ID DECREMENTO .)
    LET             reduce using rule 55 (expresion -> ID DECREMENTO .)
    CONSOLE         reduce using rule 55 (expresion -> ID DECREMENTO .)
    RETURN          reduce using rule 55 (expresion -> ID DECREMENTO .)
    BREAK           reduce using rule 55 (expresion -> ID DECREMENTO .)
    CONTINUE        reduce using rule 55 (expresion -> ID DECREMENTO .)
    IF              reduce using rule 55 (expresion -> ID DECREMENTO .)
    WHILE           reduce using rule 55 (expresion -> ID DECREMENTO .)
    FOR             reduce using rule 55 (expresion -> ID DECREMENTO .)
    $end            reduce using rule 55 (expresion -> ID DECREMENTO .)
    LLADER          reduce using rule 55 (expresion -> ID DECREMENTO .)
    PARDER          reduce using rule 55 (expresion -> ID DECREMENTO .)


state 83

    (67) expresion -> ID PUNTO . TOSTRING PARIZQ PARDER

    TOSTRING        shift and go to state 121


state 84

    (56) expresion -> INCREMENTO ID .

    MAS             reduce using rule 56 (expresion -> INCREMENTO ID .)
    MENOS           reduce using rule 56 (expresion -> INCREMENTO ID .)
    POR             reduce using rule 56 (expresion -> INCREMENTO ID .)
    DIVIDIDO        reduce using rule 56 (expresion -> INCREMENTO ID .)
    POTENCIA        reduce using rule 56 (expresion -> INCREMENTO ID .)
    MODULO          reduce using rule 56 (expresion -> INCREMENTO ID .)
    MAYOR           reduce using rule 56 (expresion -> INCREMENTO ID .)
    MENOR           reduce using rule 56 (expresion -> INCREMENTO ID .)
    MAYORIGUAL      reduce using rule 56 (expresion -> INCREMENTO ID .)
    MENORIGUAL      reduce using rule 56 (expresion -> INCREMENTO ID .)
    IGUALACION      reduce using rule 56 (expresion -> INCREMENTO ID .)
    DISTINTO        reduce using rule 56 (expresion -> INCREMENTO ID .)
    AND             reduce using rule 56 (expresion -> INCREMENTO ID .)
    OR              reduce using rule 56 (expresion -> INCREMENTO ID .)
    PUNTO           reduce using rule 56 (expresion -> INCREMENTO ID .)
    PTOYCOMA        reduce using rule 56 (expresion -> INCREMENTO ID .)
    error           reduce using rule 56 (expresion -> INCREMENTO ID .)
    ID              reduce using rule 56 (expresion -> INCREMENTO ID .)
    INCREMENTO      reduce using rule 56 (expresion -> INCREMENTO ID .)
    DECREMENTO      reduce using rule 56 (expresion -> INCREMENTO ID .)
    LET             reduce using rule 56 (expresion -> INCREMENTO ID .)
    CONSOLE         reduce using rule 56 (expresion -> INCREMENTO ID .)
    RETURN          reduce using rule 56 (expresion -> INCREMENTO ID .)
    BREAK           reduce using rule 56 (expresion -> INCREMENTO ID .)
    CONTINUE        reduce using rule 56 (expresion -> INCREMENTO ID .)
    IF              reduce using rule 56 (expresion -> INCREMENTO ID .)
    WHILE           reduce using rule 56 (expresion -> INCREMENTO ID .)
    FOR             reduce using rule 56 (expresion -> INCREMENTO ID .)
    $end            reduce using rule 56 (expresion -> INCREMENTO ID .)
    LLADER          reduce using rule 56 (expresion -> INCREMENTO ID .)
    PARDER          reduce using rule 56 (expresion -> INCREMENTO ID .)


state 85

    (57) expresion -> DECREMENTO ID .

    MAS             reduce using rule 57 (expresion -> DECREMENTO ID .)
    MENOS           reduce using rule 57 (expresion -> DECREMENTO ID .)
    POR             reduce using rule 57 (expresion -> DECREMENTO ID .)
    DIVIDIDO        reduce using rule 57 (expresion -> DECREMENTO ID .)
    POTENCIA        reduce using rule 57 (expresion -> DECREMENTO ID .)
    MODULO          reduce using rule 57 (expresion -> DECREMENTO ID .)
    MAYOR           reduce using rule 57 (expresion -> DECREMENTO ID .)
    MENOR           reduce using rule 57 (expresion -> DECREMENTO ID .)
    MAYORIGUAL      reduce using rule 57 (expresion -> DECREMENTO ID .)
    MENORIGUAL      reduce using rule 57 (expresion -> DECREMENTO ID .)
    IGUALACION      reduce using rule 57 (expresion -> DECREMENTO ID .)
    DISTINTO        reduce using rule 57 (expresion -> DECREMENTO ID .)
    AND             reduce using rule 57 (expresion -> DECREMENTO ID .)
    OR              reduce using rule 57 (expresion -> DECREMENTO ID .)
    PUNTO           reduce using rule 57 (expresion -> DECREMENTO ID .)
    PTOYCOMA        reduce using rule 57 (expresion -> DECREMENTO ID .)
    error           reduce using rule 57 (expresion -> DECREMENTO ID .)
    ID              reduce using rule 57 (expresion -> DECREMENTO ID .)
    INCREMENTO      reduce using rule 57 (expresion -> DECREMENTO ID .)
    DECREMENTO      reduce using rule 57 (expresion -> DECREMENTO ID .)
    LET             reduce using rule 57 (expresion -> DECREMENTO ID .)
    CONSOLE         reduce using rule 57 (expresion -> DECREMENTO ID .)
    RETURN          reduce using rule 57 (expresion -> DECREMENTO ID .)
    BREAK           reduce using rule 57 (expresion -> DECREMENTO ID .)
    CONTINUE        reduce using rule 57 (expresion -> DECREMENTO ID .)
    IF              reduce using rule 57 (expresion -> DECREMENTO ID .)
    WHILE           reduce using rule 57 (expresion -> DECREMENTO ID .)
    FOR             reduce using rule 57 (expresion -> DECREMENTO ID .)
    $end            reduce using rule 57 (expresion -> DECREMENTO ID .)
    LLADER          reduce using rule 57 (expresion -> DECREMENTO ID .)
    PARDER          reduce using rule 57 (expresion -> DECREMENTO ID .)


state 86

    (72) casteo_string -> CAST_STRING PARIZQ . expresion PARDER
    (31) expresion -> . expresion MAS expresion
    (32) expresion -> . expresion MENOS expresion
    (33) expresion -> . expresion POR expresion
    (34) expresion -> . expresion DIVIDIDO expresion
    (35) expresion -> . expresion POTENCIA expresion
    (36) expresion -> . expresion MODULO expresion
    (37) expresion -> . MENOS expresion
    (38) expresion -> . PARIZQ expresion PARDER
    (39) expresion -> . expresion MAYOR expresion
    (40) expresion -> . expresion MENOR expresion
    (41) expresion -> . expresion MAYORIGUAL expresion
    (42) expresion -> . expresion MENORIGUAL expresion
    (43) expresion -> . expresion IGUALACION expresion
    (44) expresion -> . expresion DISTINTO expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . expresion OR expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . ENTERO
    (49) expresion -> . DECIMAL
    (50) expresion -> . CADENA
    (51) expresion -> . ID
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . ID INCREMENTO
    (55) expresion -> . ID DECREMENTO
    (56) expresion -> . INCREMENTO ID
    (57) expresion -> . DECREMENTO ID
    (58) expresion -> . aproximacion
    (59) expresion -> . exponencial
    (60) expresion -> . to_minusculas
    (61) expresion -> . to_mayusculas
    (62) expresion -> . separador
    (63) expresion -> . concatenacion
    (64) expresion -> . casteo_string
    (67) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (65) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (72) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 37
    PARIZQ          shift and go to state 38
    NOT             shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    CADENA          shift and go to state 42
    ID              shift and go to state 43
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    INCREMENTO      shift and go to state 46
    DECREMENTO      shift and go to state 47
    CAST_STRING     shift and go to state 55

    expresion                      shift and go to state 122
    aproximacion                   shift and go to state 48
    exponencial                    shift and go to state 49
    to_minusculas                  shift and go to state 50
    to_mayusculas                  shift and go to state 51
    separador                      shift and go to state 52
    concatenacion                  shift and go to state 53
    casteo_string                  shift and go to state 54

state 87

    (81) condicional_if -> IF PARIZQ expresion . PARDER bloque
    (82) condicional_if -> IF PARIZQ expresion . PARDER bloque ELSE bloque
    (83) condicional_if -> IF PARIZQ expresion . PARDER bloque lista_elif
    (84) condicional_if -> IF PARIZQ expresion . PARDER bloque lista_elif ELSE bloque
    (31) expresion -> expresion . MAS expresion
    (32) expresion -> expresion . MENOS expresion
    (33) expresion -> expresion . POR expresion
    (34) expresion -> expresion . DIVIDIDO expresion
    (35) expresion -> expresion . POTENCIA expresion
    (36) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . MAYOR expresion
    (40) expresion -> expresion . MENOR expresion
    (41) expresion -> expresion . MAYORIGUAL expresion
    (42) expresion -> expresion . MENORIGUAL expresion
    (43) expresion -> expresion . IGUALACION expresion
    (44) expresion -> expresion . DISTINTO expresion
    (45) expresion -> expresion . AND expresion
    (46) expresion -> expresion . OR expresion
    (65) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 123
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALACION      shift and go to state 73
    DISTINTO        shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76
    PUNTO           shift and go to state 77


state 88

    (88) ciclo_while -> WHILE PARIZQ expresion . PARDER bloque
    (31) expresion -> expresion . MAS expresion
    (32) expresion -> expresion . MENOS expresion
    (33) expresion -> expresion . POR expresion
    (34) expresion -> expresion . DIVIDIDO expresion
    (35) expresion -> expresion . POTENCIA expresion
    (36) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . MAYOR expresion
    (40) expresion -> expresion . MENOR expresion
    (41) expresion -> expresion . MAYORIGUAL expresion
    (42) expresion -> expresion . MENORIGUAL expresion
    (43) expresion -> expresion . IGUALACION expresion
    (44) expresion -> expresion . DISTINTO expresion
    (45) expresion -> expresion . AND expresion
    (46) expresion -> expresion . OR expresion
    (65) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 124
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALACION      shift and go to state 73
    DISTINTO        shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76
    PUNTO           shift and go to state 77


state 89

    (89) ciclo_for -> FOR PARIZQ declaracion . PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (91) ciclo_for -> FOR PARIZQ declaracion . PTOYCOMA expresion PTOYCOMA expresion PARDER bloque

    PTOYCOMA        shift and go to state 125


state 90

    (90) ciclo_for -> FOR PARIZQ asignacion . PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (92) ciclo_for -> FOR PARIZQ asignacion . PTOYCOMA expresion PTOYCOMA expresion PARDER bloque

    PTOYCOMA        shift and go to state 126


state 91

    (93) ciclo_for_of -> FOR PARIZQ LET . ID OF expresion PARDER bloque
    (21) declaracion -> LET . ID DOSPUNTOS tipo IGUAL expresion
    (22) declaracion -> LET . ID IGUAL expresion
    (23) declaracion -> LET . ID DOSPUNTOS tipo
    (24) declaracion -> LET . ID

    ID              shift and go to state 127


state 92

    (25) asignacion -> ID . IGUAL expresion

    IGUAL           shift and go to state 31


state 93

    (21) declaracion -> LET ID DOSPUNTOS tipo . IGUAL expresion
    (23) declaracion -> LET ID DOSPUNTOS tipo .

    IGUAL           shift and go to state 128
    PTOYCOMA        reduce using rule 23 (declaracion -> LET ID DOSPUNTOS tipo .)
    error           reduce using rule 23 (declaracion -> LET ID DOSPUNTOS tipo .)
    ID              reduce using rule 23 (declaracion -> LET ID DOSPUNTOS tipo .)
    INCREMENTO      reduce using rule 23 (declaracion -> LET ID DOSPUNTOS tipo .)
    DECREMENTO      reduce using rule 23 (declaracion -> LET ID DOSPUNTOS tipo .)
    LET             reduce using rule 23 (declaracion -> LET ID DOSPUNTOS tipo .)
    CONSOLE         reduce using rule 23 (declaracion -> LET ID DOSPUNTOS tipo .)
    RETURN          reduce using rule 23 (declaracion -> LET ID DOSPUNTOS tipo .)
    BREAK           reduce using rule 23 (declaracion -> LET ID DOSPUNTOS tipo .)
    CONTINUE        reduce using rule 23 (declaracion -> LET ID DOSPUNTOS tipo .)
    IF              reduce using rule 23 (declaracion -> LET ID DOSPUNTOS tipo .)
    WHILE           reduce using rule 23 (declaracion -> LET ID DOSPUNTOS tipo .)
    FOR             reduce using rule 23 (declaracion -> LET ID DOSPUNTOS tipo .)
    $end            reduce using rule 23 (declaracion -> LET ID DOSPUNTOS tipo .)
    LLADER          reduce using rule 23 (declaracion -> LET ID DOSPUNTOS tipo .)


state 94

    (73) tipo -> NUMBER .

    IGUAL           reduce using rule 73 (tipo -> NUMBER .)
    PTOYCOMA        reduce using rule 73 (tipo -> NUMBER .)
    error           reduce using rule 73 (tipo -> NUMBER .)
    ID              reduce using rule 73 (tipo -> NUMBER .)
    INCREMENTO      reduce using rule 73 (tipo -> NUMBER .)
    DECREMENTO      reduce using rule 73 (tipo -> NUMBER .)
    LET             reduce using rule 73 (tipo -> NUMBER .)
    CONSOLE         reduce using rule 73 (tipo -> NUMBER .)
    RETURN          reduce using rule 73 (tipo -> NUMBER .)
    BREAK           reduce using rule 73 (tipo -> NUMBER .)
    CONTINUE        reduce using rule 73 (tipo -> NUMBER .)
    IF              reduce using rule 73 (tipo -> NUMBER .)
    WHILE           reduce using rule 73 (tipo -> NUMBER .)
    FOR             reduce using rule 73 (tipo -> NUMBER .)
    $end            reduce using rule 73 (tipo -> NUMBER .)
    LLADER          reduce using rule 73 (tipo -> NUMBER .)


state 95

    (74) tipo -> STRING .

    IGUAL           reduce using rule 74 (tipo -> STRING .)
    PTOYCOMA        reduce using rule 74 (tipo -> STRING .)
    error           reduce using rule 74 (tipo -> STRING .)
    ID              reduce using rule 74 (tipo -> STRING .)
    INCREMENTO      reduce using rule 74 (tipo -> STRING .)
    DECREMENTO      reduce using rule 74 (tipo -> STRING .)
    LET             reduce using rule 74 (tipo -> STRING .)
    CONSOLE         reduce using rule 74 (tipo -> STRING .)
    RETURN          reduce using rule 74 (tipo -> STRING .)
    BREAK           reduce using rule 74 (tipo -> STRING .)
    CONTINUE        reduce using rule 74 (tipo -> STRING .)
    IF              reduce using rule 74 (tipo -> STRING .)
    WHILE           reduce using rule 74 (tipo -> STRING .)
    FOR             reduce using rule 74 (tipo -> STRING .)
    $end            reduce using rule 74 (tipo -> STRING .)
    LLADER          reduce using rule 74 (tipo -> STRING .)


state 96

    (75) tipo -> BOOLEAN .

    IGUAL           reduce using rule 75 (tipo -> BOOLEAN .)
    PTOYCOMA        reduce using rule 75 (tipo -> BOOLEAN .)
    error           reduce using rule 75 (tipo -> BOOLEAN .)
    ID              reduce using rule 75 (tipo -> BOOLEAN .)
    INCREMENTO      reduce using rule 75 (tipo -> BOOLEAN .)
    DECREMENTO      reduce using rule 75 (tipo -> BOOLEAN .)
    LET             reduce using rule 75 (tipo -> BOOLEAN .)
    CONSOLE         reduce using rule 75 (tipo -> BOOLEAN .)
    RETURN          reduce using rule 75 (tipo -> BOOLEAN .)
    BREAK           reduce using rule 75 (tipo -> BOOLEAN .)
    CONTINUE        reduce using rule 75 (tipo -> BOOLEAN .)
    IF              reduce using rule 75 (tipo -> BOOLEAN .)
    WHILE           reduce using rule 75 (tipo -> BOOLEAN .)
    FOR             reduce using rule 75 (tipo -> BOOLEAN .)
    $end            reduce using rule 75 (tipo -> BOOLEAN .)
    LLADER          reduce using rule 75 (tipo -> BOOLEAN .)


state 97

    (76) tipo -> ANY .

    IGUAL           reduce using rule 76 (tipo -> ANY .)
    PTOYCOMA        reduce using rule 76 (tipo -> ANY .)
    error           reduce using rule 76 (tipo -> ANY .)
    ID              reduce using rule 76 (tipo -> ANY .)
    INCREMENTO      reduce using rule 76 (tipo -> ANY .)
    DECREMENTO      reduce using rule 76 (tipo -> ANY .)
    LET             reduce using rule 76 (tipo -> ANY .)
    CONSOLE         reduce using rule 76 (tipo -> ANY .)
    RETURN          reduce using rule 76 (tipo -> ANY .)
    BREAK           reduce using rule 76 (tipo -> ANY .)
    CONTINUE        reduce using rule 76 (tipo -> ANY .)
    IF              reduce using rule 76 (tipo -> ANY .)
    WHILE           reduce using rule 76 (tipo -> ANY .)
    FOR             reduce using rule 76 (tipo -> ANY .)
    $end            reduce using rule 76 (tipo -> ANY .)
    LLADER          reduce using rule 76 (tipo -> ANY .)


state 98

    (22) declaracion -> LET ID IGUAL expresion .
    (31) expresion -> expresion . MAS expresion
    (32) expresion -> expresion . MENOS expresion
    (33) expresion -> expresion . POR expresion
    (34) expresion -> expresion . DIVIDIDO expresion
    (35) expresion -> expresion . POTENCIA expresion
    (36) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . MAYOR expresion
    (40) expresion -> expresion . MENOR expresion
    (41) expresion -> expresion . MAYORIGUAL expresion
    (42) expresion -> expresion . MENORIGUAL expresion
    (43) expresion -> expresion . IGUALACION expresion
    (44) expresion -> expresion . DISTINTO expresion
    (45) expresion -> expresion . AND expresion
    (46) expresion -> expresion . OR expresion
    (65) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PTOYCOMA        reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    error           reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    ID              reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    INCREMENTO      reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    DECREMENTO      reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    LET             reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    CONSOLE         reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    RETURN          reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    BREAK           reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    CONTINUE        reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    IF              reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    WHILE           reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    FOR             reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    $end            reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    LLADER          reduce using rule 22 (declaracion -> LET ID IGUAL expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALACION      shift and go to state 73
    DISTINTO        shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76
    PUNTO           shift and go to state 77


state 99

    (30) impresion -> CONSOLE PUNTO LOG PARIZQ . expresion PARDER
    (31) expresion -> . expresion MAS expresion
    (32) expresion -> . expresion MENOS expresion
    (33) expresion -> . expresion POR expresion
    (34) expresion -> . expresion DIVIDIDO expresion
    (35) expresion -> . expresion POTENCIA expresion
    (36) expresion -> . expresion MODULO expresion
    (37) expresion -> . MENOS expresion
    (38) expresion -> . PARIZQ expresion PARDER
    (39) expresion -> . expresion MAYOR expresion
    (40) expresion -> . expresion MENOR expresion
    (41) expresion -> . expresion MAYORIGUAL expresion
    (42) expresion -> . expresion MENORIGUAL expresion
    (43) expresion -> . expresion IGUALACION expresion
    (44) expresion -> . expresion DISTINTO expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . expresion OR expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . ENTERO
    (49) expresion -> . DECIMAL
    (50) expresion -> . CADENA
    (51) expresion -> . ID
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . ID INCREMENTO
    (55) expresion -> . ID DECREMENTO
    (56) expresion -> . INCREMENTO ID
    (57) expresion -> . DECREMENTO ID
    (58) expresion -> . aproximacion
    (59) expresion -> . exponencial
    (60) expresion -> . to_minusculas
    (61) expresion -> . to_mayusculas
    (62) expresion -> . separador
    (63) expresion -> . concatenacion
    (64) expresion -> . casteo_string
    (67) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (65) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (72) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 37
    PARIZQ          shift and go to state 38
    NOT             shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    CADENA          shift and go to state 42
    ID              shift and go to state 43
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    INCREMENTO      shift and go to state 46
    DECREMENTO      shift and go to state 47
    CAST_STRING     shift and go to state 55

    expresion                      shift and go to state 129
    aproximacion                   shift and go to state 48
    exponencial                    shift and go to state 49
    to_minusculas                  shift and go to state 50
    to_mayusculas                  shift and go to state 51
    separador                      shift and go to state 52
    concatenacion                  shift and go to state 53
    casteo_string                  shift and go to state 54

state 100

    (31) expresion -> expresion MAS expresion .
    (31) expresion -> expresion . MAS expresion
    (32) expresion -> expresion . MENOS expresion
    (33) expresion -> expresion . POR expresion
    (34) expresion -> expresion . DIVIDIDO expresion
    (35) expresion -> expresion . POTENCIA expresion
    (36) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . MAYOR expresion
    (40) expresion -> expresion . MENOR expresion
    (41) expresion -> expresion . MAYORIGUAL expresion
    (42) expresion -> expresion . MENORIGUAL expresion
    (43) expresion -> expresion . IGUALACION expresion
    (44) expresion -> expresion . DISTINTO expresion
    (45) expresion -> expresion . AND expresion
    (46) expresion -> expresion . OR expresion
    (65) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAS             reduce using rule 31 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 31 (expresion -> expresion MAS expresion .)
    MAYOR           reduce using rule 31 (expresion -> expresion MAS expresion .)
    MENOR           reduce using rule 31 (expresion -> expresion MAS expresion .)
    MAYORIGUAL      reduce using rule 31 (expresion -> expresion MAS expresion .)
    MENORIGUAL      reduce using rule 31 (expresion -> expresion MAS expresion .)
    IGUALACION      reduce using rule 31 (expresion -> expresion MAS expresion .)
    DISTINTO        reduce using rule 31 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 31 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 31 (expresion -> expresion MAS expresion .)
    PUNTO           reduce using rule 31 (expresion -> expresion MAS expresion .)
    PTOYCOMA        reduce using rule 31 (expresion -> expresion MAS expresion .)
    error           reduce using rule 31 (expresion -> expresion MAS expresion .)
    ID              reduce using rule 31 (expresion -> expresion MAS expresion .)
    INCREMENTO      reduce using rule 31 (expresion -> expresion MAS expresion .)
    DECREMENTO      reduce using rule 31 (expresion -> expresion MAS expresion .)
    LET             reduce using rule 31 (expresion -> expresion MAS expresion .)
    CONSOLE         reduce using rule 31 (expresion -> expresion MAS expresion .)
    RETURN          reduce using rule 31 (expresion -> expresion MAS expresion .)
    BREAK           reduce using rule 31 (expresion -> expresion MAS expresion .)
    CONTINUE        reduce using rule 31 (expresion -> expresion MAS expresion .)
    IF              reduce using rule 31 (expresion -> expresion MAS expresion .)
    WHILE           reduce using rule 31 (expresion -> expresion MAS expresion .)
    FOR             reduce using rule 31 (expresion -> expresion MAS expresion .)
    $end            reduce using rule 31 (expresion -> expresion MAS expresion .)
    LLADER          reduce using rule 31 (expresion -> expresion MAS expresion .)
    PARDER          reduce using rule 31 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68

  ! POR             [ reduce using rule 31 (expresion -> expresion MAS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 31 (expresion -> expresion MAS expresion .) ]
  ! POTENCIA        [ reduce using rule 31 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 31 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 63 ]
  ! MENOS           [ shift and go to state 64 ]
  ! MAYOR           [ shift and go to state 69 ]
  ! MENOR           [ shift and go to state 70 ]
  ! MAYORIGUAL      [ shift and go to state 71 ]
  ! MENORIGUAL      [ shift and go to state 72 ]
  ! IGUALACION      [ shift and go to state 73 ]
  ! DISTINTO        [ shift and go to state 74 ]
  ! AND             [ shift and go to state 75 ]
  ! OR              [ shift and go to state 76 ]
  ! PUNTO           [ shift and go to state 77 ]


state 101

    (32) expresion -> expresion MENOS expresion .
    (31) expresion -> expresion . MAS expresion
    (32) expresion -> expresion . MENOS expresion
    (33) expresion -> expresion . POR expresion
    (34) expresion -> expresion . DIVIDIDO expresion
    (35) expresion -> expresion . POTENCIA expresion
    (36) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . MAYOR expresion
    (40) expresion -> expresion . MENOR expresion
    (41) expresion -> expresion . MAYORIGUAL expresion
    (42) expresion -> expresion . MENORIGUAL expresion
    (43) expresion -> expresion . IGUALACION expresion
    (44) expresion -> expresion . DISTINTO expresion
    (45) expresion -> expresion . AND expresion
    (46) expresion -> expresion . OR expresion
    (65) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAS             reduce using rule 32 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 32 (expresion -> expresion MENOS expresion .)
    MAYOR           reduce using rule 32 (expresion -> expresion MENOS expresion .)
    MENOR           reduce using rule 32 (expresion -> expresion MENOS expresion .)
    MAYORIGUAL      reduce using rule 32 (expresion -> expresion MENOS expresion .)
    MENORIGUAL      reduce using rule 32 (expresion -> expresion MENOS expresion .)
    IGUALACION      reduce using rule 32 (expresion -> expresion MENOS expresion .)
    DISTINTO        reduce using rule 32 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 32 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 32 (expresion -> expresion MENOS expresion .)
    PUNTO           reduce using rule 32 (expresion -> expresion MENOS expresion .)
    PTOYCOMA        reduce using rule 32 (expresion -> expresion MENOS expresion .)
    error           reduce using rule 32 (expresion -> expresion MENOS expresion .)
    ID              reduce using rule 32 (expresion -> expresion MENOS expresion .)
    INCREMENTO      reduce using rule 32 (expresion -> expresion MENOS expresion .)
    DECREMENTO      reduce using rule 32 (expresion -> expresion MENOS expresion .)
    LET             reduce using rule 32 (expresion -> expresion MENOS expresion .)
    CONSOLE         reduce using rule 32 (expresion -> expresion MENOS expresion .)
    RETURN          reduce using rule 32 (expresion -> expresion MENOS expresion .)
    BREAK           reduce using rule 32 (expresion -> expresion MENOS expresion .)
    CONTINUE        reduce using rule 32 (expresion -> expresion MENOS expresion .)
    IF              reduce using rule 32 (expresion -> expresion MENOS expresion .)
    WHILE           reduce using rule 32 (expresion -> expresion MENOS expresion .)
    FOR             reduce using rule 32 (expresion -> expresion MENOS expresion .)
    $end            reduce using rule 32 (expresion -> expresion MENOS expresion .)
    LLADER          reduce using rule 32 (expresion -> expresion MENOS expresion .)
    PARDER          reduce using rule 32 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68

  ! POR             [ reduce using rule 32 (expresion -> expresion MENOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 32 (expresion -> expresion MENOS expresion .) ]
  ! POTENCIA        [ reduce using rule 32 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 32 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 63 ]
  ! MENOS           [ shift and go to state 64 ]
  ! MAYOR           [ shift and go to state 69 ]
  ! MENOR           [ shift and go to state 70 ]
  ! MAYORIGUAL      [ shift and go to state 71 ]
  ! MENORIGUAL      [ shift and go to state 72 ]
  ! IGUALACION      [ shift and go to state 73 ]
  ! DISTINTO        [ shift and go to state 74 ]
  ! AND             [ shift and go to state 75 ]
  ! OR              [ shift and go to state 76 ]
  ! PUNTO           [ shift and go to state 77 ]


state 102

    (33) expresion -> expresion POR expresion .
    (31) expresion -> expresion . MAS expresion
    (32) expresion -> expresion . MENOS expresion
    (33) expresion -> expresion . POR expresion
    (34) expresion -> expresion . DIVIDIDO expresion
    (35) expresion -> expresion . POTENCIA expresion
    (36) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . MAYOR expresion
    (40) expresion -> expresion . MENOR expresion
    (41) expresion -> expresion . MAYORIGUAL expresion
    (42) expresion -> expresion . MENORIGUAL expresion
    (43) expresion -> expresion . IGUALACION expresion
    (44) expresion -> expresion . DISTINTO expresion
    (45) expresion -> expresion . AND expresion
    (46) expresion -> expresion . OR expresion
    (65) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAS             reduce using rule 33 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 33 (expresion -> expresion POR expresion .)
    POR             reduce using rule 33 (expresion -> expresion POR expresion .)
    DIVIDIDO        reduce using rule 33 (expresion -> expresion POR expresion .)
    MODULO          reduce using rule 33 (expresion -> expresion POR expresion .)
    MAYOR           reduce using rule 33 (expresion -> expresion POR expresion .)
    MENOR           reduce using rule 33 (expresion -> expresion POR expresion .)
    MAYORIGUAL      reduce using rule 33 (expresion -> expresion POR expresion .)
    MENORIGUAL      reduce using rule 33 (expresion -> expresion POR expresion .)
    IGUALACION      reduce using rule 33 (expresion -> expresion POR expresion .)
    DISTINTO        reduce using rule 33 (expresion -> expresion POR expresion .)
    AND             reduce using rule 33 (expresion -> expresion POR expresion .)
    OR              reduce using rule 33 (expresion -> expresion POR expresion .)
    PUNTO           reduce using rule 33 (expresion -> expresion POR expresion .)
    PTOYCOMA        reduce using rule 33 (expresion -> expresion POR expresion .)
    error           reduce using rule 33 (expresion -> expresion POR expresion .)
    ID              reduce using rule 33 (expresion -> expresion POR expresion .)
    INCREMENTO      reduce using rule 33 (expresion -> expresion POR expresion .)
    DECREMENTO      reduce using rule 33 (expresion -> expresion POR expresion .)
    LET             reduce using rule 33 (expresion -> expresion POR expresion .)
    CONSOLE         reduce using rule 33 (expresion -> expresion POR expresion .)
    RETURN          reduce using rule 33 (expresion -> expresion POR expresion .)
    BREAK           reduce using rule 33 (expresion -> expresion POR expresion .)
    CONTINUE        reduce using rule 33 (expresion -> expresion POR expresion .)
    IF              reduce using rule 33 (expresion -> expresion POR expresion .)
    WHILE           reduce using rule 33 (expresion -> expresion POR expresion .)
    FOR             reduce using rule 33 (expresion -> expresion POR expresion .)
    $end            reduce using rule 33 (expresion -> expresion POR expresion .)
    LLADER          reduce using rule 33 (expresion -> expresion POR expresion .)
    PARDER          reduce using rule 33 (expresion -> expresion POR expresion .)
    POTENCIA        shift and go to state 67

  ! POTENCIA        [ reduce using rule 33 (expresion -> expresion POR expresion .) ]
  ! MAS             [ shift and go to state 63 ]
  ! MENOS           [ shift and go to state 64 ]
  ! POR             [ shift and go to state 65 ]
  ! DIVIDIDO        [ shift and go to state 66 ]
  ! MODULO          [ shift and go to state 68 ]
  ! MAYOR           [ shift and go to state 69 ]
  ! MENOR           [ shift and go to state 70 ]
  ! MAYORIGUAL      [ shift and go to state 71 ]
  ! MENORIGUAL      [ shift and go to state 72 ]
  ! IGUALACION      [ shift and go to state 73 ]
  ! DISTINTO        [ shift and go to state 74 ]
  ! AND             [ shift and go to state 75 ]
  ! OR              [ shift and go to state 76 ]
  ! PUNTO           [ shift and go to state 77 ]


state 103

    (34) expresion -> expresion DIVIDIDO expresion .
    (31) expresion -> expresion . MAS expresion
    (32) expresion -> expresion . MENOS expresion
    (33) expresion -> expresion . POR expresion
    (34) expresion -> expresion . DIVIDIDO expresion
    (35) expresion -> expresion . POTENCIA expresion
    (36) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . MAYOR expresion
    (40) expresion -> expresion . MENOR expresion
    (41) expresion -> expresion . MAYORIGUAL expresion
    (42) expresion -> expresion . MENORIGUAL expresion
    (43) expresion -> expresion . IGUALACION expresion
    (44) expresion -> expresion . DISTINTO expresion
    (45) expresion -> expresion . AND expresion
    (46) expresion -> expresion . OR expresion
    (65) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAS             reduce using rule 34 (expresion -> expresion DIVIDIDO expresion .)
    MENOS           reduce using rule 34 (expresion -> expresion DIVIDIDO expresion .)
    POR             reduce using rule 34 (expresion -> expresion DIVIDIDO expresion .)
    DIVIDIDO        reduce using rule 34 (expresion -> expresion DIVIDIDO expresion .)
    MODULO          reduce using rule 34 (expresion -> expresion DIVIDIDO expresion .)
    MAYOR           reduce using rule 34 (expresion -> expresion DIVIDIDO expresion .)
    MENOR           reduce using rule 34 (expresion -> expresion DIVIDIDO expresion .)
    MAYORIGUAL      reduce using rule 34 (expresion -> expresion DIVIDIDO expresion .)
    MENORIGUAL      reduce using rule 34 (expresion -> expresion DIVIDIDO expresion .)
    IGUALACION      reduce using rule 34 (expresion -> expresion DIVIDIDO expresion .)
    DISTINTO        reduce using rule 34 (expresion -> expresion DIVIDIDO expresion .)
    AND             reduce using rule 34 (expresion -> expresion DIVIDIDO expresion .)
    OR              reduce using rule 34 (expresion -> expresion DIVIDIDO expresion .)
    PUNTO           reduce using rule 34 (expresion -> expresion DIVIDIDO expresion .)
    PTOYCOMA        reduce using rule 34 (expresion -> expresion DIVIDIDO expresion .)
    error           reduce using rule 34 (expresion -> expresion DIVIDIDO expresion .)
    ID              reduce using rule 34 (expresion -> expresion DIVIDIDO expresion .)
    INCREMENTO      reduce using rule 34 (expresion -> expresion DIVIDIDO expresion .)
    DECREMENTO      reduce using rule 34 (expresion -> expresion DIVIDIDO expresion .)
    LET             reduce using rule 34 (expresion -> expresion DIVIDIDO expresion .)
    CONSOLE         reduce using rule 34 (expresion -> expresion DIVIDIDO expresion .)
    RETURN          reduce using rule 34 (expresion -> expresion DIVIDIDO expresion .)
    BREAK           reduce using rule 34 (expresion -> expresion DIVIDIDO expresion .)
    CONTINUE        reduce using rule 34 (expresion -> expresion DIVIDIDO expresion .)
    IF              reduce using rule 34 (expresion -> expresion DIVIDIDO expresion .)
    WHILE           reduce using rule 34 (expresion -> expresion DIVIDIDO expresion .)
    FOR             reduce using rule 34 (expresion -> expresion DIVIDIDO expresion .)
    $end            reduce using rule 34 (expresion -> expresion DIVIDIDO expresion .)
    LLADER          reduce using rule 34 (expresion -> expresion DIVIDIDO expresion .)
    PARDER          reduce using rule 34 (expresion -> expresion DIVIDIDO expresion .)
    POTENCIA        shift and go to state 67

  ! POTENCIA        [ reduce using rule 34 (expresion -> expresion DIVIDIDO expresion .) ]
  ! MAS             [ shift and go to state 63 ]
  ! MENOS           [ shift and go to state 64 ]
  ! POR             [ shift and go to state 65 ]
  ! DIVIDIDO        [ shift and go to state 66 ]
  ! MODULO          [ shift and go to state 68 ]
  ! MAYOR           [ shift and go to state 69 ]
  ! MENOR           [ shift and go to state 70 ]
  ! MAYORIGUAL      [ shift and go to state 71 ]
  ! MENORIGUAL      [ shift and go to state 72 ]
  ! IGUALACION      [ shift and go to state 73 ]
  ! DISTINTO        [ shift and go to state 74 ]
  ! AND             [ shift and go to state 75 ]
  ! OR              [ shift and go to state 76 ]
  ! PUNTO           [ shift and go to state 77 ]


state 104

    (35) expresion -> expresion POTENCIA expresion .
    (31) expresion -> expresion . MAS expresion
    (32) expresion -> expresion . MENOS expresion
    (33) expresion -> expresion . POR expresion
    (34) expresion -> expresion . DIVIDIDO expresion
    (35) expresion -> expresion . POTENCIA expresion
    (36) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . MAYOR expresion
    (40) expresion -> expresion . MENOR expresion
    (41) expresion -> expresion . MAYORIGUAL expresion
    (42) expresion -> expresion . MENORIGUAL expresion
    (43) expresion -> expresion . IGUALACION expresion
    (44) expresion -> expresion . DISTINTO expresion
    (45) expresion -> expresion . AND expresion
    (46) expresion -> expresion . OR expresion
    (65) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAS             reduce using rule 35 (expresion -> expresion POTENCIA expresion .)
    MENOS           reduce using rule 35 (expresion -> expresion POTENCIA expresion .)
    POR             reduce using rule 35 (expresion -> expresion POTENCIA expresion .)
    DIVIDIDO        reduce using rule 35 (expresion -> expresion POTENCIA expresion .)
    POTENCIA        reduce using rule 35 (expresion -> expresion POTENCIA expresion .)
    MODULO          reduce using rule 35 (expresion -> expresion POTENCIA expresion .)
    MAYOR           reduce using rule 35 (expresion -> expresion POTENCIA expresion .)
    MENOR           reduce using rule 35 (expresion -> expresion POTENCIA expresion .)
    MAYORIGUAL      reduce using rule 35 (expresion -> expresion POTENCIA expresion .)
    MENORIGUAL      reduce using rule 35 (expresion -> expresion POTENCIA expresion .)
    IGUALACION      reduce using rule 35 (expresion -> expresion POTENCIA expresion .)
    DISTINTO        reduce using rule 35 (expresion -> expresion POTENCIA expresion .)
    AND             reduce using rule 35 (expresion -> expresion POTENCIA expresion .)
    OR              reduce using rule 35 (expresion -> expresion POTENCIA expresion .)
    PUNTO           reduce using rule 35 (expresion -> expresion POTENCIA expresion .)
    PTOYCOMA        reduce using rule 35 (expresion -> expresion POTENCIA expresion .)
    error           reduce using rule 35 (expresion -> expresion POTENCIA expresion .)
    ID              reduce using rule 35 (expresion -> expresion POTENCIA expresion .)
    INCREMENTO      reduce using rule 35 (expresion -> expresion POTENCIA expresion .)
    DECREMENTO      reduce using rule 35 (expresion -> expresion POTENCIA expresion .)
    LET             reduce using rule 35 (expresion -> expresion POTENCIA expresion .)
    CONSOLE         reduce using rule 35 (expresion -> expresion POTENCIA expresion .)
    RETURN          reduce using rule 35 (expresion -> expresion POTENCIA expresion .)
    BREAK           reduce using rule 35 (expresion -> expresion POTENCIA expresion .)
    CONTINUE        reduce using rule 35 (expresion -> expresion POTENCIA expresion .)
    IF              reduce using rule 35 (expresion -> expresion POTENCIA expresion .)
    WHILE           reduce using rule 35 (expresion -> expresion POTENCIA expresion .)
    FOR             reduce using rule 35 (expresion -> expresion POTENCIA expresion .)
    $end            reduce using rule 35 (expresion -> expresion POTENCIA expresion .)
    LLADER          reduce using rule 35 (expresion -> expresion POTENCIA expresion .)
    PARDER          reduce using rule 35 (expresion -> expresion POTENCIA expresion .)

  ! MAS             [ shift and go to state 63 ]
  ! MENOS           [ shift and go to state 64 ]
  ! POR             [ shift and go to state 65 ]
  ! DIVIDIDO        [ shift and go to state 66 ]
  ! POTENCIA        [ shift and go to state 67 ]
  ! MODULO          [ shift and go to state 68 ]
  ! MAYOR           [ shift and go to state 69 ]
  ! MENOR           [ shift and go to state 70 ]
  ! MAYORIGUAL      [ shift and go to state 71 ]
  ! MENORIGUAL      [ shift and go to state 72 ]
  ! IGUALACION      [ shift and go to state 73 ]
  ! DISTINTO        [ shift and go to state 74 ]
  ! AND             [ shift and go to state 75 ]
  ! OR              [ shift and go to state 76 ]
  ! PUNTO           [ shift and go to state 77 ]


state 105

    (36) expresion -> expresion MODULO expresion .
    (31) expresion -> expresion . MAS expresion
    (32) expresion -> expresion . MENOS expresion
    (33) expresion -> expresion . POR expresion
    (34) expresion -> expresion . DIVIDIDO expresion
    (35) expresion -> expresion . POTENCIA expresion
    (36) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . MAYOR expresion
    (40) expresion -> expresion . MENOR expresion
    (41) expresion -> expresion . MAYORIGUAL expresion
    (42) expresion -> expresion . MENORIGUAL expresion
    (43) expresion -> expresion . IGUALACION expresion
    (44) expresion -> expresion . DISTINTO expresion
    (45) expresion -> expresion . AND expresion
    (46) expresion -> expresion . OR expresion
    (65) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAS             reduce using rule 36 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 36 (expresion -> expresion MODULO expresion .)
    POR             reduce using rule 36 (expresion -> expresion MODULO expresion .)
    DIVIDIDO        reduce using rule 36 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 36 (expresion -> expresion MODULO expresion .)
    MAYOR           reduce using rule 36 (expresion -> expresion MODULO expresion .)
    MENOR           reduce using rule 36 (expresion -> expresion MODULO expresion .)
    MAYORIGUAL      reduce using rule 36 (expresion -> expresion MODULO expresion .)
    MENORIGUAL      reduce using rule 36 (expresion -> expresion MODULO expresion .)
    IGUALACION      reduce using rule 36 (expresion -> expresion MODULO expresion .)
    DISTINTO        reduce using rule 36 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 36 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 36 (expresion -> expresion MODULO expresion .)
    PUNTO           reduce using rule 36 (expresion -> expresion MODULO expresion .)
    PTOYCOMA        reduce using rule 36 (expresion -> expresion MODULO expresion .)
    error           reduce using rule 36 (expresion -> expresion MODULO expresion .)
    ID              reduce using rule 36 (expresion -> expresion MODULO expresion .)
    INCREMENTO      reduce using rule 36 (expresion -> expresion MODULO expresion .)
    DECREMENTO      reduce using rule 36 (expresion -> expresion MODULO expresion .)
    LET             reduce using rule 36 (expresion -> expresion MODULO expresion .)
    CONSOLE         reduce using rule 36 (expresion -> expresion MODULO expresion .)
    RETURN          reduce using rule 36 (expresion -> expresion MODULO expresion .)
    BREAK           reduce using rule 36 (expresion -> expresion MODULO expresion .)
    CONTINUE        reduce using rule 36 (expresion -> expresion MODULO expresion .)
    IF              reduce using rule 36 (expresion -> expresion MODULO expresion .)
    WHILE           reduce using rule 36 (expresion -> expresion MODULO expresion .)
    FOR             reduce using rule 36 (expresion -> expresion MODULO expresion .)
    $end            reduce using rule 36 (expresion -> expresion MODULO expresion .)
    LLADER          reduce using rule 36 (expresion -> expresion MODULO expresion .)
    PARDER          reduce using rule 36 (expresion -> expresion MODULO expresion .)
    POTENCIA        shift and go to state 67

  ! POTENCIA        [ reduce using rule 36 (expresion -> expresion MODULO expresion .) ]
  ! MAS             [ shift and go to state 63 ]
  ! MENOS           [ shift and go to state 64 ]
  ! POR             [ shift and go to state 65 ]
  ! DIVIDIDO        [ shift and go to state 66 ]
  ! MODULO          [ shift and go to state 68 ]
  ! MAYOR           [ shift and go to state 69 ]
  ! MENOR           [ shift and go to state 70 ]
  ! MAYORIGUAL      [ shift and go to state 71 ]
  ! MENORIGUAL      [ shift and go to state 72 ]
  ! IGUALACION      [ shift and go to state 73 ]
  ! DISTINTO        [ shift and go to state 74 ]
  ! AND             [ shift and go to state 75 ]
  ! OR              [ shift and go to state 76 ]
  ! PUNTO           [ shift and go to state 77 ]


state 106

    (39) expresion -> expresion MAYOR expresion .
    (31) expresion -> expresion . MAS expresion
    (32) expresion -> expresion . MENOS expresion
    (33) expresion -> expresion . POR expresion
    (34) expresion -> expresion . DIVIDIDO expresion
    (35) expresion -> expresion . POTENCIA expresion
    (36) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . MAYOR expresion
    (40) expresion -> expresion . MENOR expresion
    (41) expresion -> expresion . MAYORIGUAL expresion
    (42) expresion -> expresion . MENORIGUAL expresion
    (43) expresion -> expresion . IGUALACION expresion
    (44) expresion -> expresion . DISTINTO expresion
    (45) expresion -> expresion . AND expresion
    (46) expresion -> expresion . OR expresion
    (65) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAYOR           reduce using rule 39 (expresion -> expresion MAYOR expresion .)
    MENOR           reduce using rule 39 (expresion -> expresion MAYOR expresion .)
    MAYORIGUAL      reduce using rule 39 (expresion -> expresion MAYOR expresion .)
    MENORIGUAL      reduce using rule 39 (expresion -> expresion MAYOR expresion .)
    IGUALACION      reduce using rule 39 (expresion -> expresion MAYOR expresion .)
    DISTINTO        reduce using rule 39 (expresion -> expresion MAYOR expresion .)
    AND             reduce using rule 39 (expresion -> expresion MAYOR expresion .)
    OR              reduce using rule 39 (expresion -> expresion MAYOR expresion .)
    PUNTO           reduce using rule 39 (expresion -> expresion MAYOR expresion .)
    PTOYCOMA        reduce using rule 39 (expresion -> expresion MAYOR expresion .)
    error           reduce using rule 39 (expresion -> expresion MAYOR expresion .)
    ID              reduce using rule 39 (expresion -> expresion MAYOR expresion .)
    INCREMENTO      reduce using rule 39 (expresion -> expresion MAYOR expresion .)
    DECREMENTO      reduce using rule 39 (expresion -> expresion MAYOR expresion .)
    LET             reduce using rule 39 (expresion -> expresion MAYOR expresion .)
    CONSOLE         reduce using rule 39 (expresion -> expresion MAYOR expresion .)
    RETURN          reduce using rule 39 (expresion -> expresion MAYOR expresion .)
    BREAK           reduce using rule 39 (expresion -> expresion MAYOR expresion .)
    CONTINUE        reduce using rule 39 (expresion -> expresion MAYOR expresion .)
    IF              reduce using rule 39 (expresion -> expresion MAYOR expresion .)
    WHILE           reduce using rule 39 (expresion -> expresion MAYOR expresion .)
    FOR             reduce using rule 39 (expresion -> expresion MAYOR expresion .)
    $end            reduce using rule 39 (expresion -> expresion MAYOR expresion .)
    LLADER          reduce using rule 39 (expresion -> expresion MAYOR expresion .)
    PARDER          reduce using rule 39 (expresion -> expresion MAYOR expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68

  ! MAS             [ reduce using rule 39 (expresion -> expresion MAYOR expresion .) ]
  ! MENOS           [ reduce using rule 39 (expresion -> expresion MAYOR expresion .) ]
  ! POR             [ reduce using rule 39 (expresion -> expresion MAYOR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 39 (expresion -> expresion MAYOR expresion .) ]
  ! POTENCIA        [ reduce using rule 39 (expresion -> expresion MAYOR expresion .) ]
  ! MODULO          [ reduce using rule 39 (expresion -> expresion MAYOR expresion .) ]
  ! MAYOR           [ shift and go to state 69 ]
  ! MENOR           [ shift and go to state 70 ]
  ! MAYORIGUAL      [ shift and go to state 71 ]
  ! MENORIGUAL      [ shift and go to state 72 ]
  ! IGUALACION      [ shift and go to state 73 ]
  ! DISTINTO        [ shift and go to state 74 ]
  ! AND             [ shift and go to state 75 ]
  ! OR              [ shift and go to state 76 ]
  ! PUNTO           [ shift and go to state 77 ]


state 107

    (40) expresion -> expresion MENOR expresion .
    (31) expresion -> expresion . MAS expresion
    (32) expresion -> expresion . MENOS expresion
    (33) expresion -> expresion . POR expresion
    (34) expresion -> expresion . DIVIDIDO expresion
    (35) expresion -> expresion . POTENCIA expresion
    (36) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . MAYOR expresion
    (40) expresion -> expresion . MENOR expresion
    (41) expresion -> expresion . MAYORIGUAL expresion
    (42) expresion -> expresion . MENORIGUAL expresion
    (43) expresion -> expresion . IGUALACION expresion
    (44) expresion -> expresion . DISTINTO expresion
    (45) expresion -> expresion . AND expresion
    (46) expresion -> expresion . OR expresion
    (65) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAYOR           reduce using rule 40 (expresion -> expresion MENOR expresion .)
    MENOR           reduce using rule 40 (expresion -> expresion MENOR expresion .)
    MAYORIGUAL      reduce using rule 40 (expresion -> expresion MENOR expresion .)
    MENORIGUAL      reduce using rule 40 (expresion -> expresion MENOR expresion .)
    IGUALACION      reduce using rule 40 (expresion -> expresion MENOR expresion .)
    DISTINTO        reduce using rule 40 (expresion -> expresion MENOR expresion .)
    AND             reduce using rule 40 (expresion -> expresion MENOR expresion .)
    OR              reduce using rule 40 (expresion -> expresion MENOR expresion .)
    PUNTO           reduce using rule 40 (expresion -> expresion MENOR expresion .)
    PTOYCOMA        reduce using rule 40 (expresion -> expresion MENOR expresion .)
    error           reduce using rule 40 (expresion -> expresion MENOR expresion .)
    ID              reduce using rule 40 (expresion -> expresion MENOR expresion .)
    INCREMENTO      reduce using rule 40 (expresion -> expresion MENOR expresion .)
    DECREMENTO      reduce using rule 40 (expresion -> expresion MENOR expresion .)
    LET             reduce using rule 40 (expresion -> expresion MENOR expresion .)
    CONSOLE         reduce using rule 40 (expresion -> expresion MENOR expresion .)
    RETURN          reduce using rule 40 (expresion -> expresion MENOR expresion .)
    BREAK           reduce using rule 40 (expresion -> expresion MENOR expresion .)
    CONTINUE        reduce using rule 40 (expresion -> expresion MENOR expresion .)
    IF              reduce using rule 40 (expresion -> expresion MENOR expresion .)
    WHILE           reduce using rule 40 (expresion -> expresion MENOR expresion .)
    FOR             reduce using rule 40 (expresion -> expresion MENOR expresion .)
    $end            reduce using rule 40 (expresion -> expresion MENOR expresion .)
    LLADER          reduce using rule 40 (expresion -> expresion MENOR expresion .)
    PARDER          reduce using rule 40 (expresion -> expresion MENOR expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68

  ! MAS             [ reduce using rule 40 (expresion -> expresion MENOR expresion .) ]
  ! MENOS           [ reduce using rule 40 (expresion -> expresion MENOR expresion .) ]
  ! POR             [ reduce using rule 40 (expresion -> expresion MENOR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 40 (expresion -> expresion MENOR expresion .) ]
  ! POTENCIA        [ reduce using rule 40 (expresion -> expresion MENOR expresion .) ]
  ! MODULO          [ reduce using rule 40 (expresion -> expresion MENOR expresion .) ]
  ! MAYOR           [ shift and go to state 69 ]
  ! MENOR           [ shift and go to state 70 ]
  ! MAYORIGUAL      [ shift and go to state 71 ]
  ! MENORIGUAL      [ shift and go to state 72 ]
  ! IGUALACION      [ shift and go to state 73 ]
  ! DISTINTO        [ shift and go to state 74 ]
  ! AND             [ shift and go to state 75 ]
  ! OR              [ shift and go to state 76 ]
  ! PUNTO           [ shift and go to state 77 ]


state 108

    (41) expresion -> expresion MAYORIGUAL expresion .
    (31) expresion -> expresion . MAS expresion
    (32) expresion -> expresion . MENOS expresion
    (33) expresion -> expresion . POR expresion
    (34) expresion -> expresion . DIVIDIDO expresion
    (35) expresion -> expresion . POTENCIA expresion
    (36) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . MAYOR expresion
    (40) expresion -> expresion . MENOR expresion
    (41) expresion -> expresion . MAYORIGUAL expresion
    (42) expresion -> expresion . MENORIGUAL expresion
    (43) expresion -> expresion . IGUALACION expresion
    (44) expresion -> expresion . DISTINTO expresion
    (45) expresion -> expresion . AND expresion
    (46) expresion -> expresion . OR expresion
    (65) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAYOR           reduce using rule 41 (expresion -> expresion MAYORIGUAL expresion .)
    MENOR           reduce using rule 41 (expresion -> expresion MAYORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 41 (expresion -> expresion MAYORIGUAL expresion .)
    MENORIGUAL      reduce using rule 41 (expresion -> expresion MAYORIGUAL expresion .)
    IGUALACION      reduce using rule 41 (expresion -> expresion MAYORIGUAL expresion .)
    DISTINTO        reduce using rule 41 (expresion -> expresion MAYORIGUAL expresion .)
    AND             reduce using rule 41 (expresion -> expresion MAYORIGUAL expresion .)
    OR              reduce using rule 41 (expresion -> expresion MAYORIGUAL expresion .)
    PUNTO           reduce using rule 41 (expresion -> expresion MAYORIGUAL expresion .)
    PTOYCOMA        reduce using rule 41 (expresion -> expresion MAYORIGUAL expresion .)
    error           reduce using rule 41 (expresion -> expresion MAYORIGUAL expresion .)
    ID              reduce using rule 41 (expresion -> expresion MAYORIGUAL expresion .)
    INCREMENTO      reduce using rule 41 (expresion -> expresion MAYORIGUAL expresion .)
    DECREMENTO      reduce using rule 41 (expresion -> expresion MAYORIGUAL expresion .)
    LET             reduce using rule 41 (expresion -> expresion MAYORIGUAL expresion .)
    CONSOLE         reduce using rule 41 (expresion -> expresion MAYORIGUAL expresion .)
    RETURN          reduce using rule 41 (expresion -> expresion MAYORIGUAL expresion .)
    BREAK           reduce using rule 41 (expresion -> expresion MAYORIGUAL expresion .)
    CONTINUE        reduce using rule 41 (expresion -> expresion MAYORIGUAL expresion .)
    IF              reduce using rule 41 (expresion -> expresion MAYORIGUAL expresion .)
    WHILE           reduce using rule 41 (expresion -> expresion MAYORIGUAL expresion .)
    FOR             reduce using rule 41 (expresion -> expresion MAYORIGUAL expresion .)
    $end            reduce using rule 41 (expresion -> expresion MAYORIGUAL expresion .)
    LLADER          reduce using rule 41 (expresion -> expresion MAYORIGUAL expresion .)
    PARDER          reduce using rule 41 (expresion -> expresion MAYORIGUAL expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68

  ! MAS             [ reduce using rule 41 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 41 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! POR             [ reduce using rule 41 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! DIVIDIDO        [ reduce using rule 41 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! POTENCIA        [ reduce using rule 41 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 41 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MAYOR           [ shift and go to state 69 ]
  ! MENOR           [ shift and go to state 70 ]
  ! MAYORIGUAL      [ shift and go to state 71 ]
  ! MENORIGUAL      [ shift and go to state 72 ]
  ! IGUALACION      [ shift and go to state 73 ]
  ! DISTINTO        [ shift and go to state 74 ]
  ! AND             [ shift and go to state 75 ]
  ! OR              [ shift and go to state 76 ]
  ! PUNTO           [ shift and go to state 77 ]


state 109

    (42) expresion -> expresion MENORIGUAL expresion .
    (31) expresion -> expresion . MAS expresion
    (32) expresion -> expresion . MENOS expresion
    (33) expresion -> expresion . POR expresion
    (34) expresion -> expresion . DIVIDIDO expresion
    (35) expresion -> expresion . POTENCIA expresion
    (36) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . MAYOR expresion
    (40) expresion -> expresion . MENOR expresion
    (41) expresion -> expresion . MAYORIGUAL expresion
    (42) expresion -> expresion . MENORIGUAL expresion
    (43) expresion -> expresion . IGUALACION expresion
    (44) expresion -> expresion . DISTINTO expresion
    (45) expresion -> expresion . AND expresion
    (46) expresion -> expresion . OR expresion
    (65) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAYOR           reduce using rule 42 (expresion -> expresion MENORIGUAL expresion .)
    MENOR           reduce using rule 42 (expresion -> expresion MENORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 42 (expresion -> expresion MENORIGUAL expresion .)
    MENORIGUAL      reduce using rule 42 (expresion -> expresion MENORIGUAL expresion .)
    IGUALACION      reduce using rule 42 (expresion -> expresion MENORIGUAL expresion .)
    DISTINTO        reduce using rule 42 (expresion -> expresion MENORIGUAL expresion .)
    AND             reduce using rule 42 (expresion -> expresion MENORIGUAL expresion .)
    OR              reduce using rule 42 (expresion -> expresion MENORIGUAL expresion .)
    PUNTO           reduce using rule 42 (expresion -> expresion MENORIGUAL expresion .)
    PTOYCOMA        reduce using rule 42 (expresion -> expresion MENORIGUAL expresion .)
    error           reduce using rule 42 (expresion -> expresion MENORIGUAL expresion .)
    ID              reduce using rule 42 (expresion -> expresion MENORIGUAL expresion .)
    INCREMENTO      reduce using rule 42 (expresion -> expresion MENORIGUAL expresion .)
    DECREMENTO      reduce using rule 42 (expresion -> expresion MENORIGUAL expresion .)
    LET             reduce using rule 42 (expresion -> expresion MENORIGUAL expresion .)
    CONSOLE         reduce using rule 42 (expresion -> expresion MENORIGUAL expresion .)
    RETURN          reduce using rule 42 (expresion -> expresion MENORIGUAL expresion .)
    BREAK           reduce using rule 42 (expresion -> expresion MENORIGUAL expresion .)
    CONTINUE        reduce using rule 42 (expresion -> expresion MENORIGUAL expresion .)
    IF              reduce using rule 42 (expresion -> expresion MENORIGUAL expresion .)
    WHILE           reduce using rule 42 (expresion -> expresion MENORIGUAL expresion .)
    FOR             reduce using rule 42 (expresion -> expresion MENORIGUAL expresion .)
    $end            reduce using rule 42 (expresion -> expresion MENORIGUAL expresion .)
    LLADER          reduce using rule 42 (expresion -> expresion MENORIGUAL expresion .)
    PARDER          reduce using rule 42 (expresion -> expresion MENORIGUAL expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68

  ! MAS             [ reduce using rule 42 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 42 (expresion -> expresion MENORIGUAL expresion .) ]
  ! POR             [ reduce using rule 42 (expresion -> expresion MENORIGUAL expresion .) ]
  ! DIVIDIDO        [ reduce using rule 42 (expresion -> expresion MENORIGUAL expresion .) ]
  ! POTENCIA        [ reduce using rule 42 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 42 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MAYOR           [ shift and go to state 69 ]
  ! MENOR           [ shift and go to state 70 ]
  ! MAYORIGUAL      [ shift and go to state 71 ]
  ! MENORIGUAL      [ shift and go to state 72 ]
  ! IGUALACION      [ shift and go to state 73 ]
  ! DISTINTO        [ shift and go to state 74 ]
  ! AND             [ shift and go to state 75 ]
  ! OR              [ shift and go to state 76 ]
  ! PUNTO           [ shift and go to state 77 ]


state 110

    (43) expresion -> expresion IGUALACION expresion .
    (31) expresion -> expresion . MAS expresion
    (32) expresion -> expresion . MENOS expresion
    (33) expresion -> expresion . POR expresion
    (34) expresion -> expresion . DIVIDIDO expresion
    (35) expresion -> expresion . POTENCIA expresion
    (36) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . MAYOR expresion
    (40) expresion -> expresion . MENOR expresion
    (41) expresion -> expresion . MAYORIGUAL expresion
    (42) expresion -> expresion . MENORIGUAL expresion
    (43) expresion -> expresion . IGUALACION expresion
    (44) expresion -> expresion . DISTINTO expresion
    (45) expresion -> expresion . AND expresion
    (46) expresion -> expresion . OR expresion
    (65) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAYOR           reduce using rule 43 (expresion -> expresion IGUALACION expresion .)
    MENOR           reduce using rule 43 (expresion -> expresion IGUALACION expresion .)
    MAYORIGUAL      reduce using rule 43 (expresion -> expresion IGUALACION expresion .)
    MENORIGUAL      reduce using rule 43 (expresion -> expresion IGUALACION expresion .)
    IGUALACION      reduce using rule 43 (expresion -> expresion IGUALACION expresion .)
    DISTINTO        reduce using rule 43 (expresion -> expresion IGUALACION expresion .)
    AND             reduce using rule 43 (expresion -> expresion IGUALACION expresion .)
    OR              reduce using rule 43 (expresion -> expresion IGUALACION expresion .)
    PUNTO           reduce using rule 43 (expresion -> expresion IGUALACION expresion .)
    PTOYCOMA        reduce using rule 43 (expresion -> expresion IGUALACION expresion .)
    error           reduce using rule 43 (expresion -> expresion IGUALACION expresion .)
    ID              reduce using rule 43 (expresion -> expresion IGUALACION expresion .)
    INCREMENTO      reduce using rule 43 (expresion -> expresion IGUALACION expresion .)
    DECREMENTO      reduce using rule 43 (expresion -> expresion IGUALACION expresion .)
    LET             reduce using rule 43 (expresion -> expresion IGUALACION expresion .)
    CONSOLE         reduce using rule 43 (expresion -> expresion IGUALACION expresion .)
    RETURN          reduce using rule 43 (expresion -> expresion IGUALACION expresion .)
    BREAK           reduce using rule 43 (expresion -> expresion IGUALACION expresion .)
    CONTINUE        reduce using rule 43 (expresion -> expresion IGUALACION expresion .)
    IF              reduce using rule 43 (expresion -> expresion IGUALACION expresion .)
    WHILE           reduce using rule 43 (expresion -> expresion IGUALACION expresion .)
    FOR             reduce using rule 43 (expresion -> expresion IGUALACION expresion .)
    $end            reduce using rule 43 (expresion -> expresion IGUALACION expresion .)
    LLADER          reduce using rule 43 (expresion -> expresion IGUALACION expresion .)
    PARDER          reduce using rule 43 (expresion -> expresion IGUALACION expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68

  ! MAS             [ reduce using rule 43 (expresion -> expresion IGUALACION expresion .) ]
  ! MENOS           [ reduce using rule 43 (expresion -> expresion IGUALACION expresion .) ]
  ! POR             [ reduce using rule 43 (expresion -> expresion IGUALACION expresion .) ]
  ! DIVIDIDO        [ reduce using rule 43 (expresion -> expresion IGUALACION expresion .) ]
  ! POTENCIA        [ reduce using rule 43 (expresion -> expresion IGUALACION expresion .) ]
  ! MODULO          [ reduce using rule 43 (expresion -> expresion IGUALACION expresion .) ]
  ! MAYOR           [ shift and go to state 69 ]
  ! MENOR           [ shift and go to state 70 ]
  ! MAYORIGUAL      [ shift and go to state 71 ]
  ! MENORIGUAL      [ shift and go to state 72 ]
  ! IGUALACION      [ shift and go to state 73 ]
  ! DISTINTO        [ shift and go to state 74 ]
  ! AND             [ shift and go to state 75 ]
  ! OR              [ shift and go to state 76 ]
  ! PUNTO           [ shift and go to state 77 ]


state 111

    (44) expresion -> expresion DISTINTO expresion .
    (31) expresion -> expresion . MAS expresion
    (32) expresion -> expresion . MENOS expresion
    (33) expresion -> expresion . POR expresion
    (34) expresion -> expresion . DIVIDIDO expresion
    (35) expresion -> expresion . POTENCIA expresion
    (36) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . MAYOR expresion
    (40) expresion -> expresion . MENOR expresion
    (41) expresion -> expresion . MAYORIGUAL expresion
    (42) expresion -> expresion . MENORIGUAL expresion
    (43) expresion -> expresion . IGUALACION expresion
    (44) expresion -> expresion . DISTINTO expresion
    (45) expresion -> expresion . AND expresion
    (46) expresion -> expresion . OR expresion
    (65) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    MAYOR           reduce using rule 44 (expresion -> expresion DISTINTO expresion .)
    MENOR           reduce using rule 44 (expresion -> expresion DISTINTO expresion .)
    MAYORIGUAL      reduce using rule 44 (expresion -> expresion DISTINTO expresion .)
    MENORIGUAL      reduce using rule 44 (expresion -> expresion DISTINTO expresion .)
    IGUALACION      reduce using rule 44 (expresion -> expresion DISTINTO expresion .)
    DISTINTO        reduce using rule 44 (expresion -> expresion DISTINTO expresion .)
    AND             reduce using rule 44 (expresion -> expresion DISTINTO expresion .)
    OR              reduce using rule 44 (expresion -> expresion DISTINTO expresion .)
    PUNTO           reduce using rule 44 (expresion -> expresion DISTINTO expresion .)
    PTOYCOMA        reduce using rule 44 (expresion -> expresion DISTINTO expresion .)
    error           reduce using rule 44 (expresion -> expresion DISTINTO expresion .)
    ID              reduce using rule 44 (expresion -> expresion DISTINTO expresion .)
    INCREMENTO      reduce using rule 44 (expresion -> expresion DISTINTO expresion .)
    DECREMENTO      reduce using rule 44 (expresion -> expresion DISTINTO expresion .)
    LET             reduce using rule 44 (expresion -> expresion DISTINTO expresion .)
    CONSOLE         reduce using rule 44 (expresion -> expresion DISTINTO expresion .)
    RETURN          reduce using rule 44 (expresion -> expresion DISTINTO expresion .)
    BREAK           reduce using rule 44 (expresion -> expresion DISTINTO expresion .)
    CONTINUE        reduce using rule 44 (expresion -> expresion DISTINTO expresion .)
    IF              reduce using rule 44 (expresion -> expresion DISTINTO expresion .)
    WHILE           reduce using rule 44 (expresion -> expresion DISTINTO expresion .)
    FOR             reduce using rule 44 (expresion -> expresion DISTINTO expresion .)
    $end            reduce using rule 44 (expresion -> expresion DISTINTO expresion .)
    LLADER          reduce using rule 44 (expresion -> expresion DISTINTO expresion .)
    PARDER          reduce using rule 44 (expresion -> expresion DISTINTO expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68

  ! MAS             [ reduce using rule 44 (expresion -> expresion DISTINTO expresion .) ]
  ! MENOS           [ reduce using rule 44 (expresion -> expresion DISTINTO expresion .) ]
  ! POR             [ reduce using rule 44 (expresion -> expresion DISTINTO expresion .) ]
  ! DIVIDIDO        [ reduce using rule 44 (expresion -> expresion DISTINTO expresion .) ]
  ! POTENCIA        [ reduce using rule 44 (expresion -> expresion DISTINTO expresion .) ]
  ! MODULO          [ reduce using rule 44 (expresion -> expresion DISTINTO expresion .) ]
  ! MAYOR           [ shift and go to state 69 ]
  ! MENOR           [ shift and go to state 70 ]
  ! MAYORIGUAL      [ shift and go to state 71 ]
  ! MENORIGUAL      [ shift and go to state 72 ]
  ! IGUALACION      [ shift and go to state 73 ]
  ! DISTINTO        [ shift and go to state 74 ]
  ! AND             [ shift and go to state 75 ]
  ! OR              [ shift and go to state 76 ]
  ! PUNTO           [ shift and go to state 77 ]


state 112

    (45) expresion -> expresion AND expresion .
    (31) expresion -> expresion . MAS expresion
    (32) expresion -> expresion . MENOS expresion
    (33) expresion -> expresion . POR expresion
    (34) expresion -> expresion . DIVIDIDO expresion
    (35) expresion -> expresion . POTENCIA expresion
    (36) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . MAYOR expresion
    (40) expresion -> expresion . MENOR expresion
    (41) expresion -> expresion . MAYORIGUAL expresion
    (42) expresion -> expresion . MENORIGUAL expresion
    (43) expresion -> expresion . IGUALACION expresion
    (44) expresion -> expresion . DISTINTO expresion
    (45) expresion -> expresion . AND expresion
    (46) expresion -> expresion . OR expresion
    (65) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    AND             reduce using rule 45 (expresion -> expresion AND expresion .)
    OR              reduce using rule 45 (expresion -> expresion AND expresion .)
    PUNTO           reduce using rule 45 (expresion -> expresion AND expresion .)
    PTOYCOMA        reduce using rule 45 (expresion -> expresion AND expresion .)
    error           reduce using rule 45 (expresion -> expresion AND expresion .)
    ID              reduce using rule 45 (expresion -> expresion AND expresion .)
    INCREMENTO      reduce using rule 45 (expresion -> expresion AND expresion .)
    DECREMENTO      reduce using rule 45 (expresion -> expresion AND expresion .)
    LET             reduce using rule 45 (expresion -> expresion AND expresion .)
    CONSOLE         reduce using rule 45 (expresion -> expresion AND expresion .)
    RETURN          reduce using rule 45 (expresion -> expresion AND expresion .)
    BREAK           reduce using rule 45 (expresion -> expresion AND expresion .)
    CONTINUE        reduce using rule 45 (expresion -> expresion AND expresion .)
    IF              reduce using rule 45 (expresion -> expresion AND expresion .)
    WHILE           reduce using rule 45 (expresion -> expresion AND expresion .)
    FOR             reduce using rule 45 (expresion -> expresion AND expresion .)
    $end            reduce using rule 45 (expresion -> expresion AND expresion .)
    LLADER          reduce using rule 45 (expresion -> expresion AND expresion .)
    PARDER          reduce using rule 45 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALACION      shift and go to state 73
    DISTINTO        shift and go to state 74

  ! MAS             [ reduce using rule 45 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 45 (expresion -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 45 (expresion -> expresion AND expresion .) ]
  ! DIVIDIDO        [ reduce using rule 45 (expresion -> expresion AND expresion .) ]
  ! POTENCIA        [ reduce using rule 45 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 45 (expresion -> expresion AND expresion .) ]
  ! MAYOR           [ reduce using rule 45 (expresion -> expresion AND expresion .) ]
  ! MENOR           [ reduce using rule 45 (expresion -> expresion AND expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 45 (expresion -> expresion AND expresion .) ]
  ! MENORIGUAL      [ reduce using rule 45 (expresion -> expresion AND expresion .) ]
  ! IGUALACION      [ reduce using rule 45 (expresion -> expresion AND expresion .) ]
  ! DISTINTO        [ reduce using rule 45 (expresion -> expresion AND expresion .) ]
  ! AND             [ shift and go to state 75 ]
  ! OR              [ shift and go to state 76 ]
  ! PUNTO           [ shift and go to state 77 ]


state 113

    (46) expresion -> expresion OR expresion .
    (31) expresion -> expresion . MAS expresion
    (32) expresion -> expresion . MENOS expresion
    (33) expresion -> expresion . POR expresion
    (34) expresion -> expresion . DIVIDIDO expresion
    (35) expresion -> expresion . POTENCIA expresion
    (36) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . MAYOR expresion
    (40) expresion -> expresion . MENOR expresion
    (41) expresion -> expresion . MAYORIGUAL expresion
    (42) expresion -> expresion . MENORIGUAL expresion
    (43) expresion -> expresion . IGUALACION expresion
    (44) expresion -> expresion . DISTINTO expresion
    (45) expresion -> expresion . AND expresion
    (46) expresion -> expresion . OR expresion
    (65) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    OR              reduce using rule 46 (expresion -> expresion OR expresion .)
    PUNTO           reduce using rule 46 (expresion -> expresion OR expresion .)
    PTOYCOMA        reduce using rule 46 (expresion -> expresion OR expresion .)
    error           reduce using rule 46 (expresion -> expresion OR expresion .)
    ID              reduce using rule 46 (expresion -> expresion OR expresion .)
    INCREMENTO      reduce using rule 46 (expresion -> expresion OR expresion .)
    DECREMENTO      reduce using rule 46 (expresion -> expresion OR expresion .)
    LET             reduce using rule 46 (expresion -> expresion OR expresion .)
    CONSOLE         reduce using rule 46 (expresion -> expresion OR expresion .)
    RETURN          reduce using rule 46 (expresion -> expresion OR expresion .)
    BREAK           reduce using rule 46 (expresion -> expresion OR expresion .)
    CONTINUE        reduce using rule 46 (expresion -> expresion OR expresion .)
    IF              reduce using rule 46 (expresion -> expresion OR expresion .)
    WHILE           reduce using rule 46 (expresion -> expresion OR expresion .)
    FOR             reduce using rule 46 (expresion -> expresion OR expresion .)
    $end            reduce using rule 46 (expresion -> expresion OR expresion .)
    LLADER          reduce using rule 46 (expresion -> expresion OR expresion .)
    PARDER          reduce using rule 46 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALACION      shift and go to state 73
    DISTINTO        shift and go to state 74
    AND             shift and go to state 75

  ! MAS             [ reduce using rule 46 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 46 (expresion -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 46 (expresion -> expresion OR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 46 (expresion -> expresion OR expresion .) ]
  ! POTENCIA        [ reduce using rule 46 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 46 (expresion -> expresion OR expresion .) ]
  ! MAYOR           [ reduce using rule 46 (expresion -> expresion OR expresion .) ]
  ! MENOR           [ reduce using rule 46 (expresion -> expresion OR expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 46 (expresion -> expresion OR expresion .) ]
  ! MENORIGUAL      [ reduce using rule 46 (expresion -> expresion OR expresion .) ]
  ! IGUALACION      [ reduce using rule 46 (expresion -> expresion OR expresion .) ]
  ! DISTINTO        [ reduce using rule 46 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 46 (expresion -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 76 ]
  ! PUNTO           [ shift and go to state 77 ]


state 114

    (65) aproximacion -> expresion PUNTO TOFIXED . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 130


state 115

    (66) exponencial -> expresion PUNTO TOEXPONENTIAL . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 131


state 116

    (68) to_minusculas -> expresion PUNTO TOLOWERCASE . PARIZQ PARDER

    PARIZQ          shift and go to state 132


state 117

    (69) to_mayusculas -> expresion PUNTO TOUPPERCASE . PARIZQ PARDER

    PARIZQ          shift and go to state 133


state 118

    (70) separador -> expresion PUNTO SPLIT . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 134


state 119

    (71) concatenacion -> expresion PUNTO CONCAT . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 135


state 120

    (38) expresion -> PARIZQ expresion PARDER .

    MAS             reduce using rule 38 (expresion -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 38 (expresion -> PARIZQ expresion PARDER .)
    POR             reduce using rule 38 (expresion -> PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 38 (expresion -> PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 38 (expresion -> PARIZQ expresion PARDER .)
    MODULO          reduce using rule 38 (expresion -> PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 38 (expresion -> PARIZQ expresion PARDER .)
    MENOR           reduce using rule 38 (expresion -> PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 38 (expresion -> PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 38 (expresion -> PARIZQ expresion PARDER .)
    IGUALACION      reduce using rule 38 (expresion -> PARIZQ expresion PARDER .)
    DISTINTO        reduce using rule 38 (expresion -> PARIZQ expresion PARDER .)
    AND             reduce using rule 38 (expresion -> PARIZQ expresion PARDER .)
    OR              reduce using rule 38 (expresion -> PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 38 (expresion -> PARIZQ expresion PARDER .)
    PTOYCOMA        reduce using rule 38 (expresion -> PARIZQ expresion PARDER .)
    error           reduce using rule 38 (expresion -> PARIZQ expresion PARDER .)
    ID              reduce using rule 38 (expresion -> PARIZQ expresion PARDER .)
    INCREMENTO      reduce using rule 38 (expresion -> PARIZQ expresion PARDER .)
    DECREMENTO      reduce using rule 38 (expresion -> PARIZQ expresion PARDER .)
    LET             reduce using rule 38 (expresion -> PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 38 (expresion -> PARIZQ expresion PARDER .)
    RETURN          reduce using rule 38 (expresion -> PARIZQ expresion PARDER .)
    BREAK           reduce using rule 38 (expresion -> PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 38 (expresion -> PARIZQ expresion PARDER .)
    IF              reduce using rule 38 (expresion -> PARIZQ expresion PARDER .)
    WHILE           reduce using rule 38 (expresion -> PARIZQ expresion PARDER .)
    FOR             reduce using rule 38 (expresion -> PARIZQ expresion PARDER .)
    $end            reduce using rule 38 (expresion -> PARIZQ expresion PARDER .)
    LLADER          reduce using rule 38 (expresion -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 38 (expresion -> PARIZQ expresion PARDER .)


state 121

    (67) expresion -> ID PUNTO TOSTRING . PARIZQ PARDER

    PARIZQ          shift and go to state 136


state 122

    (72) casteo_string -> CAST_STRING PARIZQ expresion . PARDER
    (31) expresion -> expresion . MAS expresion
    (32) expresion -> expresion . MENOS expresion
    (33) expresion -> expresion . POR expresion
    (34) expresion -> expresion . DIVIDIDO expresion
    (35) expresion -> expresion . POTENCIA expresion
    (36) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . MAYOR expresion
    (40) expresion -> expresion . MENOR expresion
    (41) expresion -> expresion . MAYORIGUAL expresion
    (42) expresion -> expresion . MENORIGUAL expresion
    (43) expresion -> expresion . IGUALACION expresion
    (44) expresion -> expresion . DISTINTO expresion
    (45) expresion -> expresion . AND expresion
    (46) expresion -> expresion . OR expresion
    (65) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 137
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALACION      shift and go to state 73
    DISTINTO        shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76
    PUNTO           shift and go to state 77


state 123

    (81) condicional_if -> IF PARIZQ expresion PARDER . bloque
    (82) condicional_if -> IF PARIZQ expresion PARDER . bloque ELSE bloque
    (83) condicional_if -> IF PARIZQ expresion PARDER . bloque lista_elif
    (84) condicional_if -> IF PARIZQ expresion PARDER . bloque lista_elif ELSE bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 139

    bloque                         shift and go to state 138

state 124

    (88) ciclo_while -> WHILE PARIZQ expresion PARDER . bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 139

    bloque                         shift and go to state 140

state 125

    (89) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA . expresion PTOYCOMA asignacion PARDER bloque
    (91) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA . expresion PTOYCOMA expresion PARDER bloque
    (31) expresion -> . expresion MAS expresion
    (32) expresion -> . expresion MENOS expresion
    (33) expresion -> . expresion POR expresion
    (34) expresion -> . expresion DIVIDIDO expresion
    (35) expresion -> . expresion POTENCIA expresion
    (36) expresion -> . expresion MODULO expresion
    (37) expresion -> . MENOS expresion
    (38) expresion -> . PARIZQ expresion PARDER
    (39) expresion -> . expresion MAYOR expresion
    (40) expresion -> . expresion MENOR expresion
    (41) expresion -> . expresion MAYORIGUAL expresion
    (42) expresion -> . expresion MENORIGUAL expresion
    (43) expresion -> . expresion IGUALACION expresion
    (44) expresion -> . expresion DISTINTO expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . expresion OR expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . ENTERO
    (49) expresion -> . DECIMAL
    (50) expresion -> . CADENA
    (51) expresion -> . ID
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . ID INCREMENTO
    (55) expresion -> . ID DECREMENTO
    (56) expresion -> . INCREMENTO ID
    (57) expresion -> . DECREMENTO ID
    (58) expresion -> . aproximacion
    (59) expresion -> . exponencial
    (60) expresion -> . to_minusculas
    (61) expresion -> . to_mayusculas
    (62) expresion -> . separador
    (63) expresion -> . concatenacion
    (64) expresion -> . casteo_string
    (67) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (65) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (72) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 37
    PARIZQ          shift and go to state 38
    NOT             shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    CADENA          shift and go to state 42
    ID              shift and go to state 43
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    INCREMENTO      shift and go to state 46
    DECREMENTO      shift and go to state 47
    CAST_STRING     shift and go to state 55

    expresion                      shift and go to state 141
    aproximacion                   shift and go to state 48
    exponencial                    shift and go to state 49
    to_minusculas                  shift and go to state 50
    to_mayusculas                  shift and go to state 51
    separador                      shift and go to state 52
    concatenacion                  shift and go to state 53
    casteo_string                  shift and go to state 54

state 126

    (90) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA . expresion PTOYCOMA asignacion PARDER bloque
    (92) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA . expresion PTOYCOMA expresion PARDER bloque
    (31) expresion -> . expresion MAS expresion
    (32) expresion -> . expresion MENOS expresion
    (33) expresion -> . expresion POR expresion
    (34) expresion -> . expresion DIVIDIDO expresion
    (35) expresion -> . expresion POTENCIA expresion
    (36) expresion -> . expresion MODULO expresion
    (37) expresion -> . MENOS expresion
    (38) expresion -> . PARIZQ expresion PARDER
    (39) expresion -> . expresion MAYOR expresion
    (40) expresion -> . expresion MENOR expresion
    (41) expresion -> . expresion MAYORIGUAL expresion
    (42) expresion -> . expresion MENORIGUAL expresion
    (43) expresion -> . expresion IGUALACION expresion
    (44) expresion -> . expresion DISTINTO expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . expresion OR expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . ENTERO
    (49) expresion -> . DECIMAL
    (50) expresion -> . CADENA
    (51) expresion -> . ID
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . ID INCREMENTO
    (55) expresion -> . ID DECREMENTO
    (56) expresion -> . INCREMENTO ID
    (57) expresion -> . DECREMENTO ID
    (58) expresion -> . aproximacion
    (59) expresion -> . exponencial
    (60) expresion -> . to_minusculas
    (61) expresion -> . to_mayusculas
    (62) expresion -> . separador
    (63) expresion -> . concatenacion
    (64) expresion -> . casteo_string
    (67) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (65) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (72) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 37
    PARIZQ          shift and go to state 38
    NOT             shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    CADENA          shift and go to state 42
    ID              shift and go to state 43
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    INCREMENTO      shift and go to state 46
    DECREMENTO      shift and go to state 47
    CAST_STRING     shift and go to state 55

    expresion                      shift and go to state 142
    aproximacion                   shift and go to state 48
    exponencial                    shift and go to state 49
    to_minusculas                  shift and go to state 50
    to_mayusculas                  shift and go to state 51
    separador                      shift and go to state 52
    concatenacion                  shift and go to state 53
    casteo_string                  shift and go to state 54

state 127

    (93) ciclo_for_of -> FOR PARIZQ LET ID . OF expresion PARDER bloque
    (21) declaracion -> LET ID . DOSPUNTOS tipo IGUAL expresion
    (22) declaracion -> LET ID . IGUAL expresion
    (23) declaracion -> LET ID . DOSPUNTOS tipo
    (24) declaracion -> LET ID .

    OF              shift and go to state 143
    DOSPUNTOS       shift and go to state 60
    IGUAL           shift and go to state 61
    PTOYCOMA        reduce using rule 24 (declaracion -> LET ID .)


state 128

    (21) declaracion -> LET ID DOSPUNTOS tipo IGUAL . expresion
    (31) expresion -> . expresion MAS expresion
    (32) expresion -> . expresion MENOS expresion
    (33) expresion -> . expresion POR expresion
    (34) expresion -> . expresion DIVIDIDO expresion
    (35) expresion -> . expresion POTENCIA expresion
    (36) expresion -> . expresion MODULO expresion
    (37) expresion -> . MENOS expresion
    (38) expresion -> . PARIZQ expresion PARDER
    (39) expresion -> . expresion MAYOR expresion
    (40) expresion -> . expresion MENOR expresion
    (41) expresion -> . expresion MAYORIGUAL expresion
    (42) expresion -> . expresion MENORIGUAL expresion
    (43) expresion -> . expresion IGUALACION expresion
    (44) expresion -> . expresion DISTINTO expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . expresion OR expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . ENTERO
    (49) expresion -> . DECIMAL
    (50) expresion -> . CADENA
    (51) expresion -> . ID
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . ID INCREMENTO
    (55) expresion -> . ID DECREMENTO
    (56) expresion -> . INCREMENTO ID
    (57) expresion -> . DECREMENTO ID
    (58) expresion -> . aproximacion
    (59) expresion -> . exponencial
    (60) expresion -> . to_minusculas
    (61) expresion -> . to_mayusculas
    (62) expresion -> . separador
    (63) expresion -> . concatenacion
    (64) expresion -> . casteo_string
    (67) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (65) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (72) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 37
    PARIZQ          shift and go to state 38
    NOT             shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    CADENA          shift and go to state 42
    ID              shift and go to state 43
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    INCREMENTO      shift and go to state 46
    DECREMENTO      shift and go to state 47
    CAST_STRING     shift and go to state 55

    expresion                      shift and go to state 144
    aproximacion                   shift and go to state 48
    exponencial                    shift and go to state 49
    to_minusculas                  shift and go to state 50
    to_mayusculas                  shift and go to state 51
    separador                      shift and go to state 52
    concatenacion                  shift and go to state 53
    casteo_string                  shift and go to state 54

state 129

    (30) impresion -> CONSOLE PUNTO LOG PARIZQ expresion . PARDER
    (31) expresion -> expresion . MAS expresion
    (32) expresion -> expresion . MENOS expresion
    (33) expresion -> expresion . POR expresion
    (34) expresion -> expresion . DIVIDIDO expresion
    (35) expresion -> expresion . POTENCIA expresion
    (36) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . MAYOR expresion
    (40) expresion -> expresion . MENOR expresion
    (41) expresion -> expresion . MAYORIGUAL expresion
    (42) expresion -> expresion . MENORIGUAL expresion
    (43) expresion -> expresion . IGUALACION expresion
    (44) expresion -> expresion . DISTINTO expresion
    (45) expresion -> expresion . AND expresion
    (46) expresion -> expresion . OR expresion
    (65) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 145
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALACION      shift and go to state 73
    DISTINTO        shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76
    PUNTO           shift and go to state 77


state 130

    (65) aproximacion -> expresion PUNTO TOFIXED PARIZQ . expresion PARDER
    (31) expresion -> . expresion MAS expresion
    (32) expresion -> . expresion MENOS expresion
    (33) expresion -> . expresion POR expresion
    (34) expresion -> . expresion DIVIDIDO expresion
    (35) expresion -> . expresion POTENCIA expresion
    (36) expresion -> . expresion MODULO expresion
    (37) expresion -> . MENOS expresion
    (38) expresion -> . PARIZQ expresion PARDER
    (39) expresion -> . expresion MAYOR expresion
    (40) expresion -> . expresion MENOR expresion
    (41) expresion -> . expresion MAYORIGUAL expresion
    (42) expresion -> . expresion MENORIGUAL expresion
    (43) expresion -> . expresion IGUALACION expresion
    (44) expresion -> . expresion DISTINTO expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . expresion OR expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . ENTERO
    (49) expresion -> . DECIMAL
    (50) expresion -> . CADENA
    (51) expresion -> . ID
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . ID INCREMENTO
    (55) expresion -> . ID DECREMENTO
    (56) expresion -> . INCREMENTO ID
    (57) expresion -> . DECREMENTO ID
    (58) expresion -> . aproximacion
    (59) expresion -> . exponencial
    (60) expresion -> . to_minusculas
    (61) expresion -> . to_mayusculas
    (62) expresion -> . separador
    (63) expresion -> . concatenacion
    (64) expresion -> . casteo_string
    (67) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (65) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (72) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 37
    PARIZQ          shift and go to state 38
    NOT             shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    CADENA          shift and go to state 42
    ID              shift and go to state 43
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    INCREMENTO      shift and go to state 46
    DECREMENTO      shift and go to state 47
    CAST_STRING     shift and go to state 55

    expresion                      shift and go to state 146
    aproximacion                   shift and go to state 48
    exponencial                    shift and go to state 49
    to_minusculas                  shift and go to state 50
    to_mayusculas                  shift and go to state 51
    separador                      shift and go to state 52
    concatenacion                  shift and go to state 53
    casteo_string                  shift and go to state 54

state 131

    (66) exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ . expresion PARDER
    (31) expresion -> . expresion MAS expresion
    (32) expresion -> . expresion MENOS expresion
    (33) expresion -> . expresion POR expresion
    (34) expresion -> . expresion DIVIDIDO expresion
    (35) expresion -> . expresion POTENCIA expresion
    (36) expresion -> . expresion MODULO expresion
    (37) expresion -> . MENOS expresion
    (38) expresion -> . PARIZQ expresion PARDER
    (39) expresion -> . expresion MAYOR expresion
    (40) expresion -> . expresion MENOR expresion
    (41) expresion -> . expresion MAYORIGUAL expresion
    (42) expresion -> . expresion MENORIGUAL expresion
    (43) expresion -> . expresion IGUALACION expresion
    (44) expresion -> . expresion DISTINTO expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . expresion OR expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . ENTERO
    (49) expresion -> . DECIMAL
    (50) expresion -> . CADENA
    (51) expresion -> . ID
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . ID INCREMENTO
    (55) expresion -> . ID DECREMENTO
    (56) expresion -> . INCREMENTO ID
    (57) expresion -> . DECREMENTO ID
    (58) expresion -> . aproximacion
    (59) expresion -> . exponencial
    (60) expresion -> . to_minusculas
    (61) expresion -> . to_mayusculas
    (62) expresion -> . separador
    (63) expresion -> . concatenacion
    (64) expresion -> . casteo_string
    (67) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (65) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (72) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 37
    PARIZQ          shift and go to state 38
    NOT             shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    CADENA          shift and go to state 42
    ID              shift and go to state 43
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    INCREMENTO      shift and go to state 46
    DECREMENTO      shift and go to state 47
    CAST_STRING     shift and go to state 55

    expresion                      shift and go to state 147
    aproximacion                   shift and go to state 48
    exponencial                    shift and go to state 49
    to_minusculas                  shift and go to state 50
    to_mayusculas                  shift and go to state 51
    separador                      shift and go to state 52
    concatenacion                  shift and go to state 53
    casteo_string                  shift and go to state 54

state 132

    (68) to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ . PARDER

    PARDER          shift and go to state 148


state 133

    (69) to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ . PARDER

    PARDER          shift and go to state 149


state 134

    (70) separador -> expresion PUNTO SPLIT PARIZQ . expresion PARDER
    (31) expresion -> . expresion MAS expresion
    (32) expresion -> . expresion MENOS expresion
    (33) expresion -> . expresion POR expresion
    (34) expresion -> . expresion DIVIDIDO expresion
    (35) expresion -> . expresion POTENCIA expresion
    (36) expresion -> . expresion MODULO expresion
    (37) expresion -> . MENOS expresion
    (38) expresion -> . PARIZQ expresion PARDER
    (39) expresion -> . expresion MAYOR expresion
    (40) expresion -> . expresion MENOR expresion
    (41) expresion -> . expresion MAYORIGUAL expresion
    (42) expresion -> . expresion MENORIGUAL expresion
    (43) expresion -> . expresion IGUALACION expresion
    (44) expresion -> . expresion DISTINTO expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . expresion OR expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . ENTERO
    (49) expresion -> . DECIMAL
    (50) expresion -> . CADENA
    (51) expresion -> . ID
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . ID INCREMENTO
    (55) expresion -> . ID DECREMENTO
    (56) expresion -> . INCREMENTO ID
    (57) expresion -> . DECREMENTO ID
    (58) expresion -> . aproximacion
    (59) expresion -> . exponencial
    (60) expresion -> . to_minusculas
    (61) expresion -> . to_mayusculas
    (62) expresion -> . separador
    (63) expresion -> . concatenacion
    (64) expresion -> . casteo_string
    (67) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (65) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (72) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 37
    PARIZQ          shift and go to state 38
    NOT             shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    CADENA          shift and go to state 42
    ID              shift and go to state 43
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    INCREMENTO      shift and go to state 46
    DECREMENTO      shift and go to state 47
    CAST_STRING     shift and go to state 55

    expresion                      shift and go to state 150
    aproximacion                   shift and go to state 48
    exponencial                    shift and go to state 49
    to_minusculas                  shift and go to state 50
    to_mayusculas                  shift and go to state 51
    separador                      shift and go to state 52
    concatenacion                  shift and go to state 53
    casteo_string                  shift and go to state 54

state 135

    (71) concatenacion -> expresion PUNTO CONCAT PARIZQ . expresion PARDER
    (31) expresion -> . expresion MAS expresion
    (32) expresion -> . expresion MENOS expresion
    (33) expresion -> . expresion POR expresion
    (34) expresion -> . expresion DIVIDIDO expresion
    (35) expresion -> . expresion POTENCIA expresion
    (36) expresion -> . expresion MODULO expresion
    (37) expresion -> . MENOS expresion
    (38) expresion -> . PARIZQ expresion PARDER
    (39) expresion -> . expresion MAYOR expresion
    (40) expresion -> . expresion MENOR expresion
    (41) expresion -> . expresion MAYORIGUAL expresion
    (42) expresion -> . expresion MENORIGUAL expresion
    (43) expresion -> . expresion IGUALACION expresion
    (44) expresion -> . expresion DISTINTO expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . expresion OR expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . ENTERO
    (49) expresion -> . DECIMAL
    (50) expresion -> . CADENA
    (51) expresion -> . ID
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . ID INCREMENTO
    (55) expresion -> . ID DECREMENTO
    (56) expresion -> . INCREMENTO ID
    (57) expresion -> . DECREMENTO ID
    (58) expresion -> . aproximacion
    (59) expresion -> . exponencial
    (60) expresion -> . to_minusculas
    (61) expresion -> . to_mayusculas
    (62) expresion -> . separador
    (63) expresion -> . concatenacion
    (64) expresion -> . casteo_string
    (67) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (65) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (72) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 37
    PARIZQ          shift and go to state 38
    NOT             shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    CADENA          shift and go to state 42
    ID              shift and go to state 43
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    INCREMENTO      shift and go to state 46
    DECREMENTO      shift and go to state 47
    CAST_STRING     shift and go to state 55

    expresion                      shift and go to state 151
    aproximacion                   shift and go to state 48
    exponencial                    shift and go to state 49
    to_minusculas                  shift and go to state 50
    to_mayusculas                  shift and go to state 51
    separador                      shift and go to state 52
    concatenacion                  shift and go to state 53
    casteo_string                  shift and go to state 54

state 136

    (67) expresion -> ID PUNTO TOSTRING PARIZQ . PARDER

    PARDER          shift and go to state 152


state 137

    (72) casteo_string -> CAST_STRING PARIZQ expresion PARDER .

    MAS             reduce using rule 72 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    MENOS           reduce using rule 72 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    POR             reduce using rule 72 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 72 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 72 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    MODULO          reduce using rule 72 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 72 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    MENOR           reduce using rule 72 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 72 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 72 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    IGUALACION      reduce using rule 72 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    DISTINTO        reduce using rule 72 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    AND             reduce using rule 72 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    OR              reduce using rule 72 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 72 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    PTOYCOMA        reduce using rule 72 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    error           reduce using rule 72 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    ID              reduce using rule 72 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    INCREMENTO      reduce using rule 72 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    DECREMENTO      reduce using rule 72 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    LET             reduce using rule 72 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 72 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    RETURN          reduce using rule 72 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    BREAK           reduce using rule 72 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 72 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    IF              reduce using rule 72 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    WHILE           reduce using rule 72 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    FOR             reduce using rule 72 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    $end            reduce using rule 72 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    LLADER          reduce using rule 72 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)
    PARDER          reduce using rule 72 (casteo_string -> CAST_STRING PARIZQ expresion PARDER .)


state 138

    (81) condicional_if -> IF PARIZQ expresion PARDER bloque .
    (82) condicional_if -> IF PARIZQ expresion PARDER bloque . ELSE bloque
    (83) condicional_if -> IF PARIZQ expresion PARDER bloque . lista_elif
    (84) condicional_if -> IF PARIZQ expresion PARDER bloque . lista_elif ELSE bloque
    (85) lista_elif -> . lista_elif elif
    (86) lista_elif -> . elif
    (87) elif -> . ELSE IF PARIZQ expresion PARDER bloque

    PTOYCOMA        reduce using rule 81 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    error           reduce using rule 81 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    ID              reduce using rule 81 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    INCREMENTO      reduce using rule 81 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    DECREMENTO      reduce using rule 81 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    LET             reduce using rule 81 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    CONSOLE         reduce using rule 81 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    RETURN          reduce using rule 81 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    BREAK           reduce using rule 81 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    CONTINUE        reduce using rule 81 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    IF              reduce using rule 81 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    WHILE           reduce using rule 81 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    FOR             reduce using rule 81 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    $end            reduce using rule 81 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    LLADER          reduce using rule 81 (condicional_if -> IF PARIZQ expresion PARDER bloque .)
    ELSE            shift and go to state 153

    lista_elif                     shift and go to state 154
    elif                           shift and go to state 155

state 139

    (9) bloque -> LLAIZQ . instruccion3 LLADER
    (10) bloque -> LLAIZQ . LLADER
    (5) instruccion3 -> . instruccion3 instruccion2
    (6) instruccion3 -> . instruccion3 instruccion2 PTOYCOMA
    (7) instruccion3 -> . instruccion2
    (8) instruccion3 -> . instruccion2 PTOYCOMA
    (11) instruccion2 -> . declaracion
    (12) instruccion2 -> . asignacion
    (13) instruccion2 -> . impresion
    (14) instruccion2 -> . return
    (15) instruccion2 -> . break
    (16) instruccion2 -> . continue
    (17) instruccion2 -> . condicional_if
    (18) instruccion2 -> . ciclo_while
    (19) instruccion2 -> . ciclo_for
    (20) instruccion2 -> . ciclo_for_of
    (26) instruccion2 -> . ID INCREMENTO
    (27) instruccion2 -> . INCREMENTO ID
    (28) instruccion2 -> . ID DECREMENTO
    (29) instruccion2 -> . DECREMENTO ID
    (21) declaracion -> . LET ID DOSPUNTOS tipo IGUAL expresion
    (22) declaracion -> . LET ID IGUAL expresion
    (23) declaracion -> . LET ID DOSPUNTOS tipo
    (24) declaracion -> . LET ID
    (25) asignacion -> . ID IGUAL expresion
    (30) impresion -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER
    (77) return -> . RETURN
    (78) return -> . RETURN expresion
    (80) break -> . BREAK
    (79) continue -> . CONTINUE
    (81) condicional_if -> . IF PARIZQ expresion PARDER bloque
    (82) condicional_if -> . IF PARIZQ expresion PARDER bloque ELSE bloque
    (83) condicional_if -> . IF PARIZQ expresion PARDER bloque lista_elif
    (84) condicional_if -> . IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque
    (88) ciclo_while -> . WHILE PARIZQ expresion PARDER bloque
    (89) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (90) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (91) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (92) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (93) ciclo_for_of -> . FOR PARIZQ LET ID OF expresion PARDER bloque

    LLADER          shift and go to state 157
    ID              shift and go to state 15
    INCREMENTO      shift and go to state 16
    DECREMENTO      shift and go to state 17
    LET             shift and go to state 18
    CONSOLE         shift and go to state 19
    RETURN          shift and go to state 20
    BREAK           shift and go to state 21
    CONTINUE        shift and go to state 22
    IF              shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25

    instruccion3                   shift and go to state 156
    instruccion2                   shift and go to state 158
    declaracion                    shift and go to state 5
    asignacion                     shift and go to state 6
    impresion                      shift and go to state 7
    return                         shift and go to state 8
    break                          shift and go to state 9
    continue                       shift and go to state 10
    condicional_if                 shift and go to state 11
    ciclo_while                    shift and go to state 12
    ciclo_for                      shift and go to state 13
    ciclo_for_of                   shift and go to state 14

state 140

    (88) ciclo_while -> WHILE PARIZQ expresion PARDER bloque .

    PTOYCOMA        reduce using rule 88 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    error           reduce using rule 88 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    ID              reduce using rule 88 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    INCREMENTO      reduce using rule 88 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    DECREMENTO      reduce using rule 88 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    LET             reduce using rule 88 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    CONSOLE         reduce using rule 88 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    RETURN          reduce using rule 88 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    BREAK           reduce using rule 88 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    CONTINUE        reduce using rule 88 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    IF              reduce using rule 88 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    WHILE           reduce using rule 88 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    FOR             reduce using rule 88 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    $end            reduce using rule 88 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    LLADER          reduce using rule 88 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)


state 141

    (89) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion . PTOYCOMA asignacion PARDER bloque
    (91) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion . PTOYCOMA expresion PARDER bloque
    (31) expresion -> expresion . MAS expresion
    (32) expresion -> expresion . MENOS expresion
    (33) expresion -> expresion . POR expresion
    (34) expresion -> expresion . DIVIDIDO expresion
    (35) expresion -> expresion . POTENCIA expresion
    (36) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . MAYOR expresion
    (40) expresion -> expresion . MENOR expresion
    (41) expresion -> expresion . MAYORIGUAL expresion
    (42) expresion -> expresion . MENORIGUAL expresion
    (43) expresion -> expresion . IGUALACION expresion
    (44) expresion -> expresion . DISTINTO expresion
    (45) expresion -> expresion . AND expresion
    (46) expresion -> expresion . OR expresion
    (65) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PTOYCOMA        shift and go to state 159
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALACION      shift and go to state 73
    DISTINTO        shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76
    PUNTO           shift and go to state 77


state 142

    (90) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion . PTOYCOMA asignacion PARDER bloque
    (92) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion . PTOYCOMA expresion PARDER bloque
    (31) expresion -> expresion . MAS expresion
    (32) expresion -> expresion . MENOS expresion
    (33) expresion -> expresion . POR expresion
    (34) expresion -> expresion . DIVIDIDO expresion
    (35) expresion -> expresion . POTENCIA expresion
    (36) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . MAYOR expresion
    (40) expresion -> expresion . MENOR expresion
    (41) expresion -> expresion . MAYORIGUAL expresion
    (42) expresion -> expresion . MENORIGUAL expresion
    (43) expresion -> expresion . IGUALACION expresion
    (44) expresion -> expresion . DISTINTO expresion
    (45) expresion -> expresion . AND expresion
    (46) expresion -> expresion . OR expresion
    (65) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PTOYCOMA        shift and go to state 160
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALACION      shift and go to state 73
    DISTINTO        shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76
    PUNTO           shift and go to state 77


state 143

    (93) ciclo_for_of -> FOR PARIZQ LET ID OF . expresion PARDER bloque
    (31) expresion -> . expresion MAS expresion
    (32) expresion -> . expresion MENOS expresion
    (33) expresion -> . expresion POR expresion
    (34) expresion -> . expresion DIVIDIDO expresion
    (35) expresion -> . expresion POTENCIA expresion
    (36) expresion -> . expresion MODULO expresion
    (37) expresion -> . MENOS expresion
    (38) expresion -> . PARIZQ expresion PARDER
    (39) expresion -> . expresion MAYOR expresion
    (40) expresion -> . expresion MENOR expresion
    (41) expresion -> . expresion MAYORIGUAL expresion
    (42) expresion -> . expresion MENORIGUAL expresion
    (43) expresion -> . expresion IGUALACION expresion
    (44) expresion -> . expresion DISTINTO expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . expresion OR expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . ENTERO
    (49) expresion -> . DECIMAL
    (50) expresion -> . CADENA
    (51) expresion -> . ID
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . ID INCREMENTO
    (55) expresion -> . ID DECREMENTO
    (56) expresion -> . INCREMENTO ID
    (57) expresion -> . DECREMENTO ID
    (58) expresion -> . aproximacion
    (59) expresion -> . exponencial
    (60) expresion -> . to_minusculas
    (61) expresion -> . to_mayusculas
    (62) expresion -> . separador
    (63) expresion -> . concatenacion
    (64) expresion -> . casteo_string
    (67) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (65) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (72) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 37
    PARIZQ          shift and go to state 38
    NOT             shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    CADENA          shift and go to state 42
    ID              shift and go to state 43
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    INCREMENTO      shift and go to state 46
    DECREMENTO      shift and go to state 47
    CAST_STRING     shift and go to state 55

    expresion                      shift and go to state 161
    aproximacion                   shift and go to state 48
    exponencial                    shift and go to state 49
    to_minusculas                  shift and go to state 50
    to_mayusculas                  shift and go to state 51
    separador                      shift and go to state 52
    concatenacion                  shift and go to state 53
    casteo_string                  shift and go to state 54

state 144

    (21) declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .
    (31) expresion -> expresion . MAS expresion
    (32) expresion -> expresion . MENOS expresion
    (33) expresion -> expresion . POR expresion
    (34) expresion -> expresion . DIVIDIDO expresion
    (35) expresion -> expresion . POTENCIA expresion
    (36) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . MAYOR expresion
    (40) expresion -> expresion . MENOR expresion
    (41) expresion -> expresion . MAYORIGUAL expresion
    (42) expresion -> expresion . MENORIGUAL expresion
    (43) expresion -> expresion . IGUALACION expresion
    (44) expresion -> expresion . DISTINTO expresion
    (45) expresion -> expresion . AND expresion
    (46) expresion -> expresion . OR expresion
    (65) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PTOYCOMA        reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    error           reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    ID              reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    INCREMENTO      reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    DECREMENTO      reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    LET             reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    CONSOLE         reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    RETURN          reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    BREAK           reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    CONTINUE        reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    IF              reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    WHILE           reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    FOR             reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    $end            reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    LLADER          reduce using rule 21 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALACION      shift and go to state 73
    DISTINTO        shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76
    PUNTO           shift and go to state 77


state 145

    (30) impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .

    PTOYCOMA        reduce using rule 30 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    error           reduce using rule 30 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    ID              reduce using rule 30 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    INCREMENTO      reduce using rule 30 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    DECREMENTO      reduce using rule 30 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    LET             reduce using rule 30 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 30 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    RETURN          reduce using rule 30 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    BREAK           reduce using rule 30 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 30 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    IF              reduce using rule 30 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    WHILE           reduce using rule 30 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    FOR             reduce using rule 30 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    $end            reduce using rule 30 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    LLADER          reduce using rule 30 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)


state 146

    (65) aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion . PARDER
    (31) expresion -> expresion . MAS expresion
    (32) expresion -> expresion . MENOS expresion
    (33) expresion -> expresion . POR expresion
    (34) expresion -> expresion . DIVIDIDO expresion
    (35) expresion -> expresion . POTENCIA expresion
    (36) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . MAYOR expresion
    (40) expresion -> expresion . MENOR expresion
    (41) expresion -> expresion . MAYORIGUAL expresion
    (42) expresion -> expresion . MENORIGUAL expresion
    (43) expresion -> expresion . IGUALACION expresion
    (44) expresion -> expresion . DISTINTO expresion
    (45) expresion -> expresion . AND expresion
    (46) expresion -> expresion . OR expresion
    (65) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 162
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALACION      shift and go to state 73
    DISTINTO        shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76
    PUNTO           shift and go to state 77


state 147

    (66) exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion . PARDER
    (31) expresion -> expresion . MAS expresion
    (32) expresion -> expresion . MENOS expresion
    (33) expresion -> expresion . POR expresion
    (34) expresion -> expresion . DIVIDIDO expresion
    (35) expresion -> expresion . POTENCIA expresion
    (36) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . MAYOR expresion
    (40) expresion -> expresion . MENOR expresion
    (41) expresion -> expresion . MAYORIGUAL expresion
    (42) expresion -> expresion . MENORIGUAL expresion
    (43) expresion -> expresion . IGUALACION expresion
    (44) expresion -> expresion . DISTINTO expresion
    (45) expresion -> expresion . AND expresion
    (46) expresion -> expresion . OR expresion
    (65) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 163
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALACION      shift and go to state 73
    DISTINTO        shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76
    PUNTO           shift and go to state 77


state 148

    (68) to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .

    MAS             reduce using rule 68 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    MENOS           reduce using rule 68 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    POR             reduce using rule 68 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 68 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    POTENCIA        reduce using rule 68 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    MODULO          reduce using rule 68 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    MAYOR           reduce using rule 68 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    MENOR           reduce using rule 68 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    MAYORIGUAL      reduce using rule 68 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    MENORIGUAL      reduce using rule 68 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    IGUALACION      reduce using rule 68 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    DISTINTO        reduce using rule 68 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    AND             reduce using rule 68 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    OR              reduce using rule 68 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    PUNTO           reduce using rule 68 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    PTOYCOMA        reduce using rule 68 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    error           reduce using rule 68 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    ID              reduce using rule 68 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    INCREMENTO      reduce using rule 68 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    DECREMENTO      reduce using rule 68 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    LET             reduce using rule 68 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    CONSOLE         reduce using rule 68 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    RETURN          reduce using rule 68 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    BREAK           reduce using rule 68 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    CONTINUE        reduce using rule 68 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    IF              reduce using rule 68 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    WHILE           reduce using rule 68 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    FOR             reduce using rule 68 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    $end            reduce using rule 68 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    LLADER          reduce using rule 68 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)
    PARDER          reduce using rule 68 (to_minusculas -> expresion PUNTO TOLOWERCASE PARIZQ PARDER .)


state 149

    (69) to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .

    MAS             reduce using rule 69 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    MENOS           reduce using rule 69 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    POR             reduce using rule 69 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 69 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    POTENCIA        reduce using rule 69 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    MODULO          reduce using rule 69 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    MAYOR           reduce using rule 69 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    MENOR           reduce using rule 69 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    MAYORIGUAL      reduce using rule 69 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    MENORIGUAL      reduce using rule 69 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    IGUALACION      reduce using rule 69 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    DISTINTO        reduce using rule 69 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    AND             reduce using rule 69 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    OR              reduce using rule 69 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    PUNTO           reduce using rule 69 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    PTOYCOMA        reduce using rule 69 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    error           reduce using rule 69 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    ID              reduce using rule 69 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    INCREMENTO      reduce using rule 69 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    DECREMENTO      reduce using rule 69 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    LET             reduce using rule 69 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    CONSOLE         reduce using rule 69 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    RETURN          reduce using rule 69 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    BREAK           reduce using rule 69 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    CONTINUE        reduce using rule 69 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    IF              reduce using rule 69 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    WHILE           reduce using rule 69 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    FOR             reduce using rule 69 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    $end            reduce using rule 69 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    LLADER          reduce using rule 69 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)
    PARDER          reduce using rule 69 (to_mayusculas -> expresion PUNTO TOUPPERCASE PARIZQ PARDER .)


state 150

    (70) separador -> expresion PUNTO SPLIT PARIZQ expresion . PARDER
    (31) expresion -> expresion . MAS expresion
    (32) expresion -> expresion . MENOS expresion
    (33) expresion -> expresion . POR expresion
    (34) expresion -> expresion . DIVIDIDO expresion
    (35) expresion -> expresion . POTENCIA expresion
    (36) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . MAYOR expresion
    (40) expresion -> expresion . MENOR expresion
    (41) expresion -> expresion . MAYORIGUAL expresion
    (42) expresion -> expresion . MENORIGUAL expresion
    (43) expresion -> expresion . IGUALACION expresion
    (44) expresion -> expresion . DISTINTO expresion
    (45) expresion -> expresion . AND expresion
    (46) expresion -> expresion . OR expresion
    (65) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 164
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALACION      shift and go to state 73
    DISTINTO        shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76
    PUNTO           shift and go to state 77


state 151

    (71) concatenacion -> expresion PUNTO CONCAT PARIZQ expresion . PARDER
    (31) expresion -> expresion . MAS expresion
    (32) expresion -> expresion . MENOS expresion
    (33) expresion -> expresion . POR expresion
    (34) expresion -> expresion . DIVIDIDO expresion
    (35) expresion -> expresion . POTENCIA expresion
    (36) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . MAYOR expresion
    (40) expresion -> expresion . MENOR expresion
    (41) expresion -> expresion . MAYORIGUAL expresion
    (42) expresion -> expresion . MENORIGUAL expresion
    (43) expresion -> expresion . IGUALACION expresion
    (44) expresion -> expresion . DISTINTO expresion
    (45) expresion -> expresion . AND expresion
    (46) expresion -> expresion . OR expresion
    (65) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 165
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALACION      shift and go to state 73
    DISTINTO        shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76
    PUNTO           shift and go to state 77


state 152

    (67) expresion -> ID PUNTO TOSTRING PARIZQ PARDER .

    MAS             reduce using rule 67 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    MENOS           reduce using rule 67 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    POR             reduce using rule 67 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 67 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    POTENCIA        reduce using rule 67 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    MODULO          reduce using rule 67 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    MAYOR           reduce using rule 67 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    MENOR           reduce using rule 67 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    MAYORIGUAL      reduce using rule 67 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    MENORIGUAL      reduce using rule 67 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    IGUALACION      reduce using rule 67 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    DISTINTO        reduce using rule 67 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    AND             reduce using rule 67 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    OR              reduce using rule 67 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    PUNTO           reduce using rule 67 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    PTOYCOMA        reduce using rule 67 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    error           reduce using rule 67 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    ID              reduce using rule 67 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    INCREMENTO      reduce using rule 67 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    DECREMENTO      reduce using rule 67 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    LET             reduce using rule 67 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    CONSOLE         reduce using rule 67 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    RETURN          reduce using rule 67 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    BREAK           reduce using rule 67 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    CONTINUE        reduce using rule 67 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    IF              reduce using rule 67 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    WHILE           reduce using rule 67 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    FOR             reduce using rule 67 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    $end            reduce using rule 67 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    LLADER          reduce using rule 67 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)
    PARDER          reduce using rule 67 (expresion -> ID PUNTO TOSTRING PARIZQ PARDER .)


state 153

    (82) condicional_if -> IF PARIZQ expresion PARDER bloque ELSE . bloque
    (87) elif -> ELSE . IF PARIZQ expresion PARDER bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    IF              shift and go to state 166
    LLAIZQ          shift and go to state 139

    bloque                         shift and go to state 167

state 154

    (83) condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .
    (84) condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif . ELSE bloque
    (85) lista_elif -> lista_elif . elif
    (87) elif -> . ELSE IF PARIZQ expresion PARDER bloque

    PTOYCOMA        reduce using rule 83 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    error           reduce using rule 83 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    ID              reduce using rule 83 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    INCREMENTO      reduce using rule 83 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    DECREMENTO      reduce using rule 83 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    LET             reduce using rule 83 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    CONSOLE         reduce using rule 83 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    RETURN          reduce using rule 83 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    BREAK           reduce using rule 83 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    CONTINUE        reduce using rule 83 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    IF              reduce using rule 83 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    WHILE           reduce using rule 83 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    FOR             reduce using rule 83 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    $end            reduce using rule 83 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    LLADER          reduce using rule 83 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif .)
    ELSE            shift and go to state 168

    elif                           shift and go to state 169

state 155

    (86) lista_elif -> elif .

    ELSE            reduce using rule 86 (lista_elif -> elif .)
    PTOYCOMA        reduce using rule 86 (lista_elif -> elif .)
    error           reduce using rule 86 (lista_elif -> elif .)
    ID              reduce using rule 86 (lista_elif -> elif .)
    INCREMENTO      reduce using rule 86 (lista_elif -> elif .)
    DECREMENTO      reduce using rule 86 (lista_elif -> elif .)
    LET             reduce using rule 86 (lista_elif -> elif .)
    CONSOLE         reduce using rule 86 (lista_elif -> elif .)
    RETURN          reduce using rule 86 (lista_elif -> elif .)
    BREAK           reduce using rule 86 (lista_elif -> elif .)
    CONTINUE        reduce using rule 86 (lista_elif -> elif .)
    IF              reduce using rule 86 (lista_elif -> elif .)
    WHILE           reduce using rule 86 (lista_elif -> elif .)
    FOR             reduce using rule 86 (lista_elif -> elif .)
    $end            reduce using rule 86 (lista_elif -> elif .)
    LLADER          reduce using rule 86 (lista_elif -> elif .)


state 156

    (9) bloque -> LLAIZQ instruccion3 . LLADER
    (5) instruccion3 -> instruccion3 . instruccion2
    (6) instruccion3 -> instruccion3 . instruccion2 PTOYCOMA
    (11) instruccion2 -> . declaracion
    (12) instruccion2 -> . asignacion
    (13) instruccion2 -> . impresion
    (14) instruccion2 -> . return
    (15) instruccion2 -> . break
    (16) instruccion2 -> . continue
    (17) instruccion2 -> . condicional_if
    (18) instruccion2 -> . ciclo_while
    (19) instruccion2 -> . ciclo_for
    (20) instruccion2 -> . ciclo_for_of
    (26) instruccion2 -> . ID INCREMENTO
    (27) instruccion2 -> . INCREMENTO ID
    (28) instruccion2 -> . ID DECREMENTO
    (29) instruccion2 -> . DECREMENTO ID
    (21) declaracion -> . LET ID DOSPUNTOS tipo IGUAL expresion
    (22) declaracion -> . LET ID IGUAL expresion
    (23) declaracion -> . LET ID DOSPUNTOS tipo
    (24) declaracion -> . LET ID
    (25) asignacion -> . ID IGUAL expresion
    (30) impresion -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER
    (77) return -> . RETURN
    (78) return -> . RETURN expresion
    (80) break -> . BREAK
    (79) continue -> . CONTINUE
    (81) condicional_if -> . IF PARIZQ expresion PARDER bloque
    (82) condicional_if -> . IF PARIZQ expresion PARDER bloque ELSE bloque
    (83) condicional_if -> . IF PARIZQ expresion PARDER bloque lista_elif
    (84) condicional_if -> . IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque
    (88) ciclo_while -> . WHILE PARIZQ expresion PARDER bloque
    (89) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (90) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (91) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (92) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque
    (93) ciclo_for_of -> . FOR PARIZQ LET ID OF expresion PARDER bloque

    LLADER          shift and go to state 170
    ID              shift and go to state 15
    INCREMENTO      shift and go to state 16
    DECREMENTO      shift and go to state 17
    LET             shift and go to state 18
    CONSOLE         shift and go to state 19
    RETURN          shift and go to state 20
    BREAK           shift and go to state 21
    CONTINUE        shift and go to state 22
    IF              shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25

    instruccion2                   shift and go to state 171
    declaracion                    shift and go to state 5
    asignacion                     shift and go to state 6
    impresion                      shift and go to state 7
    return                         shift and go to state 8
    break                          shift and go to state 9
    continue                       shift and go to state 10
    condicional_if                 shift and go to state 11
    ciclo_while                    shift and go to state 12
    ciclo_for                      shift and go to state 13
    ciclo_for_of                   shift and go to state 14

state 157

    (10) bloque -> LLAIZQ LLADER .

    ELSE            reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    PTOYCOMA        reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    error           reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    ID              reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    INCREMENTO      reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    DECREMENTO      reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    LET             reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    CONSOLE         reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    RETURN          reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    BREAK           reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    CONTINUE        reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    IF              reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    WHILE           reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    FOR             reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    $end            reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    LLADER          reduce using rule 10 (bloque -> LLAIZQ LLADER .)


state 158

    (7) instruccion3 -> instruccion2 .
    (8) instruccion3 -> instruccion2 . PTOYCOMA

    LLADER          reduce using rule 7 (instruccion3 -> instruccion2 .)
    ID              reduce using rule 7 (instruccion3 -> instruccion2 .)
    INCREMENTO      reduce using rule 7 (instruccion3 -> instruccion2 .)
    DECREMENTO      reduce using rule 7 (instruccion3 -> instruccion2 .)
    LET             reduce using rule 7 (instruccion3 -> instruccion2 .)
    CONSOLE         reduce using rule 7 (instruccion3 -> instruccion2 .)
    RETURN          reduce using rule 7 (instruccion3 -> instruccion2 .)
    BREAK           reduce using rule 7 (instruccion3 -> instruccion2 .)
    CONTINUE        reduce using rule 7 (instruccion3 -> instruccion2 .)
    IF              reduce using rule 7 (instruccion3 -> instruccion2 .)
    WHILE           reduce using rule 7 (instruccion3 -> instruccion2 .)
    FOR             reduce using rule 7 (instruccion3 -> instruccion2 .)
    PTOYCOMA        shift and go to state 172


state 159

    (89) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA . asignacion PARDER bloque
    (91) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA . expresion PARDER bloque
    (25) asignacion -> . ID IGUAL expresion
    (31) expresion -> . expresion MAS expresion
    (32) expresion -> . expresion MENOS expresion
    (33) expresion -> . expresion POR expresion
    (34) expresion -> . expresion DIVIDIDO expresion
    (35) expresion -> . expresion POTENCIA expresion
    (36) expresion -> . expresion MODULO expresion
    (37) expresion -> . MENOS expresion
    (38) expresion -> . PARIZQ expresion PARDER
    (39) expresion -> . expresion MAYOR expresion
    (40) expresion -> . expresion MENOR expresion
    (41) expresion -> . expresion MAYORIGUAL expresion
    (42) expresion -> . expresion MENORIGUAL expresion
    (43) expresion -> . expresion IGUALACION expresion
    (44) expresion -> . expresion DISTINTO expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . expresion OR expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . ENTERO
    (49) expresion -> . DECIMAL
    (50) expresion -> . CADENA
    (51) expresion -> . ID
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . ID INCREMENTO
    (55) expresion -> . ID DECREMENTO
    (56) expresion -> . INCREMENTO ID
    (57) expresion -> . DECREMENTO ID
    (58) expresion -> . aproximacion
    (59) expresion -> . exponencial
    (60) expresion -> . to_minusculas
    (61) expresion -> . to_mayusculas
    (62) expresion -> . separador
    (63) expresion -> . concatenacion
    (64) expresion -> . casteo_string
    (67) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (65) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (72) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    ID              shift and go to state 175
    MENOS           shift and go to state 37
    PARIZQ          shift and go to state 38
    NOT             shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    CADENA          shift and go to state 42
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    INCREMENTO      shift and go to state 46
    DECREMENTO      shift and go to state 47
    CAST_STRING     shift and go to state 55

    expresion                      shift and go to state 173
    asignacion                     shift and go to state 174
    aproximacion                   shift and go to state 48
    exponencial                    shift and go to state 49
    to_minusculas                  shift and go to state 50
    to_mayusculas                  shift and go to state 51
    separador                      shift and go to state 52
    concatenacion                  shift and go to state 53
    casteo_string                  shift and go to state 54

state 160

    (90) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA . asignacion PARDER bloque
    (92) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA . expresion PARDER bloque
    (25) asignacion -> . ID IGUAL expresion
    (31) expresion -> . expresion MAS expresion
    (32) expresion -> . expresion MENOS expresion
    (33) expresion -> . expresion POR expresion
    (34) expresion -> . expresion DIVIDIDO expresion
    (35) expresion -> . expresion POTENCIA expresion
    (36) expresion -> . expresion MODULO expresion
    (37) expresion -> . MENOS expresion
    (38) expresion -> . PARIZQ expresion PARDER
    (39) expresion -> . expresion MAYOR expresion
    (40) expresion -> . expresion MENOR expresion
    (41) expresion -> . expresion MAYORIGUAL expresion
    (42) expresion -> . expresion MENORIGUAL expresion
    (43) expresion -> . expresion IGUALACION expresion
    (44) expresion -> . expresion DISTINTO expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . expresion OR expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . ENTERO
    (49) expresion -> . DECIMAL
    (50) expresion -> . CADENA
    (51) expresion -> . ID
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . ID INCREMENTO
    (55) expresion -> . ID DECREMENTO
    (56) expresion -> . INCREMENTO ID
    (57) expresion -> . DECREMENTO ID
    (58) expresion -> . aproximacion
    (59) expresion -> . exponencial
    (60) expresion -> . to_minusculas
    (61) expresion -> . to_mayusculas
    (62) expresion -> . separador
    (63) expresion -> . concatenacion
    (64) expresion -> . casteo_string
    (67) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (65) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (72) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    ID              shift and go to state 175
    MENOS           shift and go to state 37
    PARIZQ          shift and go to state 38
    NOT             shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    CADENA          shift and go to state 42
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    INCREMENTO      shift and go to state 46
    DECREMENTO      shift and go to state 47
    CAST_STRING     shift and go to state 55

    asignacion                     shift and go to state 176
    expresion                      shift and go to state 177
    aproximacion                   shift and go to state 48
    exponencial                    shift and go to state 49
    to_minusculas                  shift and go to state 50
    to_mayusculas                  shift and go to state 51
    separador                      shift and go to state 52
    concatenacion                  shift and go to state 53
    casteo_string                  shift and go to state 54

state 161

    (93) ciclo_for_of -> FOR PARIZQ LET ID OF expresion . PARDER bloque
    (31) expresion -> expresion . MAS expresion
    (32) expresion -> expresion . MENOS expresion
    (33) expresion -> expresion . POR expresion
    (34) expresion -> expresion . DIVIDIDO expresion
    (35) expresion -> expresion . POTENCIA expresion
    (36) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . MAYOR expresion
    (40) expresion -> expresion . MENOR expresion
    (41) expresion -> expresion . MAYORIGUAL expresion
    (42) expresion -> expresion . MENORIGUAL expresion
    (43) expresion -> expresion . IGUALACION expresion
    (44) expresion -> expresion . DISTINTO expresion
    (45) expresion -> expresion . AND expresion
    (46) expresion -> expresion . OR expresion
    (65) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 178
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALACION      shift and go to state 73
    DISTINTO        shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76
    PUNTO           shift and go to state 77


state 162

    (65) aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .

    MAS             reduce using rule 65 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    MENOS           reduce using rule 65 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    POR             reduce using rule 65 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 65 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 65 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    MODULO          reduce using rule 65 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 65 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    MENOR           reduce using rule 65 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 65 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 65 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    IGUALACION      reduce using rule 65 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    DISTINTO        reduce using rule 65 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    AND             reduce using rule 65 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    OR              reduce using rule 65 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 65 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    PTOYCOMA        reduce using rule 65 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    error           reduce using rule 65 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    ID              reduce using rule 65 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    INCREMENTO      reduce using rule 65 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    DECREMENTO      reduce using rule 65 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    LET             reduce using rule 65 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 65 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    RETURN          reduce using rule 65 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    BREAK           reduce using rule 65 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 65 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    IF              reduce using rule 65 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    WHILE           reduce using rule 65 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    FOR             reduce using rule 65 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    $end            reduce using rule 65 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    LLADER          reduce using rule 65 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)
    PARDER          reduce using rule 65 (aproximacion -> expresion PUNTO TOFIXED PARIZQ expresion PARDER .)


state 163

    (66) exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .

    MAS             reduce using rule 66 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    MENOS           reduce using rule 66 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    POR             reduce using rule 66 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 66 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 66 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    MODULO          reduce using rule 66 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 66 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    MENOR           reduce using rule 66 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 66 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 66 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    IGUALACION      reduce using rule 66 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    DISTINTO        reduce using rule 66 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    AND             reduce using rule 66 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    OR              reduce using rule 66 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 66 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    PTOYCOMA        reduce using rule 66 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    error           reduce using rule 66 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    ID              reduce using rule 66 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    INCREMENTO      reduce using rule 66 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    DECREMENTO      reduce using rule 66 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    LET             reduce using rule 66 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 66 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    RETURN          reduce using rule 66 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    BREAK           reduce using rule 66 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 66 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    IF              reduce using rule 66 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    WHILE           reduce using rule 66 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    FOR             reduce using rule 66 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    $end            reduce using rule 66 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    LLADER          reduce using rule 66 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)
    PARDER          reduce using rule 66 (exponencial -> expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER .)


state 164

    (70) separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .

    MAS             reduce using rule 70 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    MENOS           reduce using rule 70 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    POR             reduce using rule 70 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 70 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 70 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    MODULO          reduce using rule 70 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 70 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    MENOR           reduce using rule 70 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 70 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 70 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    IGUALACION      reduce using rule 70 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    DISTINTO        reduce using rule 70 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    AND             reduce using rule 70 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    OR              reduce using rule 70 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 70 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    PTOYCOMA        reduce using rule 70 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    error           reduce using rule 70 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    ID              reduce using rule 70 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    INCREMENTO      reduce using rule 70 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    DECREMENTO      reduce using rule 70 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    LET             reduce using rule 70 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 70 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    RETURN          reduce using rule 70 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    BREAK           reduce using rule 70 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 70 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    IF              reduce using rule 70 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    WHILE           reduce using rule 70 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    FOR             reduce using rule 70 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    $end            reduce using rule 70 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    LLADER          reduce using rule 70 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)
    PARDER          reduce using rule 70 (separador -> expresion PUNTO SPLIT PARIZQ expresion PARDER .)


state 165

    (71) concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .

    MAS             reduce using rule 71 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    MENOS           reduce using rule 71 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    POR             reduce using rule 71 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 71 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 71 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    MODULO          reduce using rule 71 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 71 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    MENOR           reduce using rule 71 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 71 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 71 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    IGUALACION      reduce using rule 71 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    DISTINTO        reduce using rule 71 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    AND             reduce using rule 71 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    OR              reduce using rule 71 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    PUNTO           reduce using rule 71 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    PTOYCOMA        reduce using rule 71 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    error           reduce using rule 71 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    ID              reduce using rule 71 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    INCREMENTO      reduce using rule 71 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    DECREMENTO      reduce using rule 71 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    LET             reduce using rule 71 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 71 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    RETURN          reduce using rule 71 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    BREAK           reduce using rule 71 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 71 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    IF              reduce using rule 71 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    WHILE           reduce using rule 71 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    FOR             reduce using rule 71 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    $end            reduce using rule 71 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    LLADER          reduce using rule 71 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)
    PARDER          reduce using rule 71 (concatenacion -> expresion PUNTO CONCAT PARIZQ expresion PARDER .)


state 166

    (87) elif -> ELSE IF . PARIZQ expresion PARDER bloque

    PARIZQ          shift and go to state 179


state 167

    (82) condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .

    PTOYCOMA        reduce using rule 82 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    error           reduce using rule 82 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    ID              reduce using rule 82 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    INCREMENTO      reduce using rule 82 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    DECREMENTO      reduce using rule 82 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    LET             reduce using rule 82 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    CONSOLE         reduce using rule 82 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    RETURN          reduce using rule 82 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    BREAK           reduce using rule 82 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    CONTINUE        reduce using rule 82 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    IF              reduce using rule 82 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    WHILE           reduce using rule 82 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    FOR             reduce using rule 82 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    $end            reduce using rule 82 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    LLADER          reduce using rule 82 (condicional_if -> IF PARIZQ expresion PARDER bloque ELSE bloque .)


state 168

    (84) condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE . bloque
    (87) elif -> ELSE . IF PARIZQ expresion PARDER bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    IF              shift and go to state 166
    LLAIZQ          shift and go to state 139

    bloque                         shift and go to state 180

state 169

    (85) lista_elif -> lista_elif elif .

    ELSE            reduce using rule 85 (lista_elif -> lista_elif elif .)
    PTOYCOMA        reduce using rule 85 (lista_elif -> lista_elif elif .)
    error           reduce using rule 85 (lista_elif -> lista_elif elif .)
    ID              reduce using rule 85 (lista_elif -> lista_elif elif .)
    INCREMENTO      reduce using rule 85 (lista_elif -> lista_elif elif .)
    DECREMENTO      reduce using rule 85 (lista_elif -> lista_elif elif .)
    LET             reduce using rule 85 (lista_elif -> lista_elif elif .)
    CONSOLE         reduce using rule 85 (lista_elif -> lista_elif elif .)
    RETURN          reduce using rule 85 (lista_elif -> lista_elif elif .)
    BREAK           reduce using rule 85 (lista_elif -> lista_elif elif .)
    CONTINUE        reduce using rule 85 (lista_elif -> lista_elif elif .)
    IF              reduce using rule 85 (lista_elif -> lista_elif elif .)
    WHILE           reduce using rule 85 (lista_elif -> lista_elif elif .)
    FOR             reduce using rule 85 (lista_elif -> lista_elif elif .)
    $end            reduce using rule 85 (lista_elif -> lista_elif elif .)
    LLADER          reduce using rule 85 (lista_elif -> lista_elif elif .)


state 170

    (9) bloque -> LLAIZQ instruccion3 LLADER .

    ELSE            reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    PTOYCOMA        reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    error           reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    ID              reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    INCREMENTO      reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    DECREMENTO      reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    LET             reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    CONSOLE         reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    RETURN          reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    BREAK           reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    CONTINUE        reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    IF              reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    WHILE           reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    FOR             reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    $end            reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)
    LLADER          reduce using rule 9 (bloque -> LLAIZQ instruccion3 LLADER .)


state 171

    (5) instruccion3 -> instruccion3 instruccion2 .
    (6) instruccion3 -> instruccion3 instruccion2 . PTOYCOMA

    LLADER          reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    ID              reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    INCREMENTO      reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    DECREMENTO      reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    LET             reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    CONSOLE         reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    RETURN          reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    BREAK           reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    CONTINUE        reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    IF              reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    WHILE           reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    FOR             reduce using rule 5 (instruccion3 -> instruccion3 instruccion2 .)
    PTOYCOMA        shift and go to state 181


state 172

    (8) instruccion3 -> instruccion2 PTOYCOMA .

    LLADER          reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    ID              reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    INCREMENTO      reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    DECREMENTO      reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    LET             reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    CONSOLE         reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    RETURN          reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    BREAK           reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    CONTINUE        reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    IF              reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    WHILE           reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)
    FOR             reduce using rule 8 (instruccion3 -> instruccion2 PTOYCOMA .)


state 173

    (91) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion . PARDER bloque
    (31) expresion -> expresion . MAS expresion
    (32) expresion -> expresion . MENOS expresion
    (33) expresion -> expresion . POR expresion
    (34) expresion -> expresion . DIVIDIDO expresion
    (35) expresion -> expresion . POTENCIA expresion
    (36) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . MAYOR expresion
    (40) expresion -> expresion . MENOR expresion
    (41) expresion -> expresion . MAYORIGUAL expresion
    (42) expresion -> expresion . MENORIGUAL expresion
    (43) expresion -> expresion . IGUALACION expresion
    (44) expresion -> expresion . DISTINTO expresion
    (45) expresion -> expresion . AND expresion
    (46) expresion -> expresion . OR expresion
    (65) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 182
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALACION      shift and go to state 73
    DISTINTO        shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76
    PUNTO           shift and go to state 77


state 174

    (89) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion . PARDER bloque

    PARDER          shift and go to state 183


state 175

    (25) asignacion -> ID . IGUAL expresion
    (51) expresion -> ID .
    (54) expresion -> ID . INCREMENTO
    (55) expresion -> ID . DECREMENTO
    (67) expresion -> ID . PUNTO TOSTRING PARIZQ PARDER

  ! shift/reduce conflict for PUNTO resolved as shift
    IGUAL           shift and go to state 31
    PARDER          reduce using rule 51 (expresion -> ID .)
    MAS             reduce using rule 51 (expresion -> ID .)
    MENOS           reduce using rule 51 (expresion -> ID .)
    POR             reduce using rule 51 (expresion -> ID .)
    DIVIDIDO        reduce using rule 51 (expresion -> ID .)
    POTENCIA        reduce using rule 51 (expresion -> ID .)
    MODULO          reduce using rule 51 (expresion -> ID .)
    MAYOR           reduce using rule 51 (expresion -> ID .)
    MENOR           reduce using rule 51 (expresion -> ID .)
    MAYORIGUAL      reduce using rule 51 (expresion -> ID .)
    MENORIGUAL      reduce using rule 51 (expresion -> ID .)
    IGUALACION      reduce using rule 51 (expresion -> ID .)
    DISTINTO        reduce using rule 51 (expresion -> ID .)
    AND             reduce using rule 51 (expresion -> ID .)
    OR              reduce using rule 51 (expresion -> ID .)
    INCREMENTO      shift and go to state 81
    DECREMENTO      shift and go to state 82
    PUNTO           shift and go to state 83

  ! PUNTO           [ reduce using rule 51 (expresion -> ID .) ]


state 176

    (90) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion . PARDER bloque

    PARDER          shift and go to state 184


state 177

    (92) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion . PARDER bloque
    (31) expresion -> expresion . MAS expresion
    (32) expresion -> expresion . MENOS expresion
    (33) expresion -> expresion . POR expresion
    (34) expresion -> expresion . DIVIDIDO expresion
    (35) expresion -> expresion . POTENCIA expresion
    (36) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . MAYOR expresion
    (40) expresion -> expresion . MENOR expresion
    (41) expresion -> expresion . MAYORIGUAL expresion
    (42) expresion -> expresion . MENORIGUAL expresion
    (43) expresion -> expresion . IGUALACION expresion
    (44) expresion -> expresion . DISTINTO expresion
    (45) expresion -> expresion . AND expresion
    (46) expresion -> expresion . OR expresion
    (65) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 185
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALACION      shift and go to state 73
    DISTINTO        shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76
    PUNTO           shift and go to state 77


state 178

    (93) ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER . bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 139

    bloque                         shift and go to state 186

state 179

    (87) elif -> ELSE IF PARIZQ . expresion PARDER bloque
    (31) expresion -> . expresion MAS expresion
    (32) expresion -> . expresion MENOS expresion
    (33) expresion -> . expresion POR expresion
    (34) expresion -> . expresion DIVIDIDO expresion
    (35) expresion -> . expresion POTENCIA expresion
    (36) expresion -> . expresion MODULO expresion
    (37) expresion -> . MENOS expresion
    (38) expresion -> . PARIZQ expresion PARDER
    (39) expresion -> . expresion MAYOR expresion
    (40) expresion -> . expresion MENOR expresion
    (41) expresion -> . expresion MAYORIGUAL expresion
    (42) expresion -> . expresion MENORIGUAL expresion
    (43) expresion -> . expresion IGUALACION expresion
    (44) expresion -> . expresion DISTINTO expresion
    (45) expresion -> . expresion AND expresion
    (46) expresion -> . expresion OR expresion
    (47) expresion -> . NOT expresion
    (48) expresion -> . ENTERO
    (49) expresion -> . DECIMAL
    (50) expresion -> . CADENA
    (51) expresion -> . ID
    (52) expresion -> . TRUE
    (53) expresion -> . FALSE
    (54) expresion -> . ID INCREMENTO
    (55) expresion -> . ID DECREMENTO
    (56) expresion -> . INCREMENTO ID
    (57) expresion -> . DECREMENTO ID
    (58) expresion -> . aproximacion
    (59) expresion -> . exponencial
    (60) expresion -> . to_minusculas
    (61) expresion -> . to_mayusculas
    (62) expresion -> . separador
    (63) expresion -> . concatenacion
    (64) expresion -> . casteo_string
    (67) expresion -> . ID PUNTO TOSTRING PARIZQ PARDER
    (65) aproximacion -> . expresion PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> . expresion PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> . expresion PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> . expresion PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> . expresion PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> . expresion PUNTO CONCAT PARIZQ expresion PARDER
    (72) casteo_string -> . CAST_STRING PARIZQ expresion PARDER

    MENOS           shift and go to state 37
    PARIZQ          shift and go to state 38
    NOT             shift and go to state 39
    ENTERO          shift and go to state 40
    DECIMAL         shift and go to state 41
    CADENA          shift and go to state 42
    ID              shift and go to state 43
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    INCREMENTO      shift and go to state 46
    DECREMENTO      shift and go to state 47
    CAST_STRING     shift and go to state 55

    expresion                      shift and go to state 187
    aproximacion                   shift and go to state 48
    exponencial                    shift and go to state 49
    to_minusculas                  shift and go to state 50
    to_mayusculas                  shift and go to state 51
    separador                      shift and go to state 52
    concatenacion                  shift and go to state 53
    casteo_string                  shift and go to state 54

state 180

    (84) condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .

    PTOYCOMA        reduce using rule 84 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    error           reduce using rule 84 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    ID              reduce using rule 84 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    INCREMENTO      reduce using rule 84 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    DECREMENTO      reduce using rule 84 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    LET             reduce using rule 84 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    CONSOLE         reduce using rule 84 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    RETURN          reduce using rule 84 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    BREAK           reduce using rule 84 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    CONTINUE        reduce using rule 84 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    IF              reduce using rule 84 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    WHILE           reduce using rule 84 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    FOR             reduce using rule 84 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    $end            reduce using rule 84 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    LLADER          reduce using rule 84 (condicional_if -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)


state 181

    (6) instruccion3 -> instruccion3 instruccion2 PTOYCOMA .

    LLADER          reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    ID              reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    INCREMENTO      reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    DECREMENTO      reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    LET             reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    CONSOLE         reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    RETURN          reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    BREAK           reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    CONTINUE        reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    IF              reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    WHILE           reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)
    FOR             reduce using rule 6 (instruccion3 -> instruccion3 instruccion2 PTOYCOMA .)


state 182

    (91) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER . bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 139

    bloque                         shift and go to state 188

state 183

    (89) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER . bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 139

    bloque                         shift and go to state 189

state 184

    (90) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER . bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 139

    bloque                         shift and go to state 190

state 185

    (92) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER . bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 139

    bloque                         shift and go to state 191

state 186

    (93) ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .

    PTOYCOMA        reduce using rule 93 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    error           reduce using rule 93 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    ID              reduce using rule 93 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    INCREMENTO      reduce using rule 93 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    DECREMENTO      reduce using rule 93 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    LET             reduce using rule 93 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    CONSOLE         reduce using rule 93 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    RETURN          reduce using rule 93 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    BREAK           reduce using rule 93 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    CONTINUE        reduce using rule 93 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    IF              reduce using rule 93 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    WHILE           reduce using rule 93 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    FOR             reduce using rule 93 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    $end            reduce using rule 93 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    LLADER          reduce using rule 93 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)


state 187

    (87) elif -> ELSE IF PARIZQ expresion . PARDER bloque
    (31) expresion -> expresion . MAS expresion
    (32) expresion -> expresion . MENOS expresion
    (33) expresion -> expresion . POR expresion
    (34) expresion -> expresion . DIVIDIDO expresion
    (35) expresion -> expresion . POTENCIA expresion
    (36) expresion -> expresion . MODULO expresion
    (39) expresion -> expresion . MAYOR expresion
    (40) expresion -> expresion . MENOR expresion
    (41) expresion -> expresion . MAYORIGUAL expresion
    (42) expresion -> expresion . MENORIGUAL expresion
    (43) expresion -> expresion . IGUALACION expresion
    (44) expresion -> expresion . DISTINTO expresion
    (45) expresion -> expresion . AND expresion
    (46) expresion -> expresion . OR expresion
    (65) aproximacion -> expresion . PUNTO TOFIXED PARIZQ expresion PARDER
    (66) exponencial -> expresion . PUNTO TOEXPONENTIAL PARIZQ expresion PARDER
    (68) to_minusculas -> expresion . PUNTO TOLOWERCASE PARIZQ PARDER
    (69) to_mayusculas -> expresion . PUNTO TOUPPERCASE PARIZQ PARDER
    (70) separador -> expresion . PUNTO SPLIT PARIZQ expresion PARDER
    (71) concatenacion -> expresion . PUNTO CONCAT PARIZQ expresion PARDER

    PARDER          shift and go to state 192
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIDO        shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MAYOR           shift and go to state 69
    MENOR           shift and go to state 70
    MAYORIGUAL      shift and go to state 71
    MENORIGUAL      shift and go to state 72
    IGUALACION      shift and go to state 73
    DISTINTO        shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76
    PUNTO           shift and go to state 77


state 188

    (91) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .

    PTOYCOMA        reduce using rule 91 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    error           reduce using rule 91 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    ID              reduce using rule 91 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    INCREMENTO      reduce using rule 91 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    DECREMENTO      reduce using rule 91 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    LET             reduce using rule 91 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    CONSOLE         reduce using rule 91 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    RETURN          reduce using rule 91 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    BREAK           reduce using rule 91 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    CONTINUE        reduce using rule 91 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    IF              reduce using rule 91 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    WHILE           reduce using rule 91 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    FOR             reduce using rule 91 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    $end            reduce using rule 91 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    LLADER          reduce using rule 91 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)


state 189

    (89) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .

    PTOYCOMA        reduce using rule 89 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    error           reduce using rule 89 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    ID              reduce using rule 89 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    INCREMENTO      reduce using rule 89 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    DECREMENTO      reduce using rule 89 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    LET             reduce using rule 89 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    CONSOLE         reduce using rule 89 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    RETURN          reduce using rule 89 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    BREAK           reduce using rule 89 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    CONTINUE        reduce using rule 89 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    IF              reduce using rule 89 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    WHILE           reduce using rule 89 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    FOR             reduce using rule 89 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    $end            reduce using rule 89 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    LLADER          reduce using rule 89 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)


state 190

    (90) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .

    PTOYCOMA        reduce using rule 90 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    error           reduce using rule 90 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    ID              reduce using rule 90 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    INCREMENTO      reduce using rule 90 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    DECREMENTO      reduce using rule 90 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    LET             reduce using rule 90 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    CONSOLE         reduce using rule 90 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    RETURN          reduce using rule 90 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    BREAK           reduce using rule 90 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    CONTINUE        reduce using rule 90 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    IF              reduce using rule 90 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    WHILE           reduce using rule 90 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    FOR             reduce using rule 90 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    $end            reduce using rule 90 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    LLADER          reduce using rule 90 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)


state 191

    (92) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .

    PTOYCOMA        reduce using rule 92 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    error           reduce using rule 92 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    ID              reduce using rule 92 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    INCREMENTO      reduce using rule 92 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    DECREMENTO      reduce using rule 92 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    LET             reduce using rule 92 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    CONSOLE         reduce using rule 92 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    RETURN          reduce using rule 92 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    BREAK           reduce using rule 92 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    CONTINUE        reduce using rule 92 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    IF              reduce using rule 92 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    WHILE           reduce using rule 92 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    FOR             reduce using rule 92 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    $end            reduce using rule 92 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)
    LLADER          reduce using rule 92 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA expresion PARDER bloque .)


state 192

    (87) elif -> ELSE IF PARIZQ expresion PARDER . bloque
    (9) bloque -> . LLAIZQ instruccion3 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 139

    bloque                         shift and go to state 193

state 193

    (87) elif -> ELSE IF PARIZQ expresion PARDER bloque .

    ELSE            reduce using rule 87 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    PTOYCOMA        reduce using rule 87 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    error           reduce using rule 87 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    ID              reduce using rule 87 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    INCREMENTO      reduce using rule 87 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    DECREMENTO      reduce using rule 87 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    LET             reduce using rule 87 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    CONSOLE         reduce using rule 87 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    RETURN          reduce using rule 87 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    BREAK           reduce using rule 87 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    CONTINUE        reduce using rule 87 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    IF              reduce using rule 87 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    WHILE           reduce using rule 87 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    FOR             reduce using rule 87 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    $end            reduce using rule 87 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)
    LLADER          reduce using rule 87 (elif -> ELSE IF PARIZQ expresion PARDER bloque .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 20 resolved as shift
WARNING: shift/reduce conflict for INCREMENTO in state 20 resolved as shift
WARNING: shift/reduce conflict for DECREMENTO in state 20 resolved as shift
WARNING: shift/reduce conflict for INCREMENTO in state 43 resolved as shift
WARNING: shift/reduce conflict for DECREMENTO in state 43 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 43 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 175 resolved as shift
