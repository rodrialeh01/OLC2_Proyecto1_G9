Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMENTARIO
    COMENTARIO_MULTILINEA

Grammar

Rule 0     S' -> instrucciones
Rule 1     instrucciones -> instrucciones instruccion
Rule 2     instrucciones -> instruccion
Rule 3     instruccion -> instruccion2
Rule 4     instruccion -> funcion
Rule 5     instruccion2 -> instruccion3 PTOYCOMA
Rule 6     instruccion2 -> instruccion3
Rule 7     instruccion4 -> instruccion4 instruccion2
Rule 8     instruccion4 -> instruccion2
Rule 9     bloque -> LLAIZQ instruccion4 LLADER
Rule 10    bloque -> LLAIZQ LLADER
Rule 11    instruccion3 -> declaracion
Rule 12    instruccion3 -> asignacion
Rule 13    instruccion3 -> impresion
Rule 14    instruccion3 -> condicional
Rule 15    instruccion3 -> ciclo_while
Rule 16    instruccion3 -> ciclo_for
Rule 17    instruccion3 -> ciclo_for_of
Rule 18    instruccion3 -> llamada_funcion
Rule 19    instruccion3 -> return
Rule 20    instruccion3 -> break
Rule 21    instruccion3 -> continue
Rule 22    instruccion3 -> instanciar
Rule 23    instruccion3 -> declaracionInterface
Rule 24    instruccion3 -> declaracionArray
Rule 25    instruccion3 -> asignacion_array
Rule 26    declaracion -> LET ID IGUAL expresion
Rule 27    declaracion -> LET ID
Rule 28    declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion
Rule 29    declaracion -> LET ID DOSPUNTOS tipo
Rule 30    asignacion -> ID IGUAL expresion
Rule 31    asignacion -> dec
Rule 32    asignacion -> inc
Rule 33    asignacion -> asignacionInterface
Rule 34    dec -> ID DECREMENTO
Rule 35    dec -> DECREMENTO ID
Rule 36    inc -> ID INCREMENTO
Rule 37    inc -> INCREMENTO ID
Rule 38    impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER
Rule 39    impresion -> CONSOLE PUNTO LOG PARIZQ lista_argumentos PARDER
Rule 40    condicional -> IF PARIZQ expresion PARDER bloque
Rule 41    condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque
Rule 42    condicional -> IF PARIZQ expresion PARDER bloque lista_elif
Rule 43    condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque
Rule 44    lista_elif -> lista_elif elseif
Rule 45    lista_elif -> elseif
Rule 46    elseif -> ELSE IF PARIZQ expresion PARDER bloque
Rule 47    ciclo_while -> WHILE PARIZQ expresion PARDER bloque
Rule 48    ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
Rule 49    ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
Rule 50    ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque
Rule 51    funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque
Rule 52    funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque
Rule 53    funcion -> FUNCTION ID PARIZQ PARDER bloque
Rule 54    funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS tipo bloque
Rule 55    funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS ID bloque
Rule 56    funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS ID bloque
Rule 57    funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo CORIZQ CORDER bloque
Rule 58    lista_parametros -> lista_parametros COMA parametro
Rule 59    lista_parametros -> parametro
Rule 60    parametro -> ID DOSPUNTOS tipo
Rule 61    parametro -> ID DOSPUNTOS ID
Rule 62    parametro -> ID DOSPUNTOS tipo CORIZQ CORDER
Rule 63    expresion -> llamada_funcion
Rule 64    llamada_funcion -> ID PARIZQ lista_argumentos PARDER
Rule 65    llamada_funcion -> ID PARIZQ PARDER
Rule 66    lista_argumentos -> lista_argumentos COMA expresion
Rule 67    lista_argumentos -> expresion
Rule 68    tipo -> NUMBER
Rule 69    tipo -> STRING
Rule 70    tipo -> BOOLEAN
Rule 71    tipo -> ANY
Rule 72    tipo -> NULL
Rule 73    expresion -> expresion MAS expresion
Rule 74    expresion -> expresion MENOS expresion
Rule 75    expresion -> expresion POR expresion
Rule 76    expresion -> expresion DIVIDIDO expresion
Rule 77    expresion -> expresion MODULO expresion
Rule 78    expresion -> expresion POTENCIA expresion
Rule 79    expresion -> MENOS expresion
Rule 80    expresion -> expresion MAYOR expresion
Rule 81    expresion -> expresion MENOR expresion
Rule 82    expresion -> expresion MAYORIGUAL expresion
Rule 83    expresion -> expresion MENORIGUAL expresion
Rule 84    expresion -> expresion IGUALACION expresion
Rule 85    expresion -> expresion DISTINTO expresion
Rule 86    expresion -> expresion AND expresion
Rule 87    expresion -> expresion OR expresion
Rule 88    expresion -> NOT expresion
Rule 89    expresion -> dec
Rule 90    expresion -> inc
Rule 91    expresion -> casteo
Rule 92    expresion -> PARIZQ expresion PARDER
Rule 93    expresion -> ENTERO
Rule 94    expresion -> DECIMAL
Rule 95    expresion -> CADENA
Rule 96    expresion -> NULL
Rule 97    expresion -> booleano
Rule 98    expresion -> ID
Rule 99    booleano -> TRUE
Rule 100   booleano -> FALSE
Rule 101   expresion -> aproximacion
Rule 102   expresion -> exponencial
Rule 103   expresion -> separador
Rule 104   expresion -> concatenacion
Rule 105   expresion -> to_mayusculas
Rule 106   expresion -> to_minusculas
Rule 107   aproximacion -> TOFIXED PARIZQ expresion COMA expresion PARDER
Rule 108   exponencial -> TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
Rule 109   to_mayusculas -> TOUPPERCASE PARIZQ expresion PARDER
Rule 110   to_minusculas -> TOLOWERCASE PARIZQ expresion PARDER
Rule 111   separador -> SPLIT PARIZQ expresion COMA expresion PARDER
Rule 112   concatenacion -> CONCAT PARIZQ expresion COMA expresion PARDER
Rule 113   instruccion3 -> ID PUNTO PUSH PARIZQ expresion PARDER
Rule 114   casteo -> ID PUNTO TOSTRING PARIZQ PARDER
Rule 115   casteo -> CAST_STRING PARIZQ expresion PARDER
Rule 116   casteo -> CAST_NUMBER PARIZQ expresion PARDER
Rule 117   return -> RETURN expresion
Rule 118   return -> RETURN
Rule 119   break -> BREAK
Rule 120   continue -> CONTINUE
Rule 121   instanciar -> INTERFACE ID bloquestruct
Rule 122   bloquestruct -> LLAIZQ lista_params_struct LLADER
Rule 123   lista_params_struct -> lista_params_struct param_struct
Rule 124   lista_params_struct -> param_struct
Rule 125   param_struct -> ID DOSPUNTOS tipo PTOYCOMA
Rule 126   param_struct -> ID PTOYCOMA
Rule 127   declaracionInterface -> LET ID DOSPUNTOS ID IGUAL expresion_interface
Rule 128   expresion_interface -> LLAIZQ lista_d LLADER
Rule 129   expresion -> expresion_interface
Rule 130   lista_d -> lista_d COMA parDecl
Rule 131   lista_d -> parDecl
Rule 132   parDecl -> ID DOSPUNTOS expresion
Rule 133   expresion -> ID PUNTO ID
Rule 134   asignacionInterface -> ID PUNTO ID IGUAL expresion
Rule 135   declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER
Rule 136   declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER
Rule 137   declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR
Rule 138   declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER
Rule 139   declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER
Rule 140   declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER
Rule 141   declaracionArray -> LET ID IGUAL CORIZQ CORDER
Rule 142   declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion
Rule 143   declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER
Rule 144   declaracionArray -> LET ID DOSPUNTOS ID IGUAL CORIZQ CORDER
Rule 145   declaracionArray -> LET ID DOSPUNTOS ID IGUAL CORIZQ lista_exp CORDER
Rule 146   declaracionArray -> LET ID DOSPUNTOS ID CORIZQ CORDER
Rule 147   declaracionArray -> LET ID DOSPUNTOS ID CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER
Rule 148   lista_exp -> lista_exp COMA expresion
Rule 149   lista_exp -> expresion
Rule 150   expresion -> arreglo
Rule 151   arreglo -> CORIZQ lista_exp CORDER
Rule 152   arreglo -> CORIZQ CORDER
Rule 153   expresion -> acceso_array
Rule 154   acceso_array -> ID lista_acceso_array
Rule 155   expresion -> acceso_array_interface
Rule 156   acceso_array_interface -> ID lista_acceso_array PUNTO ID
Rule 157   lista_acceso_array -> lista_acceso_array acceso_array_exp
Rule 158   lista_acceso_array -> acceso_array_exp
Rule 159   acceso_array_exp -> CORIZQ expresion CORDER
Rule 160   asignacion_array -> ID lista_acceso_array IGUAL expresion
Rule 161   expresion -> TYPEOF PARIZQ expresion PARDER
Rule 162   expresion -> LENGTH PARIZQ expresion PARDER

Terminals, with rules where they appear

AND                  : 86
ANY                  : 71
ARRAY                : 135 136 137
BOOLEAN              : 70
BREAK                : 119
CADENA               : 95
CAST_NUMBER          : 116
CAST_STRING          : 115
COMA                 : 58 66 107 108 111 112 130 148
COMENTARIO           : 
COMENTARIO_MULTILINEA : 
CONCAT               : 112
CONSOLE              : 38 39
CONTINUE             : 120
CORDER               : 57 62 135 136 138 139 139 140 140 141 142 143 144 145 146 147 147 151 152 159
CORIZQ               : 57 62 135 136 138 139 139 140 140 141 142 143 144 145 146 147 147 151 152 159
DECIMAL              : 94
DECREMENTO           : 34 35
DISTINTO             : 85
DIVIDIDO             : 76
DOSPUNTOS            : 28 29 52 54 55 56 57 60 61 62 125 127 132 135 136 137 138 139 140 142 144 145 146 147
ELSE                 : 41 43 46
ENTERO               : 93
FALSE                : 100
FOR                  : 48 49 50
FUNCTION             : 51 52 53 54 55 56 57
ID                   : 26 27 28 29 30 34 35 36 37 50 51 52 53 54 55 55 56 56 57 60 61 61 62 64 65 98 113 114 121 125 126 127 127 132 133 133 134 134 135 136 137 138 139 140 141 142 143 144 144 145 145 146 146 147 147 154 156 156 160
IF                   : 40 41 42 43 46
IGUAL                : 26 28 30 127 134 135 136 139 140 141 142 143 144 145 147 160
IGUALACION           : 84
INCREMENTO           : 36 37
INTERFACE            : 121
LENGTH               : 162
LET                  : 26 27 28 29 50 127 135 136 137 138 139 140 141 142 143 144 145 146 147
LLADER               : 9 10 122 128
LLAIZQ               : 9 10 122 128
LOG                  : 38 39
MAS                  : 73
MAYOR                : 80 135 136 137
MAYORIGUAL           : 82
MENOR                : 81 135 136 137
MENORIGUAL           : 83
MENOS                : 74 79
MODULO               : 77
NOT                  : 88
NULL                 : 72 96
NUMBER               : 68
OF                   : 50
OR                   : 87
PARDER               : 38 39 40 41 42 43 46 47 48 49 50 51 52 53 54 55 56 57 64 65 92 107 108 109 110 111 112 113 114 115 116 161 162
PARIZQ               : 38 39 40 41 42 43 46 47 48 49 50 51 52 53 54 55 56 57 64 65 92 107 108 109 110 111 112 113 114 115 116 161 162
POR                  : 75
POTENCIA             : 78
PTOYCOMA             : 5 48 48 49 49 125 126
PUNTO                : 38 39 113 114 133 134 156
PUSH                 : 113
RETURN               : 117 118
SPLIT                : 111
STRING               : 69
TOEXPONENTIAL        : 108
TOFIXED              : 107
TOLOWERCASE          : 110
TOSTRING             : 114
TOUPPERCASE          : 109
TRUE                 : 99
TYPEOF               : 161
WHILE                : 47
error                : 

Nonterminals, with rules where they appear

acceso_array         : 153
acceso_array_exp     : 157 158
acceso_array_interface : 155
aproximacion         : 101
arreglo              : 150
asignacion           : 12 48 49 49
asignacionInterface  : 33
asignacion_array     : 25
bloque               : 40 41 41 42 43 43 46 47 48 49 50 51 52 53 54 55 56 57
bloquestruct         : 121
booleano             : 97
break                : 20
casteo               : 91
ciclo_for            : 16
ciclo_for_of         : 17
ciclo_while          : 15
concatenacion        : 104
condicional          : 14
continue             : 21
dec                  : 31 89
declaracion          : 11 48
declaracionArray     : 24
declaracionInterface : 23
elseif               : 44 45
exponencial          : 102
expresion            : 26 28 30 38 40 41 42 43 46 47 48 49 50 66 67 73 73 74 74 75 75 76 76 77 77 78 78 79 80 80 81 81 82 82 83 83 84 84 85 85 86 86 87 87 88 92 107 107 108 108 109 110 111 111 112 112 113 115 116 117 132 134 142 148 149 159 160 161 162
expresion_interface  : 127 129
funcion              : 4
impresion            : 13
inc                  : 32 90
instanciar           : 22
instruccion          : 1 2
instruccion2         : 3 7 8
instruccion3         : 5 6
instruccion4         : 7 9
instrucciones        : 1 0
lista_acceso_array   : 154 156 157 160
lista_argumentos     : 39 64 66
lista_d              : 128 130
lista_elif           : 42 43 44
lista_exp            : 135 139 143 145 147 148 151
lista_parametros     : 51 52 56 57 58
lista_params_struct  : 122 123
llamada_funcion      : 18 63
parDecl              : 130 131
param_struct         : 123 124
parametro            : 58 59
return               : 19
separador            : 103
tipo                 : 28 29 52 54 57 60 62 125 135 136 137 138 139 140 142
to_mayusculas        : 105
to_minusculas        : 106

Parsing method: LALR

state 0

    (0) S' -> . instrucciones
    (1) instrucciones -> . instrucciones instruccion
    (2) instrucciones -> . instruccion
    (3) instruccion -> . instruccion2
    (4) instruccion -> . funcion
    (5) instruccion2 -> . instruccion3 PTOYCOMA
    (6) instruccion2 -> . instruccion3
    (51) funcion -> . FUNCTION ID PARIZQ lista_parametros PARDER bloque
    (52) funcion -> . FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque
    (53) funcion -> . FUNCTION ID PARIZQ PARDER bloque
    (54) funcion -> . FUNCTION ID PARIZQ PARDER DOSPUNTOS tipo bloque
    (55) funcion -> . FUNCTION ID PARIZQ PARDER DOSPUNTOS ID bloque
    (56) funcion -> . FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS ID bloque
    (57) funcion -> . FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo CORIZQ CORDER bloque
    (11) instruccion3 -> . declaracion
    (12) instruccion3 -> . asignacion
    (13) instruccion3 -> . impresion
    (14) instruccion3 -> . condicional
    (15) instruccion3 -> . ciclo_while
    (16) instruccion3 -> . ciclo_for
    (17) instruccion3 -> . ciclo_for_of
    (18) instruccion3 -> . llamada_funcion
    (19) instruccion3 -> . return
    (20) instruccion3 -> . break
    (21) instruccion3 -> . continue
    (22) instruccion3 -> . instanciar
    (23) instruccion3 -> . declaracionInterface
    (24) instruccion3 -> . declaracionArray
    (25) instruccion3 -> . asignacion_array
    (113) instruccion3 -> . ID PUNTO PUSH PARIZQ expresion PARDER
    (26) declaracion -> . LET ID IGUAL expresion
    (27) declaracion -> . LET ID
    (28) declaracion -> . LET ID DOSPUNTOS tipo IGUAL expresion
    (29) declaracion -> . LET ID DOSPUNTOS tipo
    (30) asignacion -> . ID IGUAL expresion
    (31) asignacion -> . dec
    (32) asignacion -> . inc
    (33) asignacion -> . asignacionInterface
    (38) impresion -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER
    (39) impresion -> . CONSOLE PUNTO LOG PARIZQ lista_argumentos PARDER
    (40) condicional -> . IF PARIZQ expresion PARDER bloque
    (41) condicional -> . IF PARIZQ expresion PARDER bloque ELSE bloque
    (42) condicional -> . IF PARIZQ expresion PARDER bloque lista_elif
    (43) condicional -> . IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque
    (47) ciclo_while -> . WHILE PARIZQ expresion PARDER bloque
    (48) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (49) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (50) ciclo_for_of -> . FOR PARIZQ LET ID OF expresion PARDER bloque
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (117) return -> . RETURN expresion
    (118) return -> . RETURN
    (119) break -> . BREAK
    (120) continue -> . CONTINUE
    (121) instanciar -> . INTERFACE ID bloquestruct
    (127) declaracionInterface -> . LET ID DOSPUNTOS ID IGUAL expresion_interface
    (135) declaracionArray -> . LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER
    (136) declaracionArray -> . LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER
    (137) declaracionArray -> . LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR
    (138) declaracionArray -> . LET ID DOSPUNTOS tipo CORIZQ CORDER
    (139) declaracionArray -> . LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER
    (140) declaracionArray -> . LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER
    (141) declaracionArray -> . LET ID IGUAL CORIZQ CORDER
    (142) declaracionArray -> . LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion
    (143) declaracionArray -> . LET ID IGUAL CORIZQ lista_exp CORDER
    (144) declaracionArray -> . LET ID DOSPUNTOS ID IGUAL CORIZQ CORDER
    (145) declaracionArray -> . LET ID DOSPUNTOS ID IGUAL CORIZQ lista_exp CORDER
    (146) declaracionArray -> . LET ID DOSPUNTOS ID CORIZQ CORDER
    (147) declaracionArray -> . LET ID DOSPUNTOS ID CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER
    (160) asignacion_array -> . ID lista_acceso_array IGUAL expresion
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (134) asignacionInterface -> . ID PUNTO ID IGUAL expresion

    FUNCTION        shift and go to state 6
    ID              shift and go to state 7
    LET             shift and go to state 23
    CONSOLE         shift and go to state 27
    IF              shift and go to state 28
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    RETURN          shift and go to state 31
    BREAK           shift and go to state 32
    CONTINUE        shift and go to state 33
    INTERFACE       shift and go to state 34
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36

    instrucciones                  shift and go to state 1
    instruccion                    shift and go to state 2
    instruccion2                   shift and go to state 3
    funcion                        shift and go to state 4
    instruccion3                   shift and go to state 5
    declaracion                    shift and go to state 8
    asignacion                     shift and go to state 9
    impresion                      shift and go to state 10
    condicional                    shift and go to state 11
    ciclo_while                    shift and go to state 12
    ciclo_for                      shift and go to state 13
    ciclo_for_of                   shift and go to state 14
    llamada_funcion                shift and go to state 15
    return                         shift and go to state 16
    break                          shift and go to state 17
    continue                       shift and go to state 18
    instanciar                     shift and go to state 19
    declaracionInterface           shift and go to state 20
    declaracionArray               shift and go to state 21
    asignacion_array               shift and go to state 22
    dec                            shift and go to state 24
    inc                            shift and go to state 25
    asignacionInterface            shift and go to state 26

state 1

    (0) S' -> instrucciones .
    (1) instrucciones -> instrucciones . instruccion
    (3) instruccion -> . instruccion2
    (4) instruccion -> . funcion
    (5) instruccion2 -> . instruccion3 PTOYCOMA
    (6) instruccion2 -> . instruccion3
    (51) funcion -> . FUNCTION ID PARIZQ lista_parametros PARDER bloque
    (52) funcion -> . FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque
    (53) funcion -> . FUNCTION ID PARIZQ PARDER bloque
    (54) funcion -> . FUNCTION ID PARIZQ PARDER DOSPUNTOS tipo bloque
    (55) funcion -> . FUNCTION ID PARIZQ PARDER DOSPUNTOS ID bloque
    (56) funcion -> . FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS ID bloque
    (57) funcion -> . FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo CORIZQ CORDER bloque
    (11) instruccion3 -> . declaracion
    (12) instruccion3 -> . asignacion
    (13) instruccion3 -> . impresion
    (14) instruccion3 -> . condicional
    (15) instruccion3 -> . ciclo_while
    (16) instruccion3 -> . ciclo_for
    (17) instruccion3 -> . ciclo_for_of
    (18) instruccion3 -> . llamada_funcion
    (19) instruccion3 -> . return
    (20) instruccion3 -> . break
    (21) instruccion3 -> . continue
    (22) instruccion3 -> . instanciar
    (23) instruccion3 -> . declaracionInterface
    (24) instruccion3 -> . declaracionArray
    (25) instruccion3 -> . asignacion_array
    (113) instruccion3 -> . ID PUNTO PUSH PARIZQ expresion PARDER
    (26) declaracion -> . LET ID IGUAL expresion
    (27) declaracion -> . LET ID
    (28) declaracion -> . LET ID DOSPUNTOS tipo IGUAL expresion
    (29) declaracion -> . LET ID DOSPUNTOS tipo
    (30) asignacion -> . ID IGUAL expresion
    (31) asignacion -> . dec
    (32) asignacion -> . inc
    (33) asignacion -> . asignacionInterface
    (38) impresion -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER
    (39) impresion -> . CONSOLE PUNTO LOG PARIZQ lista_argumentos PARDER
    (40) condicional -> . IF PARIZQ expresion PARDER bloque
    (41) condicional -> . IF PARIZQ expresion PARDER bloque ELSE bloque
    (42) condicional -> . IF PARIZQ expresion PARDER bloque lista_elif
    (43) condicional -> . IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque
    (47) ciclo_while -> . WHILE PARIZQ expresion PARDER bloque
    (48) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (49) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (50) ciclo_for_of -> . FOR PARIZQ LET ID OF expresion PARDER bloque
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (117) return -> . RETURN expresion
    (118) return -> . RETURN
    (119) break -> . BREAK
    (120) continue -> . CONTINUE
    (121) instanciar -> . INTERFACE ID bloquestruct
    (127) declaracionInterface -> . LET ID DOSPUNTOS ID IGUAL expresion_interface
    (135) declaracionArray -> . LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER
    (136) declaracionArray -> . LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER
    (137) declaracionArray -> . LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR
    (138) declaracionArray -> . LET ID DOSPUNTOS tipo CORIZQ CORDER
    (139) declaracionArray -> . LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER
    (140) declaracionArray -> . LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER
    (141) declaracionArray -> . LET ID IGUAL CORIZQ CORDER
    (142) declaracionArray -> . LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion
    (143) declaracionArray -> . LET ID IGUAL CORIZQ lista_exp CORDER
    (144) declaracionArray -> . LET ID DOSPUNTOS ID IGUAL CORIZQ CORDER
    (145) declaracionArray -> . LET ID DOSPUNTOS ID IGUAL CORIZQ lista_exp CORDER
    (146) declaracionArray -> . LET ID DOSPUNTOS ID CORIZQ CORDER
    (147) declaracionArray -> . LET ID DOSPUNTOS ID CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER
    (160) asignacion_array -> . ID lista_acceso_array IGUAL expresion
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (134) asignacionInterface -> . ID PUNTO ID IGUAL expresion

    FUNCTION        shift and go to state 6
    ID              shift and go to state 7
    LET             shift and go to state 23
    CONSOLE         shift and go to state 27
    IF              shift and go to state 28
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    RETURN          shift and go to state 31
    BREAK           shift and go to state 32
    CONTINUE        shift and go to state 33
    INTERFACE       shift and go to state 34
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36

    instruccion                    shift and go to state 37
    instruccion2                   shift and go to state 3
    funcion                        shift and go to state 4
    instruccion3                   shift and go to state 5
    declaracion                    shift and go to state 8
    asignacion                     shift and go to state 9
    impresion                      shift and go to state 10
    condicional                    shift and go to state 11
    ciclo_while                    shift and go to state 12
    ciclo_for                      shift and go to state 13
    ciclo_for_of                   shift and go to state 14
    llamada_funcion                shift and go to state 15
    return                         shift and go to state 16
    break                          shift and go to state 17
    continue                       shift and go to state 18
    instanciar                     shift and go to state 19
    declaracionInterface           shift and go to state 20
    declaracionArray               shift and go to state 21
    asignacion_array               shift and go to state 22
    dec                            shift and go to state 24
    inc                            shift and go to state 25
    asignacionInterface            shift and go to state 26

state 2

    (2) instrucciones -> instruccion .

    FUNCTION        reduce using rule 2 (instrucciones -> instruccion .)
    ID              reduce using rule 2 (instrucciones -> instruccion .)
    LET             reduce using rule 2 (instrucciones -> instruccion .)
    CONSOLE         reduce using rule 2 (instrucciones -> instruccion .)
    IF              reduce using rule 2 (instrucciones -> instruccion .)
    WHILE           reduce using rule 2 (instrucciones -> instruccion .)
    FOR             reduce using rule 2 (instrucciones -> instruccion .)
    RETURN          reduce using rule 2 (instrucciones -> instruccion .)
    BREAK           reduce using rule 2 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 2 (instrucciones -> instruccion .)
    INTERFACE       reduce using rule 2 (instrucciones -> instruccion .)
    DECREMENTO      reduce using rule 2 (instrucciones -> instruccion .)
    INCREMENTO      reduce using rule 2 (instrucciones -> instruccion .)
    $end            reduce using rule 2 (instrucciones -> instruccion .)


state 3

    (3) instruccion -> instruccion2 .

    FUNCTION        reduce using rule 3 (instruccion -> instruccion2 .)
    ID              reduce using rule 3 (instruccion -> instruccion2 .)
    LET             reduce using rule 3 (instruccion -> instruccion2 .)
    CONSOLE         reduce using rule 3 (instruccion -> instruccion2 .)
    IF              reduce using rule 3 (instruccion -> instruccion2 .)
    WHILE           reduce using rule 3 (instruccion -> instruccion2 .)
    FOR             reduce using rule 3 (instruccion -> instruccion2 .)
    RETURN          reduce using rule 3 (instruccion -> instruccion2 .)
    BREAK           reduce using rule 3 (instruccion -> instruccion2 .)
    CONTINUE        reduce using rule 3 (instruccion -> instruccion2 .)
    INTERFACE       reduce using rule 3 (instruccion -> instruccion2 .)
    DECREMENTO      reduce using rule 3 (instruccion -> instruccion2 .)
    INCREMENTO      reduce using rule 3 (instruccion -> instruccion2 .)
    $end            reduce using rule 3 (instruccion -> instruccion2 .)


state 4

    (4) instruccion -> funcion .

    FUNCTION        reduce using rule 4 (instruccion -> funcion .)
    ID              reduce using rule 4 (instruccion -> funcion .)
    LET             reduce using rule 4 (instruccion -> funcion .)
    CONSOLE         reduce using rule 4 (instruccion -> funcion .)
    IF              reduce using rule 4 (instruccion -> funcion .)
    WHILE           reduce using rule 4 (instruccion -> funcion .)
    FOR             reduce using rule 4 (instruccion -> funcion .)
    RETURN          reduce using rule 4 (instruccion -> funcion .)
    BREAK           reduce using rule 4 (instruccion -> funcion .)
    CONTINUE        reduce using rule 4 (instruccion -> funcion .)
    INTERFACE       reduce using rule 4 (instruccion -> funcion .)
    DECREMENTO      reduce using rule 4 (instruccion -> funcion .)
    INCREMENTO      reduce using rule 4 (instruccion -> funcion .)
    $end            reduce using rule 4 (instruccion -> funcion .)


state 5

    (5) instruccion2 -> instruccion3 . PTOYCOMA
    (6) instruccion2 -> instruccion3 .

    PTOYCOMA        shift and go to state 38
    FUNCTION        reduce using rule 6 (instruccion2 -> instruccion3 .)
    ID              reduce using rule 6 (instruccion2 -> instruccion3 .)
    LET             reduce using rule 6 (instruccion2 -> instruccion3 .)
    CONSOLE         reduce using rule 6 (instruccion2 -> instruccion3 .)
    IF              reduce using rule 6 (instruccion2 -> instruccion3 .)
    WHILE           reduce using rule 6 (instruccion2 -> instruccion3 .)
    FOR             reduce using rule 6 (instruccion2 -> instruccion3 .)
    RETURN          reduce using rule 6 (instruccion2 -> instruccion3 .)
    BREAK           reduce using rule 6 (instruccion2 -> instruccion3 .)
    CONTINUE        reduce using rule 6 (instruccion2 -> instruccion3 .)
    INTERFACE       reduce using rule 6 (instruccion2 -> instruccion3 .)
    DECREMENTO      reduce using rule 6 (instruccion2 -> instruccion3 .)
    INCREMENTO      reduce using rule 6 (instruccion2 -> instruccion3 .)
    $end            reduce using rule 6 (instruccion2 -> instruccion3 .)
    LLADER          reduce using rule 6 (instruccion2 -> instruccion3 .)


state 6

    (51) funcion -> FUNCTION . ID PARIZQ lista_parametros PARDER bloque
    (52) funcion -> FUNCTION . ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque
    (53) funcion -> FUNCTION . ID PARIZQ PARDER bloque
    (54) funcion -> FUNCTION . ID PARIZQ PARDER DOSPUNTOS tipo bloque
    (55) funcion -> FUNCTION . ID PARIZQ PARDER DOSPUNTOS ID bloque
    (56) funcion -> FUNCTION . ID PARIZQ lista_parametros PARDER DOSPUNTOS ID bloque
    (57) funcion -> FUNCTION . ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo CORIZQ CORDER bloque

    ID              shift and go to state 39


state 7

    (113) instruccion3 -> ID . PUNTO PUSH PARIZQ expresion PARDER
    (30) asignacion -> ID . IGUAL expresion
    (64) llamada_funcion -> ID . PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> ID . PARIZQ PARDER
    (160) asignacion_array -> ID . lista_acceso_array IGUAL expresion
    (34) dec -> ID . DECREMENTO
    (36) inc -> ID . INCREMENTO
    (134) asignacionInterface -> ID . PUNTO ID IGUAL expresion
    (157) lista_acceso_array -> . lista_acceso_array acceso_array_exp
    (158) lista_acceso_array -> . acceso_array_exp
    (159) acceso_array_exp -> . CORIZQ expresion CORDER

    PUNTO           shift and go to state 40
    IGUAL           shift and go to state 42
    PARIZQ          shift and go to state 41
    DECREMENTO      shift and go to state 44
    INCREMENTO      shift and go to state 45
    CORIZQ          shift and go to state 47

    lista_acceso_array             shift and go to state 43
    acceso_array_exp               shift and go to state 46

state 8

    (11) instruccion3 -> declaracion .

    PTOYCOMA        reduce using rule 11 (instruccion3 -> declaracion .)
    FUNCTION        reduce using rule 11 (instruccion3 -> declaracion .)
    ID              reduce using rule 11 (instruccion3 -> declaracion .)
    LET             reduce using rule 11 (instruccion3 -> declaracion .)
    CONSOLE         reduce using rule 11 (instruccion3 -> declaracion .)
    IF              reduce using rule 11 (instruccion3 -> declaracion .)
    WHILE           reduce using rule 11 (instruccion3 -> declaracion .)
    FOR             reduce using rule 11 (instruccion3 -> declaracion .)
    RETURN          reduce using rule 11 (instruccion3 -> declaracion .)
    BREAK           reduce using rule 11 (instruccion3 -> declaracion .)
    CONTINUE        reduce using rule 11 (instruccion3 -> declaracion .)
    INTERFACE       reduce using rule 11 (instruccion3 -> declaracion .)
    DECREMENTO      reduce using rule 11 (instruccion3 -> declaracion .)
    INCREMENTO      reduce using rule 11 (instruccion3 -> declaracion .)
    $end            reduce using rule 11 (instruccion3 -> declaracion .)
    LLADER          reduce using rule 11 (instruccion3 -> declaracion .)


state 9

    (12) instruccion3 -> asignacion .

    PTOYCOMA        reduce using rule 12 (instruccion3 -> asignacion .)
    FUNCTION        reduce using rule 12 (instruccion3 -> asignacion .)
    ID              reduce using rule 12 (instruccion3 -> asignacion .)
    LET             reduce using rule 12 (instruccion3 -> asignacion .)
    CONSOLE         reduce using rule 12 (instruccion3 -> asignacion .)
    IF              reduce using rule 12 (instruccion3 -> asignacion .)
    WHILE           reduce using rule 12 (instruccion3 -> asignacion .)
    FOR             reduce using rule 12 (instruccion3 -> asignacion .)
    RETURN          reduce using rule 12 (instruccion3 -> asignacion .)
    BREAK           reduce using rule 12 (instruccion3 -> asignacion .)
    CONTINUE        reduce using rule 12 (instruccion3 -> asignacion .)
    INTERFACE       reduce using rule 12 (instruccion3 -> asignacion .)
    DECREMENTO      reduce using rule 12 (instruccion3 -> asignacion .)
    INCREMENTO      reduce using rule 12 (instruccion3 -> asignacion .)
    $end            reduce using rule 12 (instruccion3 -> asignacion .)
    LLADER          reduce using rule 12 (instruccion3 -> asignacion .)


state 10

    (13) instruccion3 -> impresion .

    PTOYCOMA        reduce using rule 13 (instruccion3 -> impresion .)
    FUNCTION        reduce using rule 13 (instruccion3 -> impresion .)
    ID              reduce using rule 13 (instruccion3 -> impresion .)
    LET             reduce using rule 13 (instruccion3 -> impresion .)
    CONSOLE         reduce using rule 13 (instruccion3 -> impresion .)
    IF              reduce using rule 13 (instruccion3 -> impresion .)
    WHILE           reduce using rule 13 (instruccion3 -> impresion .)
    FOR             reduce using rule 13 (instruccion3 -> impresion .)
    RETURN          reduce using rule 13 (instruccion3 -> impresion .)
    BREAK           reduce using rule 13 (instruccion3 -> impresion .)
    CONTINUE        reduce using rule 13 (instruccion3 -> impresion .)
    INTERFACE       reduce using rule 13 (instruccion3 -> impresion .)
    DECREMENTO      reduce using rule 13 (instruccion3 -> impresion .)
    INCREMENTO      reduce using rule 13 (instruccion3 -> impresion .)
    $end            reduce using rule 13 (instruccion3 -> impresion .)
    LLADER          reduce using rule 13 (instruccion3 -> impresion .)


state 11

    (14) instruccion3 -> condicional .

    PTOYCOMA        reduce using rule 14 (instruccion3 -> condicional .)
    FUNCTION        reduce using rule 14 (instruccion3 -> condicional .)
    ID              reduce using rule 14 (instruccion3 -> condicional .)
    LET             reduce using rule 14 (instruccion3 -> condicional .)
    CONSOLE         reduce using rule 14 (instruccion3 -> condicional .)
    IF              reduce using rule 14 (instruccion3 -> condicional .)
    WHILE           reduce using rule 14 (instruccion3 -> condicional .)
    FOR             reduce using rule 14 (instruccion3 -> condicional .)
    RETURN          reduce using rule 14 (instruccion3 -> condicional .)
    BREAK           reduce using rule 14 (instruccion3 -> condicional .)
    CONTINUE        reduce using rule 14 (instruccion3 -> condicional .)
    INTERFACE       reduce using rule 14 (instruccion3 -> condicional .)
    DECREMENTO      reduce using rule 14 (instruccion3 -> condicional .)
    INCREMENTO      reduce using rule 14 (instruccion3 -> condicional .)
    $end            reduce using rule 14 (instruccion3 -> condicional .)
    LLADER          reduce using rule 14 (instruccion3 -> condicional .)


state 12

    (15) instruccion3 -> ciclo_while .

    PTOYCOMA        reduce using rule 15 (instruccion3 -> ciclo_while .)
    FUNCTION        reduce using rule 15 (instruccion3 -> ciclo_while .)
    ID              reduce using rule 15 (instruccion3 -> ciclo_while .)
    LET             reduce using rule 15 (instruccion3 -> ciclo_while .)
    CONSOLE         reduce using rule 15 (instruccion3 -> ciclo_while .)
    IF              reduce using rule 15 (instruccion3 -> ciclo_while .)
    WHILE           reduce using rule 15 (instruccion3 -> ciclo_while .)
    FOR             reduce using rule 15 (instruccion3 -> ciclo_while .)
    RETURN          reduce using rule 15 (instruccion3 -> ciclo_while .)
    BREAK           reduce using rule 15 (instruccion3 -> ciclo_while .)
    CONTINUE        reduce using rule 15 (instruccion3 -> ciclo_while .)
    INTERFACE       reduce using rule 15 (instruccion3 -> ciclo_while .)
    DECREMENTO      reduce using rule 15 (instruccion3 -> ciclo_while .)
    INCREMENTO      reduce using rule 15 (instruccion3 -> ciclo_while .)
    $end            reduce using rule 15 (instruccion3 -> ciclo_while .)
    LLADER          reduce using rule 15 (instruccion3 -> ciclo_while .)


state 13

    (16) instruccion3 -> ciclo_for .

    PTOYCOMA        reduce using rule 16 (instruccion3 -> ciclo_for .)
    FUNCTION        reduce using rule 16 (instruccion3 -> ciclo_for .)
    ID              reduce using rule 16 (instruccion3 -> ciclo_for .)
    LET             reduce using rule 16 (instruccion3 -> ciclo_for .)
    CONSOLE         reduce using rule 16 (instruccion3 -> ciclo_for .)
    IF              reduce using rule 16 (instruccion3 -> ciclo_for .)
    WHILE           reduce using rule 16 (instruccion3 -> ciclo_for .)
    FOR             reduce using rule 16 (instruccion3 -> ciclo_for .)
    RETURN          reduce using rule 16 (instruccion3 -> ciclo_for .)
    BREAK           reduce using rule 16 (instruccion3 -> ciclo_for .)
    CONTINUE        reduce using rule 16 (instruccion3 -> ciclo_for .)
    INTERFACE       reduce using rule 16 (instruccion3 -> ciclo_for .)
    DECREMENTO      reduce using rule 16 (instruccion3 -> ciclo_for .)
    INCREMENTO      reduce using rule 16 (instruccion3 -> ciclo_for .)
    $end            reduce using rule 16 (instruccion3 -> ciclo_for .)
    LLADER          reduce using rule 16 (instruccion3 -> ciclo_for .)


state 14

    (17) instruccion3 -> ciclo_for_of .

    PTOYCOMA        reduce using rule 17 (instruccion3 -> ciclo_for_of .)
    FUNCTION        reduce using rule 17 (instruccion3 -> ciclo_for_of .)
    ID              reduce using rule 17 (instruccion3 -> ciclo_for_of .)
    LET             reduce using rule 17 (instruccion3 -> ciclo_for_of .)
    CONSOLE         reduce using rule 17 (instruccion3 -> ciclo_for_of .)
    IF              reduce using rule 17 (instruccion3 -> ciclo_for_of .)
    WHILE           reduce using rule 17 (instruccion3 -> ciclo_for_of .)
    FOR             reduce using rule 17 (instruccion3 -> ciclo_for_of .)
    RETURN          reduce using rule 17 (instruccion3 -> ciclo_for_of .)
    BREAK           reduce using rule 17 (instruccion3 -> ciclo_for_of .)
    CONTINUE        reduce using rule 17 (instruccion3 -> ciclo_for_of .)
    INTERFACE       reduce using rule 17 (instruccion3 -> ciclo_for_of .)
    DECREMENTO      reduce using rule 17 (instruccion3 -> ciclo_for_of .)
    INCREMENTO      reduce using rule 17 (instruccion3 -> ciclo_for_of .)
    $end            reduce using rule 17 (instruccion3 -> ciclo_for_of .)
    LLADER          reduce using rule 17 (instruccion3 -> ciclo_for_of .)


state 15

    (18) instruccion3 -> llamada_funcion .

    PTOYCOMA        reduce using rule 18 (instruccion3 -> llamada_funcion .)
    FUNCTION        reduce using rule 18 (instruccion3 -> llamada_funcion .)
    ID              reduce using rule 18 (instruccion3 -> llamada_funcion .)
    LET             reduce using rule 18 (instruccion3 -> llamada_funcion .)
    CONSOLE         reduce using rule 18 (instruccion3 -> llamada_funcion .)
    IF              reduce using rule 18 (instruccion3 -> llamada_funcion .)
    WHILE           reduce using rule 18 (instruccion3 -> llamada_funcion .)
    FOR             reduce using rule 18 (instruccion3 -> llamada_funcion .)
    RETURN          reduce using rule 18 (instruccion3 -> llamada_funcion .)
    BREAK           reduce using rule 18 (instruccion3 -> llamada_funcion .)
    CONTINUE        reduce using rule 18 (instruccion3 -> llamada_funcion .)
    INTERFACE       reduce using rule 18 (instruccion3 -> llamada_funcion .)
    DECREMENTO      reduce using rule 18 (instruccion3 -> llamada_funcion .)
    INCREMENTO      reduce using rule 18 (instruccion3 -> llamada_funcion .)
    $end            reduce using rule 18 (instruccion3 -> llamada_funcion .)
    LLADER          reduce using rule 18 (instruccion3 -> llamada_funcion .)


state 16

    (19) instruccion3 -> return .

    PTOYCOMA        reduce using rule 19 (instruccion3 -> return .)
    FUNCTION        reduce using rule 19 (instruccion3 -> return .)
    ID              reduce using rule 19 (instruccion3 -> return .)
    LET             reduce using rule 19 (instruccion3 -> return .)
    CONSOLE         reduce using rule 19 (instruccion3 -> return .)
    IF              reduce using rule 19 (instruccion3 -> return .)
    WHILE           reduce using rule 19 (instruccion3 -> return .)
    FOR             reduce using rule 19 (instruccion3 -> return .)
    RETURN          reduce using rule 19 (instruccion3 -> return .)
    BREAK           reduce using rule 19 (instruccion3 -> return .)
    CONTINUE        reduce using rule 19 (instruccion3 -> return .)
    INTERFACE       reduce using rule 19 (instruccion3 -> return .)
    DECREMENTO      reduce using rule 19 (instruccion3 -> return .)
    INCREMENTO      reduce using rule 19 (instruccion3 -> return .)
    $end            reduce using rule 19 (instruccion3 -> return .)
    LLADER          reduce using rule 19 (instruccion3 -> return .)


state 17

    (20) instruccion3 -> break .

    PTOYCOMA        reduce using rule 20 (instruccion3 -> break .)
    FUNCTION        reduce using rule 20 (instruccion3 -> break .)
    ID              reduce using rule 20 (instruccion3 -> break .)
    LET             reduce using rule 20 (instruccion3 -> break .)
    CONSOLE         reduce using rule 20 (instruccion3 -> break .)
    IF              reduce using rule 20 (instruccion3 -> break .)
    WHILE           reduce using rule 20 (instruccion3 -> break .)
    FOR             reduce using rule 20 (instruccion3 -> break .)
    RETURN          reduce using rule 20 (instruccion3 -> break .)
    BREAK           reduce using rule 20 (instruccion3 -> break .)
    CONTINUE        reduce using rule 20 (instruccion3 -> break .)
    INTERFACE       reduce using rule 20 (instruccion3 -> break .)
    DECREMENTO      reduce using rule 20 (instruccion3 -> break .)
    INCREMENTO      reduce using rule 20 (instruccion3 -> break .)
    $end            reduce using rule 20 (instruccion3 -> break .)
    LLADER          reduce using rule 20 (instruccion3 -> break .)


state 18

    (21) instruccion3 -> continue .

    PTOYCOMA        reduce using rule 21 (instruccion3 -> continue .)
    FUNCTION        reduce using rule 21 (instruccion3 -> continue .)
    ID              reduce using rule 21 (instruccion3 -> continue .)
    LET             reduce using rule 21 (instruccion3 -> continue .)
    CONSOLE         reduce using rule 21 (instruccion3 -> continue .)
    IF              reduce using rule 21 (instruccion3 -> continue .)
    WHILE           reduce using rule 21 (instruccion3 -> continue .)
    FOR             reduce using rule 21 (instruccion3 -> continue .)
    RETURN          reduce using rule 21 (instruccion3 -> continue .)
    BREAK           reduce using rule 21 (instruccion3 -> continue .)
    CONTINUE        reduce using rule 21 (instruccion3 -> continue .)
    INTERFACE       reduce using rule 21 (instruccion3 -> continue .)
    DECREMENTO      reduce using rule 21 (instruccion3 -> continue .)
    INCREMENTO      reduce using rule 21 (instruccion3 -> continue .)
    $end            reduce using rule 21 (instruccion3 -> continue .)
    LLADER          reduce using rule 21 (instruccion3 -> continue .)


state 19

    (22) instruccion3 -> instanciar .

    PTOYCOMA        reduce using rule 22 (instruccion3 -> instanciar .)
    FUNCTION        reduce using rule 22 (instruccion3 -> instanciar .)
    ID              reduce using rule 22 (instruccion3 -> instanciar .)
    LET             reduce using rule 22 (instruccion3 -> instanciar .)
    CONSOLE         reduce using rule 22 (instruccion3 -> instanciar .)
    IF              reduce using rule 22 (instruccion3 -> instanciar .)
    WHILE           reduce using rule 22 (instruccion3 -> instanciar .)
    FOR             reduce using rule 22 (instruccion3 -> instanciar .)
    RETURN          reduce using rule 22 (instruccion3 -> instanciar .)
    BREAK           reduce using rule 22 (instruccion3 -> instanciar .)
    CONTINUE        reduce using rule 22 (instruccion3 -> instanciar .)
    INTERFACE       reduce using rule 22 (instruccion3 -> instanciar .)
    DECREMENTO      reduce using rule 22 (instruccion3 -> instanciar .)
    INCREMENTO      reduce using rule 22 (instruccion3 -> instanciar .)
    $end            reduce using rule 22 (instruccion3 -> instanciar .)
    LLADER          reduce using rule 22 (instruccion3 -> instanciar .)


state 20

    (23) instruccion3 -> declaracionInterface .

    PTOYCOMA        reduce using rule 23 (instruccion3 -> declaracionInterface .)
    FUNCTION        reduce using rule 23 (instruccion3 -> declaracionInterface .)
    ID              reduce using rule 23 (instruccion3 -> declaracionInterface .)
    LET             reduce using rule 23 (instruccion3 -> declaracionInterface .)
    CONSOLE         reduce using rule 23 (instruccion3 -> declaracionInterface .)
    IF              reduce using rule 23 (instruccion3 -> declaracionInterface .)
    WHILE           reduce using rule 23 (instruccion3 -> declaracionInterface .)
    FOR             reduce using rule 23 (instruccion3 -> declaracionInterface .)
    RETURN          reduce using rule 23 (instruccion3 -> declaracionInterface .)
    BREAK           reduce using rule 23 (instruccion3 -> declaracionInterface .)
    CONTINUE        reduce using rule 23 (instruccion3 -> declaracionInterface .)
    INTERFACE       reduce using rule 23 (instruccion3 -> declaracionInterface .)
    DECREMENTO      reduce using rule 23 (instruccion3 -> declaracionInterface .)
    INCREMENTO      reduce using rule 23 (instruccion3 -> declaracionInterface .)
    $end            reduce using rule 23 (instruccion3 -> declaracionInterface .)
    LLADER          reduce using rule 23 (instruccion3 -> declaracionInterface .)


state 21

    (24) instruccion3 -> declaracionArray .

    PTOYCOMA        reduce using rule 24 (instruccion3 -> declaracionArray .)
    FUNCTION        reduce using rule 24 (instruccion3 -> declaracionArray .)
    ID              reduce using rule 24 (instruccion3 -> declaracionArray .)
    LET             reduce using rule 24 (instruccion3 -> declaracionArray .)
    CONSOLE         reduce using rule 24 (instruccion3 -> declaracionArray .)
    IF              reduce using rule 24 (instruccion3 -> declaracionArray .)
    WHILE           reduce using rule 24 (instruccion3 -> declaracionArray .)
    FOR             reduce using rule 24 (instruccion3 -> declaracionArray .)
    RETURN          reduce using rule 24 (instruccion3 -> declaracionArray .)
    BREAK           reduce using rule 24 (instruccion3 -> declaracionArray .)
    CONTINUE        reduce using rule 24 (instruccion3 -> declaracionArray .)
    INTERFACE       reduce using rule 24 (instruccion3 -> declaracionArray .)
    DECREMENTO      reduce using rule 24 (instruccion3 -> declaracionArray .)
    INCREMENTO      reduce using rule 24 (instruccion3 -> declaracionArray .)
    $end            reduce using rule 24 (instruccion3 -> declaracionArray .)
    LLADER          reduce using rule 24 (instruccion3 -> declaracionArray .)


state 22

    (25) instruccion3 -> asignacion_array .

    PTOYCOMA        reduce using rule 25 (instruccion3 -> asignacion_array .)
    FUNCTION        reduce using rule 25 (instruccion3 -> asignacion_array .)
    ID              reduce using rule 25 (instruccion3 -> asignacion_array .)
    LET             reduce using rule 25 (instruccion3 -> asignacion_array .)
    CONSOLE         reduce using rule 25 (instruccion3 -> asignacion_array .)
    IF              reduce using rule 25 (instruccion3 -> asignacion_array .)
    WHILE           reduce using rule 25 (instruccion3 -> asignacion_array .)
    FOR             reduce using rule 25 (instruccion3 -> asignacion_array .)
    RETURN          reduce using rule 25 (instruccion3 -> asignacion_array .)
    BREAK           reduce using rule 25 (instruccion3 -> asignacion_array .)
    CONTINUE        reduce using rule 25 (instruccion3 -> asignacion_array .)
    INTERFACE       reduce using rule 25 (instruccion3 -> asignacion_array .)
    DECREMENTO      reduce using rule 25 (instruccion3 -> asignacion_array .)
    INCREMENTO      reduce using rule 25 (instruccion3 -> asignacion_array .)
    $end            reduce using rule 25 (instruccion3 -> asignacion_array .)
    LLADER          reduce using rule 25 (instruccion3 -> asignacion_array .)


state 23

    (26) declaracion -> LET . ID IGUAL expresion
    (27) declaracion -> LET . ID
    (28) declaracion -> LET . ID DOSPUNTOS tipo IGUAL expresion
    (29) declaracion -> LET . ID DOSPUNTOS tipo
    (127) declaracionInterface -> LET . ID DOSPUNTOS ID IGUAL expresion_interface
    (135) declaracionArray -> LET . ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER
    (136) declaracionArray -> LET . ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER
    (137) declaracionArray -> LET . ID DOSPUNTOS ARRAY MENOR tipo MAYOR
    (138) declaracionArray -> LET . ID DOSPUNTOS tipo CORIZQ CORDER
    (139) declaracionArray -> LET . ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER
    (140) declaracionArray -> LET . ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER
    (141) declaracionArray -> LET . ID IGUAL CORIZQ CORDER
    (142) declaracionArray -> LET . ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion
    (143) declaracionArray -> LET . ID IGUAL CORIZQ lista_exp CORDER
    (144) declaracionArray -> LET . ID DOSPUNTOS ID IGUAL CORIZQ CORDER
    (145) declaracionArray -> LET . ID DOSPUNTOS ID IGUAL CORIZQ lista_exp CORDER
    (146) declaracionArray -> LET . ID DOSPUNTOS ID CORIZQ CORDER
    (147) declaracionArray -> LET . ID DOSPUNTOS ID CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER

    ID              shift and go to state 48


state 24

    (31) asignacion -> dec .

    PTOYCOMA        reduce using rule 31 (asignacion -> dec .)
    FUNCTION        reduce using rule 31 (asignacion -> dec .)
    ID              reduce using rule 31 (asignacion -> dec .)
    LET             reduce using rule 31 (asignacion -> dec .)
    CONSOLE         reduce using rule 31 (asignacion -> dec .)
    IF              reduce using rule 31 (asignacion -> dec .)
    WHILE           reduce using rule 31 (asignacion -> dec .)
    FOR             reduce using rule 31 (asignacion -> dec .)
    RETURN          reduce using rule 31 (asignacion -> dec .)
    BREAK           reduce using rule 31 (asignacion -> dec .)
    CONTINUE        reduce using rule 31 (asignacion -> dec .)
    INTERFACE       reduce using rule 31 (asignacion -> dec .)
    DECREMENTO      reduce using rule 31 (asignacion -> dec .)
    INCREMENTO      reduce using rule 31 (asignacion -> dec .)
    $end            reduce using rule 31 (asignacion -> dec .)
    LLADER          reduce using rule 31 (asignacion -> dec .)
    PARDER          reduce using rule 31 (asignacion -> dec .)


state 25

    (32) asignacion -> inc .

    PTOYCOMA        reduce using rule 32 (asignacion -> inc .)
    FUNCTION        reduce using rule 32 (asignacion -> inc .)
    ID              reduce using rule 32 (asignacion -> inc .)
    LET             reduce using rule 32 (asignacion -> inc .)
    CONSOLE         reduce using rule 32 (asignacion -> inc .)
    IF              reduce using rule 32 (asignacion -> inc .)
    WHILE           reduce using rule 32 (asignacion -> inc .)
    FOR             reduce using rule 32 (asignacion -> inc .)
    RETURN          reduce using rule 32 (asignacion -> inc .)
    BREAK           reduce using rule 32 (asignacion -> inc .)
    CONTINUE        reduce using rule 32 (asignacion -> inc .)
    INTERFACE       reduce using rule 32 (asignacion -> inc .)
    DECREMENTO      reduce using rule 32 (asignacion -> inc .)
    INCREMENTO      reduce using rule 32 (asignacion -> inc .)
    $end            reduce using rule 32 (asignacion -> inc .)
    LLADER          reduce using rule 32 (asignacion -> inc .)
    PARDER          reduce using rule 32 (asignacion -> inc .)


state 26

    (33) asignacion -> asignacionInterface .

    PTOYCOMA        reduce using rule 33 (asignacion -> asignacionInterface .)
    FUNCTION        reduce using rule 33 (asignacion -> asignacionInterface .)
    ID              reduce using rule 33 (asignacion -> asignacionInterface .)
    LET             reduce using rule 33 (asignacion -> asignacionInterface .)
    CONSOLE         reduce using rule 33 (asignacion -> asignacionInterface .)
    IF              reduce using rule 33 (asignacion -> asignacionInterface .)
    WHILE           reduce using rule 33 (asignacion -> asignacionInterface .)
    FOR             reduce using rule 33 (asignacion -> asignacionInterface .)
    RETURN          reduce using rule 33 (asignacion -> asignacionInterface .)
    BREAK           reduce using rule 33 (asignacion -> asignacionInterface .)
    CONTINUE        reduce using rule 33 (asignacion -> asignacionInterface .)
    INTERFACE       reduce using rule 33 (asignacion -> asignacionInterface .)
    DECREMENTO      reduce using rule 33 (asignacion -> asignacionInterface .)
    INCREMENTO      reduce using rule 33 (asignacion -> asignacionInterface .)
    $end            reduce using rule 33 (asignacion -> asignacionInterface .)
    LLADER          reduce using rule 33 (asignacion -> asignacionInterface .)
    PARDER          reduce using rule 33 (asignacion -> asignacionInterface .)


state 27

    (38) impresion -> CONSOLE . PUNTO LOG PARIZQ expresion PARDER
    (39) impresion -> CONSOLE . PUNTO LOG PARIZQ lista_argumentos PARDER

    PUNTO           shift and go to state 49


state 28

    (40) condicional -> IF . PARIZQ expresion PARDER bloque
    (41) condicional -> IF . PARIZQ expresion PARDER bloque ELSE bloque
    (42) condicional -> IF . PARIZQ expresion PARDER bloque lista_elif
    (43) condicional -> IF . PARIZQ expresion PARDER bloque lista_elif ELSE bloque

    PARIZQ          shift and go to state 50


state 29

    (47) ciclo_while -> WHILE . PARIZQ expresion PARDER bloque

    PARIZQ          shift and go to state 51


state 30

    (48) ciclo_for -> FOR . PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (49) ciclo_for -> FOR . PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (50) ciclo_for_of -> FOR . PARIZQ LET ID OF expresion PARDER bloque

    PARIZQ          shift and go to state 52


state 31

    (117) return -> RETURN . expresion
    (118) return -> RETURN .
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for DECREMENTO resolved as shift
  ! shift/reduce conflict for INCREMENTO resolved as shift
    PTOYCOMA        reduce using rule 118 (return -> RETURN .)
    FUNCTION        reduce using rule 118 (return -> RETURN .)
    LET             reduce using rule 118 (return -> RETURN .)
    CONSOLE         reduce using rule 118 (return -> RETURN .)
    IF              reduce using rule 118 (return -> RETURN .)
    WHILE           reduce using rule 118 (return -> RETURN .)
    FOR             reduce using rule 118 (return -> RETURN .)
    RETURN          reduce using rule 118 (return -> RETURN .)
    BREAK           reduce using rule 118 (return -> RETURN .)
    CONTINUE        reduce using rule 118 (return -> RETURN .)
    INTERFACE       reduce using rule 118 (return -> RETURN .)
    $end            reduce using rule 118 (return -> RETURN .)
    LLADER          reduce using rule 118 (return -> RETURN .)
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

  ! ID              [ reduce using rule 118 (return -> RETURN .) ]
  ! DECREMENTO      [ reduce using rule 118 (return -> RETURN .) ]
  ! INCREMENTO      [ reduce using rule 118 (return -> RETURN .) ]

    expresion                      shift and go to state 53
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 32

    (119) break -> BREAK .

    PTOYCOMA        reduce using rule 119 (break -> BREAK .)
    FUNCTION        reduce using rule 119 (break -> BREAK .)
    ID              reduce using rule 119 (break -> BREAK .)
    LET             reduce using rule 119 (break -> BREAK .)
    CONSOLE         reduce using rule 119 (break -> BREAK .)
    IF              reduce using rule 119 (break -> BREAK .)
    WHILE           reduce using rule 119 (break -> BREAK .)
    FOR             reduce using rule 119 (break -> BREAK .)
    RETURN          reduce using rule 119 (break -> BREAK .)
    BREAK           reduce using rule 119 (break -> BREAK .)
    CONTINUE        reduce using rule 119 (break -> BREAK .)
    INTERFACE       reduce using rule 119 (break -> BREAK .)
    DECREMENTO      reduce using rule 119 (break -> BREAK .)
    INCREMENTO      reduce using rule 119 (break -> BREAK .)
    $end            reduce using rule 119 (break -> BREAK .)
    LLADER          reduce using rule 119 (break -> BREAK .)


state 33

    (120) continue -> CONTINUE .

    PTOYCOMA        reduce using rule 120 (continue -> CONTINUE .)
    FUNCTION        reduce using rule 120 (continue -> CONTINUE .)
    ID              reduce using rule 120 (continue -> CONTINUE .)
    LET             reduce using rule 120 (continue -> CONTINUE .)
    CONSOLE         reduce using rule 120 (continue -> CONTINUE .)
    IF              reduce using rule 120 (continue -> CONTINUE .)
    WHILE           reduce using rule 120 (continue -> CONTINUE .)
    FOR             reduce using rule 120 (continue -> CONTINUE .)
    RETURN          reduce using rule 120 (continue -> CONTINUE .)
    BREAK           reduce using rule 120 (continue -> CONTINUE .)
    CONTINUE        reduce using rule 120 (continue -> CONTINUE .)
    INTERFACE       reduce using rule 120 (continue -> CONTINUE .)
    DECREMENTO      reduce using rule 120 (continue -> CONTINUE .)
    INCREMENTO      reduce using rule 120 (continue -> CONTINUE .)
    $end            reduce using rule 120 (continue -> CONTINUE .)
    LLADER          reduce using rule 120 (continue -> CONTINUE .)


state 34

    (121) instanciar -> INTERFACE . ID bloquestruct

    ID              shift and go to state 91


state 35

    (35) dec -> DECREMENTO . ID

    ID              shift and go to state 92


state 36

    (37) inc -> INCREMENTO . ID

    ID              shift and go to state 93


state 37

    (1) instrucciones -> instrucciones instruccion .

    FUNCTION        reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    LET             reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    CONSOLE         reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    FOR             reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    RETURN          reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    INTERFACE       reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    DECREMENTO      reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    INCREMENTO      reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 1 (instrucciones -> instrucciones instruccion .)


state 38

    (5) instruccion2 -> instruccion3 PTOYCOMA .

    FUNCTION        reduce using rule 5 (instruccion2 -> instruccion3 PTOYCOMA .)
    ID              reduce using rule 5 (instruccion2 -> instruccion3 PTOYCOMA .)
    LET             reduce using rule 5 (instruccion2 -> instruccion3 PTOYCOMA .)
    CONSOLE         reduce using rule 5 (instruccion2 -> instruccion3 PTOYCOMA .)
    IF              reduce using rule 5 (instruccion2 -> instruccion3 PTOYCOMA .)
    WHILE           reduce using rule 5 (instruccion2 -> instruccion3 PTOYCOMA .)
    FOR             reduce using rule 5 (instruccion2 -> instruccion3 PTOYCOMA .)
    RETURN          reduce using rule 5 (instruccion2 -> instruccion3 PTOYCOMA .)
    BREAK           reduce using rule 5 (instruccion2 -> instruccion3 PTOYCOMA .)
    CONTINUE        reduce using rule 5 (instruccion2 -> instruccion3 PTOYCOMA .)
    INTERFACE       reduce using rule 5 (instruccion2 -> instruccion3 PTOYCOMA .)
    DECREMENTO      reduce using rule 5 (instruccion2 -> instruccion3 PTOYCOMA .)
    INCREMENTO      reduce using rule 5 (instruccion2 -> instruccion3 PTOYCOMA .)
    $end            reduce using rule 5 (instruccion2 -> instruccion3 PTOYCOMA .)
    LLADER          reduce using rule 5 (instruccion2 -> instruccion3 PTOYCOMA .)


state 39

    (51) funcion -> FUNCTION ID . PARIZQ lista_parametros PARDER bloque
    (52) funcion -> FUNCTION ID . PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque
    (53) funcion -> FUNCTION ID . PARIZQ PARDER bloque
    (54) funcion -> FUNCTION ID . PARIZQ PARDER DOSPUNTOS tipo bloque
    (55) funcion -> FUNCTION ID . PARIZQ PARDER DOSPUNTOS ID bloque
    (56) funcion -> FUNCTION ID . PARIZQ lista_parametros PARDER DOSPUNTOS ID bloque
    (57) funcion -> FUNCTION ID . PARIZQ lista_parametros PARDER DOSPUNTOS tipo CORIZQ CORDER bloque

    PARIZQ          shift and go to state 94


state 40

    (113) instruccion3 -> ID PUNTO . PUSH PARIZQ expresion PARDER
    (134) asignacionInterface -> ID PUNTO . ID IGUAL expresion

    PUSH            shift and go to state 96
    ID              shift and go to state 95


state 41

    (64) llamada_funcion -> ID PARIZQ . lista_argumentos PARDER
    (65) llamada_funcion -> ID PARIZQ . PARDER
    (66) lista_argumentos -> . lista_argumentos COMA expresion
    (67) lista_argumentos -> . expresion
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    PARDER          shift and go to state 98
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    lista_argumentos               shift and go to state 97
    expresion                      shift and go to state 99
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 42

    (30) asignacion -> ID IGUAL . expresion
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    expresion                      shift and go to state 100
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 43

    (160) asignacion_array -> ID lista_acceso_array . IGUAL expresion
    (157) lista_acceso_array -> lista_acceso_array . acceso_array_exp
    (159) acceso_array_exp -> . CORIZQ expresion CORDER

    IGUAL           shift and go to state 101
    CORIZQ          shift and go to state 47

    acceso_array_exp               shift and go to state 102

state 44

    (34) dec -> ID DECREMENTO .

    PTOYCOMA        reduce using rule 34 (dec -> ID DECREMENTO .)
    FUNCTION        reduce using rule 34 (dec -> ID DECREMENTO .)
    ID              reduce using rule 34 (dec -> ID DECREMENTO .)
    LET             reduce using rule 34 (dec -> ID DECREMENTO .)
    CONSOLE         reduce using rule 34 (dec -> ID DECREMENTO .)
    IF              reduce using rule 34 (dec -> ID DECREMENTO .)
    WHILE           reduce using rule 34 (dec -> ID DECREMENTO .)
    FOR             reduce using rule 34 (dec -> ID DECREMENTO .)
    RETURN          reduce using rule 34 (dec -> ID DECREMENTO .)
    BREAK           reduce using rule 34 (dec -> ID DECREMENTO .)
    CONTINUE        reduce using rule 34 (dec -> ID DECREMENTO .)
    INTERFACE       reduce using rule 34 (dec -> ID DECREMENTO .)
    DECREMENTO      reduce using rule 34 (dec -> ID DECREMENTO .)
    INCREMENTO      reduce using rule 34 (dec -> ID DECREMENTO .)
    $end            reduce using rule 34 (dec -> ID DECREMENTO .)
    MAS             reduce using rule 34 (dec -> ID DECREMENTO .)
    MENOS           reduce using rule 34 (dec -> ID DECREMENTO .)
    POR             reduce using rule 34 (dec -> ID DECREMENTO .)
    DIVIDIDO        reduce using rule 34 (dec -> ID DECREMENTO .)
    MODULO          reduce using rule 34 (dec -> ID DECREMENTO .)
    POTENCIA        reduce using rule 34 (dec -> ID DECREMENTO .)
    MAYOR           reduce using rule 34 (dec -> ID DECREMENTO .)
    MENOR           reduce using rule 34 (dec -> ID DECREMENTO .)
    MAYORIGUAL      reduce using rule 34 (dec -> ID DECREMENTO .)
    MENORIGUAL      reduce using rule 34 (dec -> ID DECREMENTO .)
    IGUALACION      reduce using rule 34 (dec -> ID DECREMENTO .)
    DISTINTO        reduce using rule 34 (dec -> ID DECREMENTO .)
    AND             reduce using rule 34 (dec -> ID DECREMENTO .)
    OR              reduce using rule 34 (dec -> ID DECREMENTO .)
    LLADER          reduce using rule 34 (dec -> ID DECREMENTO .)
    PARDER          reduce using rule 34 (dec -> ID DECREMENTO .)
    COMA            reduce using rule 34 (dec -> ID DECREMENTO .)
    CORDER          reduce using rule 34 (dec -> ID DECREMENTO .)


state 45

    (36) inc -> ID INCREMENTO .

    PTOYCOMA        reduce using rule 36 (inc -> ID INCREMENTO .)
    FUNCTION        reduce using rule 36 (inc -> ID INCREMENTO .)
    ID              reduce using rule 36 (inc -> ID INCREMENTO .)
    LET             reduce using rule 36 (inc -> ID INCREMENTO .)
    CONSOLE         reduce using rule 36 (inc -> ID INCREMENTO .)
    IF              reduce using rule 36 (inc -> ID INCREMENTO .)
    WHILE           reduce using rule 36 (inc -> ID INCREMENTO .)
    FOR             reduce using rule 36 (inc -> ID INCREMENTO .)
    RETURN          reduce using rule 36 (inc -> ID INCREMENTO .)
    BREAK           reduce using rule 36 (inc -> ID INCREMENTO .)
    CONTINUE        reduce using rule 36 (inc -> ID INCREMENTO .)
    INTERFACE       reduce using rule 36 (inc -> ID INCREMENTO .)
    DECREMENTO      reduce using rule 36 (inc -> ID INCREMENTO .)
    INCREMENTO      reduce using rule 36 (inc -> ID INCREMENTO .)
    $end            reduce using rule 36 (inc -> ID INCREMENTO .)
    MAS             reduce using rule 36 (inc -> ID INCREMENTO .)
    MENOS           reduce using rule 36 (inc -> ID INCREMENTO .)
    POR             reduce using rule 36 (inc -> ID INCREMENTO .)
    DIVIDIDO        reduce using rule 36 (inc -> ID INCREMENTO .)
    MODULO          reduce using rule 36 (inc -> ID INCREMENTO .)
    POTENCIA        reduce using rule 36 (inc -> ID INCREMENTO .)
    MAYOR           reduce using rule 36 (inc -> ID INCREMENTO .)
    MENOR           reduce using rule 36 (inc -> ID INCREMENTO .)
    MAYORIGUAL      reduce using rule 36 (inc -> ID INCREMENTO .)
    MENORIGUAL      reduce using rule 36 (inc -> ID INCREMENTO .)
    IGUALACION      reduce using rule 36 (inc -> ID INCREMENTO .)
    DISTINTO        reduce using rule 36 (inc -> ID INCREMENTO .)
    AND             reduce using rule 36 (inc -> ID INCREMENTO .)
    OR              reduce using rule 36 (inc -> ID INCREMENTO .)
    LLADER          reduce using rule 36 (inc -> ID INCREMENTO .)
    PARDER          reduce using rule 36 (inc -> ID INCREMENTO .)
    COMA            reduce using rule 36 (inc -> ID INCREMENTO .)
    CORDER          reduce using rule 36 (inc -> ID INCREMENTO .)


state 46

    (158) lista_acceso_array -> acceso_array_exp .

    IGUAL           reduce using rule 158 (lista_acceso_array -> acceso_array_exp .)
    CORIZQ          reduce using rule 158 (lista_acceso_array -> acceso_array_exp .)
    PUNTO           reduce using rule 158 (lista_acceso_array -> acceso_array_exp .)
    MAS             reduce using rule 158 (lista_acceso_array -> acceso_array_exp .)
    MENOS           reduce using rule 158 (lista_acceso_array -> acceso_array_exp .)
    POR             reduce using rule 158 (lista_acceso_array -> acceso_array_exp .)
    DIVIDIDO        reduce using rule 158 (lista_acceso_array -> acceso_array_exp .)
    MODULO          reduce using rule 158 (lista_acceso_array -> acceso_array_exp .)
    POTENCIA        reduce using rule 158 (lista_acceso_array -> acceso_array_exp .)
    MAYOR           reduce using rule 158 (lista_acceso_array -> acceso_array_exp .)
    MENOR           reduce using rule 158 (lista_acceso_array -> acceso_array_exp .)
    MAYORIGUAL      reduce using rule 158 (lista_acceso_array -> acceso_array_exp .)
    MENORIGUAL      reduce using rule 158 (lista_acceso_array -> acceso_array_exp .)
    IGUALACION      reduce using rule 158 (lista_acceso_array -> acceso_array_exp .)
    DISTINTO        reduce using rule 158 (lista_acceso_array -> acceso_array_exp .)
    AND             reduce using rule 158 (lista_acceso_array -> acceso_array_exp .)
    OR              reduce using rule 158 (lista_acceso_array -> acceso_array_exp .)
    PTOYCOMA        reduce using rule 158 (lista_acceso_array -> acceso_array_exp .)
    FUNCTION        reduce using rule 158 (lista_acceso_array -> acceso_array_exp .)
    ID              reduce using rule 158 (lista_acceso_array -> acceso_array_exp .)
    LET             reduce using rule 158 (lista_acceso_array -> acceso_array_exp .)
    CONSOLE         reduce using rule 158 (lista_acceso_array -> acceso_array_exp .)
    IF              reduce using rule 158 (lista_acceso_array -> acceso_array_exp .)
    WHILE           reduce using rule 158 (lista_acceso_array -> acceso_array_exp .)
    FOR             reduce using rule 158 (lista_acceso_array -> acceso_array_exp .)
    RETURN          reduce using rule 158 (lista_acceso_array -> acceso_array_exp .)
    BREAK           reduce using rule 158 (lista_acceso_array -> acceso_array_exp .)
    CONTINUE        reduce using rule 158 (lista_acceso_array -> acceso_array_exp .)
    INTERFACE       reduce using rule 158 (lista_acceso_array -> acceso_array_exp .)
    DECREMENTO      reduce using rule 158 (lista_acceso_array -> acceso_array_exp .)
    INCREMENTO      reduce using rule 158 (lista_acceso_array -> acceso_array_exp .)
    $end            reduce using rule 158 (lista_acceso_array -> acceso_array_exp .)
    LLADER          reduce using rule 158 (lista_acceso_array -> acceso_array_exp .)
    PARDER          reduce using rule 158 (lista_acceso_array -> acceso_array_exp .)
    COMA            reduce using rule 158 (lista_acceso_array -> acceso_array_exp .)
    CORDER          reduce using rule 158 (lista_acceso_array -> acceso_array_exp .)


state 47

    (159) acceso_array_exp -> CORIZQ . expresion CORDER
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    expresion                      shift and go to state 103
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 48

    (26) declaracion -> LET ID . IGUAL expresion
    (27) declaracion -> LET ID .
    (28) declaracion -> LET ID . DOSPUNTOS tipo IGUAL expresion
    (29) declaracion -> LET ID . DOSPUNTOS tipo
    (127) declaracionInterface -> LET ID . DOSPUNTOS ID IGUAL expresion_interface
    (135) declaracionArray -> LET ID . DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER
    (136) declaracionArray -> LET ID . DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER
    (137) declaracionArray -> LET ID . DOSPUNTOS ARRAY MENOR tipo MAYOR
    (138) declaracionArray -> LET ID . DOSPUNTOS tipo CORIZQ CORDER
    (139) declaracionArray -> LET ID . DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER
    (140) declaracionArray -> LET ID . DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER
    (141) declaracionArray -> LET ID . IGUAL CORIZQ CORDER
    (142) declaracionArray -> LET ID . DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion
    (143) declaracionArray -> LET ID . IGUAL CORIZQ lista_exp CORDER
    (144) declaracionArray -> LET ID . DOSPUNTOS ID IGUAL CORIZQ CORDER
    (145) declaracionArray -> LET ID . DOSPUNTOS ID IGUAL CORIZQ lista_exp CORDER
    (146) declaracionArray -> LET ID . DOSPUNTOS ID CORIZQ CORDER
    (147) declaracionArray -> LET ID . DOSPUNTOS ID CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER

    IGUAL           shift and go to state 104
    PTOYCOMA        reduce using rule 27 (declaracion -> LET ID .)
    FUNCTION        reduce using rule 27 (declaracion -> LET ID .)
    ID              reduce using rule 27 (declaracion -> LET ID .)
    LET             reduce using rule 27 (declaracion -> LET ID .)
    CONSOLE         reduce using rule 27 (declaracion -> LET ID .)
    IF              reduce using rule 27 (declaracion -> LET ID .)
    WHILE           reduce using rule 27 (declaracion -> LET ID .)
    FOR             reduce using rule 27 (declaracion -> LET ID .)
    RETURN          reduce using rule 27 (declaracion -> LET ID .)
    BREAK           reduce using rule 27 (declaracion -> LET ID .)
    CONTINUE        reduce using rule 27 (declaracion -> LET ID .)
    INTERFACE       reduce using rule 27 (declaracion -> LET ID .)
    DECREMENTO      reduce using rule 27 (declaracion -> LET ID .)
    INCREMENTO      reduce using rule 27 (declaracion -> LET ID .)
    $end            reduce using rule 27 (declaracion -> LET ID .)
    LLADER          reduce using rule 27 (declaracion -> LET ID .)
    DOSPUNTOS       shift and go to state 105


state 49

    (38) impresion -> CONSOLE PUNTO . LOG PARIZQ expresion PARDER
    (39) impresion -> CONSOLE PUNTO . LOG PARIZQ lista_argumentos PARDER

    LOG             shift and go to state 106


state 50

    (40) condicional -> IF PARIZQ . expresion PARDER bloque
    (41) condicional -> IF PARIZQ . expresion PARDER bloque ELSE bloque
    (42) condicional -> IF PARIZQ . expresion PARDER bloque lista_elif
    (43) condicional -> IF PARIZQ . expresion PARDER bloque lista_elif ELSE bloque
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    expresion                      shift and go to state 107
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 51

    (47) ciclo_while -> WHILE PARIZQ . expresion PARDER bloque
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    expresion                      shift and go to state 108
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 52

    (48) ciclo_for -> FOR PARIZQ . declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (49) ciclo_for -> FOR PARIZQ . asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (50) ciclo_for_of -> FOR PARIZQ . LET ID OF expresion PARDER bloque
    (26) declaracion -> . LET ID IGUAL expresion
    (27) declaracion -> . LET ID
    (28) declaracion -> . LET ID DOSPUNTOS tipo IGUAL expresion
    (29) declaracion -> . LET ID DOSPUNTOS tipo
    (30) asignacion -> . ID IGUAL expresion
    (31) asignacion -> . dec
    (32) asignacion -> . inc
    (33) asignacion -> . asignacionInterface
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (134) asignacionInterface -> . ID PUNTO ID IGUAL expresion

    LET             shift and go to state 111
    ID              shift and go to state 112
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36

    declaracion                    shift and go to state 109
    asignacion                     shift and go to state 110
    dec                            shift and go to state 24
    inc                            shift and go to state 25
    asignacionInterface            shift and go to state 26

state 53

    (117) return -> RETURN expresion .
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    PTOYCOMA        reduce using rule 117 (return -> RETURN expresion .)
    FUNCTION        reduce using rule 117 (return -> RETURN expresion .)
    ID              reduce using rule 117 (return -> RETURN expresion .)
    LET             reduce using rule 117 (return -> RETURN expresion .)
    CONSOLE         reduce using rule 117 (return -> RETURN expresion .)
    IF              reduce using rule 117 (return -> RETURN expresion .)
    WHILE           reduce using rule 117 (return -> RETURN expresion .)
    FOR             reduce using rule 117 (return -> RETURN expresion .)
    RETURN          reduce using rule 117 (return -> RETURN expresion .)
    BREAK           reduce using rule 117 (return -> RETURN expresion .)
    CONTINUE        reduce using rule 117 (return -> RETURN expresion .)
    INTERFACE       reduce using rule 117 (return -> RETURN expresion .)
    DECREMENTO      reduce using rule 117 (return -> RETURN expresion .)
    INCREMENTO      reduce using rule 117 (return -> RETURN expresion .)
    $end            reduce using rule 117 (return -> RETURN expresion .)
    LLADER          reduce using rule 117 (return -> RETURN expresion .)
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POR             shift and go to state 115
    DIVIDIDO        shift and go to state 116
    MODULO          shift and go to state 117
    POTENCIA        shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYORIGUAL      shift and go to state 121
    MENORIGUAL      shift and go to state 122
    IGUALACION      shift and go to state 123
    DISTINTO        shift and go to state 124
    AND             shift and go to state 125
    OR              shift and go to state 126


state 54

    (63) expresion -> llamada_funcion .

    MAS             reduce using rule 63 (expresion -> llamada_funcion .)
    MENOS           reduce using rule 63 (expresion -> llamada_funcion .)
    POR             reduce using rule 63 (expresion -> llamada_funcion .)
    DIVIDIDO        reduce using rule 63 (expresion -> llamada_funcion .)
    MODULO          reduce using rule 63 (expresion -> llamada_funcion .)
    POTENCIA        reduce using rule 63 (expresion -> llamada_funcion .)
    MAYOR           reduce using rule 63 (expresion -> llamada_funcion .)
    MENOR           reduce using rule 63 (expresion -> llamada_funcion .)
    MAYORIGUAL      reduce using rule 63 (expresion -> llamada_funcion .)
    MENORIGUAL      reduce using rule 63 (expresion -> llamada_funcion .)
    IGUALACION      reduce using rule 63 (expresion -> llamada_funcion .)
    DISTINTO        reduce using rule 63 (expresion -> llamada_funcion .)
    AND             reduce using rule 63 (expresion -> llamada_funcion .)
    OR              reduce using rule 63 (expresion -> llamada_funcion .)
    PTOYCOMA        reduce using rule 63 (expresion -> llamada_funcion .)
    FUNCTION        reduce using rule 63 (expresion -> llamada_funcion .)
    ID              reduce using rule 63 (expresion -> llamada_funcion .)
    LET             reduce using rule 63 (expresion -> llamada_funcion .)
    CONSOLE         reduce using rule 63 (expresion -> llamada_funcion .)
    IF              reduce using rule 63 (expresion -> llamada_funcion .)
    WHILE           reduce using rule 63 (expresion -> llamada_funcion .)
    FOR             reduce using rule 63 (expresion -> llamada_funcion .)
    RETURN          reduce using rule 63 (expresion -> llamada_funcion .)
    BREAK           reduce using rule 63 (expresion -> llamada_funcion .)
    CONTINUE        reduce using rule 63 (expresion -> llamada_funcion .)
    INTERFACE       reduce using rule 63 (expresion -> llamada_funcion .)
    DECREMENTO      reduce using rule 63 (expresion -> llamada_funcion .)
    INCREMENTO      reduce using rule 63 (expresion -> llamada_funcion .)
    $end            reduce using rule 63 (expresion -> llamada_funcion .)
    LLADER          reduce using rule 63 (expresion -> llamada_funcion .)
    PARDER          reduce using rule 63 (expresion -> llamada_funcion .)
    COMA            reduce using rule 63 (expresion -> llamada_funcion .)
    CORDER          reduce using rule 63 (expresion -> llamada_funcion .)


state 55

    (79) expresion -> MENOS . expresion
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    expresion                      shift and go to state 127
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 56

    (88) expresion -> NOT . expresion
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    expresion                      shift and go to state 128
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 57

    (89) expresion -> dec .

    MAS             reduce using rule 89 (expresion -> dec .)
    MENOS           reduce using rule 89 (expresion -> dec .)
    POR             reduce using rule 89 (expresion -> dec .)
    DIVIDIDO        reduce using rule 89 (expresion -> dec .)
    MODULO          reduce using rule 89 (expresion -> dec .)
    POTENCIA        reduce using rule 89 (expresion -> dec .)
    MAYOR           reduce using rule 89 (expresion -> dec .)
    MENOR           reduce using rule 89 (expresion -> dec .)
    MAYORIGUAL      reduce using rule 89 (expresion -> dec .)
    MENORIGUAL      reduce using rule 89 (expresion -> dec .)
    IGUALACION      reduce using rule 89 (expresion -> dec .)
    DISTINTO        reduce using rule 89 (expresion -> dec .)
    AND             reduce using rule 89 (expresion -> dec .)
    OR              reduce using rule 89 (expresion -> dec .)
    PTOYCOMA        reduce using rule 89 (expresion -> dec .)
    FUNCTION        reduce using rule 89 (expresion -> dec .)
    ID              reduce using rule 89 (expresion -> dec .)
    LET             reduce using rule 89 (expresion -> dec .)
    CONSOLE         reduce using rule 89 (expresion -> dec .)
    IF              reduce using rule 89 (expresion -> dec .)
    WHILE           reduce using rule 89 (expresion -> dec .)
    FOR             reduce using rule 89 (expresion -> dec .)
    RETURN          reduce using rule 89 (expresion -> dec .)
    BREAK           reduce using rule 89 (expresion -> dec .)
    CONTINUE        reduce using rule 89 (expresion -> dec .)
    INTERFACE       reduce using rule 89 (expresion -> dec .)
    DECREMENTO      reduce using rule 89 (expresion -> dec .)
    INCREMENTO      reduce using rule 89 (expresion -> dec .)
    $end            reduce using rule 89 (expresion -> dec .)
    LLADER          reduce using rule 89 (expresion -> dec .)
    PARDER          reduce using rule 89 (expresion -> dec .)
    COMA            reduce using rule 89 (expresion -> dec .)
    CORDER          reduce using rule 89 (expresion -> dec .)


state 58

    (90) expresion -> inc .

    MAS             reduce using rule 90 (expresion -> inc .)
    MENOS           reduce using rule 90 (expresion -> inc .)
    POR             reduce using rule 90 (expresion -> inc .)
    DIVIDIDO        reduce using rule 90 (expresion -> inc .)
    MODULO          reduce using rule 90 (expresion -> inc .)
    POTENCIA        reduce using rule 90 (expresion -> inc .)
    MAYOR           reduce using rule 90 (expresion -> inc .)
    MENOR           reduce using rule 90 (expresion -> inc .)
    MAYORIGUAL      reduce using rule 90 (expresion -> inc .)
    MENORIGUAL      reduce using rule 90 (expresion -> inc .)
    IGUALACION      reduce using rule 90 (expresion -> inc .)
    DISTINTO        reduce using rule 90 (expresion -> inc .)
    AND             reduce using rule 90 (expresion -> inc .)
    OR              reduce using rule 90 (expresion -> inc .)
    PTOYCOMA        reduce using rule 90 (expresion -> inc .)
    FUNCTION        reduce using rule 90 (expresion -> inc .)
    ID              reduce using rule 90 (expresion -> inc .)
    LET             reduce using rule 90 (expresion -> inc .)
    CONSOLE         reduce using rule 90 (expresion -> inc .)
    IF              reduce using rule 90 (expresion -> inc .)
    WHILE           reduce using rule 90 (expresion -> inc .)
    FOR             reduce using rule 90 (expresion -> inc .)
    RETURN          reduce using rule 90 (expresion -> inc .)
    BREAK           reduce using rule 90 (expresion -> inc .)
    CONTINUE        reduce using rule 90 (expresion -> inc .)
    INTERFACE       reduce using rule 90 (expresion -> inc .)
    DECREMENTO      reduce using rule 90 (expresion -> inc .)
    INCREMENTO      reduce using rule 90 (expresion -> inc .)
    $end            reduce using rule 90 (expresion -> inc .)
    LLADER          reduce using rule 90 (expresion -> inc .)
    PARDER          reduce using rule 90 (expresion -> inc .)
    COMA            reduce using rule 90 (expresion -> inc .)
    CORDER          reduce using rule 90 (expresion -> inc .)


state 59

    (91) expresion -> casteo .

    MAS             reduce using rule 91 (expresion -> casteo .)
    MENOS           reduce using rule 91 (expresion -> casteo .)
    POR             reduce using rule 91 (expresion -> casteo .)
    DIVIDIDO        reduce using rule 91 (expresion -> casteo .)
    MODULO          reduce using rule 91 (expresion -> casteo .)
    POTENCIA        reduce using rule 91 (expresion -> casteo .)
    MAYOR           reduce using rule 91 (expresion -> casteo .)
    MENOR           reduce using rule 91 (expresion -> casteo .)
    MAYORIGUAL      reduce using rule 91 (expresion -> casteo .)
    MENORIGUAL      reduce using rule 91 (expresion -> casteo .)
    IGUALACION      reduce using rule 91 (expresion -> casteo .)
    DISTINTO        reduce using rule 91 (expresion -> casteo .)
    AND             reduce using rule 91 (expresion -> casteo .)
    OR              reduce using rule 91 (expresion -> casteo .)
    PTOYCOMA        reduce using rule 91 (expresion -> casteo .)
    FUNCTION        reduce using rule 91 (expresion -> casteo .)
    ID              reduce using rule 91 (expresion -> casteo .)
    LET             reduce using rule 91 (expresion -> casteo .)
    CONSOLE         reduce using rule 91 (expresion -> casteo .)
    IF              reduce using rule 91 (expresion -> casteo .)
    WHILE           reduce using rule 91 (expresion -> casteo .)
    FOR             reduce using rule 91 (expresion -> casteo .)
    RETURN          reduce using rule 91 (expresion -> casteo .)
    BREAK           reduce using rule 91 (expresion -> casteo .)
    CONTINUE        reduce using rule 91 (expresion -> casteo .)
    INTERFACE       reduce using rule 91 (expresion -> casteo .)
    DECREMENTO      reduce using rule 91 (expresion -> casteo .)
    INCREMENTO      reduce using rule 91 (expresion -> casteo .)
    $end            reduce using rule 91 (expresion -> casteo .)
    LLADER          reduce using rule 91 (expresion -> casteo .)
    PARDER          reduce using rule 91 (expresion -> casteo .)
    COMA            reduce using rule 91 (expresion -> casteo .)
    CORDER          reduce using rule 91 (expresion -> casteo .)


state 60

    (92) expresion -> PARIZQ . expresion PARDER
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    expresion                      shift and go to state 129
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 61

    (93) expresion -> ENTERO .

    MAS             reduce using rule 93 (expresion -> ENTERO .)
    MENOS           reduce using rule 93 (expresion -> ENTERO .)
    POR             reduce using rule 93 (expresion -> ENTERO .)
    DIVIDIDO        reduce using rule 93 (expresion -> ENTERO .)
    MODULO          reduce using rule 93 (expresion -> ENTERO .)
    POTENCIA        reduce using rule 93 (expresion -> ENTERO .)
    MAYOR           reduce using rule 93 (expresion -> ENTERO .)
    MENOR           reduce using rule 93 (expresion -> ENTERO .)
    MAYORIGUAL      reduce using rule 93 (expresion -> ENTERO .)
    MENORIGUAL      reduce using rule 93 (expresion -> ENTERO .)
    IGUALACION      reduce using rule 93 (expresion -> ENTERO .)
    DISTINTO        reduce using rule 93 (expresion -> ENTERO .)
    AND             reduce using rule 93 (expresion -> ENTERO .)
    OR              reduce using rule 93 (expresion -> ENTERO .)
    PTOYCOMA        reduce using rule 93 (expresion -> ENTERO .)
    FUNCTION        reduce using rule 93 (expresion -> ENTERO .)
    ID              reduce using rule 93 (expresion -> ENTERO .)
    LET             reduce using rule 93 (expresion -> ENTERO .)
    CONSOLE         reduce using rule 93 (expresion -> ENTERO .)
    IF              reduce using rule 93 (expresion -> ENTERO .)
    WHILE           reduce using rule 93 (expresion -> ENTERO .)
    FOR             reduce using rule 93 (expresion -> ENTERO .)
    RETURN          reduce using rule 93 (expresion -> ENTERO .)
    BREAK           reduce using rule 93 (expresion -> ENTERO .)
    CONTINUE        reduce using rule 93 (expresion -> ENTERO .)
    INTERFACE       reduce using rule 93 (expresion -> ENTERO .)
    DECREMENTO      reduce using rule 93 (expresion -> ENTERO .)
    INCREMENTO      reduce using rule 93 (expresion -> ENTERO .)
    $end            reduce using rule 93 (expresion -> ENTERO .)
    LLADER          reduce using rule 93 (expresion -> ENTERO .)
    PARDER          reduce using rule 93 (expresion -> ENTERO .)
    COMA            reduce using rule 93 (expresion -> ENTERO .)
    CORDER          reduce using rule 93 (expresion -> ENTERO .)


state 62

    (94) expresion -> DECIMAL .

    MAS             reduce using rule 94 (expresion -> DECIMAL .)
    MENOS           reduce using rule 94 (expresion -> DECIMAL .)
    POR             reduce using rule 94 (expresion -> DECIMAL .)
    DIVIDIDO        reduce using rule 94 (expresion -> DECIMAL .)
    MODULO          reduce using rule 94 (expresion -> DECIMAL .)
    POTENCIA        reduce using rule 94 (expresion -> DECIMAL .)
    MAYOR           reduce using rule 94 (expresion -> DECIMAL .)
    MENOR           reduce using rule 94 (expresion -> DECIMAL .)
    MAYORIGUAL      reduce using rule 94 (expresion -> DECIMAL .)
    MENORIGUAL      reduce using rule 94 (expresion -> DECIMAL .)
    IGUALACION      reduce using rule 94 (expresion -> DECIMAL .)
    DISTINTO        reduce using rule 94 (expresion -> DECIMAL .)
    AND             reduce using rule 94 (expresion -> DECIMAL .)
    OR              reduce using rule 94 (expresion -> DECIMAL .)
    PTOYCOMA        reduce using rule 94 (expresion -> DECIMAL .)
    FUNCTION        reduce using rule 94 (expresion -> DECIMAL .)
    ID              reduce using rule 94 (expresion -> DECIMAL .)
    LET             reduce using rule 94 (expresion -> DECIMAL .)
    CONSOLE         reduce using rule 94 (expresion -> DECIMAL .)
    IF              reduce using rule 94 (expresion -> DECIMAL .)
    WHILE           reduce using rule 94 (expresion -> DECIMAL .)
    FOR             reduce using rule 94 (expresion -> DECIMAL .)
    RETURN          reduce using rule 94 (expresion -> DECIMAL .)
    BREAK           reduce using rule 94 (expresion -> DECIMAL .)
    CONTINUE        reduce using rule 94 (expresion -> DECIMAL .)
    INTERFACE       reduce using rule 94 (expresion -> DECIMAL .)
    DECREMENTO      reduce using rule 94 (expresion -> DECIMAL .)
    INCREMENTO      reduce using rule 94 (expresion -> DECIMAL .)
    $end            reduce using rule 94 (expresion -> DECIMAL .)
    LLADER          reduce using rule 94 (expresion -> DECIMAL .)
    PARDER          reduce using rule 94 (expresion -> DECIMAL .)
    COMA            reduce using rule 94 (expresion -> DECIMAL .)
    CORDER          reduce using rule 94 (expresion -> DECIMAL .)


state 63

    (95) expresion -> CADENA .

    MAS             reduce using rule 95 (expresion -> CADENA .)
    MENOS           reduce using rule 95 (expresion -> CADENA .)
    POR             reduce using rule 95 (expresion -> CADENA .)
    DIVIDIDO        reduce using rule 95 (expresion -> CADENA .)
    MODULO          reduce using rule 95 (expresion -> CADENA .)
    POTENCIA        reduce using rule 95 (expresion -> CADENA .)
    MAYOR           reduce using rule 95 (expresion -> CADENA .)
    MENOR           reduce using rule 95 (expresion -> CADENA .)
    MAYORIGUAL      reduce using rule 95 (expresion -> CADENA .)
    MENORIGUAL      reduce using rule 95 (expresion -> CADENA .)
    IGUALACION      reduce using rule 95 (expresion -> CADENA .)
    DISTINTO        reduce using rule 95 (expresion -> CADENA .)
    AND             reduce using rule 95 (expresion -> CADENA .)
    OR              reduce using rule 95 (expresion -> CADENA .)
    PTOYCOMA        reduce using rule 95 (expresion -> CADENA .)
    FUNCTION        reduce using rule 95 (expresion -> CADENA .)
    ID              reduce using rule 95 (expresion -> CADENA .)
    LET             reduce using rule 95 (expresion -> CADENA .)
    CONSOLE         reduce using rule 95 (expresion -> CADENA .)
    IF              reduce using rule 95 (expresion -> CADENA .)
    WHILE           reduce using rule 95 (expresion -> CADENA .)
    FOR             reduce using rule 95 (expresion -> CADENA .)
    RETURN          reduce using rule 95 (expresion -> CADENA .)
    BREAK           reduce using rule 95 (expresion -> CADENA .)
    CONTINUE        reduce using rule 95 (expresion -> CADENA .)
    INTERFACE       reduce using rule 95 (expresion -> CADENA .)
    DECREMENTO      reduce using rule 95 (expresion -> CADENA .)
    INCREMENTO      reduce using rule 95 (expresion -> CADENA .)
    $end            reduce using rule 95 (expresion -> CADENA .)
    LLADER          reduce using rule 95 (expresion -> CADENA .)
    PARDER          reduce using rule 95 (expresion -> CADENA .)
    COMA            reduce using rule 95 (expresion -> CADENA .)
    CORDER          reduce using rule 95 (expresion -> CADENA .)


state 64

    (96) expresion -> NULL .

    MAS             reduce using rule 96 (expresion -> NULL .)
    MENOS           reduce using rule 96 (expresion -> NULL .)
    POR             reduce using rule 96 (expresion -> NULL .)
    DIVIDIDO        reduce using rule 96 (expresion -> NULL .)
    MODULO          reduce using rule 96 (expresion -> NULL .)
    POTENCIA        reduce using rule 96 (expresion -> NULL .)
    MAYOR           reduce using rule 96 (expresion -> NULL .)
    MENOR           reduce using rule 96 (expresion -> NULL .)
    MAYORIGUAL      reduce using rule 96 (expresion -> NULL .)
    MENORIGUAL      reduce using rule 96 (expresion -> NULL .)
    IGUALACION      reduce using rule 96 (expresion -> NULL .)
    DISTINTO        reduce using rule 96 (expresion -> NULL .)
    AND             reduce using rule 96 (expresion -> NULL .)
    OR              reduce using rule 96 (expresion -> NULL .)
    PTOYCOMA        reduce using rule 96 (expresion -> NULL .)
    FUNCTION        reduce using rule 96 (expresion -> NULL .)
    ID              reduce using rule 96 (expresion -> NULL .)
    LET             reduce using rule 96 (expresion -> NULL .)
    CONSOLE         reduce using rule 96 (expresion -> NULL .)
    IF              reduce using rule 96 (expresion -> NULL .)
    WHILE           reduce using rule 96 (expresion -> NULL .)
    FOR             reduce using rule 96 (expresion -> NULL .)
    RETURN          reduce using rule 96 (expresion -> NULL .)
    BREAK           reduce using rule 96 (expresion -> NULL .)
    CONTINUE        reduce using rule 96 (expresion -> NULL .)
    INTERFACE       reduce using rule 96 (expresion -> NULL .)
    DECREMENTO      reduce using rule 96 (expresion -> NULL .)
    INCREMENTO      reduce using rule 96 (expresion -> NULL .)
    $end            reduce using rule 96 (expresion -> NULL .)
    LLADER          reduce using rule 96 (expresion -> NULL .)
    PARDER          reduce using rule 96 (expresion -> NULL .)
    COMA            reduce using rule 96 (expresion -> NULL .)
    CORDER          reduce using rule 96 (expresion -> NULL .)


state 65

    (97) expresion -> booleano .

    MAS             reduce using rule 97 (expresion -> booleano .)
    MENOS           reduce using rule 97 (expresion -> booleano .)
    POR             reduce using rule 97 (expresion -> booleano .)
    DIVIDIDO        reduce using rule 97 (expresion -> booleano .)
    MODULO          reduce using rule 97 (expresion -> booleano .)
    POTENCIA        reduce using rule 97 (expresion -> booleano .)
    MAYOR           reduce using rule 97 (expresion -> booleano .)
    MENOR           reduce using rule 97 (expresion -> booleano .)
    MAYORIGUAL      reduce using rule 97 (expresion -> booleano .)
    MENORIGUAL      reduce using rule 97 (expresion -> booleano .)
    IGUALACION      reduce using rule 97 (expresion -> booleano .)
    DISTINTO        reduce using rule 97 (expresion -> booleano .)
    AND             reduce using rule 97 (expresion -> booleano .)
    OR              reduce using rule 97 (expresion -> booleano .)
    PTOYCOMA        reduce using rule 97 (expresion -> booleano .)
    FUNCTION        reduce using rule 97 (expresion -> booleano .)
    ID              reduce using rule 97 (expresion -> booleano .)
    LET             reduce using rule 97 (expresion -> booleano .)
    CONSOLE         reduce using rule 97 (expresion -> booleano .)
    IF              reduce using rule 97 (expresion -> booleano .)
    WHILE           reduce using rule 97 (expresion -> booleano .)
    FOR             reduce using rule 97 (expresion -> booleano .)
    RETURN          reduce using rule 97 (expresion -> booleano .)
    BREAK           reduce using rule 97 (expresion -> booleano .)
    CONTINUE        reduce using rule 97 (expresion -> booleano .)
    INTERFACE       reduce using rule 97 (expresion -> booleano .)
    DECREMENTO      reduce using rule 97 (expresion -> booleano .)
    INCREMENTO      reduce using rule 97 (expresion -> booleano .)
    $end            reduce using rule 97 (expresion -> booleano .)
    LLADER          reduce using rule 97 (expresion -> booleano .)
    PARDER          reduce using rule 97 (expresion -> booleano .)
    COMA            reduce using rule 97 (expresion -> booleano .)
    CORDER          reduce using rule 97 (expresion -> booleano .)


state 66

    (98) expresion -> ID .
    (133) expresion -> ID . PUNTO ID
    (64) llamada_funcion -> ID . PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> ID . PARIZQ PARDER
    (34) dec -> ID . DECREMENTO
    (36) inc -> ID . INCREMENTO
    (114) casteo -> ID . PUNTO TOSTRING PARIZQ PARDER
    (154) acceso_array -> ID . lista_acceso_array
    (156) acceso_array_interface -> ID . lista_acceso_array PUNTO ID
    (157) lista_acceso_array -> . lista_acceso_array acceso_array_exp
    (158) lista_acceso_array -> . acceso_array_exp
    (159) acceso_array_exp -> . CORIZQ expresion CORDER

  ! shift/reduce conflict for DECREMENTO resolved as shift
  ! shift/reduce conflict for INCREMENTO resolved as shift
    MAS             reduce using rule 98 (expresion -> ID .)
    MENOS           reduce using rule 98 (expresion -> ID .)
    POR             reduce using rule 98 (expresion -> ID .)
    DIVIDIDO        reduce using rule 98 (expresion -> ID .)
    MODULO          reduce using rule 98 (expresion -> ID .)
    POTENCIA        reduce using rule 98 (expresion -> ID .)
    MAYOR           reduce using rule 98 (expresion -> ID .)
    MENOR           reduce using rule 98 (expresion -> ID .)
    MAYORIGUAL      reduce using rule 98 (expresion -> ID .)
    MENORIGUAL      reduce using rule 98 (expresion -> ID .)
    IGUALACION      reduce using rule 98 (expresion -> ID .)
    DISTINTO        reduce using rule 98 (expresion -> ID .)
    AND             reduce using rule 98 (expresion -> ID .)
    OR              reduce using rule 98 (expresion -> ID .)
    PTOYCOMA        reduce using rule 98 (expresion -> ID .)
    FUNCTION        reduce using rule 98 (expresion -> ID .)
    ID              reduce using rule 98 (expresion -> ID .)
    LET             reduce using rule 98 (expresion -> ID .)
    CONSOLE         reduce using rule 98 (expresion -> ID .)
    IF              reduce using rule 98 (expresion -> ID .)
    WHILE           reduce using rule 98 (expresion -> ID .)
    FOR             reduce using rule 98 (expresion -> ID .)
    RETURN          reduce using rule 98 (expresion -> ID .)
    BREAK           reduce using rule 98 (expresion -> ID .)
    CONTINUE        reduce using rule 98 (expresion -> ID .)
    INTERFACE       reduce using rule 98 (expresion -> ID .)
    $end            reduce using rule 98 (expresion -> ID .)
    LLADER          reduce using rule 98 (expresion -> ID .)
    PARDER          reduce using rule 98 (expresion -> ID .)
    COMA            reduce using rule 98 (expresion -> ID .)
    CORDER          reduce using rule 98 (expresion -> ID .)
    PUNTO           shift and go to state 130
    PARIZQ          shift and go to state 41
    DECREMENTO      shift and go to state 44
    INCREMENTO      shift and go to state 45
    CORIZQ          shift and go to state 47

  ! DECREMENTO      [ reduce using rule 98 (expresion -> ID .) ]
  ! INCREMENTO      [ reduce using rule 98 (expresion -> ID .) ]

    lista_acceso_array             shift and go to state 131
    acceso_array_exp               shift and go to state 46

state 67

    (101) expresion -> aproximacion .

    MAS             reduce using rule 101 (expresion -> aproximacion .)
    MENOS           reduce using rule 101 (expresion -> aproximacion .)
    POR             reduce using rule 101 (expresion -> aproximacion .)
    DIVIDIDO        reduce using rule 101 (expresion -> aproximacion .)
    MODULO          reduce using rule 101 (expresion -> aproximacion .)
    POTENCIA        reduce using rule 101 (expresion -> aproximacion .)
    MAYOR           reduce using rule 101 (expresion -> aproximacion .)
    MENOR           reduce using rule 101 (expresion -> aproximacion .)
    MAYORIGUAL      reduce using rule 101 (expresion -> aproximacion .)
    MENORIGUAL      reduce using rule 101 (expresion -> aproximacion .)
    IGUALACION      reduce using rule 101 (expresion -> aproximacion .)
    DISTINTO        reduce using rule 101 (expresion -> aproximacion .)
    AND             reduce using rule 101 (expresion -> aproximacion .)
    OR              reduce using rule 101 (expresion -> aproximacion .)
    PTOYCOMA        reduce using rule 101 (expresion -> aproximacion .)
    FUNCTION        reduce using rule 101 (expresion -> aproximacion .)
    ID              reduce using rule 101 (expresion -> aproximacion .)
    LET             reduce using rule 101 (expresion -> aproximacion .)
    CONSOLE         reduce using rule 101 (expresion -> aproximacion .)
    IF              reduce using rule 101 (expresion -> aproximacion .)
    WHILE           reduce using rule 101 (expresion -> aproximacion .)
    FOR             reduce using rule 101 (expresion -> aproximacion .)
    RETURN          reduce using rule 101 (expresion -> aproximacion .)
    BREAK           reduce using rule 101 (expresion -> aproximacion .)
    CONTINUE        reduce using rule 101 (expresion -> aproximacion .)
    INTERFACE       reduce using rule 101 (expresion -> aproximacion .)
    DECREMENTO      reduce using rule 101 (expresion -> aproximacion .)
    INCREMENTO      reduce using rule 101 (expresion -> aproximacion .)
    $end            reduce using rule 101 (expresion -> aproximacion .)
    LLADER          reduce using rule 101 (expresion -> aproximacion .)
    PARDER          reduce using rule 101 (expresion -> aproximacion .)
    COMA            reduce using rule 101 (expresion -> aproximacion .)
    CORDER          reduce using rule 101 (expresion -> aproximacion .)


state 68

    (102) expresion -> exponencial .

    MAS             reduce using rule 102 (expresion -> exponencial .)
    MENOS           reduce using rule 102 (expresion -> exponencial .)
    POR             reduce using rule 102 (expresion -> exponencial .)
    DIVIDIDO        reduce using rule 102 (expresion -> exponencial .)
    MODULO          reduce using rule 102 (expresion -> exponencial .)
    POTENCIA        reduce using rule 102 (expresion -> exponencial .)
    MAYOR           reduce using rule 102 (expresion -> exponencial .)
    MENOR           reduce using rule 102 (expresion -> exponencial .)
    MAYORIGUAL      reduce using rule 102 (expresion -> exponencial .)
    MENORIGUAL      reduce using rule 102 (expresion -> exponencial .)
    IGUALACION      reduce using rule 102 (expresion -> exponencial .)
    DISTINTO        reduce using rule 102 (expresion -> exponencial .)
    AND             reduce using rule 102 (expresion -> exponencial .)
    OR              reduce using rule 102 (expresion -> exponencial .)
    PTOYCOMA        reduce using rule 102 (expresion -> exponencial .)
    FUNCTION        reduce using rule 102 (expresion -> exponencial .)
    ID              reduce using rule 102 (expresion -> exponencial .)
    LET             reduce using rule 102 (expresion -> exponencial .)
    CONSOLE         reduce using rule 102 (expresion -> exponencial .)
    IF              reduce using rule 102 (expresion -> exponencial .)
    WHILE           reduce using rule 102 (expresion -> exponencial .)
    FOR             reduce using rule 102 (expresion -> exponencial .)
    RETURN          reduce using rule 102 (expresion -> exponencial .)
    BREAK           reduce using rule 102 (expresion -> exponencial .)
    CONTINUE        reduce using rule 102 (expresion -> exponencial .)
    INTERFACE       reduce using rule 102 (expresion -> exponencial .)
    DECREMENTO      reduce using rule 102 (expresion -> exponencial .)
    INCREMENTO      reduce using rule 102 (expresion -> exponencial .)
    $end            reduce using rule 102 (expresion -> exponencial .)
    LLADER          reduce using rule 102 (expresion -> exponencial .)
    PARDER          reduce using rule 102 (expresion -> exponencial .)
    COMA            reduce using rule 102 (expresion -> exponencial .)
    CORDER          reduce using rule 102 (expresion -> exponencial .)


state 69

    (103) expresion -> separador .

    MAS             reduce using rule 103 (expresion -> separador .)
    MENOS           reduce using rule 103 (expresion -> separador .)
    POR             reduce using rule 103 (expresion -> separador .)
    DIVIDIDO        reduce using rule 103 (expresion -> separador .)
    MODULO          reduce using rule 103 (expresion -> separador .)
    POTENCIA        reduce using rule 103 (expresion -> separador .)
    MAYOR           reduce using rule 103 (expresion -> separador .)
    MENOR           reduce using rule 103 (expresion -> separador .)
    MAYORIGUAL      reduce using rule 103 (expresion -> separador .)
    MENORIGUAL      reduce using rule 103 (expresion -> separador .)
    IGUALACION      reduce using rule 103 (expresion -> separador .)
    DISTINTO        reduce using rule 103 (expresion -> separador .)
    AND             reduce using rule 103 (expresion -> separador .)
    OR              reduce using rule 103 (expresion -> separador .)
    PTOYCOMA        reduce using rule 103 (expresion -> separador .)
    FUNCTION        reduce using rule 103 (expresion -> separador .)
    ID              reduce using rule 103 (expresion -> separador .)
    LET             reduce using rule 103 (expresion -> separador .)
    CONSOLE         reduce using rule 103 (expresion -> separador .)
    IF              reduce using rule 103 (expresion -> separador .)
    WHILE           reduce using rule 103 (expresion -> separador .)
    FOR             reduce using rule 103 (expresion -> separador .)
    RETURN          reduce using rule 103 (expresion -> separador .)
    BREAK           reduce using rule 103 (expresion -> separador .)
    CONTINUE        reduce using rule 103 (expresion -> separador .)
    INTERFACE       reduce using rule 103 (expresion -> separador .)
    DECREMENTO      reduce using rule 103 (expresion -> separador .)
    INCREMENTO      reduce using rule 103 (expresion -> separador .)
    $end            reduce using rule 103 (expresion -> separador .)
    LLADER          reduce using rule 103 (expresion -> separador .)
    PARDER          reduce using rule 103 (expresion -> separador .)
    COMA            reduce using rule 103 (expresion -> separador .)
    CORDER          reduce using rule 103 (expresion -> separador .)


state 70

    (104) expresion -> concatenacion .

    MAS             reduce using rule 104 (expresion -> concatenacion .)
    MENOS           reduce using rule 104 (expresion -> concatenacion .)
    POR             reduce using rule 104 (expresion -> concatenacion .)
    DIVIDIDO        reduce using rule 104 (expresion -> concatenacion .)
    MODULO          reduce using rule 104 (expresion -> concatenacion .)
    POTENCIA        reduce using rule 104 (expresion -> concatenacion .)
    MAYOR           reduce using rule 104 (expresion -> concatenacion .)
    MENOR           reduce using rule 104 (expresion -> concatenacion .)
    MAYORIGUAL      reduce using rule 104 (expresion -> concatenacion .)
    MENORIGUAL      reduce using rule 104 (expresion -> concatenacion .)
    IGUALACION      reduce using rule 104 (expresion -> concatenacion .)
    DISTINTO        reduce using rule 104 (expresion -> concatenacion .)
    AND             reduce using rule 104 (expresion -> concatenacion .)
    OR              reduce using rule 104 (expresion -> concatenacion .)
    PTOYCOMA        reduce using rule 104 (expresion -> concatenacion .)
    FUNCTION        reduce using rule 104 (expresion -> concatenacion .)
    ID              reduce using rule 104 (expresion -> concatenacion .)
    LET             reduce using rule 104 (expresion -> concatenacion .)
    CONSOLE         reduce using rule 104 (expresion -> concatenacion .)
    IF              reduce using rule 104 (expresion -> concatenacion .)
    WHILE           reduce using rule 104 (expresion -> concatenacion .)
    FOR             reduce using rule 104 (expresion -> concatenacion .)
    RETURN          reduce using rule 104 (expresion -> concatenacion .)
    BREAK           reduce using rule 104 (expresion -> concatenacion .)
    CONTINUE        reduce using rule 104 (expresion -> concatenacion .)
    INTERFACE       reduce using rule 104 (expresion -> concatenacion .)
    DECREMENTO      reduce using rule 104 (expresion -> concatenacion .)
    INCREMENTO      reduce using rule 104 (expresion -> concatenacion .)
    $end            reduce using rule 104 (expresion -> concatenacion .)
    LLADER          reduce using rule 104 (expresion -> concatenacion .)
    PARDER          reduce using rule 104 (expresion -> concatenacion .)
    COMA            reduce using rule 104 (expresion -> concatenacion .)
    CORDER          reduce using rule 104 (expresion -> concatenacion .)


state 71

    (105) expresion -> to_mayusculas .

    MAS             reduce using rule 105 (expresion -> to_mayusculas .)
    MENOS           reduce using rule 105 (expresion -> to_mayusculas .)
    POR             reduce using rule 105 (expresion -> to_mayusculas .)
    DIVIDIDO        reduce using rule 105 (expresion -> to_mayusculas .)
    MODULO          reduce using rule 105 (expresion -> to_mayusculas .)
    POTENCIA        reduce using rule 105 (expresion -> to_mayusculas .)
    MAYOR           reduce using rule 105 (expresion -> to_mayusculas .)
    MENOR           reduce using rule 105 (expresion -> to_mayusculas .)
    MAYORIGUAL      reduce using rule 105 (expresion -> to_mayusculas .)
    MENORIGUAL      reduce using rule 105 (expresion -> to_mayusculas .)
    IGUALACION      reduce using rule 105 (expresion -> to_mayusculas .)
    DISTINTO        reduce using rule 105 (expresion -> to_mayusculas .)
    AND             reduce using rule 105 (expresion -> to_mayusculas .)
    OR              reduce using rule 105 (expresion -> to_mayusculas .)
    PTOYCOMA        reduce using rule 105 (expresion -> to_mayusculas .)
    FUNCTION        reduce using rule 105 (expresion -> to_mayusculas .)
    ID              reduce using rule 105 (expresion -> to_mayusculas .)
    LET             reduce using rule 105 (expresion -> to_mayusculas .)
    CONSOLE         reduce using rule 105 (expresion -> to_mayusculas .)
    IF              reduce using rule 105 (expresion -> to_mayusculas .)
    WHILE           reduce using rule 105 (expresion -> to_mayusculas .)
    FOR             reduce using rule 105 (expresion -> to_mayusculas .)
    RETURN          reduce using rule 105 (expresion -> to_mayusculas .)
    BREAK           reduce using rule 105 (expresion -> to_mayusculas .)
    CONTINUE        reduce using rule 105 (expresion -> to_mayusculas .)
    INTERFACE       reduce using rule 105 (expresion -> to_mayusculas .)
    DECREMENTO      reduce using rule 105 (expresion -> to_mayusculas .)
    INCREMENTO      reduce using rule 105 (expresion -> to_mayusculas .)
    $end            reduce using rule 105 (expresion -> to_mayusculas .)
    LLADER          reduce using rule 105 (expresion -> to_mayusculas .)
    PARDER          reduce using rule 105 (expresion -> to_mayusculas .)
    COMA            reduce using rule 105 (expresion -> to_mayusculas .)
    CORDER          reduce using rule 105 (expresion -> to_mayusculas .)


state 72

    (106) expresion -> to_minusculas .

    MAS             reduce using rule 106 (expresion -> to_minusculas .)
    MENOS           reduce using rule 106 (expresion -> to_minusculas .)
    POR             reduce using rule 106 (expresion -> to_minusculas .)
    DIVIDIDO        reduce using rule 106 (expresion -> to_minusculas .)
    MODULO          reduce using rule 106 (expresion -> to_minusculas .)
    POTENCIA        reduce using rule 106 (expresion -> to_minusculas .)
    MAYOR           reduce using rule 106 (expresion -> to_minusculas .)
    MENOR           reduce using rule 106 (expresion -> to_minusculas .)
    MAYORIGUAL      reduce using rule 106 (expresion -> to_minusculas .)
    MENORIGUAL      reduce using rule 106 (expresion -> to_minusculas .)
    IGUALACION      reduce using rule 106 (expresion -> to_minusculas .)
    DISTINTO        reduce using rule 106 (expresion -> to_minusculas .)
    AND             reduce using rule 106 (expresion -> to_minusculas .)
    OR              reduce using rule 106 (expresion -> to_minusculas .)
    PTOYCOMA        reduce using rule 106 (expresion -> to_minusculas .)
    FUNCTION        reduce using rule 106 (expresion -> to_minusculas .)
    ID              reduce using rule 106 (expresion -> to_minusculas .)
    LET             reduce using rule 106 (expresion -> to_minusculas .)
    CONSOLE         reduce using rule 106 (expresion -> to_minusculas .)
    IF              reduce using rule 106 (expresion -> to_minusculas .)
    WHILE           reduce using rule 106 (expresion -> to_minusculas .)
    FOR             reduce using rule 106 (expresion -> to_minusculas .)
    RETURN          reduce using rule 106 (expresion -> to_minusculas .)
    BREAK           reduce using rule 106 (expresion -> to_minusculas .)
    CONTINUE        reduce using rule 106 (expresion -> to_minusculas .)
    INTERFACE       reduce using rule 106 (expresion -> to_minusculas .)
    DECREMENTO      reduce using rule 106 (expresion -> to_minusculas .)
    INCREMENTO      reduce using rule 106 (expresion -> to_minusculas .)
    $end            reduce using rule 106 (expresion -> to_minusculas .)
    LLADER          reduce using rule 106 (expresion -> to_minusculas .)
    PARDER          reduce using rule 106 (expresion -> to_minusculas .)
    COMA            reduce using rule 106 (expresion -> to_minusculas .)
    CORDER          reduce using rule 106 (expresion -> to_minusculas .)


state 73

    (129) expresion -> expresion_interface .

    MAS             reduce using rule 129 (expresion -> expresion_interface .)
    MENOS           reduce using rule 129 (expresion -> expresion_interface .)
    POR             reduce using rule 129 (expresion -> expresion_interface .)
    DIVIDIDO        reduce using rule 129 (expresion -> expresion_interface .)
    MODULO          reduce using rule 129 (expresion -> expresion_interface .)
    POTENCIA        reduce using rule 129 (expresion -> expresion_interface .)
    MAYOR           reduce using rule 129 (expresion -> expresion_interface .)
    MENOR           reduce using rule 129 (expresion -> expresion_interface .)
    MAYORIGUAL      reduce using rule 129 (expresion -> expresion_interface .)
    MENORIGUAL      reduce using rule 129 (expresion -> expresion_interface .)
    IGUALACION      reduce using rule 129 (expresion -> expresion_interface .)
    DISTINTO        reduce using rule 129 (expresion -> expresion_interface .)
    AND             reduce using rule 129 (expresion -> expresion_interface .)
    OR              reduce using rule 129 (expresion -> expresion_interface .)
    PTOYCOMA        reduce using rule 129 (expresion -> expresion_interface .)
    FUNCTION        reduce using rule 129 (expresion -> expresion_interface .)
    ID              reduce using rule 129 (expresion -> expresion_interface .)
    LET             reduce using rule 129 (expresion -> expresion_interface .)
    CONSOLE         reduce using rule 129 (expresion -> expresion_interface .)
    IF              reduce using rule 129 (expresion -> expresion_interface .)
    WHILE           reduce using rule 129 (expresion -> expresion_interface .)
    FOR             reduce using rule 129 (expresion -> expresion_interface .)
    RETURN          reduce using rule 129 (expresion -> expresion_interface .)
    BREAK           reduce using rule 129 (expresion -> expresion_interface .)
    CONTINUE        reduce using rule 129 (expresion -> expresion_interface .)
    INTERFACE       reduce using rule 129 (expresion -> expresion_interface .)
    DECREMENTO      reduce using rule 129 (expresion -> expresion_interface .)
    INCREMENTO      reduce using rule 129 (expresion -> expresion_interface .)
    $end            reduce using rule 129 (expresion -> expresion_interface .)
    LLADER          reduce using rule 129 (expresion -> expresion_interface .)
    PARDER          reduce using rule 129 (expresion -> expresion_interface .)
    COMA            reduce using rule 129 (expresion -> expresion_interface .)
    CORDER          reduce using rule 129 (expresion -> expresion_interface .)


state 74

    (150) expresion -> arreglo .

    MAS             reduce using rule 150 (expresion -> arreglo .)
    MENOS           reduce using rule 150 (expresion -> arreglo .)
    POR             reduce using rule 150 (expresion -> arreglo .)
    DIVIDIDO        reduce using rule 150 (expresion -> arreglo .)
    MODULO          reduce using rule 150 (expresion -> arreglo .)
    POTENCIA        reduce using rule 150 (expresion -> arreglo .)
    MAYOR           reduce using rule 150 (expresion -> arreglo .)
    MENOR           reduce using rule 150 (expresion -> arreglo .)
    MAYORIGUAL      reduce using rule 150 (expresion -> arreglo .)
    MENORIGUAL      reduce using rule 150 (expresion -> arreglo .)
    IGUALACION      reduce using rule 150 (expresion -> arreglo .)
    DISTINTO        reduce using rule 150 (expresion -> arreglo .)
    AND             reduce using rule 150 (expresion -> arreglo .)
    OR              reduce using rule 150 (expresion -> arreglo .)
    PTOYCOMA        reduce using rule 150 (expresion -> arreglo .)
    FUNCTION        reduce using rule 150 (expresion -> arreglo .)
    ID              reduce using rule 150 (expresion -> arreglo .)
    LET             reduce using rule 150 (expresion -> arreglo .)
    CONSOLE         reduce using rule 150 (expresion -> arreglo .)
    IF              reduce using rule 150 (expresion -> arreglo .)
    WHILE           reduce using rule 150 (expresion -> arreglo .)
    FOR             reduce using rule 150 (expresion -> arreglo .)
    RETURN          reduce using rule 150 (expresion -> arreglo .)
    BREAK           reduce using rule 150 (expresion -> arreglo .)
    CONTINUE        reduce using rule 150 (expresion -> arreglo .)
    INTERFACE       reduce using rule 150 (expresion -> arreglo .)
    DECREMENTO      reduce using rule 150 (expresion -> arreglo .)
    INCREMENTO      reduce using rule 150 (expresion -> arreglo .)
    $end            reduce using rule 150 (expresion -> arreglo .)
    LLADER          reduce using rule 150 (expresion -> arreglo .)
    PARDER          reduce using rule 150 (expresion -> arreglo .)
    COMA            reduce using rule 150 (expresion -> arreglo .)
    CORDER          reduce using rule 150 (expresion -> arreglo .)


state 75

    (153) expresion -> acceso_array .

    MAS             reduce using rule 153 (expresion -> acceso_array .)
    MENOS           reduce using rule 153 (expresion -> acceso_array .)
    POR             reduce using rule 153 (expresion -> acceso_array .)
    DIVIDIDO        reduce using rule 153 (expresion -> acceso_array .)
    MODULO          reduce using rule 153 (expresion -> acceso_array .)
    POTENCIA        reduce using rule 153 (expresion -> acceso_array .)
    MAYOR           reduce using rule 153 (expresion -> acceso_array .)
    MENOR           reduce using rule 153 (expresion -> acceso_array .)
    MAYORIGUAL      reduce using rule 153 (expresion -> acceso_array .)
    MENORIGUAL      reduce using rule 153 (expresion -> acceso_array .)
    IGUALACION      reduce using rule 153 (expresion -> acceso_array .)
    DISTINTO        reduce using rule 153 (expresion -> acceso_array .)
    AND             reduce using rule 153 (expresion -> acceso_array .)
    OR              reduce using rule 153 (expresion -> acceso_array .)
    PTOYCOMA        reduce using rule 153 (expresion -> acceso_array .)
    FUNCTION        reduce using rule 153 (expresion -> acceso_array .)
    ID              reduce using rule 153 (expresion -> acceso_array .)
    LET             reduce using rule 153 (expresion -> acceso_array .)
    CONSOLE         reduce using rule 153 (expresion -> acceso_array .)
    IF              reduce using rule 153 (expresion -> acceso_array .)
    WHILE           reduce using rule 153 (expresion -> acceso_array .)
    FOR             reduce using rule 153 (expresion -> acceso_array .)
    RETURN          reduce using rule 153 (expresion -> acceso_array .)
    BREAK           reduce using rule 153 (expresion -> acceso_array .)
    CONTINUE        reduce using rule 153 (expresion -> acceso_array .)
    INTERFACE       reduce using rule 153 (expresion -> acceso_array .)
    DECREMENTO      reduce using rule 153 (expresion -> acceso_array .)
    INCREMENTO      reduce using rule 153 (expresion -> acceso_array .)
    $end            reduce using rule 153 (expresion -> acceso_array .)
    LLADER          reduce using rule 153 (expresion -> acceso_array .)
    PARDER          reduce using rule 153 (expresion -> acceso_array .)
    COMA            reduce using rule 153 (expresion -> acceso_array .)
    CORDER          reduce using rule 153 (expresion -> acceso_array .)


state 76

    (155) expresion -> acceso_array_interface .

    MAS             reduce using rule 155 (expresion -> acceso_array_interface .)
    MENOS           reduce using rule 155 (expresion -> acceso_array_interface .)
    POR             reduce using rule 155 (expresion -> acceso_array_interface .)
    DIVIDIDO        reduce using rule 155 (expresion -> acceso_array_interface .)
    MODULO          reduce using rule 155 (expresion -> acceso_array_interface .)
    POTENCIA        reduce using rule 155 (expresion -> acceso_array_interface .)
    MAYOR           reduce using rule 155 (expresion -> acceso_array_interface .)
    MENOR           reduce using rule 155 (expresion -> acceso_array_interface .)
    MAYORIGUAL      reduce using rule 155 (expresion -> acceso_array_interface .)
    MENORIGUAL      reduce using rule 155 (expresion -> acceso_array_interface .)
    IGUALACION      reduce using rule 155 (expresion -> acceso_array_interface .)
    DISTINTO        reduce using rule 155 (expresion -> acceso_array_interface .)
    AND             reduce using rule 155 (expresion -> acceso_array_interface .)
    OR              reduce using rule 155 (expresion -> acceso_array_interface .)
    PTOYCOMA        reduce using rule 155 (expresion -> acceso_array_interface .)
    FUNCTION        reduce using rule 155 (expresion -> acceso_array_interface .)
    ID              reduce using rule 155 (expresion -> acceso_array_interface .)
    LET             reduce using rule 155 (expresion -> acceso_array_interface .)
    CONSOLE         reduce using rule 155 (expresion -> acceso_array_interface .)
    IF              reduce using rule 155 (expresion -> acceso_array_interface .)
    WHILE           reduce using rule 155 (expresion -> acceso_array_interface .)
    FOR             reduce using rule 155 (expresion -> acceso_array_interface .)
    RETURN          reduce using rule 155 (expresion -> acceso_array_interface .)
    BREAK           reduce using rule 155 (expresion -> acceso_array_interface .)
    CONTINUE        reduce using rule 155 (expresion -> acceso_array_interface .)
    INTERFACE       reduce using rule 155 (expresion -> acceso_array_interface .)
    DECREMENTO      reduce using rule 155 (expresion -> acceso_array_interface .)
    INCREMENTO      reduce using rule 155 (expresion -> acceso_array_interface .)
    $end            reduce using rule 155 (expresion -> acceso_array_interface .)
    LLADER          reduce using rule 155 (expresion -> acceso_array_interface .)
    PARDER          reduce using rule 155 (expresion -> acceso_array_interface .)
    COMA            reduce using rule 155 (expresion -> acceso_array_interface .)
    CORDER          reduce using rule 155 (expresion -> acceso_array_interface .)


state 77

    (161) expresion -> TYPEOF . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 132


state 78

    (162) expresion -> LENGTH . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 133


state 79

    (115) casteo -> CAST_STRING . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 134


state 80

    (116) casteo -> CAST_NUMBER . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 135


state 81

    (99) booleano -> TRUE .

    MAS             reduce using rule 99 (booleano -> TRUE .)
    MENOS           reduce using rule 99 (booleano -> TRUE .)
    POR             reduce using rule 99 (booleano -> TRUE .)
    DIVIDIDO        reduce using rule 99 (booleano -> TRUE .)
    MODULO          reduce using rule 99 (booleano -> TRUE .)
    POTENCIA        reduce using rule 99 (booleano -> TRUE .)
    MAYOR           reduce using rule 99 (booleano -> TRUE .)
    MENOR           reduce using rule 99 (booleano -> TRUE .)
    MAYORIGUAL      reduce using rule 99 (booleano -> TRUE .)
    MENORIGUAL      reduce using rule 99 (booleano -> TRUE .)
    IGUALACION      reduce using rule 99 (booleano -> TRUE .)
    DISTINTO        reduce using rule 99 (booleano -> TRUE .)
    AND             reduce using rule 99 (booleano -> TRUE .)
    OR              reduce using rule 99 (booleano -> TRUE .)
    PTOYCOMA        reduce using rule 99 (booleano -> TRUE .)
    FUNCTION        reduce using rule 99 (booleano -> TRUE .)
    ID              reduce using rule 99 (booleano -> TRUE .)
    LET             reduce using rule 99 (booleano -> TRUE .)
    CONSOLE         reduce using rule 99 (booleano -> TRUE .)
    IF              reduce using rule 99 (booleano -> TRUE .)
    WHILE           reduce using rule 99 (booleano -> TRUE .)
    FOR             reduce using rule 99 (booleano -> TRUE .)
    RETURN          reduce using rule 99 (booleano -> TRUE .)
    BREAK           reduce using rule 99 (booleano -> TRUE .)
    CONTINUE        reduce using rule 99 (booleano -> TRUE .)
    INTERFACE       reduce using rule 99 (booleano -> TRUE .)
    DECREMENTO      reduce using rule 99 (booleano -> TRUE .)
    INCREMENTO      reduce using rule 99 (booleano -> TRUE .)
    $end            reduce using rule 99 (booleano -> TRUE .)
    LLADER          reduce using rule 99 (booleano -> TRUE .)
    PARDER          reduce using rule 99 (booleano -> TRUE .)
    COMA            reduce using rule 99 (booleano -> TRUE .)
    CORDER          reduce using rule 99 (booleano -> TRUE .)


state 82

    (100) booleano -> FALSE .

    MAS             reduce using rule 100 (booleano -> FALSE .)
    MENOS           reduce using rule 100 (booleano -> FALSE .)
    POR             reduce using rule 100 (booleano -> FALSE .)
    DIVIDIDO        reduce using rule 100 (booleano -> FALSE .)
    MODULO          reduce using rule 100 (booleano -> FALSE .)
    POTENCIA        reduce using rule 100 (booleano -> FALSE .)
    MAYOR           reduce using rule 100 (booleano -> FALSE .)
    MENOR           reduce using rule 100 (booleano -> FALSE .)
    MAYORIGUAL      reduce using rule 100 (booleano -> FALSE .)
    MENORIGUAL      reduce using rule 100 (booleano -> FALSE .)
    IGUALACION      reduce using rule 100 (booleano -> FALSE .)
    DISTINTO        reduce using rule 100 (booleano -> FALSE .)
    AND             reduce using rule 100 (booleano -> FALSE .)
    OR              reduce using rule 100 (booleano -> FALSE .)
    PTOYCOMA        reduce using rule 100 (booleano -> FALSE .)
    FUNCTION        reduce using rule 100 (booleano -> FALSE .)
    ID              reduce using rule 100 (booleano -> FALSE .)
    LET             reduce using rule 100 (booleano -> FALSE .)
    CONSOLE         reduce using rule 100 (booleano -> FALSE .)
    IF              reduce using rule 100 (booleano -> FALSE .)
    WHILE           reduce using rule 100 (booleano -> FALSE .)
    FOR             reduce using rule 100 (booleano -> FALSE .)
    RETURN          reduce using rule 100 (booleano -> FALSE .)
    BREAK           reduce using rule 100 (booleano -> FALSE .)
    CONTINUE        reduce using rule 100 (booleano -> FALSE .)
    INTERFACE       reduce using rule 100 (booleano -> FALSE .)
    DECREMENTO      reduce using rule 100 (booleano -> FALSE .)
    INCREMENTO      reduce using rule 100 (booleano -> FALSE .)
    $end            reduce using rule 100 (booleano -> FALSE .)
    LLADER          reduce using rule 100 (booleano -> FALSE .)
    PARDER          reduce using rule 100 (booleano -> FALSE .)
    COMA            reduce using rule 100 (booleano -> FALSE .)
    CORDER          reduce using rule 100 (booleano -> FALSE .)


state 83

    (107) aproximacion -> TOFIXED . PARIZQ expresion COMA expresion PARDER

    PARIZQ          shift and go to state 136


state 84

    (108) exponencial -> TOEXPONENTIAL . PARIZQ expresion COMA expresion PARDER

    PARIZQ          shift and go to state 137


state 85

    (111) separador -> SPLIT . PARIZQ expresion COMA expresion PARDER

    PARIZQ          shift and go to state 138


state 86

    (112) concatenacion -> CONCAT . PARIZQ expresion COMA expresion PARDER

    PARIZQ          shift and go to state 139


state 87

    (109) to_mayusculas -> TOUPPERCASE . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 140


state 88

    (110) to_minusculas -> TOLOWERCASE . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 141


state 89

    (128) expresion_interface -> LLAIZQ . lista_d LLADER
    (130) lista_d -> . lista_d COMA parDecl
    (131) lista_d -> . parDecl
    (132) parDecl -> . ID DOSPUNTOS expresion

    ID              shift and go to state 144

    lista_d                        shift and go to state 142
    parDecl                        shift and go to state 143

state 90

    (151) arreglo -> CORIZQ . lista_exp CORDER
    (152) arreglo -> CORIZQ . CORDER
    (148) lista_exp -> . lista_exp COMA expresion
    (149) lista_exp -> . expresion
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    CORDER          shift and go to state 146
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    lista_exp                      shift and go to state 145
    expresion                      shift and go to state 147
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 91

    (121) instanciar -> INTERFACE ID . bloquestruct
    (122) bloquestruct -> . LLAIZQ lista_params_struct LLADER

    LLAIZQ          shift and go to state 149

    bloquestruct                   shift and go to state 148

state 92

    (35) dec -> DECREMENTO ID .

    PTOYCOMA        reduce using rule 35 (dec -> DECREMENTO ID .)
    FUNCTION        reduce using rule 35 (dec -> DECREMENTO ID .)
    ID              reduce using rule 35 (dec -> DECREMENTO ID .)
    LET             reduce using rule 35 (dec -> DECREMENTO ID .)
    CONSOLE         reduce using rule 35 (dec -> DECREMENTO ID .)
    IF              reduce using rule 35 (dec -> DECREMENTO ID .)
    WHILE           reduce using rule 35 (dec -> DECREMENTO ID .)
    FOR             reduce using rule 35 (dec -> DECREMENTO ID .)
    RETURN          reduce using rule 35 (dec -> DECREMENTO ID .)
    BREAK           reduce using rule 35 (dec -> DECREMENTO ID .)
    CONTINUE        reduce using rule 35 (dec -> DECREMENTO ID .)
    INTERFACE       reduce using rule 35 (dec -> DECREMENTO ID .)
    DECREMENTO      reduce using rule 35 (dec -> DECREMENTO ID .)
    INCREMENTO      reduce using rule 35 (dec -> DECREMENTO ID .)
    $end            reduce using rule 35 (dec -> DECREMENTO ID .)
    MAS             reduce using rule 35 (dec -> DECREMENTO ID .)
    MENOS           reduce using rule 35 (dec -> DECREMENTO ID .)
    POR             reduce using rule 35 (dec -> DECREMENTO ID .)
    DIVIDIDO        reduce using rule 35 (dec -> DECREMENTO ID .)
    MODULO          reduce using rule 35 (dec -> DECREMENTO ID .)
    POTENCIA        reduce using rule 35 (dec -> DECREMENTO ID .)
    MAYOR           reduce using rule 35 (dec -> DECREMENTO ID .)
    MENOR           reduce using rule 35 (dec -> DECREMENTO ID .)
    MAYORIGUAL      reduce using rule 35 (dec -> DECREMENTO ID .)
    MENORIGUAL      reduce using rule 35 (dec -> DECREMENTO ID .)
    IGUALACION      reduce using rule 35 (dec -> DECREMENTO ID .)
    DISTINTO        reduce using rule 35 (dec -> DECREMENTO ID .)
    AND             reduce using rule 35 (dec -> DECREMENTO ID .)
    OR              reduce using rule 35 (dec -> DECREMENTO ID .)
    LLADER          reduce using rule 35 (dec -> DECREMENTO ID .)
    PARDER          reduce using rule 35 (dec -> DECREMENTO ID .)
    COMA            reduce using rule 35 (dec -> DECREMENTO ID .)
    CORDER          reduce using rule 35 (dec -> DECREMENTO ID .)


state 93

    (37) inc -> INCREMENTO ID .

    PTOYCOMA        reduce using rule 37 (inc -> INCREMENTO ID .)
    FUNCTION        reduce using rule 37 (inc -> INCREMENTO ID .)
    ID              reduce using rule 37 (inc -> INCREMENTO ID .)
    LET             reduce using rule 37 (inc -> INCREMENTO ID .)
    CONSOLE         reduce using rule 37 (inc -> INCREMENTO ID .)
    IF              reduce using rule 37 (inc -> INCREMENTO ID .)
    WHILE           reduce using rule 37 (inc -> INCREMENTO ID .)
    FOR             reduce using rule 37 (inc -> INCREMENTO ID .)
    RETURN          reduce using rule 37 (inc -> INCREMENTO ID .)
    BREAK           reduce using rule 37 (inc -> INCREMENTO ID .)
    CONTINUE        reduce using rule 37 (inc -> INCREMENTO ID .)
    INTERFACE       reduce using rule 37 (inc -> INCREMENTO ID .)
    DECREMENTO      reduce using rule 37 (inc -> INCREMENTO ID .)
    INCREMENTO      reduce using rule 37 (inc -> INCREMENTO ID .)
    $end            reduce using rule 37 (inc -> INCREMENTO ID .)
    MAS             reduce using rule 37 (inc -> INCREMENTO ID .)
    MENOS           reduce using rule 37 (inc -> INCREMENTO ID .)
    POR             reduce using rule 37 (inc -> INCREMENTO ID .)
    DIVIDIDO        reduce using rule 37 (inc -> INCREMENTO ID .)
    MODULO          reduce using rule 37 (inc -> INCREMENTO ID .)
    POTENCIA        reduce using rule 37 (inc -> INCREMENTO ID .)
    MAYOR           reduce using rule 37 (inc -> INCREMENTO ID .)
    MENOR           reduce using rule 37 (inc -> INCREMENTO ID .)
    MAYORIGUAL      reduce using rule 37 (inc -> INCREMENTO ID .)
    MENORIGUAL      reduce using rule 37 (inc -> INCREMENTO ID .)
    IGUALACION      reduce using rule 37 (inc -> INCREMENTO ID .)
    DISTINTO        reduce using rule 37 (inc -> INCREMENTO ID .)
    AND             reduce using rule 37 (inc -> INCREMENTO ID .)
    OR              reduce using rule 37 (inc -> INCREMENTO ID .)
    LLADER          reduce using rule 37 (inc -> INCREMENTO ID .)
    PARDER          reduce using rule 37 (inc -> INCREMENTO ID .)
    COMA            reduce using rule 37 (inc -> INCREMENTO ID .)
    CORDER          reduce using rule 37 (inc -> INCREMENTO ID .)


state 94

    (51) funcion -> FUNCTION ID PARIZQ . lista_parametros PARDER bloque
    (52) funcion -> FUNCTION ID PARIZQ . lista_parametros PARDER DOSPUNTOS tipo bloque
    (53) funcion -> FUNCTION ID PARIZQ . PARDER bloque
    (54) funcion -> FUNCTION ID PARIZQ . PARDER DOSPUNTOS tipo bloque
    (55) funcion -> FUNCTION ID PARIZQ . PARDER DOSPUNTOS ID bloque
    (56) funcion -> FUNCTION ID PARIZQ . lista_parametros PARDER DOSPUNTOS ID bloque
    (57) funcion -> FUNCTION ID PARIZQ . lista_parametros PARDER DOSPUNTOS tipo CORIZQ CORDER bloque
    (58) lista_parametros -> . lista_parametros COMA parametro
    (59) lista_parametros -> . parametro
    (60) parametro -> . ID DOSPUNTOS tipo
    (61) parametro -> . ID DOSPUNTOS ID
    (62) parametro -> . ID DOSPUNTOS tipo CORIZQ CORDER

    PARDER          shift and go to state 152
    ID              shift and go to state 150

    lista_parametros               shift and go to state 151
    parametro                      shift and go to state 153

state 95

    (134) asignacionInterface -> ID PUNTO ID . IGUAL expresion

    IGUAL           shift and go to state 154


state 96

    (113) instruccion3 -> ID PUNTO PUSH . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 155


state 97

    (64) llamada_funcion -> ID PARIZQ lista_argumentos . PARDER
    (66) lista_argumentos -> lista_argumentos . COMA expresion

    PARDER          shift and go to state 156
    COMA            shift and go to state 157


state 98

    (65) llamada_funcion -> ID PARIZQ PARDER .

    PTOYCOMA        reduce using rule 65 (llamada_funcion -> ID PARIZQ PARDER .)
    FUNCTION        reduce using rule 65 (llamada_funcion -> ID PARIZQ PARDER .)
    ID              reduce using rule 65 (llamada_funcion -> ID PARIZQ PARDER .)
    LET             reduce using rule 65 (llamada_funcion -> ID PARIZQ PARDER .)
    CONSOLE         reduce using rule 65 (llamada_funcion -> ID PARIZQ PARDER .)
    IF              reduce using rule 65 (llamada_funcion -> ID PARIZQ PARDER .)
    WHILE           reduce using rule 65 (llamada_funcion -> ID PARIZQ PARDER .)
    FOR             reduce using rule 65 (llamada_funcion -> ID PARIZQ PARDER .)
    RETURN          reduce using rule 65 (llamada_funcion -> ID PARIZQ PARDER .)
    BREAK           reduce using rule 65 (llamada_funcion -> ID PARIZQ PARDER .)
    CONTINUE        reduce using rule 65 (llamada_funcion -> ID PARIZQ PARDER .)
    INTERFACE       reduce using rule 65 (llamada_funcion -> ID PARIZQ PARDER .)
    DECREMENTO      reduce using rule 65 (llamada_funcion -> ID PARIZQ PARDER .)
    INCREMENTO      reduce using rule 65 (llamada_funcion -> ID PARIZQ PARDER .)
    $end            reduce using rule 65 (llamada_funcion -> ID PARIZQ PARDER .)
    MAS             reduce using rule 65 (llamada_funcion -> ID PARIZQ PARDER .)
    MENOS           reduce using rule 65 (llamada_funcion -> ID PARIZQ PARDER .)
    POR             reduce using rule 65 (llamada_funcion -> ID PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 65 (llamada_funcion -> ID PARIZQ PARDER .)
    MODULO          reduce using rule 65 (llamada_funcion -> ID PARIZQ PARDER .)
    POTENCIA        reduce using rule 65 (llamada_funcion -> ID PARIZQ PARDER .)
    MAYOR           reduce using rule 65 (llamada_funcion -> ID PARIZQ PARDER .)
    MENOR           reduce using rule 65 (llamada_funcion -> ID PARIZQ PARDER .)
    MAYORIGUAL      reduce using rule 65 (llamada_funcion -> ID PARIZQ PARDER .)
    MENORIGUAL      reduce using rule 65 (llamada_funcion -> ID PARIZQ PARDER .)
    IGUALACION      reduce using rule 65 (llamada_funcion -> ID PARIZQ PARDER .)
    DISTINTO        reduce using rule 65 (llamada_funcion -> ID PARIZQ PARDER .)
    AND             reduce using rule 65 (llamada_funcion -> ID PARIZQ PARDER .)
    OR              reduce using rule 65 (llamada_funcion -> ID PARIZQ PARDER .)
    LLADER          reduce using rule 65 (llamada_funcion -> ID PARIZQ PARDER .)
    PARDER          reduce using rule 65 (llamada_funcion -> ID PARIZQ PARDER .)
    COMA            reduce using rule 65 (llamada_funcion -> ID PARIZQ PARDER .)
    CORDER          reduce using rule 65 (llamada_funcion -> ID PARIZQ PARDER .)


state 99

    (67) lista_argumentos -> expresion .
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    PARDER          reduce using rule 67 (lista_argumentos -> expresion .)
    COMA            reduce using rule 67 (lista_argumentos -> expresion .)
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POR             shift and go to state 115
    DIVIDIDO        shift and go to state 116
    MODULO          shift and go to state 117
    POTENCIA        shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYORIGUAL      shift and go to state 121
    MENORIGUAL      shift and go to state 122
    IGUALACION      shift and go to state 123
    DISTINTO        shift and go to state 124
    AND             shift and go to state 125
    OR              shift and go to state 126


state 100

    (30) asignacion -> ID IGUAL expresion .
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    PTOYCOMA        reduce using rule 30 (asignacion -> ID IGUAL expresion .)
    FUNCTION        reduce using rule 30 (asignacion -> ID IGUAL expresion .)
    ID              reduce using rule 30 (asignacion -> ID IGUAL expresion .)
    LET             reduce using rule 30 (asignacion -> ID IGUAL expresion .)
    CONSOLE         reduce using rule 30 (asignacion -> ID IGUAL expresion .)
    IF              reduce using rule 30 (asignacion -> ID IGUAL expresion .)
    WHILE           reduce using rule 30 (asignacion -> ID IGUAL expresion .)
    FOR             reduce using rule 30 (asignacion -> ID IGUAL expresion .)
    RETURN          reduce using rule 30 (asignacion -> ID IGUAL expresion .)
    BREAK           reduce using rule 30 (asignacion -> ID IGUAL expresion .)
    CONTINUE        reduce using rule 30 (asignacion -> ID IGUAL expresion .)
    INTERFACE       reduce using rule 30 (asignacion -> ID IGUAL expresion .)
    DECREMENTO      reduce using rule 30 (asignacion -> ID IGUAL expresion .)
    INCREMENTO      reduce using rule 30 (asignacion -> ID IGUAL expresion .)
    $end            reduce using rule 30 (asignacion -> ID IGUAL expresion .)
    LLADER          reduce using rule 30 (asignacion -> ID IGUAL expresion .)
    PARDER          reduce using rule 30 (asignacion -> ID IGUAL expresion .)
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POR             shift and go to state 115
    DIVIDIDO        shift and go to state 116
    MODULO          shift and go to state 117
    POTENCIA        shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYORIGUAL      shift and go to state 121
    MENORIGUAL      shift and go to state 122
    IGUALACION      shift and go to state 123
    DISTINTO        shift and go to state 124
    AND             shift and go to state 125
    OR              shift and go to state 126


state 101

    (160) asignacion_array -> ID lista_acceso_array IGUAL . expresion
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    expresion                      shift and go to state 158
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 102

    (157) lista_acceso_array -> lista_acceso_array acceso_array_exp .

    IGUAL           reduce using rule 157 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    CORIZQ          reduce using rule 157 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    PUNTO           reduce using rule 157 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    MAS             reduce using rule 157 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    MENOS           reduce using rule 157 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    POR             reduce using rule 157 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    DIVIDIDO        reduce using rule 157 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    MODULO          reduce using rule 157 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    POTENCIA        reduce using rule 157 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    MAYOR           reduce using rule 157 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    MENOR           reduce using rule 157 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    MAYORIGUAL      reduce using rule 157 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    MENORIGUAL      reduce using rule 157 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    IGUALACION      reduce using rule 157 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    DISTINTO        reduce using rule 157 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    AND             reduce using rule 157 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    OR              reduce using rule 157 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    PTOYCOMA        reduce using rule 157 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    FUNCTION        reduce using rule 157 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    ID              reduce using rule 157 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    LET             reduce using rule 157 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    CONSOLE         reduce using rule 157 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    IF              reduce using rule 157 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    WHILE           reduce using rule 157 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    FOR             reduce using rule 157 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    RETURN          reduce using rule 157 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    BREAK           reduce using rule 157 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    CONTINUE        reduce using rule 157 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    INTERFACE       reduce using rule 157 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    DECREMENTO      reduce using rule 157 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    INCREMENTO      reduce using rule 157 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    $end            reduce using rule 157 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    LLADER          reduce using rule 157 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    PARDER          reduce using rule 157 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    COMA            reduce using rule 157 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)
    CORDER          reduce using rule 157 (lista_acceso_array -> lista_acceso_array acceso_array_exp .)


state 103

    (159) acceso_array_exp -> CORIZQ expresion . CORDER
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    CORDER          shift and go to state 159
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POR             shift and go to state 115
    DIVIDIDO        shift and go to state 116
    MODULO          shift and go to state 117
    POTENCIA        shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYORIGUAL      shift and go to state 121
    MENORIGUAL      shift and go to state 122
    IGUALACION      shift and go to state 123
    DISTINTO        shift and go to state 124
    AND             shift and go to state 125
    OR              shift and go to state 126


state 104

    (26) declaracion -> LET ID IGUAL . expresion
    (141) declaracionArray -> LET ID IGUAL . CORIZQ CORDER
    (143) declaracionArray -> LET ID IGUAL . CORIZQ lista_exp CORDER
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    CORIZQ          shift and go to state 161
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89

    expresion                      shift and go to state 160
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 105

    (28) declaracion -> LET ID DOSPUNTOS . tipo IGUAL expresion
    (29) declaracion -> LET ID DOSPUNTOS . tipo
    (127) declaracionInterface -> LET ID DOSPUNTOS . ID IGUAL expresion_interface
    (135) declaracionArray -> LET ID DOSPUNTOS . ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER
    (136) declaracionArray -> LET ID DOSPUNTOS . ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER
    (137) declaracionArray -> LET ID DOSPUNTOS . ARRAY MENOR tipo MAYOR
    (138) declaracionArray -> LET ID DOSPUNTOS . tipo CORIZQ CORDER
    (139) declaracionArray -> LET ID DOSPUNTOS . tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER
    (140) declaracionArray -> LET ID DOSPUNTOS . tipo CORIZQ CORDER IGUAL CORIZQ CORDER
    (142) declaracionArray -> LET ID DOSPUNTOS . tipo CORIZQ CORDER IGUAL expresion
    (144) declaracionArray -> LET ID DOSPUNTOS . ID IGUAL CORIZQ CORDER
    (145) declaracionArray -> LET ID DOSPUNTOS . ID IGUAL CORIZQ lista_exp CORDER
    (146) declaracionArray -> LET ID DOSPUNTOS . ID CORIZQ CORDER
    (147) declaracionArray -> LET ID DOSPUNTOS . ID CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER
    (68) tipo -> . NUMBER
    (69) tipo -> . STRING
    (70) tipo -> . BOOLEAN
    (71) tipo -> . ANY
    (72) tipo -> . NULL

    ID              shift and go to state 162
    ARRAY           shift and go to state 164
    NUMBER          shift and go to state 165
    STRING          shift and go to state 166
    BOOLEAN         shift and go to state 167
    ANY             shift and go to state 168
    NULL            shift and go to state 169

    tipo                           shift and go to state 163

state 106

    (38) impresion -> CONSOLE PUNTO LOG . PARIZQ expresion PARDER
    (39) impresion -> CONSOLE PUNTO LOG . PARIZQ lista_argumentos PARDER

    PARIZQ          shift and go to state 170


state 107

    (40) condicional -> IF PARIZQ expresion . PARDER bloque
    (41) condicional -> IF PARIZQ expresion . PARDER bloque ELSE bloque
    (42) condicional -> IF PARIZQ expresion . PARDER bloque lista_elif
    (43) condicional -> IF PARIZQ expresion . PARDER bloque lista_elif ELSE bloque
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    PARDER          shift and go to state 171
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POR             shift and go to state 115
    DIVIDIDO        shift and go to state 116
    MODULO          shift and go to state 117
    POTENCIA        shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYORIGUAL      shift and go to state 121
    MENORIGUAL      shift and go to state 122
    IGUALACION      shift and go to state 123
    DISTINTO        shift and go to state 124
    AND             shift and go to state 125
    OR              shift and go to state 126


state 108

    (47) ciclo_while -> WHILE PARIZQ expresion . PARDER bloque
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    PARDER          shift and go to state 172
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POR             shift and go to state 115
    DIVIDIDO        shift and go to state 116
    MODULO          shift and go to state 117
    POTENCIA        shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYORIGUAL      shift and go to state 121
    MENORIGUAL      shift and go to state 122
    IGUALACION      shift and go to state 123
    DISTINTO        shift and go to state 124
    AND             shift and go to state 125
    OR              shift and go to state 126


state 109

    (48) ciclo_for -> FOR PARIZQ declaracion . PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque

    PTOYCOMA        shift and go to state 173


state 110

    (49) ciclo_for -> FOR PARIZQ asignacion . PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque

    PTOYCOMA        shift and go to state 174


state 111

    (50) ciclo_for_of -> FOR PARIZQ LET . ID OF expresion PARDER bloque
    (26) declaracion -> LET . ID IGUAL expresion
    (27) declaracion -> LET . ID
    (28) declaracion -> LET . ID DOSPUNTOS tipo IGUAL expresion
    (29) declaracion -> LET . ID DOSPUNTOS tipo

    ID              shift and go to state 175


state 112

    (30) asignacion -> ID . IGUAL expresion
    (34) dec -> ID . DECREMENTO
    (36) inc -> ID . INCREMENTO
    (134) asignacionInterface -> ID . PUNTO ID IGUAL expresion

    IGUAL           shift and go to state 42
    DECREMENTO      shift and go to state 44
    INCREMENTO      shift and go to state 45
    PUNTO           shift and go to state 176


state 113

    (73) expresion -> expresion MAS . expresion
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    expresion                      shift and go to state 177
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 114

    (74) expresion -> expresion MENOS . expresion
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    expresion                      shift and go to state 178
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 115

    (75) expresion -> expresion POR . expresion
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    expresion                      shift and go to state 179
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 116

    (76) expresion -> expresion DIVIDIDO . expresion
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    expresion                      shift and go to state 180
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 117

    (77) expresion -> expresion MODULO . expresion
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    expresion                      shift and go to state 181
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 118

    (78) expresion -> expresion POTENCIA . expresion
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    expresion                      shift and go to state 182
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 119

    (80) expresion -> expresion MAYOR . expresion
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    expresion                      shift and go to state 183
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 120

    (81) expresion -> expresion MENOR . expresion
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    expresion                      shift and go to state 184
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 121

    (82) expresion -> expresion MAYORIGUAL . expresion
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    expresion                      shift and go to state 185
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 122

    (83) expresion -> expresion MENORIGUAL . expresion
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    expresion                      shift and go to state 186
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 123

    (84) expresion -> expresion IGUALACION . expresion
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    expresion                      shift and go to state 187
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 124

    (85) expresion -> expresion DISTINTO . expresion
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    expresion                      shift and go to state 188
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 125

    (86) expresion -> expresion AND . expresion
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    expresion                      shift and go to state 189
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 126

    (87) expresion -> expresion OR . expresion
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    expresion                      shift and go to state 190
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 127

    (79) expresion -> MENOS expresion .
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    MAS             reduce using rule 79 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 79 (expresion -> MENOS expresion .)
    POR             reduce using rule 79 (expresion -> MENOS expresion .)
    DIVIDIDO        reduce using rule 79 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 79 (expresion -> MENOS expresion .)
    POTENCIA        reduce using rule 79 (expresion -> MENOS expresion .)
    MAYOR           reduce using rule 79 (expresion -> MENOS expresion .)
    MENOR           reduce using rule 79 (expresion -> MENOS expresion .)
    MAYORIGUAL      reduce using rule 79 (expresion -> MENOS expresion .)
    MENORIGUAL      reduce using rule 79 (expresion -> MENOS expresion .)
    IGUALACION      reduce using rule 79 (expresion -> MENOS expresion .)
    DISTINTO        reduce using rule 79 (expresion -> MENOS expresion .)
    AND             reduce using rule 79 (expresion -> MENOS expresion .)
    OR              reduce using rule 79 (expresion -> MENOS expresion .)
    PTOYCOMA        reduce using rule 79 (expresion -> MENOS expresion .)
    FUNCTION        reduce using rule 79 (expresion -> MENOS expresion .)
    ID              reduce using rule 79 (expresion -> MENOS expresion .)
    LET             reduce using rule 79 (expresion -> MENOS expresion .)
    CONSOLE         reduce using rule 79 (expresion -> MENOS expresion .)
    IF              reduce using rule 79 (expresion -> MENOS expresion .)
    WHILE           reduce using rule 79 (expresion -> MENOS expresion .)
    FOR             reduce using rule 79 (expresion -> MENOS expresion .)
    RETURN          reduce using rule 79 (expresion -> MENOS expresion .)
    BREAK           reduce using rule 79 (expresion -> MENOS expresion .)
    CONTINUE        reduce using rule 79 (expresion -> MENOS expresion .)
    INTERFACE       reduce using rule 79 (expresion -> MENOS expresion .)
    DECREMENTO      reduce using rule 79 (expresion -> MENOS expresion .)
    INCREMENTO      reduce using rule 79 (expresion -> MENOS expresion .)
    $end            reduce using rule 79 (expresion -> MENOS expresion .)
    LLADER          reduce using rule 79 (expresion -> MENOS expresion .)
    PARDER          reduce using rule 79 (expresion -> MENOS expresion .)
    COMA            reduce using rule 79 (expresion -> MENOS expresion .)
    CORDER          reduce using rule 79 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 113 ]
  ! MENOS           [ shift and go to state 114 ]
  ! POR             [ shift and go to state 115 ]
  ! DIVIDIDO        [ shift and go to state 116 ]
  ! MODULO          [ shift and go to state 117 ]
  ! POTENCIA        [ shift and go to state 118 ]
  ! MAYOR           [ shift and go to state 119 ]
  ! MENOR           [ shift and go to state 120 ]
  ! MAYORIGUAL      [ shift and go to state 121 ]
  ! MENORIGUAL      [ shift and go to state 122 ]
  ! IGUALACION      [ shift and go to state 123 ]
  ! DISTINTO        [ shift and go to state 124 ]
  ! AND             [ shift and go to state 125 ]
  ! OR              [ shift and go to state 126 ]


state 128

    (88) expresion -> NOT expresion .
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    AND             reduce using rule 88 (expresion -> NOT expresion .)
    OR              reduce using rule 88 (expresion -> NOT expresion .)
    PTOYCOMA        reduce using rule 88 (expresion -> NOT expresion .)
    FUNCTION        reduce using rule 88 (expresion -> NOT expresion .)
    ID              reduce using rule 88 (expresion -> NOT expresion .)
    LET             reduce using rule 88 (expresion -> NOT expresion .)
    CONSOLE         reduce using rule 88 (expresion -> NOT expresion .)
    IF              reduce using rule 88 (expresion -> NOT expresion .)
    WHILE           reduce using rule 88 (expresion -> NOT expresion .)
    FOR             reduce using rule 88 (expresion -> NOT expresion .)
    RETURN          reduce using rule 88 (expresion -> NOT expresion .)
    BREAK           reduce using rule 88 (expresion -> NOT expresion .)
    CONTINUE        reduce using rule 88 (expresion -> NOT expresion .)
    INTERFACE       reduce using rule 88 (expresion -> NOT expresion .)
    DECREMENTO      reduce using rule 88 (expresion -> NOT expresion .)
    INCREMENTO      reduce using rule 88 (expresion -> NOT expresion .)
    $end            reduce using rule 88 (expresion -> NOT expresion .)
    LLADER          reduce using rule 88 (expresion -> NOT expresion .)
    PARDER          reduce using rule 88 (expresion -> NOT expresion .)
    COMA            reduce using rule 88 (expresion -> NOT expresion .)
    CORDER          reduce using rule 88 (expresion -> NOT expresion .)
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POR             shift and go to state 115
    DIVIDIDO        shift and go to state 116
    MODULO          shift and go to state 117
    POTENCIA        shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYORIGUAL      shift and go to state 121
    MENORIGUAL      shift and go to state 122
    IGUALACION      shift and go to state 123
    DISTINTO        shift and go to state 124

  ! MAS             [ reduce using rule 88 (expresion -> NOT expresion .) ]
  ! MENOS           [ reduce using rule 88 (expresion -> NOT expresion .) ]
  ! POR             [ reduce using rule 88 (expresion -> NOT expresion .) ]
  ! DIVIDIDO        [ reduce using rule 88 (expresion -> NOT expresion .) ]
  ! MODULO          [ reduce using rule 88 (expresion -> NOT expresion .) ]
  ! POTENCIA        [ reduce using rule 88 (expresion -> NOT expresion .) ]
  ! MAYOR           [ reduce using rule 88 (expresion -> NOT expresion .) ]
  ! MENOR           [ reduce using rule 88 (expresion -> NOT expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 88 (expresion -> NOT expresion .) ]
  ! MENORIGUAL      [ reduce using rule 88 (expresion -> NOT expresion .) ]
  ! IGUALACION      [ reduce using rule 88 (expresion -> NOT expresion .) ]
  ! DISTINTO        [ reduce using rule 88 (expresion -> NOT expresion .) ]
  ! AND             [ shift and go to state 125 ]
  ! OR              [ shift and go to state 126 ]


state 129

    (92) expresion -> PARIZQ expresion . PARDER
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    PARDER          shift and go to state 191
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POR             shift and go to state 115
    DIVIDIDO        shift and go to state 116
    MODULO          shift and go to state 117
    POTENCIA        shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYORIGUAL      shift and go to state 121
    MENORIGUAL      shift and go to state 122
    IGUALACION      shift and go to state 123
    DISTINTO        shift and go to state 124
    AND             shift and go to state 125
    OR              shift and go to state 126


state 130

    (133) expresion -> ID PUNTO . ID
    (114) casteo -> ID PUNTO . TOSTRING PARIZQ PARDER

    ID              shift and go to state 192
    TOSTRING        shift and go to state 193


state 131

    (154) acceso_array -> ID lista_acceso_array .
    (156) acceso_array_interface -> ID lista_acceso_array . PUNTO ID
    (157) lista_acceso_array -> lista_acceso_array . acceso_array_exp
    (159) acceso_array_exp -> . CORIZQ expresion CORDER

    MAS             reduce using rule 154 (acceso_array -> ID lista_acceso_array .)
    MENOS           reduce using rule 154 (acceso_array -> ID lista_acceso_array .)
    POR             reduce using rule 154 (acceso_array -> ID lista_acceso_array .)
    DIVIDIDO        reduce using rule 154 (acceso_array -> ID lista_acceso_array .)
    MODULO          reduce using rule 154 (acceso_array -> ID lista_acceso_array .)
    POTENCIA        reduce using rule 154 (acceso_array -> ID lista_acceso_array .)
    MAYOR           reduce using rule 154 (acceso_array -> ID lista_acceso_array .)
    MENOR           reduce using rule 154 (acceso_array -> ID lista_acceso_array .)
    MAYORIGUAL      reduce using rule 154 (acceso_array -> ID lista_acceso_array .)
    MENORIGUAL      reduce using rule 154 (acceso_array -> ID lista_acceso_array .)
    IGUALACION      reduce using rule 154 (acceso_array -> ID lista_acceso_array .)
    DISTINTO        reduce using rule 154 (acceso_array -> ID lista_acceso_array .)
    AND             reduce using rule 154 (acceso_array -> ID lista_acceso_array .)
    OR              reduce using rule 154 (acceso_array -> ID lista_acceso_array .)
    PTOYCOMA        reduce using rule 154 (acceso_array -> ID lista_acceso_array .)
    FUNCTION        reduce using rule 154 (acceso_array -> ID lista_acceso_array .)
    ID              reduce using rule 154 (acceso_array -> ID lista_acceso_array .)
    LET             reduce using rule 154 (acceso_array -> ID lista_acceso_array .)
    CONSOLE         reduce using rule 154 (acceso_array -> ID lista_acceso_array .)
    IF              reduce using rule 154 (acceso_array -> ID lista_acceso_array .)
    WHILE           reduce using rule 154 (acceso_array -> ID lista_acceso_array .)
    FOR             reduce using rule 154 (acceso_array -> ID lista_acceso_array .)
    RETURN          reduce using rule 154 (acceso_array -> ID lista_acceso_array .)
    BREAK           reduce using rule 154 (acceso_array -> ID lista_acceso_array .)
    CONTINUE        reduce using rule 154 (acceso_array -> ID lista_acceso_array .)
    INTERFACE       reduce using rule 154 (acceso_array -> ID lista_acceso_array .)
    DECREMENTO      reduce using rule 154 (acceso_array -> ID lista_acceso_array .)
    INCREMENTO      reduce using rule 154 (acceso_array -> ID lista_acceso_array .)
    $end            reduce using rule 154 (acceso_array -> ID lista_acceso_array .)
    LLADER          reduce using rule 154 (acceso_array -> ID lista_acceso_array .)
    PARDER          reduce using rule 154 (acceso_array -> ID lista_acceso_array .)
    COMA            reduce using rule 154 (acceso_array -> ID lista_acceso_array .)
    CORDER          reduce using rule 154 (acceso_array -> ID lista_acceso_array .)
    PUNTO           shift and go to state 194
    CORIZQ          shift and go to state 47

    acceso_array_exp               shift and go to state 102

state 132

    (161) expresion -> TYPEOF PARIZQ . expresion PARDER
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    expresion                      shift and go to state 195
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 133

    (162) expresion -> LENGTH PARIZQ . expresion PARDER
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    expresion                      shift and go to state 196
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 134

    (115) casteo -> CAST_STRING PARIZQ . expresion PARDER
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    expresion                      shift and go to state 197
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 135

    (116) casteo -> CAST_NUMBER PARIZQ . expresion PARDER
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    expresion                      shift and go to state 198
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 136

    (107) aproximacion -> TOFIXED PARIZQ . expresion COMA expresion PARDER
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    expresion                      shift and go to state 199
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 137

    (108) exponencial -> TOEXPONENTIAL PARIZQ . expresion COMA expresion PARDER
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    expresion                      shift and go to state 200
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 138

    (111) separador -> SPLIT PARIZQ . expresion COMA expresion PARDER
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    expresion                      shift and go to state 201
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 139

    (112) concatenacion -> CONCAT PARIZQ . expresion COMA expresion PARDER
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    expresion                      shift and go to state 202
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 140

    (109) to_mayusculas -> TOUPPERCASE PARIZQ . expresion PARDER
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    expresion                      shift and go to state 203
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 141

    (110) to_minusculas -> TOLOWERCASE PARIZQ . expresion PARDER
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    expresion                      shift and go to state 204
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 142

    (128) expresion_interface -> LLAIZQ lista_d . LLADER
    (130) lista_d -> lista_d . COMA parDecl

    LLADER          shift and go to state 205
    COMA            shift and go to state 206


state 143

    (131) lista_d -> parDecl .

    LLADER          reduce using rule 131 (lista_d -> parDecl .)
    COMA            reduce using rule 131 (lista_d -> parDecl .)


state 144

    (132) parDecl -> ID . DOSPUNTOS expresion

    DOSPUNTOS       shift and go to state 207


state 145

    (151) arreglo -> CORIZQ lista_exp . CORDER
    (148) lista_exp -> lista_exp . COMA expresion

    CORDER          shift and go to state 208
    COMA            shift and go to state 209


state 146

    (152) arreglo -> CORIZQ CORDER .

    MAS             reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    MENOS           reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    POR             reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    DIVIDIDO        reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    MODULO          reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    POTENCIA        reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    MAYOR           reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    MENOR           reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    MAYORIGUAL      reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    MENORIGUAL      reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    IGUALACION      reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    DISTINTO        reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    AND             reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    OR              reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    PTOYCOMA        reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    FUNCTION        reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    ID              reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    LET             reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    CONSOLE         reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    IF              reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    WHILE           reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    FOR             reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    RETURN          reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    BREAK           reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    CONTINUE        reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    INTERFACE       reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    DECREMENTO      reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    INCREMENTO      reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    $end            reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    LLADER          reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    PARDER          reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    COMA            reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    CORDER          reduce using rule 152 (arreglo -> CORIZQ CORDER .)


state 147

    (149) lista_exp -> expresion .
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    CORDER          reduce using rule 149 (lista_exp -> expresion .)
    COMA            reduce using rule 149 (lista_exp -> expresion .)
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POR             shift and go to state 115
    DIVIDIDO        shift and go to state 116
    MODULO          shift and go to state 117
    POTENCIA        shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYORIGUAL      shift and go to state 121
    MENORIGUAL      shift and go to state 122
    IGUALACION      shift and go to state 123
    DISTINTO        shift and go to state 124
    AND             shift and go to state 125
    OR              shift and go to state 126


state 148

    (121) instanciar -> INTERFACE ID bloquestruct .

    PTOYCOMA        reduce using rule 121 (instanciar -> INTERFACE ID bloquestruct .)
    FUNCTION        reduce using rule 121 (instanciar -> INTERFACE ID bloquestruct .)
    ID              reduce using rule 121 (instanciar -> INTERFACE ID bloquestruct .)
    LET             reduce using rule 121 (instanciar -> INTERFACE ID bloquestruct .)
    CONSOLE         reduce using rule 121 (instanciar -> INTERFACE ID bloquestruct .)
    IF              reduce using rule 121 (instanciar -> INTERFACE ID bloquestruct .)
    WHILE           reduce using rule 121 (instanciar -> INTERFACE ID bloquestruct .)
    FOR             reduce using rule 121 (instanciar -> INTERFACE ID bloquestruct .)
    RETURN          reduce using rule 121 (instanciar -> INTERFACE ID bloquestruct .)
    BREAK           reduce using rule 121 (instanciar -> INTERFACE ID bloquestruct .)
    CONTINUE        reduce using rule 121 (instanciar -> INTERFACE ID bloquestruct .)
    INTERFACE       reduce using rule 121 (instanciar -> INTERFACE ID bloquestruct .)
    DECREMENTO      reduce using rule 121 (instanciar -> INTERFACE ID bloquestruct .)
    INCREMENTO      reduce using rule 121 (instanciar -> INTERFACE ID bloquestruct .)
    $end            reduce using rule 121 (instanciar -> INTERFACE ID bloquestruct .)
    LLADER          reduce using rule 121 (instanciar -> INTERFACE ID bloquestruct .)


state 149

    (122) bloquestruct -> LLAIZQ . lista_params_struct LLADER
    (123) lista_params_struct -> . lista_params_struct param_struct
    (124) lista_params_struct -> . param_struct
    (125) param_struct -> . ID DOSPUNTOS tipo PTOYCOMA
    (126) param_struct -> . ID PTOYCOMA

    ID              shift and go to state 212

    lista_params_struct            shift and go to state 210
    param_struct                   shift and go to state 211

state 150

    (60) parametro -> ID . DOSPUNTOS tipo
    (61) parametro -> ID . DOSPUNTOS ID
    (62) parametro -> ID . DOSPUNTOS tipo CORIZQ CORDER

    DOSPUNTOS       shift and go to state 213


state 151

    (51) funcion -> FUNCTION ID PARIZQ lista_parametros . PARDER bloque
    (52) funcion -> FUNCTION ID PARIZQ lista_parametros . PARDER DOSPUNTOS tipo bloque
    (56) funcion -> FUNCTION ID PARIZQ lista_parametros . PARDER DOSPUNTOS ID bloque
    (57) funcion -> FUNCTION ID PARIZQ lista_parametros . PARDER DOSPUNTOS tipo CORIZQ CORDER bloque
    (58) lista_parametros -> lista_parametros . COMA parametro

    PARDER          shift and go to state 214
    COMA            shift and go to state 215


state 152

    (53) funcion -> FUNCTION ID PARIZQ PARDER . bloque
    (54) funcion -> FUNCTION ID PARIZQ PARDER . DOSPUNTOS tipo bloque
    (55) funcion -> FUNCTION ID PARIZQ PARDER . DOSPUNTOS ID bloque
    (9) bloque -> . LLAIZQ instruccion4 LLADER
    (10) bloque -> . LLAIZQ LLADER

    DOSPUNTOS       shift and go to state 217
    LLAIZQ          shift and go to state 218

    bloque                         shift and go to state 216

state 153

    (59) lista_parametros -> parametro .

    PARDER          reduce using rule 59 (lista_parametros -> parametro .)
    COMA            reduce using rule 59 (lista_parametros -> parametro .)


state 154

    (134) asignacionInterface -> ID PUNTO ID IGUAL . expresion
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    expresion                      shift and go to state 219
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 155

    (113) instruccion3 -> ID PUNTO PUSH PARIZQ . expresion PARDER
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    expresion                      shift and go to state 220
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 156

    (64) llamada_funcion -> ID PARIZQ lista_argumentos PARDER .

    PTOYCOMA        reduce using rule 64 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    FUNCTION        reduce using rule 64 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    ID              reduce using rule 64 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    LET             reduce using rule 64 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    CONSOLE         reduce using rule 64 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    IF              reduce using rule 64 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    WHILE           reduce using rule 64 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    FOR             reduce using rule 64 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    RETURN          reduce using rule 64 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    BREAK           reduce using rule 64 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    CONTINUE        reduce using rule 64 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    INTERFACE       reduce using rule 64 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    DECREMENTO      reduce using rule 64 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    INCREMENTO      reduce using rule 64 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    $end            reduce using rule 64 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    MAS             reduce using rule 64 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    MENOS           reduce using rule 64 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    POR             reduce using rule 64 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    DIVIDIDO        reduce using rule 64 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    MODULO          reduce using rule 64 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    POTENCIA        reduce using rule 64 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    MAYOR           reduce using rule 64 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    MENOR           reduce using rule 64 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    MAYORIGUAL      reduce using rule 64 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    MENORIGUAL      reduce using rule 64 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    IGUALACION      reduce using rule 64 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    DISTINTO        reduce using rule 64 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    AND             reduce using rule 64 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    OR              reduce using rule 64 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    LLADER          reduce using rule 64 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    PARDER          reduce using rule 64 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    COMA            reduce using rule 64 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)
    CORDER          reduce using rule 64 (llamada_funcion -> ID PARIZQ lista_argumentos PARDER .)


state 157

    (66) lista_argumentos -> lista_argumentos COMA . expresion
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    expresion                      shift and go to state 221
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 158

    (160) asignacion_array -> ID lista_acceso_array IGUAL expresion .
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    PTOYCOMA        reduce using rule 160 (asignacion_array -> ID lista_acceso_array IGUAL expresion .)
    FUNCTION        reduce using rule 160 (asignacion_array -> ID lista_acceso_array IGUAL expresion .)
    ID              reduce using rule 160 (asignacion_array -> ID lista_acceso_array IGUAL expresion .)
    LET             reduce using rule 160 (asignacion_array -> ID lista_acceso_array IGUAL expresion .)
    CONSOLE         reduce using rule 160 (asignacion_array -> ID lista_acceso_array IGUAL expresion .)
    IF              reduce using rule 160 (asignacion_array -> ID lista_acceso_array IGUAL expresion .)
    WHILE           reduce using rule 160 (asignacion_array -> ID lista_acceso_array IGUAL expresion .)
    FOR             reduce using rule 160 (asignacion_array -> ID lista_acceso_array IGUAL expresion .)
    RETURN          reduce using rule 160 (asignacion_array -> ID lista_acceso_array IGUAL expresion .)
    BREAK           reduce using rule 160 (asignacion_array -> ID lista_acceso_array IGUAL expresion .)
    CONTINUE        reduce using rule 160 (asignacion_array -> ID lista_acceso_array IGUAL expresion .)
    INTERFACE       reduce using rule 160 (asignacion_array -> ID lista_acceso_array IGUAL expresion .)
    DECREMENTO      reduce using rule 160 (asignacion_array -> ID lista_acceso_array IGUAL expresion .)
    INCREMENTO      reduce using rule 160 (asignacion_array -> ID lista_acceso_array IGUAL expresion .)
    $end            reduce using rule 160 (asignacion_array -> ID lista_acceso_array IGUAL expresion .)
    LLADER          reduce using rule 160 (asignacion_array -> ID lista_acceso_array IGUAL expresion .)
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POR             shift and go to state 115
    DIVIDIDO        shift and go to state 116
    MODULO          shift and go to state 117
    POTENCIA        shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYORIGUAL      shift and go to state 121
    MENORIGUAL      shift and go to state 122
    IGUALACION      shift and go to state 123
    DISTINTO        shift and go to state 124
    AND             shift and go to state 125
    OR              shift and go to state 126


state 159

    (159) acceso_array_exp -> CORIZQ expresion CORDER .

    IGUAL           reduce using rule 159 (acceso_array_exp -> CORIZQ expresion CORDER .)
    CORIZQ          reduce using rule 159 (acceso_array_exp -> CORIZQ expresion CORDER .)
    PUNTO           reduce using rule 159 (acceso_array_exp -> CORIZQ expresion CORDER .)
    MAS             reduce using rule 159 (acceso_array_exp -> CORIZQ expresion CORDER .)
    MENOS           reduce using rule 159 (acceso_array_exp -> CORIZQ expresion CORDER .)
    POR             reduce using rule 159 (acceso_array_exp -> CORIZQ expresion CORDER .)
    DIVIDIDO        reduce using rule 159 (acceso_array_exp -> CORIZQ expresion CORDER .)
    MODULO          reduce using rule 159 (acceso_array_exp -> CORIZQ expresion CORDER .)
    POTENCIA        reduce using rule 159 (acceso_array_exp -> CORIZQ expresion CORDER .)
    MAYOR           reduce using rule 159 (acceso_array_exp -> CORIZQ expresion CORDER .)
    MENOR           reduce using rule 159 (acceso_array_exp -> CORIZQ expresion CORDER .)
    MAYORIGUAL      reduce using rule 159 (acceso_array_exp -> CORIZQ expresion CORDER .)
    MENORIGUAL      reduce using rule 159 (acceso_array_exp -> CORIZQ expresion CORDER .)
    IGUALACION      reduce using rule 159 (acceso_array_exp -> CORIZQ expresion CORDER .)
    DISTINTO        reduce using rule 159 (acceso_array_exp -> CORIZQ expresion CORDER .)
    AND             reduce using rule 159 (acceso_array_exp -> CORIZQ expresion CORDER .)
    OR              reduce using rule 159 (acceso_array_exp -> CORIZQ expresion CORDER .)
    PTOYCOMA        reduce using rule 159 (acceso_array_exp -> CORIZQ expresion CORDER .)
    FUNCTION        reduce using rule 159 (acceso_array_exp -> CORIZQ expresion CORDER .)
    ID              reduce using rule 159 (acceso_array_exp -> CORIZQ expresion CORDER .)
    LET             reduce using rule 159 (acceso_array_exp -> CORIZQ expresion CORDER .)
    CONSOLE         reduce using rule 159 (acceso_array_exp -> CORIZQ expresion CORDER .)
    IF              reduce using rule 159 (acceso_array_exp -> CORIZQ expresion CORDER .)
    WHILE           reduce using rule 159 (acceso_array_exp -> CORIZQ expresion CORDER .)
    FOR             reduce using rule 159 (acceso_array_exp -> CORIZQ expresion CORDER .)
    RETURN          reduce using rule 159 (acceso_array_exp -> CORIZQ expresion CORDER .)
    BREAK           reduce using rule 159 (acceso_array_exp -> CORIZQ expresion CORDER .)
    CONTINUE        reduce using rule 159 (acceso_array_exp -> CORIZQ expresion CORDER .)
    INTERFACE       reduce using rule 159 (acceso_array_exp -> CORIZQ expresion CORDER .)
    DECREMENTO      reduce using rule 159 (acceso_array_exp -> CORIZQ expresion CORDER .)
    INCREMENTO      reduce using rule 159 (acceso_array_exp -> CORIZQ expresion CORDER .)
    $end            reduce using rule 159 (acceso_array_exp -> CORIZQ expresion CORDER .)
    LLADER          reduce using rule 159 (acceso_array_exp -> CORIZQ expresion CORDER .)
    PARDER          reduce using rule 159 (acceso_array_exp -> CORIZQ expresion CORDER .)
    COMA            reduce using rule 159 (acceso_array_exp -> CORIZQ expresion CORDER .)
    CORDER          reduce using rule 159 (acceso_array_exp -> CORIZQ expresion CORDER .)


state 160

    (26) declaracion -> LET ID IGUAL expresion .
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    PTOYCOMA        reduce using rule 26 (declaracion -> LET ID IGUAL expresion .)
    FUNCTION        reduce using rule 26 (declaracion -> LET ID IGUAL expresion .)
    ID              reduce using rule 26 (declaracion -> LET ID IGUAL expresion .)
    LET             reduce using rule 26 (declaracion -> LET ID IGUAL expresion .)
    CONSOLE         reduce using rule 26 (declaracion -> LET ID IGUAL expresion .)
    IF              reduce using rule 26 (declaracion -> LET ID IGUAL expresion .)
    WHILE           reduce using rule 26 (declaracion -> LET ID IGUAL expresion .)
    FOR             reduce using rule 26 (declaracion -> LET ID IGUAL expresion .)
    RETURN          reduce using rule 26 (declaracion -> LET ID IGUAL expresion .)
    BREAK           reduce using rule 26 (declaracion -> LET ID IGUAL expresion .)
    CONTINUE        reduce using rule 26 (declaracion -> LET ID IGUAL expresion .)
    INTERFACE       reduce using rule 26 (declaracion -> LET ID IGUAL expresion .)
    DECREMENTO      reduce using rule 26 (declaracion -> LET ID IGUAL expresion .)
    INCREMENTO      reduce using rule 26 (declaracion -> LET ID IGUAL expresion .)
    $end            reduce using rule 26 (declaracion -> LET ID IGUAL expresion .)
    LLADER          reduce using rule 26 (declaracion -> LET ID IGUAL expresion .)
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POR             shift and go to state 115
    DIVIDIDO        shift and go to state 116
    MODULO          shift and go to state 117
    POTENCIA        shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYORIGUAL      shift and go to state 121
    MENORIGUAL      shift and go to state 122
    IGUALACION      shift and go to state 123
    DISTINTO        shift and go to state 124
    AND             shift and go to state 125
    OR              shift and go to state 126


state 161

    (141) declaracionArray -> LET ID IGUAL CORIZQ . CORDER
    (143) declaracionArray -> LET ID IGUAL CORIZQ . lista_exp CORDER
    (151) arreglo -> CORIZQ . lista_exp CORDER
    (152) arreglo -> CORIZQ . CORDER
    (148) lista_exp -> . lista_exp COMA expresion
    (149) lista_exp -> . expresion
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    CORDER          shift and go to state 222
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    lista_exp                      shift and go to state 223
    expresion                      shift and go to state 147
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 162

    (127) declaracionInterface -> LET ID DOSPUNTOS ID . IGUAL expresion_interface
    (144) declaracionArray -> LET ID DOSPUNTOS ID . IGUAL CORIZQ CORDER
    (145) declaracionArray -> LET ID DOSPUNTOS ID . IGUAL CORIZQ lista_exp CORDER
    (146) declaracionArray -> LET ID DOSPUNTOS ID . CORIZQ CORDER
    (147) declaracionArray -> LET ID DOSPUNTOS ID . CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER

    IGUAL           shift and go to state 224
    CORIZQ          shift and go to state 225


state 163

    (28) declaracion -> LET ID DOSPUNTOS tipo . IGUAL expresion
    (29) declaracion -> LET ID DOSPUNTOS tipo .
    (138) declaracionArray -> LET ID DOSPUNTOS tipo . CORIZQ CORDER
    (139) declaracionArray -> LET ID DOSPUNTOS tipo . CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER
    (140) declaracionArray -> LET ID DOSPUNTOS tipo . CORIZQ CORDER IGUAL CORIZQ CORDER
    (142) declaracionArray -> LET ID DOSPUNTOS tipo . CORIZQ CORDER IGUAL expresion

    IGUAL           shift and go to state 226
    PTOYCOMA        reduce using rule 29 (declaracion -> LET ID DOSPUNTOS tipo .)
    FUNCTION        reduce using rule 29 (declaracion -> LET ID DOSPUNTOS tipo .)
    ID              reduce using rule 29 (declaracion -> LET ID DOSPUNTOS tipo .)
    LET             reduce using rule 29 (declaracion -> LET ID DOSPUNTOS tipo .)
    CONSOLE         reduce using rule 29 (declaracion -> LET ID DOSPUNTOS tipo .)
    IF              reduce using rule 29 (declaracion -> LET ID DOSPUNTOS tipo .)
    WHILE           reduce using rule 29 (declaracion -> LET ID DOSPUNTOS tipo .)
    FOR             reduce using rule 29 (declaracion -> LET ID DOSPUNTOS tipo .)
    RETURN          reduce using rule 29 (declaracion -> LET ID DOSPUNTOS tipo .)
    BREAK           reduce using rule 29 (declaracion -> LET ID DOSPUNTOS tipo .)
    CONTINUE        reduce using rule 29 (declaracion -> LET ID DOSPUNTOS tipo .)
    INTERFACE       reduce using rule 29 (declaracion -> LET ID DOSPUNTOS tipo .)
    DECREMENTO      reduce using rule 29 (declaracion -> LET ID DOSPUNTOS tipo .)
    INCREMENTO      reduce using rule 29 (declaracion -> LET ID DOSPUNTOS tipo .)
    $end            reduce using rule 29 (declaracion -> LET ID DOSPUNTOS tipo .)
    LLADER          reduce using rule 29 (declaracion -> LET ID DOSPUNTOS tipo .)
    CORIZQ          shift and go to state 227


state 164

    (135) declaracionArray -> LET ID DOSPUNTOS ARRAY . MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER
    (136) declaracionArray -> LET ID DOSPUNTOS ARRAY . MENOR tipo MAYOR IGUAL CORIZQ CORDER
    (137) declaracionArray -> LET ID DOSPUNTOS ARRAY . MENOR tipo MAYOR

    MENOR           shift and go to state 228


state 165

    (68) tipo -> NUMBER .

    IGUAL           reduce using rule 68 (tipo -> NUMBER .)
    CORIZQ          reduce using rule 68 (tipo -> NUMBER .)
    PTOYCOMA        reduce using rule 68 (tipo -> NUMBER .)
    FUNCTION        reduce using rule 68 (tipo -> NUMBER .)
    ID              reduce using rule 68 (tipo -> NUMBER .)
    LET             reduce using rule 68 (tipo -> NUMBER .)
    CONSOLE         reduce using rule 68 (tipo -> NUMBER .)
    IF              reduce using rule 68 (tipo -> NUMBER .)
    WHILE           reduce using rule 68 (tipo -> NUMBER .)
    FOR             reduce using rule 68 (tipo -> NUMBER .)
    RETURN          reduce using rule 68 (tipo -> NUMBER .)
    BREAK           reduce using rule 68 (tipo -> NUMBER .)
    CONTINUE        reduce using rule 68 (tipo -> NUMBER .)
    INTERFACE       reduce using rule 68 (tipo -> NUMBER .)
    DECREMENTO      reduce using rule 68 (tipo -> NUMBER .)
    INCREMENTO      reduce using rule 68 (tipo -> NUMBER .)
    $end            reduce using rule 68 (tipo -> NUMBER .)
    LLADER          reduce using rule 68 (tipo -> NUMBER .)
    PARDER          reduce using rule 68 (tipo -> NUMBER .)
    COMA            reduce using rule 68 (tipo -> NUMBER .)
    LLAIZQ          reduce using rule 68 (tipo -> NUMBER .)
    MAYOR           reduce using rule 68 (tipo -> NUMBER .)


state 166

    (69) tipo -> STRING .

    IGUAL           reduce using rule 69 (tipo -> STRING .)
    CORIZQ          reduce using rule 69 (tipo -> STRING .)
    PTOYCOMA        reduce using rule 69 (tipo -> STRING .)
    FUNCTION        reduce using rule 69 (tipo -> STRING .)
    ID              reduce using rule 69 (tipo -> STRING .)
    LET             reduce using rule 69 (tipo -> STRING .)
    CONSOLE         reduce using rule 69 (tipo -> STRING .)
    IF              reduce using rule 69 (tipo -> STRING .)
    WHILE           reduce using rule 69 (tipo -> STRING .)
    FOR             reduce using rule 69 (tipo -> STRING .)
    RETURN          reduce using rule 69 (tipo -> STRING .)
    BREAK           reduce using rule 69 (tipo -> STRING .)
    CONTINUE        reduce using rule 69 (tipo -> STRING .)
    INTERFACE       reduce using rule 69 (tipo -> STRING .)
    DECREMENTO      reduce using rule 69 (tipo -> STRING .)
    INCREMENTO      reduce using rule 69 (tipo -> STRING .)
    $end            reduce using rule 69 (tipo -> STRING .)
    LLADER          reduce using rule 69 (tipo -> STRING .)
    PARDER          reduce using rule 69 (tipo -> STRING .)
    COMA            reduce using rule 69 (tipo -> STRING .)
    LLAIZQ          reduce using rule 69 (tipo -> STRING .)
    MAYOR           reduce using rule 69 (tipo -> STRING .)


state 167

    (70) tipo -> BOOLEAN .

    IGUAL           reduce using rule 70 (tipo -> BOOLEAN .)
    CORIZQ          reduce using rule 70 (tipo -> BOOLEAN .)
    PTOYCOMA        reduce using rule 70 (tipo -> BOOLEAN .)
    FUNCTION        reduce using rule 70 (tipo -> BOOLEAN .)
    ID              reduce using rule 70 (tipo -> BOOLEAN .)
    LET             reduce using rule 70 (tipo -> BOOLEAN .)
    CONSOLE         reduce using rule 70 (tipo -> BOOLEAN .)
    IF              reduce using rule 70 (tipo -> BOOLEAN .)
    WHILE           reduce using rule 70 (tipo -> BOOLEAN .)
    FOR             reduce using rule 70 (tipo -> BOOLEAN .)
    RETURN          reduce using rule 70 (tipo -> BOOLEAN .)
    BREAK           reduce using rule 70 (tipo -> BOOLEAN .)
    CONTINUE        reduce using rule 70 (tipo -> BOOLEAN .)
    INTERFACE       reduce using rule 70 (tipo -> BOOLEAN .)
    DECREMENTO      reduce using rule 70 (tipo -> BOOLEAN .)
    INCREMENTO      reduce using rule 70 (tipo -> BOOLEAN .)
    $end            reduce using rule 70 (tipo -> BOOLEAN .)
    LLADER          reduce using rule 70 (tipo -> BOOLEAN .)
    PARDER          reduce using rule 70 (tipo -> BOOLEAN .)
    COMA            reduce using rule 70 (tipo -> BOOLEAN .)
    LLAIZQ          reduce using rule 70 (tipo -> BOOLEAN .)
    MAYOR           reduce using rule 70 (tipo -> BOOLEAN .)


state 168

    (71) tipo -> ANY .

    IGUAL           reduce using rule 71 (tipo -> ANY .)
    CORIZQ          reduce using rule 71 (tipo -> ANY .)
    PTOYCOMA        reduce using rule 71 (tipo -> ANY .)
    FUNCTION        reduce using rule 71 (tipo -> ANY .)
    ID              reduce using rule 71 (tipo -> ANY .)
    LET             reduce using rule 71 (tipo -> ANY .)
    CONSOLE         reduce using rule 71 (tipo -> ANY .)
    IF              reduce using rule 71 (tipo -> ANY .)
    WHILE           reduce using rule 71 (tipo -> ANY .)
    FOR             reduce using rule 71 (tipo -> ANY .)
    RETURN          reduce using rule 71 (tipo -> ANY .)
    BREAK           reduce using rule 71 (tipo -> ANY .)
    CONTINUE        reduce using rule 71 (tipo -> ANY .)
    INTERFACE       reduce using rule 71 (tipo -> ANY .)
    DECREMENTO      reduce using rule 71 (tipo -> ANY .)
    INCREMENTO      reduce using rule 71 (tipo -> ANY .)
    $end            reduce using rule 71 (tipo -> ANY .)
    LLADER          reduce using rule 71 (tipo -> ANY .)
    PARDER          reduce using rule 71 (tipo -> ANY .)
    COMA            reduce using rule 71 (tipo -> ANY .)
    LLAIZQ          reduce using rule 71 (tipo -> ANY .)
    MAYOR           reduce using rule 71 (tipo -> ANY .)


state 169

    (72) tipo -> NULL .

    IGUAL           reduce using rule 72 (tipo -> NULL .)
    CORIZQ          reduce using rule 72 (tipo -> NULL .)
    PTOYCOMA        reduce using rule 72 (tipo -> NULL .)
    FUNCTION        reduce using rule 72 (tipo -> NULL .)
    ID              reduce using rule 72 (tipo -> NULL .)
    LET             reduce using rule 72 (tipo -> NULL .)
    CONSOLE         reduce using rule 72 (tipo -> NULL .)
    IF              reduce using rule 72 (tipo -> NULL .)
    WHILE           reduce using rule 72 (tipo -> NULL .)
    FOR             reduce using rule 72 (tipo -> NULL .)
    RETURN          reduce using rule 72 (tipo -> NULL .)
    BREAK           reduce using rule 72 (tipo -> NULL .)
    CONTINUE        reduce using rule 72 (tipo -> NULL .)
    INTERFACE       reduce using rule 72 (tipo -> NULL .)
    DECREMENTO      reduce using rule 72 (tipo -> NULL .)
    INCREMENTO      reduce using rule 72 (tipo -> NULL .)
    $end            reduce using rule 72 (tipo -> NULL .)
    LLADER          reduce using rule 72 (tipo -> NULL .)
    PARDER          reduce using rule 72 (tipo -> NULL .)
    COMA            reduce using rule 72 (tipo -> NULL .)
    LLAIZQ          reduce using rule 72 (tipo -> NULL .)
    MAYOR           reduce using rule 72 (tipo -> NULL .)


state 170

    (38) impresion -> CONSOLE PUNTO LOG PARIZQ . expresion PARDER
    (39) impresion -> CONSOLE PUNTO LOG PARIZQ . lista_argumentos PARDER
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (66) lista_argumentos -> . lista_argumentos COMA expresion
    (67) lista_argumentos -> . expresion
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    expresion                      shift and go to state 229
    lista_argumentos               shift and go to state 230
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 171

    (40) condicional -> IF PARIZQ expresion PARDER . bloque
    (41) condicional -> IF PARIZQ expresion PARDER . bloque ELSE bloque
    (42) condicional -> IF PARIZQ expresion PARDER . bloque lista_elif
    (43) condicional -> IF PARIZQ expresion PARDER . bloque lista_elif ELSE bloque
    (9) bloque -> . LLAIZQ instruccion4 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 218

    bloque                         shift and go to state 231

state 172

    (47) ciclo_while -> WHILE PARIZQ expresion PARDER . bloque
    (9) bloque -> . LLAIZQ instruccion4 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 218

    bloque                         shift and go to state 232

state 173

    (48) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA . expresion PTOYCOMA asignacion PARDER bloque
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    expresion                      shift and go to state 233
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 174

    (49) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA . expresion PTOYCOMA asignacion PARDER bloque
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    expresion                      shift and go to state 234
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 175

    (50) ciclo_for_of -> FOR PARIZQ LET ID . OF expresion PARDER bloque
    (26) declaracion -> LET ID . IGUAL expresion
    (27) declaracion -> LET ID .
    (28) declaracion -> LET ID . DOSPUNTOS tipo IGUAL expresion
    (29) declaracion -> LET ID . DOSPUNTOS tipo

    OF              shift and go to state 235
    IGUAL           shift and go to state 236
    PTOYCOMA        reduce using rule 27 (declaracion -> LET ID .)
    DOSPUNTOS       shift and go to state 237


state 176

    (134) asignacionInterface -> ID PUNTO . ID IGUAL expresion

    ID              shift and go to state 95


state 177

    (73) expresion -> expresion MAS expresion .
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    MAS             reduce using rule 73 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 73 (expresion -> expresion MAS expresion .)
    MAYOR           reduce using rule 73 (expresion -> expresion MAS expresion .)
    MENOR           reduce using rule 73 (expresion -> expresion MAS expresion .)
    MAYORIGUAL      reduce using rule 73 (expresion -> expresion MAS expresion .)
    MENORIGUAL      reduce using rule 73 (expresion -> expresion MAS expresion .)
    IGUALACION      reduce using rule 73 (expresion -> expresion MAS expresion .)
    DISTINTO        reduce using rule 73 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 73 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 73 (expresion -> expresion MAS expresion .)
    PTOYCOMA        reduce using rule 73 (expresion -> expresion MAS expresion .)
    FUNCTION        reduce using rule 73 (expresion -> expresion MAS expresion .)
    ID              reduce using rule 73 (expresion -> expresion MAS expresion .)
    LET             reduce using rule 73 (expresion -> expresion MAS expresion .)
    CONSOLE         reduce using rule 73 (expresion -> expresion MAS expresion .)
    IF              reduce using rule 73 (expresion -> expresion MAS expresion .)
    WHILE           reduce using rule 73 (expresion -> expresion MAS expresion .)
    FOR             reduce using rule 73 (expresion -> expresion MAS expresion .)
    RETURN          reduce using rule 73 (expresion -> expresion MAS expresion .)
    BREAK           reduce using rule 73 (expresion -> expresion MAS expresion .)
    CONTINUE        reduce using rule 73 (expresion -> expresion MAS expresion .)
    INTERFACE       reduce using rule 73 (expresion -> expresion MAS expresion .)
    DECREMENTO      reduce using rule 73 (expresion -> expresion MAS expresion .)
    INCREMENTO      reduce using rule 73 (expresion -> expresion MAS expresion .)
    $end            reduce using rule 73 (expresion -> expresion MAS expresion .)
    LLADER          reduce using rule 73 (expresion -> expresion MAS expresion .)
    PARDER          reduce using rule 73 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 73 (expresion -> expresion MAS expresion .)
    CORDER          reduce using rule 73 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 115
    DIVIDIDO        shift and go to state 116
    MODULO          shift and go to state 117
    POTENCIA        shift and go to state 118

  ! POR             [ reduce using rule 73 (expresion -> expresion MAS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 73 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 73 (expresion -> expresion MAS expresion .) ]
  ! POTENCIA        [ reduce using rule 73 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 113 ]
  ! MENOS           [ shift and go to state 114 ]
  ! MAYOR           [ shift and go to state 119 ]
  ! MENOR           [ shift and go to state 120 ]
  ! MAYORIGUAL      [ shift and go to state 121 ]
  ! MENORIGUAL      [ shift and go to state 122 ]
  ! IGUALACION      [ shift and go to state 123 ]
  ! DISTINTO        [ shift and go to state 124 ]
  ! AND             [ shift and go to state 125 ]
  ! OR              [ shift and go to state 126 ]


state 178

    (74) expresion -> expresion MENOS expresion .
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    MAS             reduce using rule 74 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 74 (expresion -> expresion MENOS expresion .)
    MAYOR           reduce using rule 74 (expresion -> expresion MENOS expresion .)
    MENOR           reduce using rule 74 (expresion -> expresion MENOS expresion .)
    MAYORIGUAL      reduce using rule 74 (expresion -> expresion MENOS expresion .)
    MENORIGUAL      reduce using rule 74 (expresion -> expresion MENOS expresion .)
    IGUALACION      reduce using rule 74 (expresion -> expresion MENOS expresion .)
    DISTINTO        reduce using rule 74 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 74 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 74 (expresion -> expresion MENOS expresion .)
    PTOYCOMA        reduce using rule 74 (expresion -> expresion MENOS expresion .)
    FUNCTION        reduce using rule 74 (expresion -> expresion MENOS expresion .)
    ID              reduce using rule 74 (expresion -> expresion MENOS expresion .)
    LET             reduce using rule 74 (expresion -> expresion MENOS expresion .)
    CONSOLE         reduce using rule 74 (expresion -> expresion MENOS expresion .)
    IF              reduce using rule 74 (expresion -> expresion MENOS expresion .)
    WHILE           reduce using rule 74 (expresion -> expresion MENOS expresion .)
    FOR             reduce using rule 74 (expresion -> expresion MENOS expresion .)
    RETURN          reduce using rule 74 (expresion -> expresion MENOS expresion .)
    BREAK           reduce using rule 74 (expresion -> expresion MENOS expresion .)
    CONTINUE        reduce using rule 74 (expresion -> expresion MENOS expresion .)
    INTERFACE       reduce using rule 74 (expresion -> expresion MENOS expresion .)
    DECREMENTO      reduce using rule 74 (expresion -> expresion MENOS expresion .)
    INCREMENTO      reduce using rule 74 (expresion -> expresion MENOS expresion .)
    $end            reduce using rule 74 (expresion -> expresion MENOS expresion .)
    LLADER          reduce using rule 74 (expresion -> expresion MENOS expresion .)
    PARDER          reduce using rule 74 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 74 (expresion -> expresion MENOS expresion .)
    CORDER          reduce using rule 74 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 115
    DIVIDIDO        shift and go to state 116
    MODULO          shift and go to state 117
    POTENCIA        shift and go to state 118

  ! POR             [ reduce using rule 74 (expresion -> expresion MENOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 74 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 74 (expresion -> expresion MENOS expresion .) ]
  ! POTENCIA        [ reduce using rule 74 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 113 ]
  ! MENOS           [ shift and go to state 114 ]
  ! MAYOR           [ shift and go to state 119 ]
  ! MENOR           [ shift and go to state 120 ]
  ! MAYORIGUAL      [ shift and go to state 121 ]
  ! MENORIGUAL      [ shift and go to state 122 ]
  ! IGUALACION      [ shift and go to state 123 ]
  ! DISTINTO        [ shift and go to state 124 ]
  ! AND             [ shift and go to state 125 ]
  ! OR              [ shift and go to state 126 ]


state 179

    (75) expresion -> expresion POR expresion .
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    MAS             reduce using rule 75 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 75 (expresion -> expresion POR expresion .)
    POR             reduce using rule 75 (expresion -> expresion POR expresion .)
    DIVIDIDO        reduce using rule 75 (expresion -> expresion POR expresion .)
    MODULO          reduce using rule 75 (expresion -> expresion POR expresion .)
    MAYOR           reduce using rule 75 (expresion -> expresion POR expresion .)
    MENOR           reduce using rule 75 (expresion -> expresion POR expresion .)
    MAYORIGUAL      reduce using rule 75 (expresion -> expresion POR expresion .)
    MENORIGUAL      reduce using rule 75 (expresion -> expresion POR expresion .)
    IGUALACION      reduce using rule 75 (expresion -> expresion POR expresion .)
    DISTINTO        reduce using rule 75 (expresion -> expresion POR expresion .)
    AND             reduce using rule 75 (expresion -> expresion POR expresion .)
    OR              reduce using rule 75 (expresion -> expresion POR expresion .)
    PTOYCOMA        reduce using rule 75 (expresion -> expresion POR expresion .)
    FUNCTION        reduce using rule 75 (expresion -> expresion POR expresion .)
    ID              reduce using rule 75 (expresion -> expresion POR expresion .)
    LET             reduce using rule 75 (expresion -> expresion POR expresion .)
    CONSOLE         reduce using rule 75 (expresion -> expresion POR expresion .)
    IF              reduce using rule 75 (expresion -> expresion POR expresion .)
    WHILE           reduce using rule 75 (expresion -> expresion POR expresion .)
    FOR             reduce using rule 75 (expresion -> expresion POR expresion .)
    RETURN          reduce using rule 75 (expresion -> expresion POR expresion .)
    BREAK           reduce using rule 75 (expresion -> expresion POR expresion .)
    CONTINUE        reduce using rule 75 (expresion -> expresion POR expresion .)
    INTERFACE       reduce using rule 75 (expresion -> expresion POR expresion .)
    DECREMENTO      reduce using rule 75 (expresion -> expresion POR expresion .)
    INCREMENTO      reduce using rule 75 (expresion -> expresion POR expresion .)
    $end            reduce using rule 75 (expresion -> expresion POR expresion .)
    LLADER          reduce using rule 75 (expresion -> expresion POR expresion .)
    PARDER          reduce using rule 75 (expresion -> expresion POR expresion .)
    COMA            reduce using rule 75 (expresion -> expresion POR expresion .)
    CORDER          reduce using rule 75 (expresion -> expresion POR expresion .)
    POTENCIA        shift and go to state 118

  ! POTENCIA        [ reduce using rule 75 (expresion -> expresion POR expresion .) ]
  ! MAS             [ shift and go to state 113 ]
  ! MENOS           [ shift and go to state 114 ]
  ! POR             [ shift and go to state 115 ]
  ! DIVIDIDO        [ shift and go to state 116 ]
  ! MODULO          [ shift and go to state 117 ]
  ! MAYOR           [ shift and go to state 119 ]
  ! MENOR           [ shift and go to state 120 ]
  ! MAYORIGUAL      [ shift and go to state 121 ]
  ! MENORIGUAL      [ shift and go to state 122 ]
  ! IGUALACION      [ shift and go to state 123 ]
  ! DISTINTO        [ shift and go to state 124 ]
  ! AND             [ shift and go to state 125 ]
  ! OR              [ shift and go to state 126 ]


state 180

    (76) expresion -> expresion DIVIDIDO expresion .
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    MAS             reduce using rule 76 (expresion -> expresion DIVIDIDO expresion .)
    MENOS           reduce using rule 76 (expresion -> expresion DIVIDIDO expresion .)
    POR             reduce using rule 76 (expresion -> expresion DIVIDIDO expresion .)
    DIVIDIDO        reduce using rule 76 (expresion -> expresion DIVIDIDO expresion .)
    MODULO          reduce using rule 76 (expresion -> expresion DIVIDIDO expresion .)
    MAYOR           reduce using rule 76 (expresion -> expresion DIVIDIDO expresion .)
    MENOR           reduce using rule 76 (expresion -> expresion DIVIDIDO expresion .)
    MAYORIGUAL      reduce using rule 76 (expresion -> expresion DIVIDIDO expresion .)
    MENORIGUAL      reduce using rule 76 (expresion -> expresion DIVIDIDO expresion .)
    IGUALACION      reduce using rule 76 (expresion -> expresion DIVIDIDO expresion .)
    DISTINTO        reduce using rule 76 (expresion -> expresion DIVIDIDO expresion .)
    AND             reduce using rule 76 (expresion -> expresion DIVIDIDO expresion .)
    OR              reduce using rule 76 (expresion -> expresion DIVIDIDO expresion .)
    PTOYCOMA        reduce using rule 76 (expresion -> expresion DIVIDIDO expresion .)
    FUNCTION        reduce using rule 76 (expresion -> expresion DIVIDIDO expresion .)
    ID              reduce using rule 76 (expresion -> expresion DIVIDIDO expresion .)
    LET             reduce using rule 76 (expresion -> expresion DIVIDIDO expresion .)
    CONSOLE         reduce using rule 76 (expresion -> expresion DIVIDIDO expresion .)
    IF              reduce using rule 76 (expresion -> expresion DIVIDIDO expresion .)
    WHILE           reduce using rule 76 (expresion -> expresion DIVIDIDO expresion .)
    FOR             reduce using rule 76 (expresion -> expresion DIVIDIDO expresion .)
    RETURN          reduce using rule 76 (expresion -> expresion DIVIDIDO expresion .)
    BREAK           reduce using rule 76 (expresion -> expresion DIVIDIDO expresion .)
    CONTINUE        reduce using rule 76 (expresion -> expresion DIVIDIDO expresion .)
    INTERFACE       reduce using rule 76 (expresion -> expresion DIVIDIDO expresion .)
    DECREMENTO      reduce using rule 76 (expresion -> expresion DIVIDIDO expresion .)
    INCREMENTO      reduce using rule 76 (expresion -> expresion DIVIDIDO expresion .)
    $end            reduce using rule 76 (expresion -> expresion DIVIDIDO expresion .)
    LLADER          reduce using rule 76 (expresion -> expresion DIVIDIDO expresion .)
    PARDER          reduce using rule 76 (expresion -> expresion DIVIDIDO expresion .)
    COMA            reduce using rule 76 (expresion -> expresion DIVIDIDO expresion .)
    CORDER          reduce using rule 76 (expresion -> expresion DIVIDIDO expresion .)
    POTENCIA        shift and go to state 118

  ! POTENCIA        [ reduce using rule 76 (expresion -> expresion DIVIDIDO expresion .) ]
  ! MAS             [ shift and go to state 113 ]
  ! MENOS           [ shift and go to state 114 ]
  ! POR             [ shift and go to state 115 ]
  ! DIVIDIDO        [ shift and go to state 116 ]
  ! MODULO          [ shift and go to state 117 ]
  ! MAYOR           [ shift and go to state 119 ]
  ! MENOR           [ shift and go to state 120 ]
  ! MAYORIGUAL      [ shift and go to state 121 ]
  ! MENORIGUAL      [ shift and go to state 122 ]
  ! IGUALACION      [ shift and go to state 123 ]
  ! DISTINTO        [ shift and go to state 124 ]
  ! AND             [ shift and go to state 125 ]
  ! OR              [ shift and go to state 126 ]


state 181

    (77) expresion -> expresion MODULO expresion .
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    MAS             reduce using rule 77 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 77 (expresion -> expresion MODULO expresion .)
    POR             reduce using rule 77 (expresion -> expresion MODULO expresion .)
    DIVIDIDO        reduce using rule 77 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 77 (expresion -> expresion MODULO expresion .)
    MAYOR           reduce using rule 77 (expresion -> expresion MODULO expresion .)
    MENOR           reduce using rule 77 (expresion -> expresion MODULO expresion .)
    MAYORIGUAL      reduce using rule 77 (expresion -> expresion MODULO expresion .)
    MENORIGUAL      reduce using rule 77 (expresion -> expresion MODULO expresion .)
    IGUALACION      reduce using rule 77 (expresion -> expresion MODULO expresion .)
    DISTINTO        reduce using rule 77 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 77 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 77 (expresion -> expresion MODULO expresion .)
    PTOYCOMA        reduce using rule 77 (expresion -> expresion MODULO expresion .)
    FUNCTION        reduce using rule 77 (expresion -> expresion MODULO expresion .)
    ID              reduce using rule 77 (expresion -> expresion MODULO expresion .)
    LET             reduce using rule 77 (expresion -> expresion MODULO expresion .)
    CONSOLE         reduce using rule 77 (expresion -> expresion MODULO expresion .)
    IF              reduce using rule 77 (expresion -> expresion MODULO expresion .)
    WHILE           reduce using rule 77 (expresion -> expresion MODULO expresion .)
    FOR             reduce using rule 77 (expresion -> expresion MODULO expresion .)
    RETURN          reduce using rule 77 (expresion -> expresion MODULO expresion .)
    BREAK           reduce using rule 77 (expresion -> expresion MODULO expresion .)
    CONTINUE        reduce using rule 77 (expresion -> expresion MODULO expresion .)
    INTERFACE       reduce using rule 77 (expresion -> expresion MODULO expresion .)
    DECREMENTO      reduce using rule 77 (expresion -> expresion MODULO expresion .)
    INCREMENTO      reduce using rule 77 (expresion -> expresion MODULO expresion .)
    $end            reduce using rule 77 (expresion -> expresion MODULO expresion .)
    LLADER          reduce using rule 77 (expresion -> expresion MODULO expresion .)
    PARDER          reduce using rule 77 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 77 (expresion -> expresion MODULO expresion .)
    CORDER          reduce using rule 77 (expresion -> expresion MODULO expresion .)
    POTENCIA        shift and go to state 118

  ! POTENCIA        [ reduce using rule 77 (expresion -> expresion MODULO expresion .) ]
  ! MAS             [ shift and go to state 113 ]
  ! MENOS           [ shift and go to state 114 ]
  ! POR             [ shift and go to state 115 ]
  ! DIVIDIDO        [ shift and go to state 116 ]
  ! MODULO          [ shift and go to state 117 ]
  ! MAYOR           [ shift and go to state 119 ]
  ! MENOR           [ shift and go to state 120 ]
  ! MAYORIGUAL      [ shift and go to state 121 ]
  ! MENORIGUAL      [ shift and go to state 122 ]
  ! IGUALACION      [ shift and go to state 123 ]
  ! DISTINTO        [ shift and go to state 124 ]
  ! AND             [ shift and go to state 125 ]
  ! OR              [ shift and go to state 126 ]


state 182

    (78) expresion -> expresion POTENCIA expresion .
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    MAS             reduce using rule 78 (expresion -> expresion POTENCIA expresion .)
    MENOS           reduce using rule 78 (expresion -> expresion POTENCIA expresion .)
    POR             reduce using rule 78 (expresion -> expresion POTENCIA expresion .)
    DIVIDIDO        reduce using rule 78 (expresion -> expresion POTENCIA expresion .)
    MODULO          reduce using rule 78 (expresion -> expresion POTENCIA expresion .)
    MAYOR           reduce using rule 78 (expresion -> expresion POTENCIA expresion .)
    MENOR           reduce using rule 78 (expresion -> expresion POTENCIA expresion .)
    MAYORIGUAL      reduce using rule 78 (expresion -> expresion POTENCIA expresion .)
    MENORIGUAL      reduce using rule 78 (expresion -> expresion POTENCIA expresion .)
    IGUALACION      reduce using rule 78 (expresion -> expresion POTENCIA expresion .)
    DISTINTO        reduce using rule 78 (expresion -> expresion POTENCIA expresion .)
    AND             reduce using rule 78 (expresion -> expresion POTENCIA expresion .)
    OR              reduce using rule 78 (expresion -> expresion POTENCIA expresion .)
    PTOYCOMA        reduce using rule 78 (expresion -> expresion POTENCIA expresion .)
    FUNCTION        reduce using rule 78 (expresion -> expresion POTENCIA expresion .)
    ID              reduce using rule 78 (expresion -> expresion POTENCIA expresion .)
    LET             reduce using rule 78 (expresion -> expresion POTENCIA expresion .)
    CONSOLE         reduce using rule 78 (expresion -> expresion POTENCIA expresion .)
    IF              reduce using rule 78 (expresion -> expresion POTENCIA expresion .)
    WHILE           reduce using rule 78 (expresion -> expresion POTENCIA expresion .)
    FOR             reduce using rule 78 (expresion -> expresion POTENCIA expresion .)
    RETURN          reduce using rule 78 (expresion -> expresion POTENCIA expresion .)
    BREAK           reduce using rule 78 (expresion -> expresion POTENCIA expresion .)
    CONTINUE        reduce using rule 78 (expresion -> expresion POTENCIA expresion .)
    INTERFACE       reduce using rule 78 (expresion -> expresion POTENCIA expresion .)
    DECREMENTO      reduce using rule 78 (expresion -> expresion POTENCIA expresion .)
    INCREMENTO      reduce using rule 78 (expresion -> expresion POTENCIA expresion .)
    $end            reduce using rule 78 (expresion -> expresion POTENCIA expresion .)
    LLADER          reduce using rule 78 (expresion -> expresion POTENCIA expresion .)
    PARDER          reduce using rule 78 (expresion -> expresion POTENCIA expresion .)
    COMA            reduce using rule 78 (expresion -> expresion POTENCIA expresion .)
    CORDER          reduce using rule 78 (expresion -> expresion POTENCIA expresion .)
    POTENCIA        shift and go to state 118

  ! POTENCIA        [ reduce using rule 78 (expresion -> expresion POTENCIA expresion .) ]
  ! MAS             [ shift and go to state 113 ]
  ! MENOS           [ shift and go to state 114 ]
  ! POR             [ shift and go to state 115 ]
  ! DIVIDIDO        [ shift and go to state 116 ]
  ! MODULO          [ shift and go to state 117 ]
  ! MAYOR           [ shift and go to state 119 ]
  ! MENOR           [ shift and go to state 120 ]
  ! MAYORIGUAL      [ shift and go to state 121 ]
  ! MENORIGUAL      [ shift and go to state 122 ]
  ! IGUALACION      [ shift and go to state 123 ]
  ! DISTINTO        [ shift and go to state 124 ]
  ! AND             [ shift and go to state 125 ]
  ! OR              [ shift and go to state 126 ]


state 183

    (80) expresion -> expresion MAYOR expresion .
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    MAYOR           reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    MENOR           reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    MAYORIGUAL      reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    MENORIGUAL      reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    IGUALACION      reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    DISTINTO        reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    AND             reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    OR              reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    PTOYCOMA        reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    FUNCTION        reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    ID              reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    LET             reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    CONSOLE         reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    IF              reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    WHILE           reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    FOR             reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    RETURN          reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    BREAK           reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    CONTINUE        reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    INTERFACE       reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    DECREMENTO      reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    INCREMENTO      reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    $end            reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    LLADER          reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    PARDER          reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    COMA            reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    CORDER          reduce using rule 80 (expresion -> expresion MAYOR expresion .)
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POR             shift and go to state 115
    DIVIDIDO        shift and go to state 116
    MODULO          shift and go to state 117
    POTENCIA        shift and go to state 118

  ! MAS             [ reduce using rule 80 (expresion -> expresion MAYOR expresion .) ]
  ! MENOS           [ reduce using rule 80 (expresion -> expresion MAYOR expresion .) ]
  ! POR             [ reduce using rule 80 (expresion -> expresion MAYOR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 80 (expresion -> expresion MAYOR expresion .) ]
  ! MODULO          [ reduce using rule 80 (expresion -> expresion MAYOR expresion .) ]
  ! POTENCIA        [ reduce using rule 80 (expresion -> expresion MAYOR expresion .) ]
  ! MAYOR           [ shift and go to state 119 ]
  ! MENOR           [ shift and go to state 120 ]
  ! MAYORIGUAL      [ shift and go to state 121 ]
  ! MENORIGUAL      [ shift and go to state 122 ]
  ! IGUALACION      [ shift and go to state 123 ]
  ! DISTINTO        [ shift and go to state 124 ]
  ! AND             [ shift and go to state 125 ]
  ! OR              [ shift and go to state 126 ]


state 184

    (81) expresion -> expresion MENOR expresion .
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    MAYOR           reduce using rule 81 (expresion -> expresion MENOR expresion .)
    MENOR           reduce using rule 81 (expresion -> expresion MENOR expresion .)
    MAYORIGUAL      reduce using rule 81 (expresion -> expresion MENOR expresion .)
    MENORIGUAL      reduce using rule 81 (expresion -> expresion MENOR expresion .)
    IGUALACION      reduce using rule 81 (expresion -> expresion MENOR expresion .)
    DISTINTO        reduce using rule 81 (expresion -> expresion MENOR expresion .)
    AND             reduce using rule 81 (expresion -> expresion MENOR expresion .)
    OR              reduce using rule 81 (expresion -> expresion MENOR expresion .)
    PTOYCOMA        reduce using rule 81 (expresion -> expresion MENOR expresion .)
    FUNCTION        reduce using rule 81 (expresion -> expresion MENOR expresion .)
    ID              reduce using rule 81 (expresion -> expresion MENOR expresion .)
    LET             reduce using rule 81 (expresion -> expresion MENOR expresion .)
    CONSOLE         reduce using rule 81 (expresion -> expresion MENOR expresion .)
    IF              reduce using rule 81 (expresion -> expresion MENOR expresion .)
    WHILE           reduce using rule 81 (expresion -> expresion MENOR expresion .)
    FOR             reduce using rule 81 (expresion -> expresion MENOR expresion .)
    RETURN          reduce using rule 81 (expresion -> expresion MENOR expresion .)
    BREAK           reduce using rule 81 (expresion -> expresion MENOR expresion .)
    CONTINUE        reduce using rule 81 (expresion -> expresion MENOR expresion .)
    INTERFACE       reduce using rule 81 (expresion -> expresion MENOR expresion .)
    DECREMENTO      reduce using rule 81 (expresion -> expresion MENOR expresion .)
    INCREMENTO      reduce using rule 81 (expresion -> expresion MENOR expresion .)
    $end            reduce using rule 81 (expresion -> expresion MENOR expresion .)
    LLADER          reduce using rule 81 (expresion -> expresion MENOR expresion .)
    PARDER          reduce using rule 81 (expresion -> expresion MENOR expresion .)
    COMA            reduce using rule 81 (expresion -> expresion MENOR expresion .)
    CORDER          reduce using rule 81 (expresion -> expresion MENOR expresion .)
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POR             shift and go to state 115
    DIVIDIDO        shift and go to state 116
    MODULO          shift and go to state 117
    POTENCIA        shift and go to state 118

  ! MAS             [ reduce using rule 81 (expresion -> expresion MENOR expresion .) ]
  ! MENOS           [ reduce using rule 81 (expresion -> expresion MENOR expresion .) ]
  ! POR             [ reduce using rule 81 (expresion -> expresion MENOR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 81 (expresion -> expresion MENOR expresion .) ]
  ! MODULO          [ reduce using rule 81 (expresion -> expresion MENOR expresion .) ]
  ! POTENCIA        [ reduce using rule 81 (expresion -> expresion MENOR expresion .) ]
  ! MAYOR           [ shift and go to state 119 ]
  ! MENOR           [ shift and go to state 120 ]
  ! MAYORIGUAL      [ shift and go to state 121 ]
  ! MENORIGUAL      [ shift and go to state 122 ]
  ! IGUALACION      [ shift and go to state 123 ]
  ! DISTINTO        [ shift and go to state 124 ]
  ! AND             [ shift and go to state 125 ]
  ! OR              [ shift and go to state 126 ]


state 185

    (82) expresion -> expresion MAYORIGUAL expresion .
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    MAYOR           reduce using rule 82 (expresion -> expresion MAYORIGUAL expresion .)
    MENOR           reduce using rule 82 (expresion -> expresion MAYORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 82 (expresion -> expresion MAYORIGUAL expresion .)
    MENORIGUAL      reduce using rule 82 (expresion -> expresion MAYORIGUAL expresion .)
    IGUALACION      reduce using rule 82 (expresion -> expresion MAYORIGUAL expresion .)
    DISTINTO        reduce using rule 82 (expresion -> expresion MAYORIGUAL expresion .)
    AND             reduce using rule 82 (expresion -> expresion MAYORIGUAL expresion .)
    OR              reduce using rule 82 (expresion -> expresion MAYORIGUAL expresion .)
    PTOYCOMA        reduce using rule 82 (expresion -> expresion MAYORIGUAL expresion .)
    FUNCTION        reduce using rule 82 (expresion -> expresion MAYORIGUAL expresion .)
    ID              reduce using rule 82 (expresion -> expresion MAYORIGUAL expresion .)
    LET             reduce using rule 82 (expresion -> expresion MAYORIGUAL expresion .)
    CONSOLE         reduce using rule 82 (expresion -> expresion MAYORIGUAL expresion .)
    IF              reduce using rule 82 (expresion -> expresion MAYORIGUAL expresion .)
    WHILE           reduce using rule 82 (expresion -> expresion MAYORIGUAL expresion .)
    FOR             reduce using rule 82 (expresion -> expresion MAYORIGUAL expresion .)
    RETURN          reduce using rule 82 (expresion -> expresion MAYORIGUAL expresion .)
    BREAK           reduce using rule 82 (expresion -> expresion MAYORIGUAL expresion .)
    CONTINUE        reduce using rule 82 (expresion -> expresion MAYORIGUAL expresion .)
    INTERFACE       reduce using rule 82 (expresion -> expresion MAYORIGUAL expresion .)
    DECREMENTO      reduce using rule 82 (expresion -> expresion MAYORIGUAL expresion .)
    INCREMENTO      reduce using rule 82 (expresion -> expresion MAYORIGUAL expresion .)
    $end            reduce using rule 82 (expresion -> expresion MAYORIGUAL expresion .)
    LLADER          reduce using rule 82 (expresion -> expresion MAYORIGUAL expresion .)
    PARDER          reduce using rule 82 (expresion -> expresion MAYORIGUAL expresion .)
    COMA            reduce using rule 82 (expresion -> expresion MAYORIGUAL expresion .)
    CORDER          reduce using rule 82 (expresion -> expresion MAYORIGUAL expresion .)
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POR             shift and go to state 115
    DIVIDIDO        shift and go to state 116
    MODULO          shift and go to state 117
    POTENCIA        shift and go to state 118

  ! MAS             [ reduce using rule 82 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 82 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! POR             [ reduce using rule 82 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! DIVIDIDO        [ reduce using rule 82 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 82 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! POTENCIA        [ reduce using rule 82 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MAYOR           [ shift and go to state 119 ]
  ! MENOR           [ shift and go to state 120 ]
  ! MAYORIGUAL      [ shift and go to state 121 ]
  ! MENORIGUAL      [ shift and go to state 122 ]
  ! IGUALACION      [ shift and go to state 123 ]
  ! DISTINTO        [ shift and go to state 124 ]
  ! AND             [ shift and go to state 125 ]
  ! OR              [ shift and go to state 126 ]


state 186

    (83) expresion -> expresion MENORIGUAL expresion .
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    MAYOR           reduce using rule 83 (expresion -> expresion MENORIGUAL expresion .)
    MENOR           reduce using rule 83 (expresion -> expresion MENORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 83 (expresion -> expresion MENORIGUAL expresion .)
    MENORIGUAL      reduce using rule 83 (expresion -> expresion MENORIGUAL expresion .)
    IGUALACION      reduce using rule 83 (expresion -> expresion MENORIGUAL expresion .)
    DISTINTO        reduce using rule 83 (expresion -> expresion MENORIGUAL expresion .)
    AND             reduce using rule 83 (expresion -> expresion MENORIGUAL expresion .)
    OR              reduce using rule 83 (expresion -> expresion MENORIGUAL expresion .)
    PTOYCOMA        reduce using rule 83 (expresion -> expresion MENORIGUAL expresion .)
    FUNCTION        reduce using rule 83 (expresion -> expresion MENORIGUAL expresion .)
    ID              reduce using rule 83 (expresion -> expresion MENORIGUAL expresion .)
    LET             reduce using rule 83 (expresion -> expresion MENORIGUAL expresion .)
    CONSOLE         reduce using rule 83 (expresion -> expresion MENORIGUAL expresion .)
    IF              reduce using rule 83 (expresion -> expresion MENORIGUAL expresion .)
    WHILE           reduce using rule 83 (expresion -> expresion MENORIGUAL expresion .)
    FOR             reduce using rule 83 (expresion -> expresion MENORIGUAL expresion .)
    RETURN          reduce using rule 83 (expresion -> expresion MENORIGUAL expresion .)
    BREAK           reduce using rule 83 (expresion -> expresion MENORIGUAL expresion .)
    CONTINUE        reduce using rule 83 (expresion -> expresion MENORIGUAL expresion .)
    INTERFACE       reduce using rule 83 (expresion -> expresion MENORIGUAL expresion .)
    DECREMENTO      reduce using rule 83 (expresion -> expresion MENORIGUAL expresion .)
    INCREMENTO      reduce using rule 83 (expresion -> expresion MENORIGUAL expresion .)
    $end            reduce using rule 83 (expresion -> expresion MENORIGUAL expresion .)
    LLADER          reduce using rule 83 (expresion -> expresion MENORIGUAL expresion .)
    PARDER          reduce using rule 83 (expresion -> expresion MENORIGUAL expresion .)
    COMA            reduce using rule 83 (expresion -> expresion MENORIGUAL expresion .)
    CORDER          reduce using rule 83 (expresion -> expresion MENORIGUAL expresion .)
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POR             shift and go to state 115
    DIVIDIDO        shift and go to state 116
    MODULO          shift and go to state 117
    POTENCIA        shift and go to state 118

  ! MAS             [ reduce using rule 83 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 83 (expresion -> expresion MENORIGUAL expresion .) ]
  ! POR             [ reduce using rule 83 (expresion -> expresion MENORIGUAL expresion .) ]
  ! DIVIDIDO        [ reduce using rule 83 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 83 (expresion -> expresion MENORIGUAL expresion .) ]
  ! POTENCIA        [ reduce using rule 83 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MAYOR           [ shift and go to state 119 ]
  ! MENOR           [ shift and go to state 120 ]
  ! MAYORIGUAL      [ shift and go to state 121 ]
  ! MENORIGUAL      [ shift and go to state 122 ]
  ! IGUALACION      [ shift and go to state 123 ]
  ! DISTINTO        [ shift and go to state 124 ]
  ! AND             [ shift and go to state 125 ]
  ! OR              [ shift and go to state 126 ]


state 187

    (84) expresion -> expresion IGUALACION expresion .
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    MAYOR           reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    MENOR           reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    MAYORIGUAL      reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    MENORIGUAL      reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    IGUALACION      reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    DISTINTO        reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    AND             reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    OR              reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    PTOYCOMA        reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    FUNCTION        reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    ID              reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    LET             reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    CONSOLE         reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    IF              reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    WHILE           reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    FOR             reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    RETURN          reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    BREAK           reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    CONTINUE        reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    INTERFACE       reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    DECREMENTO      reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    INCREMENTO      reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    $end            reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    LLADER          reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    PARDER          reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    COMA            reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    CORDER          reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POR             shift and go to state 115
    DIVIDIDO        shift and go to state 116
    MODULO          shift and go to state 117
    POTENCIA        shift and go to state 118

  ! MAS             [ reduce using rule 84 (expresion -> expresion IGUALACION expresion .) ]
  ! MENOS           [ reduce using rule 84 (expresion -> expresion IGUALACION expresion .) ]
  ! POR             [ reduce using rule 84 (expresion -> expresion IGUALACION expresion .) ]
  ! DIVIDIDO        [ reduce using rule 84 (expresion -> expresion IGUALACION expresion .) ]
  ! MODULO          [ reduce using rule 84 (expresion -> expresion IGUALACION expresion .) ]
  ! POTENCIA        [ reduce using rule 84 (expresion -> expresion IGUALACION expresion .) ]
  ! MAYOR           [ shift and go to state 119 ]
  ! MENOR           [ shift and go to state 120 ]
  ! MAYORIGUAL      [ shift and go to state 121 ]
  ! MENORIGUAL      [ shift and go to state 122 ]
  ! IGUALACION      [ shift and go to state 123 ]
  ! DISTINTO        [ shift and go to state 124 ]
  ! AND             [ shift and go to state 125 ]
  ! OR              [ shift and go to state 126 ]


state 188

    (85) expresion -> expresion DISTINTO expresion .
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    MAYOR           reduce using rule 85 (expresion -> expresion DISTINTO expresion .)
    MENOR           reduce using rule 85 (expresion -> expresion DISTINTO expresion .)
    MAYORIGUAL      reduce using rule 85 (expresion -> expresion DISTINTO expresion .)
    MENORIGUAL      reduce using rule 85 (expresion -> expresion DISTINTO expresion .)
    IGUALACION      reduce using rule 85 (expresion -> expresion DISTINTO expresion .)
    DISTINTO        reduce using rule 85 (expresion -> expresion DISTINTO expresion .)
    AND             reduce using rule 85 (expresion -> expresion DISTINTO expresion .)
    OR              reduce using rule 85 (expresion -> expresion DISTINTO expresion .)
    PTOYCOMA        reduce using rule 85 (expresion -> expresion DISTINTO expresion .)
    FUNCTION        reduce using rule 85 (expresion -> expresion DISTINTO expresion .)
    ID              reduce using rule 85 (expresion -> expresion DISTINTO expresion .)
    LET             reduce using rule 85 (expresion -> expresion DISTINTO expresion .)
    CONSOLE         reduce using rule 85 (expresion -> expresion DISTINTO expresion .)
    IF              reduce using rule 85 (expresion -> expresion DISTINTO expresion .)
    WHILE           reduce using rule 85 (expresion -> expresion DISTINTO expresion .)
    FOR             reduce using rule 85 (expresion -> expresion DISTINTO expresion .)
    RETURN          reduce using rule 85 (expresion -> expresion DISTINTO expresion .)
    BREAK           reduce using rule 85 (expresion -> expresion DISTINTO expresion .)
    CONTINUE        reduce using rule 85 (expresion -> expresion DISTINTO expresion .)
    INTERFACE       reduce using rule 85 (expresion -> expresion DISTINTO expresion .)
    DECREMENTO      reduce using rule 85 (expresion -> expresion DISTINTO expresion .)
    INCREMENTO      reduce using rule 85 (expresion -> expresion DISTINTO expresion .)
    $end            reduce using rule 85 (expresion -> expresion DISTINTO expresion .)
    LLADER          reduce using rule 85 (expresion -> expresion DISTINTO expresion .)
    PARDER          reduce using rule 85 (expresion -> expresion DISTINTO expresion .)
    COMA            reduce using rule 85 (expresion -> expresion DISTINTO expresion .)
    CORDER          reduce using rule 85 (expresion -> expresion DISTINTO expresion .)
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POR             shift and go to state 115
    DIVIDIDO        shift and go to state 116
    MODULO          shift and go to state 117
    POTENCIA        shift and go to state 118

  ! MAS             [ reduce using rule 85 (expresion -> expresion DISTINTO expresion .) ]
  ! MENOS           [ reduce using rule 85 (expresion -> expresion DISTINTO expresion .) ]
  ! POR             [ reduce using rule 85 (expresion -> expresion DISTINTO expresion .) ]
  ! DIVIDIDO        [ reduce using rule 85 (expresion -> expresion DISTINTO expresion .) ]
  ! MODULO          [ reduce using rule 85 (expresion -> expresion DISTINTO expresion .) ]
  ! POTENCIA        [ reduce using rule 85 (expresion -> expresion DISTINTO expresion .) ]
  ! MAYOR           [ shift and go to state 119 ]
  ! MENOR           [ shift and go to state 120 ]
  ! MAYORIGUAL      [ shift and go to state 121 ]
  ! MENORIGUAL      [ shift and go to state 122 ]
  ! IGUALACION      [ shift and go to state 123 ]
  ! DISTINTO        [ shift and go to state 124 ]
  ! AND             [ shift and go to state 125 ]
  ! OR              [ shift and go to state 126 ]


state 189

    (86) expresion -> expresion AND expresion .
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    AND             reduce using rule 86 (expresion -> expresion AND expresion .)
    OR              reduce using rule 86 (expresion -> expresion AND expresion .)
    PTOYCOMA        reduce using rule 86 (expresion -> expresion AND expresion .)
    FUNCTION        reduce using rule 86 (expresion -> expresion AND expresion .)
    ID              reduce using rule 86 (expresion -> expresion AND expresion .)
    LET             reduce using rule 86 (expresion -> expresion AND expresion .)
    CONSOLE         reduce using rule 86 (expresion -> expresion AND expresion .)
    IF              reduce using rule 86 (expresion -> expresion AND expresion .)
    WHILE           reduce using rule 86 (expresion -> expresion AND expresion .)
    FOR             reduce using rule 86 (expresion -> expresion AND expresion .)
    RETURN          reduce using rule 86 (expresion -> expresion AND expresion .)
    BREAK           reduce using rule 86 (expresion -> expresion AND expresion .)
    CONTINUE        reduce using rule 86 (expresion -> expresion AND expresion .)
    INTERFACE       reduce using rule 86 (expresion -> expresion AND expresion .)
    DECREMENTO      reduce using rule 86 (expresion -> expresion AND expresion .)
    INCREMENTO      reduce using rule 86 (expresion -> expresion AND expresion .)
    $end            reduce using rule 86 (expresion -> expresion AND expresion .)
    LLADER          reduce using rule 86 (expresion -> expresion AND expresion .)
    PARDER          reduce using rule 86 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 86 (expresion -> expresion AND expresion .)
    CORDER          reduce using rule 86 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POR             shift and go to state 115
    DIVIDIDO        shift and go to state 116
    MODULO          shift and go to state 117
    POTENCIA        shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYORIGUAL      shift and go to state 121
    MENORIGUAL      shift and go to state 122
    IGUALACION      shift and go to state 123
    DISTINTO        shift and go to state 124

  ! MAS             [ reduce using rule 86 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 86 (expresion -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 86 (expresion -> expresion AND expresion .) ]
  ! DIVIDIDO        [ reduce using rule 86 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 86 (expresion -> expresion AND expresion .) ]
  ! POTENCIA        [ reduce using rule 86 (expresion -> expresion AND expresion .) ]
  ! MAYOR           [ reduce using rule 86 (expresion -> expresion AND expresion .) ]
  ! MENOR           [ reduce using rule 86 (expresion -> expresion AND expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 86 (expresion -> expresion AND expresion .) ]
  ! MENORIGUAL      [ reduce using rule 86 (expresion -> expresion AND expresion .) ]
  ! IGUALACION      [ reduce using rule 86 (expresion -> expresion AND expresion .) ]
  ! DISTINTO        [ reduce using rule 86 (expresion -> expresion AND expresion .) ]
  ! AND             [ shift and go to state 125 ]
  ! OR              [ shift and go to state 126 ]


state 190

    (87) expresion -> expresion OR expresion .
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    OR              reduce using rule 87 (expresion -> expresion OR expresion .)
    PTOYCOMA        reduce using rule 87 (expresion -> expresion OR expresion .)
    FUNCTION        reduce using rule 87 (expresion -> expresion OR expresion .)
    ID              reduce using rule 87 (expresion -> expresion OR expresion .)
    LET             reduce using rule 87 (expresion -> expresion OR expresion .)
    CONSOLE         reduce using rule 87 (expresion -> expresion OR expresion .)
    IF              reduce using rule 87 (expresion -> expresion OR expresion .)
    WHILE           reduce using rule 87 (expresion -> expresion OR expresion .)
    FOR             reduce using rule 87 (expresion -> expresion OR expresion .)
    RETURN          reduce using rule 87 (expresion -> expresion OR expresion .)
    BREAK           reduce using rule 87 (expresion -> expresion OR expresion .)
    CONTINUE        reduce using rule 87 (expresion -> expresion OR expresion .)
    INTERFACE       reduce using rule 87 (expresion -> expresion OR expresion .)
    DECREMENTO      reduce using rule 87 (expresion -> expresion OR expresion .)
    INCREMENTO      reduce using rule 87 (expresion -> expresion OR expresion .)
    $end            reduce using rule 87 (expresion -> expresion OR expresion .)
    LLADER          reduce using rule 87 (expresion -> expresion OR expresion .)
    PARDER          reduce using rule 87 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 87 (expresion -> expresion OR expresion .)
    CORDER          reduce using rule 87 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POR             shift and go to state 115
    DIVIDIDO        shift and go to state 116
    MODULO          shift and go to state 117
    POTENCIA        shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYORIGUAL      shift and go to state 121
    MENORIGUAL      shift and go to state 122
    IGUALACION      shift and go to state 123
    DISTINTO        shift and go to state 124
    AND             shift and go to state 125

  ! MAS             [ reduce using rule 87 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 87 (expresion -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 87 (expresion -> expresion OR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 87 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 87 (expresion -> expresion OR expresion .) ]
  ! POTENCIA        [ reduce using rule 87 (expresion -> expresion OR expresion .) ]
  ! MAYOR           [ reduce using rule 87 (expresion -> expresion OR expresion .) ]
  ! MENOR           [ reduce using rule 87 (expresion -> expresion OR expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 87 (expresion -> expresion OR expresion .) ]
  ! MENORIGUAL      [ reduce using rule 87 (expresion -> expresion OR expresion .) ]
  ! IGUALACION      [ reduce using rule 87 (expresion -> expresion OR expresion .) ]
  ! DISTINTO        [ reduce using rule 87 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 87 (expresion -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 126 ]


state 191

    (92) expresion -> PARIZQ expresion PARDER .

    MAS             reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    POR             reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    MODULO          reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    MENOR           reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    IGUALACION      reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    DISTINTO        reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    AND             reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    OR              reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    PTOYCOMA        reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    FUNCTION        reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    ID              reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    LET             reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    IF              reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    WHILE           reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    FOR             reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    RETURN          reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    BREAK           reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    INTERFACE       reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    DECREMENTO      reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    INCREMENTO      reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    $end            reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    LLADER          reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    COMA            reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    CORDER          reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)


state 192

    (133) expresion -> ID PUNTO ID .

    MAS             reduce using rule 133 (expresion -> ID PUNTO ID .)
    MENOS           reduce using rule 133 (expresion -> ID PUNTO ID .)
    POR             reduce using rule 133 (expresion -> ID PUNTO ID .)
    DIVIDIDO        reduce using rule 133 (expresion -> ID PUNTO ID .)
    MODULO          reduce using rule 133 (expresion -> ID PUNTO ID .)
    POTENCIA        reduce using rule 133 (expresion -> ID PUNTO ID .)
    MAYOR           reduce using rule 133 (expresion -> ID PUNTO ID .)
    MENOR           reduce using rule 133 (expresion -> ID PUNTO ID .)
    MAYORIGUAL      reduce using rule 133 (expresion -> ID PUNTO ID .)
    MENORIGUAL      reduce using rule 133 (expresion -> ID PUNTO ID .)
    IGUALACION      reduce using rule 133 (expresion -> ID PUNTO ID .)
    DISTINTO        reduce using rule 133 (expresion -> ID PUNTO ID .)
    AND             reduce using rule 133 (expresion -> ID PUNTO ID .)
    OR              reduce using rule 133 (expresion -> ID PUNTO ID .)
    PTOYCOMA        reduce using rule 133 (expresion -> ID PUNTO ID .)
    FUNCTION        reduce using rule 133 (expresion -> ID PUNTO ID .)
    ID              reduce using rule 133 (expresion -> ID PUNTO ID .)
    LET             reduce using rule 133 (expresion -> ID PUNTO ID .)
    CONSOLE         reduce using rule 133 (expresion -> ID PUNTO ID .)
    IF              reduce using rule 133 (expresion -> ID PUNTO ID .)
    WHILE           reduce using rule 133 (expresion -> ID PUNTO ID .)
    FOR             reduce using rule 133 (expresion -> ID PUNTO ID .)
    RETURN          reduce using rule 133 (expresion -> ID PUNTO ID .)
    BREAK           reduce using rule 133 (expresion -> ID PUNTO ID .)
    CONTINUE        reduce using rule 133 (expresion -> ID PUNTO ID .)
    INTERFACE       reduce using rule 133 (expresion -> ID PUNTO ID .)
    DECREMENTO      reduce using rule 133 (expresion -> ID PUNTO ID .)
    INCREMENTO      reduce using rule 133 (expresion -> ID PUNTO ID .)
    $end            reduce using rule 133 (expresion -> ID PUNTO ID .)
    LLADER          reduce using rule 133 (expresion -> ID PUNTO ID .)
    PARDER          reduce using rule 133 (expresion -> ID PUNTO ID .)
    COMA            reduce using rule 133 (expresion -> ID PUNTO ID .)
    CORDER          reduce using rule 133 (expresion -> ID PUNTO ID .)


state 193

    (114) casteo -> ID PUNTO TOSTRING . PARIZQ PARDER

    PARIZQ          shift and go to state 238


state 194

    (156) acceso_array_interface -> ID lista_acceso_array PUNTO . ID

    ID              shift and go to state 239


state 195

    (161) expresion -> TYPEOF PARIZQ expresion . PARDER
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    PARDER          shift and go to state 240
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POR             shift and go to state 115
    DIVIDIDO        shift and go to state 116
    MODULO          shift and go to state 117
    POTENCIA        shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYORIGUAL      shift and go to state 121
    MENORIGUAL      shift and go to state 122
    IGUALACION      shift and go to state 123
    DISTINTO        shift and go to state 124
    AND             shift and go to state 125
    OR              shift and go to state 126


state 196

    (162) expresion -> LENGTH PARIZQ expresion . PARDER
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    PARDER          shift and go to state 241
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POR             shift and go to state 115
    DIVIDIDO        shift and go to state 116
    MODULO          shift and go to state 117
    POTENCIA        shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYORIGUAL      shift and go to state 121
    MENORIGUAL      shift and go to state 122
    IGUALACION      shift and go to state 123
    DISTINTO        shift and go to state 124
    AND             shift and go to state 125
    OR              shift and go to state 126


state 197

    (115) casteo -> CAST_STRING PARIZQ expresion . PARDER
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    PARDER          shift and go to state 242
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POR             shift and go to state 115
    DIVIDIDO        shift and go to state 116
    MODULO          shift and go to state 117
    POTENCIA        shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYORIGUAL      shift and go to state 121
    MENORIGUAL      shift and go to state 122
    IGUALACION      shift and go to state 123
    DISTINTO        shift and go to state 124
    AND             shift and go to state 125
    OR              shift and go to state 126


state 198

    (116) casteo -> CAST_NUMBER PARIZQ expresion . PARDER
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    PARDER          shift and go to state 243
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POR             shift and go to state 115
    DIVIDIDO        shift and go to state 116
    MODULO          shift and go to state 117
    POTENCIA        shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYORIGUAL      shift and go to state 121
    MENORIGUAL      shift and go to state 122
    IGUALACION      shift and go to state 123
    DISTINTO        shift and go to state 124
    AND             shift and go to state 125
    OR              shift and go to state 126


state 199

    (107) aproximacion -> TOFIXED PARIZQ expresion . COMA expresion PARDER
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    COMA            shift and go to state 244
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POR             shift and go to state 115
    DIVIDIDO        shift and go to state 116
    MODULO          shift and go to state 117
    POTENCIA        shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYORIGUAL      shift and go to state 121
    MENORIGUAL      shift and go to state 122
    IGUALACION      shift and go to state 123
    DISTINTO        shift and go to state 124
    AND             shift and go to state 125
    OR              shift and go to state 126


state 200

    (108) exponencial -> TOEXPONENTIAL PARIZQ expresion . COMA expresion PARDER
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    COMA            shift and go to state 245
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POR             shift and go to state 115
    DIVIDIDO        shift and go to state 116
    MODULO          shift and go to state 117
    POTENCIA        shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYORIGUAL      shift and go to state 121
    MENORIGUAL      shift and go to state 122
    IGUALACION      shift and go to state 123
    DISTINTO        shift and go to state 124
    AND             shift and go to state 125
    OR              shift and go to state 126


state 201

    (111) separador -> SPLIT PARIZQ expresion . COMA expresion PARDER
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    COMA            shift and go to state 246
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POR             shift and go to state 115
    DIVIDIDO        shift and go to state 116
    MODULO          shift and go to state 117
    POTENCIA        shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYORIGUAL      shift and go to state 121
    MENORIGUAL      shift and go to state 122
    IGUALACION      shift and go to state 123
    DISTINTO        shift and go to state 124
    AND             shift and go to state 125
    OR              shift and go to state 126


state 202

    (112) concatenacion -> CONCAT PARIZQ expresion . COMA expresion PARDER
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    COMA            shift and go to state 247
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POR             shift and go to state 115
    DIVIDIDO        shift and go to state 116
    MODULO          shift and go to state 117
    POTENCIA        shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYORIGUAL      shift and go to state 121
    MENORIGUAL      shift and go to state 122
    IGUALACION      shift and go to state 123
    DISTINTO        shift and go to state 124
    AND             shift and go to state 125
    OR              shift and go to state 126


state 203

    (109) to_mayusculas -> TOUPPERCASE PARIZQ expresion . PARDER
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    PARDER          shift and go to state 248
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POR             shift and go to state 115
    DIVIDIDO        shift and go to state 116
    MODULO          shift and go to state 117
    POTENCIA        shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYORIGUAL      shift and go to state 121
    MENORIGUAL      shift and go to state 122
    IGUALACION      shift and go to state 123
    DISTINTO        shift and go to state 124
    AND             shift and go to state 125
    OR              shift and go to state 126


state 204

    (110) to_minusculas -> TOLOWERCASE PARIZQ expresion . PARDER
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    PARDER          shift and go to state 249
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POR             shift and go to state 115
    DIVIDIDO        shift and go to state 116
    MODULO          shift and go to state 117
    POTENCIA        shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYORIGUAL      shift and go to state 121
    MENORIGUAL      shift and go to state 122
    IGUALACION      shift and go to state 123
    DISTINTO        shift and go to state 124
    AND             shift and go to state 125
    OR              shift and go to state 126


state 205

    (128) expresion_interface -> LLAIZQ lista_d LLADER .

    MAS             reduce using rule 128 (expresion_interface -> LLAIZQ lista_d LLADER .)
    MENOS           reduce using rule 128 (expresion_interface -> LLAIZQ lista_d LLADER .)
    POR             reduce using rule 128 (expresion_interface -> LLAIZQ lista_d LLADER .)
    DIVIDIDO        reduce using rule 128 (expresion_interface -> LLAIZQ lista_d LLADER .)
    MODULO          reduce using rule 128 (expresion_interface -> LLAIZQ lista_d LLADER .)
    POTENCIA        reduce using rule 128 (expresion_interface -> LLAIZQ lista_d LLADER .)
    MAYOR           reduce using rule 128 (expresion_interface -> LLAIZQ lista_d LLADER .)
    MENOR           reduce using rule 128 (expresion_interface -> LLAIZQ lista_d LLADER .)
    MAYORIGUAL      reduce using rule 128 (expresion_interface -> LLAIZQ lista_d LLADER .)
    MENORIGUAL      reduce using rule 128 (expresion_interface -> LLAIZQ lista_d LLADER .)
    IGUALACION      reduce using rule 128 (expresion_interface -> LLAIZQ lista_d LLADER .)
    DISTINTO        reduce using rule 128 (expresion_interface -> LLAIZQ lista_d LLADER .)
    AND             reduce using rule 128 (expresion_interface -> LLAIZQ lista_d LLADER .)
    OR              reduce using rule 128 (expresion_interface -> LLAIZQ lista_d LLADER .)
    PTOYCOMA        reduce using rule 128 (expresion_interface -> LLAIZQ lista_d LLADER .)
    FUNCTION        reduce using rule 128 (expresion_interface -> LLAIZQ lista_d LLADER .)
    ID              reduce using rule 128 (expresion_interface -> LLAIZQ lista_d LLADER .)
    LET             reduce using rule 128 (expresion_interface -> LLAIZQ lista_d LLADER .)
    CONSOLE         reduce using rule 128 (expresion_interface -> LLAIZQ lista_d LLADER .)
    IF              reduce using rule 128 (expresion_interface -> LLAIZQ lista_d LLADER .)
    WHILE           reduce using rule 128 (expresion_interface -> LLAIZQ lista_d LLADER .)
    FOR             reduce using rule 128 (expresion_interface -> LLAIZQ lista_d LLADER .)
    RETURN          reduce using rule 128 (expresion_interface -> LLAIZQ lista_d LLADER .)
    BREAK           reduce using rule 128 (expresion_interface -> LLAIZQ lista_d LLADER .)
    CONTINUE        reduce using rule 128 (expresion_interface -> LLAIZQ lista_d LLADER .)
    INTERFACE       reduce using rule 128 (expresion_interface -> LLAIZQ lista_d LLADER .)
    DECREMENTO      reduce using rule 128 (expresion_interface -> LLAIZQ lista_d LLADER .)
    INCREMENTO      reduce using rule 128 (expresion_interface -> LLAIZQ lista_d LLADER .)
    $end            reduce using rule 128 (expresion_interface -> LLAIZQ lista_d LLADER .)
    LLADER          reduce using rule 128 (expresion_interface -> LLAIZQ lista_d LLADER .)
    PARDER          reduce using rule 128 (expresion_interface -> LLAIZQ lista_d LLADER .)
    COMA            reduce using rule 128 (expresion_interface -> LLAIZQ lista_d LLADER .)
    CORDER          reduce using rule 128 (expresion_interface -> LLAIZQ lista_d LLADER .)


state 206

    (130) lista_d -> lista_d COMA . parDecl
    (132) parDecl -> . ID DOSPUNTOS expresion

    ID              shift and go to state 144

    parDecl                        shift and go to state 250

state 207

    (132) parDecl -> ID DOSPUNTOS . expresion
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    expresion                      shift and go to state 251
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 208

    (151) arreglo -> CORIZQ lista_exp CORDER .

    MAS             reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    MENOS           reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    POR             reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    DIVIDIDO        reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    MODULO          reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    POTENCIA        reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    MAYOR           reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    MENOR           reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    MAYORIGUAL      reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    MENORIGUAL      reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    IGUALACION      reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    DISTINTO        reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    AND             reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    OR              reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    PTOYCOMA        reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    FUNCTION        reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    ID              reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    LET             reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    CONSOLE         reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    IF              reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    WHILE           reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    FOR             reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    RETURN          reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    BREAK           reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    CONTINUE        reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    INTERFACE       reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    DECREMENTO      reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    INCREMENTO      reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    $end            reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    LLADER          reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    PARDER          reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    COMA            reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    CORDER          reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)


state 209

    (148) lista_exp -> lista_exp COMA . expresion
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    expresion                      shift and go to state 252
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 210

    (122) bloquestruct -> LLAIZQ lista_params_struct . LLADER
    (123) lista_params_struct -> lista_params_struct . param_struct
    (125) param_struct -> . ID DOSPUNTOS tipo PTOYCOMA
    (126) param_struct -> . ID PTOYCOMA

    LLADER          shift and go to state 253
    ID              shift and go to state 212

    param_struct                   shift and go to state 254

state 211

    (124) lista_params_struct -> param_struct .

    LLADER          reduce using rule 124 (lista_params_struct -> param_struct .)
    ID              reduce using rule 124 (lista_params_struct -> param_struct .)


state 212

    (125) param_struct -> ID . DOSPUNTOS tipo PTOYCOMA
    (126) param_struct -> ID . PTOYCOMA

    DOSPUNTOS       shift and go to state 255
    PTOYCOMA        shift and go to state 256


state 213

    (60) parametro -> ID DOSPUNTOS . tipo
    (61) parametro -> ID DOSPUNTOS . ID
    (62) parametro -> ID DOSPUNTOS . tipo CORIZQ CORDER
    (68) tipo -> . NUMBER
    (69) tipo -> . STRING
    (70) tipo -> . BOOLEAN
    (71) tipo -> . ANY
    (72) tipo -> . NULL

    ID              shift and go to state 257
    NUMBER          shift and go to state 165
    STRING          shift and go to state 166
    BOOLEAN         shift and go to state 167
    ANY             shift and go to state 168
    NULL            shift and go to state 169

    tipo                           shift and go to state 258

state 214

    (51) funcion -> FUNCTION ID PARIZQ lista_parametros PARDER . bloque
    (52) funcion -> FUNCTION ID PARIZQ lista_parametros PARDER . DOSPUNTOS tipo bloque
    (56) funcion -> FUNCTION ID PARIZQ lista_parametros PARDER . DOSPUNTOS ID bloque
    (57) funcion -> FUNCTION ID PARIZQ lista_parametros PARDER . DOSPUNTOS tipo CORIZQ CORDER bloque
    (9) bloque -> . LLAIZQ instruccion4 LLADER
    (10) bloque -> . LLAIZQ LLADER

    DOSPUNTOS       shift and go to state 260
    LLAIZQ          shift and go to state 218

    bloque                         shift and go to state 259

state 215

    (58) lista_parametros -> lista_parametros COMA . parametro
    (60) parametro -> . ID DOSPUNTOS tipo
    (61) parametro -> . ID DOSPUNTOS ID
    (62) parametro -> . ID DOSPUNTOS tipo CORIZQ CORDER

    ID              shift and go to state 150

    parametro                      shift and go to state 261

state 216

    (53) funcion -> FUNCTION ID PARIZQ PARDER bloque .

    FUNCTION        reduce using rule 53 (funcion -> FUNCTION ID PARIZQ PARDER bloque .)
    ID              reduce using rule 53 (funcion -> FUNCTION ID PARIZQ PARDER bloque .)
    LET             reduce using rule 53 (funcion -> FUNCTION ID PARIZQ PARDER bloque .)
    CONSOLE         reduce using rule 53 (funcion -> FUNCTION ID PARIZQ PARDER bloque .)
    IF              reduce using rule 53 (funcion -> FUNCTION ID PARIZQ PARDER bloque .)
    WHILE           reduce using rule 53 (funcion -> FUNCTION ID PARIZQ PARDER bloque .)
    FOR             reduce using rule 53 (funcion -> FUNCTION ID PARIZQ PARDER bloque .)
    RETURN          reduce using rule 53 (funcion -> FUNCTION ID PARIZQ PARDER bloque .)
    BREAK           reduce using rule 53 (funcion -> FUNCTION ID PARIZQ PARDER bloque .)
    CONTINUE        reduce using rule 53 (funcion -> FUNCTION ID PARIZQ PARDER bloque .)
    INTERFACE       reduce using rule 53 (funcion -> FUNCTION ID PARIZQ PARDER bloque .)
    DECREMENTO      reduce using rule 53 (funcion -> FUNCTION ID PARIZQ PARDER bloque .)
    INCREMENTO      reduce using rule 53 (funcion -> FUNCTION ID PARIZQ PARDER bloque .)
    $end            reduce using rule 53 (funcion -> FUNCTION ID PARIZQ PARDER bloque .)


state 217

    (54) funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS . tipo bloque
    (55) funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS . ID bloque
    (68) tipo -> . NUMBER
    (69) tipo -> . STRING
    (70) tipo -> . BOOLEAN
    (71) tipo -> . ANY
    (72) tipo -> . NULL

    ID              shift and go to state 262
    NUMBER          shift and go to state 165
    STRING          shift and go to state 166
    BOOLEAN         shift and go to state 167
    ANY             shift and go to state 168
    NULL            shift and go to state 169

    tipo                           shift and go to state 263

state 218

    (9) bloque -> LLAIZQ . instruccion4 LLADER
    (10) bloque -> LLAIZQ . LLADER
    (7) instruccion4 -> . instruccion4 instruccion2
    (8) instruccion4 -> . instruccion2
    (5) instruccion2 -> . instruccion3 PTOYCOMA
    (6) instruccion2 -> . instruccion3
    (11) instruccion3 -> . declaracion
    (12) instruccion3 -> . asignacion
    (13) instruccion3 -> . impresion
    (14) instruccion3 -> . condicional
    (15) instruccion3 -> . ciclo_while
    (16) instruccion3 -> . ciclo_for
    (17) instruccion3 -> . ciclo_for_of
    (18) instruccion3 -> . llamada_funcion
    (19) instruccion3 -> . return
    (20) instruccion3 -> . break
    (21) instruccion3 -> . continue
    (22) instruccion3 -> . instanciar
    (23) instruccion3 -> . declaracionInterface
    (24) instruccion3 -> . declaracionArray
    (25) instruccion3 -> . asignacion_array
    (113) instruccion3 -> . ID PUNTO PUSH PARIZQ expresion PARDER
    (26) declaracion -> . LET ID IGUAL expresion
    (27) declaracion -> . LET ID
    (28) declaracion -> . LET ID DOSPUNTOS tipo IGUAL expresion
    (29) declaracion -> . LET ID DOSPUNTOS tipo
    (30) asignacion -> . ID IGUAL expresion
    (31) asignacion -> . dec
    (32) asignacion -> . inc
    (33) asignacion -> . asignacionInterface
    (38) impresion -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER
    (39) impresion -> . CONSOLE PUNTO LOG PARIZQ lista_argumentos PARDER
    (40) condicional -> . IF PARIZQ expresion PARDER bloque
    (41) condicional -> . IF PARIZQ expresion PARDER bloque ELSE bloque
    (42) condicional -> . IF PARIZQ expresion PARDER bloque lista_elif
    (43) condicional -> . IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque
    (47) ciclo_while -> . WHILE PARIZQ expresion PARDER bloque
    (48) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (49) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (50) ciclo_for_of -> . FOR PARIZQ LET ID OF expresion PARDER bloque
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (117) return -> . RETURN expresion
    (118) return -> . RETURN
    (119) break -> . BREAK
    (120) continue -> . CONTINUE
    (121) instanciar -> . INTERFACE ID bloquestruct
    (127) declaracionInterface -> . LET ID DOSPUNTOS ID IGUAL expresion_interface
    (135) declaracionArray -> . LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER
    (136) declaracionArray -> . LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER
    (137) declaracionArray -> . LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR
    (138) declaracionArray -> . LET ID DOSPUNTOS tipo CORIZQ CORDER
    (139) declaracionArray -> . LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER
    (140) declaracionArray -> . LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER
    (141) declaracionArray -> . LET ID IGUAL CORIZQ CORDER
    (142) declaracionArray -> . LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion
    (143) declaracionArray -> . LET ID IGUAL CORIZQ lista_exp CORDER
    (144) declaracionArray -> . LET ID DOSPUNTOS ID IGUAL CORIZQ CORDER
    (145) declaracionArray -> . LET ID DOSPUNTOS ID IGUAL CORIZQ lista_exp CORDER
    (146) declaracionArray -> . LET ID DOSPUNTOS ID CORIZQ CORDER
    (147) declaracionArray -> . LET ID DOSPUNTOS ID CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER
    (160) asignacion_array -> . ID lista_acceso_array IGUAL expresion
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (134) asignacionInterface -> . ID PUNTO ID IGUAL expresion

    LLADER          shift and go to state 265
    ID              shift and go to state 7
    LET             shift and go to state 23
    CONSOLE         shift and go to state 27
    IF              shift and go to state 28
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    RETURN          shift and go to state 31
    BREAK           shift and go to state 32
    CONTINUE        shift and go to state 33
    INTERFACE       shift and go to state 34
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36

    instruccion4                   shift and go to state 264
    instruccion2                   shift and go to state 266
    instruccion3                   shift and go to state 5
    declaracion                    shift and go to state 8
    asignacion                     shift and go to state 9
    impresion                      shift and go to state 10
    condicional                    shift and go to state 11
    ciclo_while                    shift and go to state 12
    ciclo_for                      shift and go to state 13
    ciclo_for_of                   shift and go to state 14
    llamada_funcion                shift and go to state 15
    return                         shift and go to state 16
    break                          shift and go to state 17
    continue                       shift and go to state 18
    instanciar                     shift and go to state 19
    declaracionInterface           shift and go to state 20
    declaracionArray               shift and go to state 21
    asignacion_array               shift and go to state 22
    dec                            shift and go to state 24
    inc                            shift and go to state 25
    asignacionInterface            shift and go to state 26

state 219

    (134) asignacionInterface -> ID PUNTO ID IGUAL expresion .
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    PTOYCOMA        reduce using rule 134 (asignacionInterface -> ID PUNTO ID IGUAL expresion .)
    FUNCTION        reduce using rule 134 (asignacionInterface -> ID PUNTO ID IGUAL expresion .)
    ID              reduce using rule 134 (asignacionInterface -> ID PUNTO ID IGUAL expresion .)
    LET             reduce using rule 134 (asignacionInterface -> ID PUNTO ID IGUAL expresion .)
    CONSOLE         reduce using rule 134 (asignacionInterface -> ID PUNTO ID IGUAL expresion .)
    IF              reduce using rule 134 (asignacionInterface -> ID PUNTO ID IGUAL expresion .)
    WHILE           reduce using rule 134 (asignacionInterface -> ID PUNTO ID IGUAL expresion .)
    FOR             reduce using rule 134 (asignacionInterface -> ID PUNTO ID IGUAL expresion .)
    RETURN          reduce using rule 134 (asignacionInterface -> ID PUNTO ID IGUAL expresion .)
    BREAK           reduce using rule 134 (asignacionInterface -> ID PUNTO ID IGUAL expresion .)
    CONTINUE        reduce using rule 134 (asignacionInterface -> ID PUNTO ID IGUAL expresion .)
    INTERFACE       reduce using rule 134 (asignacionInterface -> ID PUNTO ID IGUAL expresion .)
    DECREMENTO      reduce using rule 134 (asignacionInterface -> ID PUNTO ID IGUAL expresion .)
    INCREMENTO      reduce using rule 134 (asignacionInterface -> ID PUNTO ID IGUAL expresion .)
    $end            reduce using rule 134 (asignacionInterface -> ID PUNTO ID IGUAL expresion .)
    LLADER          reduce using rule 134 (asignacionInterface -> ID PUNTO ID IGUAL expresion .)
    PARDER          reduce using rule 134 (asignacionInterface -> ID PUNTO ID IGUAL expresion .)
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POR             shift and go to state 115
    DIVIDIDO        shift and go to state 116
    MODULO          shift and go to state 117
    POTENCIA        shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYORIGUAL      shift and go to state 121
    MENORIGUAL      shift and go to state 122
    IGUALACION      shift and go to state 123
    DISTINTO        shift and go to state 124
    AND             shift and go to state 125
    OR              shift and go to state 126


state 220

    (113) instruccion3 -> ID PUNTO PUSH PARIZQ expresion . PARDER
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    PARDER          shift and go to state 267
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POR             shift and go to state 115
    DIVIDIDO        shift and go to state 116
    MODULO          shift and go to state 117
    POTENCIA        shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYORIGUAL      shift and go to state 121
    MENORIGUAL      shift and go to state 122
    IGUALACION      shift and go to state 123
    DISTINTO        shift and go to state 124
    AND             shift and go to state 125
    OR              shift and go to state 126


state 221

    (66) lista_argumentos -> lista_argumentos COMA expresion .
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    PARDER          reduce using rule 66 (lista_argumentos -> lista_argumentos COMA expresion .)
    COMA            reduce using rule 66 (lista_argumentos -> lista_argumentos COMA expresion .)
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POR             shift and go to state 115
    DIVIDIDO        shift and go to state 116
    MODULO          shift and go to state 117
    POTENCIA        shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYORIGUAL      shift and go to state 121
    MENORIGUAL      shift and go to state 122
    IGUALACION      shift and go to state 123
    DISTINTO        shift and go to state 124
    AND             shift and go to state 125
    OR              shift and go to state 126


state 222

    (141) declaracionArray -> LET ID IGUAL CORIZQ CORDER .
    (152) arreglo -> CORIZQ CORDER .

  ! reduce/reduce conflict for PTOYCOMA resolved using rule 141 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 141 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for ID resolved using rule 141 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for LET resolved using rule 141 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for CONSOLE resolved using rule 141 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for IF resolved using rule 141 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for WHILE resolved using rule 141 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for FOR resolved using rule 141 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for RETURN resolved using rule 141 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for BREAK resolved using rule 141 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 141 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for INTERFACE resolved using rule 141 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for DECREMENTO resolved using rule 141 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for INCREMENTO resolved using rule 141 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for $end resolved using rule 141 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for LLADER resolved using rule 141 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
    PTOYCOMA        reduce using rule 141 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
    FUNCTION        reduce using rule 141 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
    ID              reduce using rule 141 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
    LET             reduce using rule 141 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
    CONSOLE         reduce using rule 141 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
    IF              reduce using rule 141 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
    WHILE           reduce using rule 141 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
    FOR             reduce using rule 141 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
    RETURN          reduce using rule 141 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
    BREAK           reduce using rule 141 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
    CONTINUE        reduce using rule 141 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
    INTERFACE       reduce using rule 141 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
    DECREMENTO      reduce using rule 141 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
    INCREMENTO      reduce using rule 141 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
    $end            reduce using rule 141 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
    LLADER          reduce using rule 141 (declaracionArray -> LET ID IGUAL CORIZQ CORDER .)
    MAS             reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    MENOS           reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    POR             reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    DIVIDIDO        reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    MODULO          reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    POTENCIA        reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    MAYOR           reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    MENOR           reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    MAYORIGUAL      reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    MENORIGUAL      reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    IGUALACION      reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    DISTINTO        reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    AND             reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    OR              reduce using rule 152 (arreglo -> CORIZQ CORDER .)

  ! PTOYCOMA        [ reduce using rule 152 (arreglo -> CORIZQ CORDER .) ]
  ! FUNCTION        [ reduce using rule 152 (arreglo -> CORIZQ CORDER .) ]
  ! ID              [ reduce using rule 152 (arreglo -> CORIZQ CORDER .) ]
  ! LET             [ reduce using rule 152 (arreglo -> CORIZQ CORDER .) ]
  ! CONSOLE         [ reduce using rule 152 (arreglo -> CORIZQ CORDER .) ]
  ! IF              [ reduce using rule 152 (arreglo -> CORIZQ CORDER .) ]
  ! WHILE           [ reduce using rule 152 (arreglo -> CORIZQ CORDER .) ]
  ! FOR             [ reduce using rule 152 (arreglo -> CORIZQ CORDER .) ]
  ! RETURN          [ reduce using rule 152 (arreglo -> CORIZQ CORDER .) ]
  ! BREAK           [ reduce using rule 152 (arreglo -> CORIZQ CORDER .) ]
  ! CONTINUE        [ reduce using rule 152 (arreglo -> CORIZQ CORDER .) ]
  ! INTERFACE       [ reduce using rule 152 (arreglo -> CORIZQ CORDER .) ]
  ! DECREMENTO      [ reduce using rule 152 (arreglo -> CORIZQ CORDER .) ]
  ! INCREMENTO      [ reduce using rule 152 (arreglo -> CORIZQ CORDER .) ]
  ! $end            [ reduce using rule 152 (arreglo -> CORIZQ CORDER .) ]
  ! LLADER          [ reduce using rule 152 (arreglo -> CORIZQ CORDER .) ]


state 223

    (143) declaracionArray -> LET ID IGUAL CORIZQ lista_exp . CORDER
    (151) arreglo -> CORIZQ lista_exp . CORDER
    (148) lista_exp -> lista_exp . COMA expresion

    CORDER          shift and go to state 268
    COMA            shift and go to state 209


state 224

    (127) declaracionInterface -> LET ID DOSPUNTOS ID IGUAL . expresion_interface
    (144) declaracionArray -> LET ID DOSPUNTOS ID IGUAL . CORIZQ CORDER
    (145) declaracionArray -> LET ID DOSPUNTOS ID IGUAL . CORIZQ lista_exp CORDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER

    CORIZQ          shift and go to state 270
    LLAIZQ          shift and go to state 89

    expresion_interface            shift and go to state 269

state 225

    (146) declaracionArray -> LET ID DOSPUNTOS ID CORIZQ . CORDER
    (147) declaracionArray -> LET ID DOSPUNTOS ID CORIZQ . CORDER IGUAL CORIZQ lista_exp CORDER

    CORDER          shift and go to state 271


state 226

    (28) declaracion -> LET ID DOSPUNTOS tipo IGUAL . expresion
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    expresion                      shift and go to state 272
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 227

    (138) declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ . CORDER
    (139) declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ . CORDER IGUAL CORIZQ lista_exp CORDER
    (140) declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ . CORDER IGUAL CORIZQ CORDER
    (142) declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ . CORDER IGUAL expresion

    CORDER          shift and go to state 273


state 228

    (135) declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR . tipo MAYOR IGUAL CORIZQ lista_exp CORDER
    (136) declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR . tipo MAYOR IGUAL CORIZQ CORDER
    (137) declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR . tipo MAYOR
    (68) tipo -> . NUMBER
    (69) tipo -> . STRING
    (70) tipo -> . BOOLEAN
    (71) tipo -> . ANY
    (72) tipo -> . NULL

    NUMBER          shift and go to state 165
    STRING          shift and go to state 166
    BOOLEAN         shift and go to state 167
    ANY             shift and go to state 168
    NULL            shift and go to state 169

    tipo                           shift and go to state 274

state 229

    (38) impresion -> CONSOLE PUNTO LOG PARIZQ expresion . PARDER
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion
    (67) lista_argumentos -> expresion .

  ! shift/reduce conflict for PARDER resolved as shift
    PARDER          shift and go to state 275
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POR             shift and go to state 115
    DIVIDIDO        shift and go to state 116
    MODULO          shift and go to state 117
    POTENCIA        shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYORIGUAL      shift and go to state 121
    MENORIGUAL      shift and go to state 122
    IGUALACION      shift and go to state 123
    DISTINTO        shift and go to state 124
    AND             shift and go to state 125
    OR              shift and go to state 126
    COMA            reduce using rule 67 (lista_argumentos -> expresion .)

  ! PARDER          [ reduce using rule 67 (lista_argumentos -> expresion .) ]


state 230

    (39) impresion -> CONSOLE PUNTO LOG PARIZQ lista_argumentos . PARDER
    (66) lista_argumentos -> lista_argumentos . COMA expresion

    PARDER          shift and go to state 276
    COMA            shift and go to state 157


state 231

    (40) condicional -> IF PARIZQ expresion PARDER bloque .
    (41) condicional -> IF PARIZQ expresion PARDER bloque . ELSE bloque
    (42) condicional -> IF PARIZQ expresion PARDER bloque . lista_elif
    (43) condicional -> IF PARIZQ expresion PARDER bloque . lista_elif ELSE bloque
    (44) lista_elif -> . lista_elif elseif
    (45) lista_elif -> . elseif
    (46) elseif -> . ELSE IF PARIZQ expresion PARDER bloque

    PTOYCOMA        reduce using rule 40 (condicional -> IF PARIZQ expresion PARDER bloque .)
    FUNCTION        reduce using rule 40 (condicional -> IF PARIZQ expresion PARDER bloque .)
    ID              reduce using rule 40 (condicional -> IF PARIZQ expresion PARDER bloque .)
    LET             reduce using rule 40 (condicional -> IF PARIZQ expresion PARDER bloque .)
    CONSOLE         reduce using rule 40 (condicional -> IF PARIZQ expresion PARDER bloque .)
    IF              reduce using rule 40 (condicional -> IF PARIZQ expresion PARDER bloque .)
    WHILE           reduce using rule 40 (condicional -> IF PARIZQ expresion PARDER bloque .)
    FOR             reduce using rule 40 (condicional -> IF PARIZQ expresion PARDER bloque .)
    RETURN          reduce using rule 40 (condicional -> IF PARIZQ expresion PARDER bloque .)
    BREAK           reduce using rule 40 (condicional -> IF PARIZQ expresion PARDER bloque .)
    CONTINUE        reduce using rule 40 (condicional -> IF PARIZQ expresion PARDER bloque .)
    INTERFACE       reduce using rule 40 (condicional -> IF PARIZQ expresion PARDER bloque .)
    DECREMENTO      reduce using rule 40 (condicional -> IF PARIZQ expresion PARDER bloque .)
    INCREMENTO      reduce using rule 40 (condicional -> IF PARIZQ expresion PARDER bloque .)
    $end            reduce using rule 40 (condicional -> IF PARIZQ expresion PARDER bloque .)
    LLADER          reduce using rule 40 (condicional -> IF PARIZQ expresion PARDER bloque .)
    ELSE            shift and go to state 277

    lista_elif                     shift and go to state 278
    elseif                         shift and go to state 279

state 232

    (47) ciclo_while -> WHILE PARIZQ expresion PARDER bloque .

    PTOYCOMA        reduce using rule 47 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    FUNCTION        reduce using rule 47 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    ID              reduce using rule 47 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    LET             reduce using rule 47 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    CONSOLE         reduce using rule 47 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    IF              reduce using rule 47 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    WHILE           reduce using rule 47 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    FOR             reduce using rule 47 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    RETURN          reduce using rule 47 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    BREAK           reduce using rule 47 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    CONTINUE        reduce using rule 47 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    INTERFACE       reduce using rule 47 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    DECREMENTO      reduce using rule 47 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    INCREMENTO      reduce using rule 47 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    $end            reduce using rule 47 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)
    LLADER          reduce using rule 47 (ciclo_while -> WHILE PARIZQ expresion PARDER bloque .)


state 233

    (48) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion . PTOYCOMA asignacion PARDER bloque
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    PTOYCOMA        shift and go to state 280
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POR             shift and go to state 115
    DIVIDIDO        shift and go to state 116
    MODULO          shift and go to state 117
    POTENCIA        shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYORIGUAL      shift and go to state 121
    MENORIGUAL      shift and go to state 122
    IGUALACION      shift and go to state 123
    DISTINTO        shift and go to state 124
    AND             shift and go to state 125
    OR              shift and go to state 126


state 234

    (49) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion . PTOYCOMA asignacion PARDER bloque
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    PTOYCOMA        shift and go to state 281
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POR             shift and go to state 115
    DIVIDIDO        shift and go to state 116
    MODULO          shift and go to state 117
    POTENCIA        shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYORIGUAL      shift and go to state 121
    MENORIGUAL      shift and go to state 122
    IGUALACION      shift and go to state 123
    DISTINTO        shift and go to state 124
    AND             shift and go to state 125
    OR              shift and go to state 126


state 235

    (50) ciclo_for_of -> FOR PARIZQ LET ID OF . expresion PARDER bloque
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    expresion                      shift and go to state 282
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 236

    (26) declaracion -> LET ID IGUAL . expresion
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    expresion                      shift and go to state 160
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 237

    (28) declaracion -> LET ID DOSPUNTOS . tipo IGUAL expresion
    (29) declaracion -> LET ID DOSPUNTOS . tipo
    (68) tipo -> . NUMBER
    (69) tipo -> . STRING
    (70) tipo -> . BOOLEAN
    (71) tipo -> . ANY
    (72) tipo -> . NULL

    NUMBER          shift and go to state 165
    STRING          shift and go to state 166
    BOOLEAN         shift and go to state 167
    ANY             shift and go to state 168
    NULL            shift and go to state 169

    tipo                           shift and go to state 283

state 238

    (114) casteo -> ID PUNTO TOSTRING PARIZQ . PARDER

    PARDER          shift and go to state 284


state 239

    (156) acceso_array_interface -> ID lista_acceso_array PUNTO ID .

    MAS             reduce using rule 156 (acceso_array_interface -> ID lista_acceso_array PUNTO ID .)
    MENOS           reduce using rule 156 (acceso_array_interface -> ID lista_acceso_array PUNTO ID .)
    POR             reduce using rule 156 (acceso_array_interface -> ID lista_acceso_array PUNTO ID .)
    DIVIDIDO        reduce using rule 156 (acceso_array_interface -> ID lista_acceso_array PUNTO ID .)
    MODULO          reduce using rule 156 (acceso_array_interface -> ID lista_acceso_array PUNTO ID .)
    POTENCIA        reduce using rule 156 (acceso_array_interface -> ID lista_acceso_array PUNTO ID .)
    MAYOR           reduce using rule 156 (acceso_array_interface -> ID lista_acceso_array PUNTO ID .)
    MENOR           reduce using rule 156 (acceso_array_interface -> ID lista_acceso_array PUNTO ID .)
    MAYORIGUAL      reduce using rule 156 (acceso_array_interface -> ID lista_acceso_array PUNTO ID .)
    MENORIGUAL      reduce using rule 156 (acceso_array_interface -> ID lista_acceso_array PUNTO ID .)
    IGUALACION      reduce using rule 156 (acceso_array_interface -> ID lista_acceso_array PUNTO ID .)
    DISTINTO        reduce using rule 156 (acceso_array_interface -> ID lista_acceso_array PUNTO ID .)
    AND             reduce using rule 156 (acceso_array_interface -> ID lista_acceso_array PUNTO ID .)
    OR              reduce using rule 156 (acceso_array_interface -> ID lista_acceso_array PUNTO ID .)
    PTOYCOMA        reduce using rule 156 (acceso_array_interface -> ID lista_acceso_array PUNTO ID .)
    FUNCTION        reduce using rule 156 (acceso_array_interface -> ID lista_acceso_array PUNTO ID .)
    ID              reduce using rule 156 (acceso_array_interface -> ID lista_acceso_array PUNTO ID .)
    LET             reduce using rule 156 (acceso_array_interface -> ID lista_acceso_array PUNTO ID .)
    CONSOLE         reduce using rule 156 (acceso_array_interface -> ID lista_acceso_array PUNTO ID .)
    IF              reduce using rule 156 (acceso_array_interface -> ID lista_acceso_array PUNTO ID .)
    WHILE           reduce using rule 156 (acceso_array_interface -> ID lista_acceso_array PUNTO ID .)
    FOR             reduce using rule 156 (acceso_array_interface -> ID lista_acceso_array PUNTO ID .)
    RETURN          reduce using rule 156 (acceso_array_interface -> ID lista_acceso_array PUNTO ID .)
    BREAK           reduce using rule 156 (acceso_array_interface -> ID lista_acceso_array PUNTO ID .)
    CONTINUE        reduce using rule 156 (acceso_array_interface -> ID lista_acceso_array PUNTO ID .)
    INTERFACE       reduce using rule 156 (acceso_array_interface -> ID lista_acceso_array PUNTO ID .)
    DECREMENTO      reduce using rule 156 (acceso_array_interface -> ID lista_acceso_array PUNTO ID .)
    INCREMENTO      reduce using rule 156 (acceso_array_interface -> ID lista_acceso_array PUNTO ID .)
    $end            reduce using rule 156 (acceso_array_interface -> ID lista_acceso_array PUNTO ID .)
    LLADER          reduce using rule 156 (acceso_array_interface -> ID lista_acceso_array PUNTO ID .)
    PARDER          reduce using rule 156 (acceso_array_interface -> ID lista_acceso_array PUNTO ID .)
    COMA            reduce using rule 156 (acceso_array_interface -> ID lista_acceso_array PUNTO ID .)
    CORDER          reduce using rule 156 (acceso_array_interface -> ID lista_acceso_array PUNTO ID .)


state 240

    (161) expresion -> TYPEOF PARIZQ expresion PARDER .

    MAS             reduce using rule 161 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    MENOS           reduce using rule 161 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    POR             reduce using rule 161 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 161 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    MODULO          reduce using rule 161 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 161 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 161 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    MENOR           reduce using rule 161 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 161 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 161 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    IGUALACION      reduce using rule 161 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    DISTINTO        reduce using rule 161 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    AND             reduce using rule 161 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    OR              reduce using rule 161 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    PTOYCOMA        reduce using rule 161 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    FUNCTION        reduce using rule 161 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    ID              reduce using rule 161 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    LET             reduce using rule 161 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 161 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    IF              reduce using rule 161 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    WHILE           reduce using rule 161 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    FOR             reduce using rule 161 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    RETURN          reduce using rule 161 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    BREAK           reduce using rule 161 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 161 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    INTERFACE       reduce using rule 161 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    DECREMENTO      reduce using rule 161 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    INCREMENTO      reduce using rule 161 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    $end            reduce using rule 161 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    LLADER          reduce using rule 161 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    PARDER          reduce using rule 161 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    COMA            reduce using rule 161 (expresion -> TYPEOF PARIZQ expresion PARDER .)
    CORDER          reduce using rule 161 (expresion -> TYPEOF PARIZQ expresion PARDER .)


state 241

    (162) expresion -> LENGTH PARIZQ expresion PARDER .

    MAS             reduce using rule 162 (expresion -> LENGTH PARIZQ expresion PARDER .)
    MENOS           reduce using rule 162 (expresion -> LENGTH PARIZQ expresion PARDER .)
    POR             reduce using rule 162 (expresion -> LENGTH PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 162 (expresion -> LENGTH PARIZQ expresion PARDER .)
    MODULO          reduce using rule 162 (expresion -> LENGTH PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 162 (expresion -> LENGTH PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 162 (expresion -> LENGTH PARIZQ expresion PARDER .)
    MENOR           reduce using rule 162 (expresion -> LENGTH PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 162 (expresion -> LENGTH PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 162 (expresion -> LENGTH PARIZQ expresion PARDER .)
    IGUALACION      reduce using rule 162 (expresion -> LENGTH PARIZQ expresion PARDER .)
    DISTINTO        reduce using rule 162 (expresion -> LENGTH PARIZQ expresion PARDER .)
    AND             reduce using rule 162 (expresion -> LENGTH PARIZQ expresion PARDER .)
    OR              reduce using rule 162 (expresion -> LENGTH PARIZQ expresion PARDER .)
    PTOYCOMA        reduce using rule 162 (expresion -> LENGTH PARIZQ expresion PARDER .)
    FUNCTION        reduce using rule 162 (expresion -> LENGTH PARIZQ expresion PARDER .)
    ID              reduce using rule 162 (expresion -> LENGTH PARIZQ expresion PARDER .)
    LET             reduce using rule 162 (expresion -> LENGTH PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 162 (expresion -> LENGTH PARIZQ expresion PARDER .)
    IF              reduce using rule 162 (expresion -> LENGTH PARIZQ expresion PARDER .)
    WHILE           reduce using rule 162 (expresion -> LENGTH PARIZQ expresion PARDER .)
    FOR             reduce using rule 162 (expresion -> LENGTH PARIZQ expresion PARDER .)
    RETURN          reduce using rule 162 (expresion -> LENGTH PARIZQ expresion PARDER .)
    BREAK           reduce using rule 162 (expresion -> LENGTH PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 162 (expresion -> LENGTH PARIZQ expresion PARDER .)
    INTERFACE       reduce using rule 162 (expresion -> LENGTH PARIZQ expresion PARDER .)
    DECREMENTO      reduce using rule 162 (expresion -> LENGTH PARIZQ expresion PARDER .)
    INCREMENTO      reduce using rule 162 (expresion -> LENGTH PARIZQ expresion PARDER .)
    $end            reduce using rule 162 (expresion -> LENGTH PARIZQ expresion PARDER .)
    LLADER          reduce using rule 162 (expresion -> LENGTH PARIZQ expresion PARDER .)
    PARDER          reduce using rule 162 (expresion -> LENGTH PARIZQ expresion PARDER .)
    COMA            reduce using rule 162 (expresion -> LENGTH PARIZQ expresion PARDER .)
    CORDER          reduce using rule 162 (expresion -> LENGTH PARIZQ expresion PARDER .)


state 242

    (115) casteo -> CAST_STRING PARIZQ expresion PARDER .

    MAS             reduce using rule 115 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    MENOS           reduce using rule 115 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    POR             reduce using rule 115 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 115 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    MODULO          reduce using rule 115 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 115 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 115 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    MENOR           reduce using rule 115 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 115 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 115 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    IGUALACION      reduce using rule 115 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    DISTINTO        reduce using rule 115 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    AND             reduce using rule 115 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    OR              reduce using rule 115 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    PTOYCOMA        reduce using rule 115 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    FUNCTION        reduce using rule 115 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    ID              reduce using rule 115 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    LET             reduce using rule 115 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 115 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    IF              reduce using rule 115 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    WHILE           reduce using rule 115 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    FOR             reduce using rule 115 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    RETURN          reduce using rule 115 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    BREAK           reduce using rule 115 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 115 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    INTERFACE       reduce using rule 115 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    DECREMENTO      reduce using rule 115 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    INCREMENTO      reduce using rule 115 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    $end            reduce using rule 115 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    LLADER          reduce using rule 115 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    PARDER          reduce using rule 115 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    COMA            reduce using rule 115 (casteo -> CAST_STRING PARIZQ expresion PARDER .)
    CORDER          reduce using rule 115 (casteo -> CAST_STRING PARIZQ expresion PARDER .)


state 243

    (116) casteo -> CAST_NUMBER PARIZQ expresion PARDER .

    MAS             reduce using rule 116 (casteo -> CAST_NUMBER PARIZQ expresion PARDER .)
    MENOS           reduce using rule 116 (casteo -> CAST_NUMBER PARIZQ expresion PARDER .)
    POR             reduce using rule 116 (casteo -> CAST_NUMBER PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 116 (casteo -> CAST_NUMBER PARIZQ expresion PARDER .)
    MODULO          reduce using rule 116 (casteo -> CAST_NUMBER PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 116 (casteo -> CAST_NUMBER PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 116 (casteo -> CAST_NUMBER PARIZQ expresion PARDER .)
    MENOR           reduce using rule 116 (casteo -> CAST_NUMBER PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 116 (casteo -> CAST_NUMBER PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 116 (casteo -> CAST_NUMBER PARIZQ expresion PARDER .)
    IGUALACION      reduce using rule 116 (casteo -> CAST_NUMBER PARIZQ expresion PARDER .)
    DISTINTO        reduce using rule 116 (casteo -> CAST_NUMBER PARIZQ expresion PARDER .)
    AND             reduce using rule 116 (casteo -> CAST_NUMBER PARIZQ expresion PARDER .)
    OR              reduce using rule 116 (casteo -> CAST_NUMBER PARIZQ expresion PARDER .)
    PTOYCOMA        reduce using rule 116 (casteo -> CAST_NUMBER PARIZQ expresion PARDER .)
    FUNCTION        reduce using rule 116 (casteo -> CAST_NUMBER PARIZQ expresion PARDER .)
    ID              reduce using rule 116 (casteo -> CAST_NUMBER PARIZQ expresion PARDER .)
    LET             reduce using rule 116 (casteo -> CAST_NUMBER PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 116 (casteo -> CAST_NUMBER PARIZQ expresion PARDER .)
    IF              reduce using rule 116 (casteo -> CAST_NUMBER PARIZQ expresion PARDER .)
    WHILE           reduce using rule 116 (casteo -> CAST_NUMBER PARIZQ expresion PARDER .)
    FOR             reduce using rule 116 (casteo -> CAST_NUMBER PARIZQ expresion PARDER .)
    RETURN          reduce using rule 116 (casteo -> CAST_NUMBER PARIZQ expresion PARDER .)
    BREAK           reduce using rule 116 (casteo -> CAST_NUMBER PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 116 (casteo -> CAST_NUMBER PARIZQ expresion PARDER .)
    INTERFACE       reduce using rule 116 (casteo -> CAST_NUMBER PARIZQ expresion PARDER .)
    DECREMENTO      reduce using rule 116 (casteo -> CAST_NUMBER PARIZQ expresion PARDER .)
    INCREMENTO      reduce using rule 116 (casteo -> CAST_NUMBER PARIZQ expresion PARDER .)
    $end            reduce using rule 116 (casteo -> CAST_NUMBER PARIZQ expresion PARDER .)
    LLADER          reduce using rule 116 (casteo -> CAST_NUMBER PARIZQ expresion PARDER .)
    PARDER          reduce using rule 116 (casteo -> CAST_NUMBER PARIZQ expresion PARDER .)
    COMA            reduce using rule 116 (casteo -> CAST_NUMBER PARIZQ expresion PARDER .)
    CORDER          reduce using rule 116 (casteo -> CAST_NUMBER PARIZQ expresion PARDER .)


state 244

    (107) aproximacion -> TOFIXED PARIZQ expresion COMA . expresion PARDER
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    expresion                      shift and go to state 285
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 245

    (108) exponencial -> TOEXPONENTIAL PARIZQ expresion COMA . expresion PARDER
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    expresion                      shift and go to state 286
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 246

    (111) separador -> SPLIT PARIZQ expresion COMA . expresion PARDER
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    expresion                      shift and go to state 287
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 247

    (112) concatenacion -> CONCAT PARIZQ expresion COMA . expresion PARDER
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    expresion                      shift and go to state 288
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 248

    (109) to_mayusculas -> TOUPPERCASE PARIZQ expresion PARDER .

    MAS             reduce using rule 109 (to_mayusculas -> TOUPPERCASE PARIZQ expresion PARDER .)
    MENOS           reduce using rule 109 (to_mayusculas -> TOUPPERCASE PARIZQ expresion PARDER .)
    POR             reduce using rule 109 (to_mayusculas -> TOUPPERCASE PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 109 (to_mayusculas -> TOUPPERCASE PARIZQ expresion PARDER .)
    MODULO          reduce using rule 109 (to_mayusculas -> TOUPPERCASE PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 109 (to_mayusculas -> TOUPPERCASE PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 109 (to_mayusculas -> TOUPPERCASE PARIZQ expresion PARDER .)
    MENOR           reduce using rule 109 (to_mayusculas -> TOUPPERCASE PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 109 (to_mayusculas -> TOUPPERCASE PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 109 (to_mayusculas -> TOUPPERCASE PARIZQ expresion PARDER .)
    IGUALACION      reduce using rule 109 (to_mayusculas -> TOUPPERCASE PARIZQ expresion PARDER .)
    DISTINTO        reduce using rule 109 (to_mayusculas -> TOUPPERCASE PARIZQ expresion PARDER .)
    AND             reduce using rule 109 (to_mayusculas -> TOUPPERCASE PARIZQ expresion PARDER .)
    OR              reduce using rule 109 (to_mayusculas -> TOUPPERCASE PARIZQ expresion PARDER .)
    PTOYCOMA        reduce using rule 109 (to_mayusculas -> TOUPPERCASE PARIZQ expresion PARDER .)
    FUNCTION        reduce using rule 109 (to_mayusculas -> TOUPPERCASE PARIZQ expresion PARDER .)
    ID              reduce using rule 109 (to_mayusculas -> TOUPPERCASE PARIZQ expresion PARDER .)
    LET             reduce using rule 109 (to_mayusculas -> TOUPPERCASE PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 109 (to_mayusculas -> TOUPPERCASE PARIZQ expresion PARDER .)
    IF              reduce using rule 109 (to_mayusculas -> TOUPPERCASE PARIZQ expresion PARDER .)
    WHILE           reduce using rule 109 (to_mayusculas -> TOUPPERCASE PARIZQ expresion PARDER .)
    FOR             reduce using rule 109 (to_mayusculas -> TOUPPERCASE PARIZQ expresion PARDER .)
    RETURN          reduce using rule 109 (to_mayusculas -> TOUPPERCASE PARIZQ expresion PARDER .)
    BREAK           reduce using rule 109 (to_mayusculas -> TOUPPERCASE PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 109 (to_mayusculas -> TOUPPERCASE PARIZQ expresion PARDER .)
    INTERFACE       reduce using rule 109 (to_mayusculas -> TOUPPERCASE PARIZQ expresion PARDER .)
    DECREMENTO      reduce using rule 109 (to_mayusculas -> TOUPPERCASE PARIZQ expresion PARDER .)
    INCREMENTO      reduce using rule 109 (to_mayusculas -> TOUPPERCASE PARIZQ expresion PARDER .)
    $end            reduce using rule 109 (to_mayusculas -> TOUPPERCASE PARIZQ expresion PARDER .)
    LLADER          reduce using rule 109 (to_mayusculas -> TOUPPERCASE PARIZQ expresion PARDER .)
    PARDER          reduce using rule 109 (to_mayusculas -> TOUPPERCASE PARIZQ expresion PARDER .)
    COMA            reduce using rule 109 (to_mayusculas -> TOUPPERCASE PARIZQ expresion PARDER .)
    CORDER          reduce using rule 109 (to_mayusculas -> TOUPPERCASE PARIZQ expresion PARDER .)


state 249

    (110) to_minusculas -> TOLOWERCASE PARIZQ expresion PARDER .

    MAS             reduce using rule 110 (to_minusculas -> TOLOWERCASE PARIZQ expresion PARDER .)
    MENOS           reduce using rule 110 (to_minusculas -> TOLOWERCASE PARIZQ expresion PARDER .)
    POR             reduce using rule 110 (to_minusculas -> TOLOWERCASE PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 110 (to_minusculas -> TOLOWERCASE PARIZQ expresion PARDER .)
    MODULO          reduce using rule 110 (to_minusculas -> TOLOWERCASE PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 110 (to_minusculas -> TOLOWERCASE PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 110 (to_minusculas -> TOLOWERCASE PARIZQ expresion PARDER .)
    MENOR           reduce using rule 110 (to_minusculas -> TOLOWERCASE PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 110 (to_minusculas -> TOLOWERCASE PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 110 (to_minusculas -> TOLOWERCASE PARIZQ expresion PARDER .)
    IGUALACION      reduce using rule 110 (to_minusculas -> TOLOWERCASE PARIZQ expresion PARDER .)
    DISTINTO        reduce using rule 110 (to_minusculas -> TOLOWERCASE PARIZQ expresion PARDER .)
    AND             reduce using rule 110 (to_minusculas -> TOLOWERCASE PARIZQ expresion PARDER .)
    OR              reduce using rule 110 (to_minusculas -> TOLOWERCASE PARIZQ expresion PARDER .)
    PTOYCOMA        reduce using rule 110 (to_minusculas -> TOLOWERCASE PARIZQ expresion PARDER .)
    FUNCTION        reduce using rule 110 (to_minusculas -> TOLOWERCASE PARIZQ expresion PARDER .)
    ID              reduce using rule 110 (to_minusculas -> TOLOWERCASE PARIZQ expresion PARDER .)
    LET             reduce using rule 110 (to_minusculas -> TOLOWERCASE PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 110 (to_minusculas -> TOLOWERCASE PARIZQ expresion PARDER .)
    IF              reduce using rule 110 (to_minusculas -> TOLOWERCASE PARIZQ expresion PARDER .)
    WHILE           reduce using rule 110 (to_minusculas -> TOLOWERCASE PARIZQ expresion PARDER .)
    FOR             reduce using rule 110 (to_minusculas -> TOLOWERCASE PARIZQ expresion PARDER .)
    RETURN          reduce using rule 110 (to_minusculas -> TOLOWERCASE PARIZQ expresion PARDER .)
    BREAK           reduce using rule 110 (to_minusculas -> TOLOWERCASE PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 110 (to_minusculas -> TOLOWERCASE PARIZQ expresion PARDER .)
    INTERFACE       reduce using rule 110 (to_minusculas -> TOLOWERCASE PARIZQ expresion PARDER .)
    DECREMENTO      reduce using rule 110 (to_minusculas -> TOLOWERCASE PARIZQ expresion PARDER .)
    INCREMENTO      reduce using rule 110 (to_minusculas -> TOLOWERCASE PARIZQ expresion PARDER .)
    $end            reduce using rule 110 (to_minusculas -> TOLOWERCASE PARIZQ expresion PARDER .)
    LLADER          reduce using rule 110 (to_minusculas -> TOLOWERCASE PARIZQ expresion PARDER .)
    PARDER          reduce using rule 110 (to_minusculas -> TOLOWERCASE PARIZQ expresion PARDER .)
    COMA            reduce using rule 110 (to_minusculas -> TOLOWERCASE PARIZQ expresion PARDER .)
    CORDER          reduce using rule 110 (to_minusculas -> TOLOWERCASE PARIZQ expresion PARDER .)


state 250

    (130) lista_d -> lista_d COMA parDecl .

    LLADER          reduce using rule 130 (lista_d -> lista_d COMA parDecl .)
    COMA            reduce using rule 130 (lista_d -> lista_d COMA parDecl .)


state 251

    (132) parDecl -> ID DOSPUNTOS expresion .
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    LLADER          reduce using rule 132 (parDecl -> ID DOSPUNTOS expresion .)
    COMA            reduce using rule 132 (parDecl -> ID DOSPUNTOS expresion .)
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POR             shift and go to state 115
    DIVIDIDO        shift and go to state 116
    MODULO          shift and go to state 117
    POTENCIA        shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYORIGUAL      shift and go to state 121
    MENORIGUAL      shift and go to state 122
    IGUALACION      shift and go to state 123
    DISTINTO        shift and go to state 124
    AND             shift and go to state 125
    OR              shift and go to state 126


state 252

    (148) lista_exp -> lista_exp COMA expresion .
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    CORDER          reduce using rule 148 (lista_exp -> lista_exp COMA expresion .)
    COMA            reduce using rule 148 (lista_exp -> lista_exp COMA expresion .)
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POR             shift and go to state 115
    DIVIDIDO        shift and go to state 116
    MODULO          shift and go to state 117
    POTENCIA        shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYORIGUAL      shift and go to state 121
    MENORIGUAL      shift and go to state 122
    IGUALACION      shift and go to state 123
    DISTINTO        shift and go to state 124
    AND             shift and go to state 125
    OR              shift and go to state 126


state 253

    (122) bloquestruct -> LLAIZQ lista_params_struct LLADER .

    PTOYCOMA        reduce using rule 122 (bloquestruct -> LLAIZQ lista_params_struct LLADER .)
    FUNCTION        reduce using rule 122 (bloquestruct -> LLAIZQ lista_params_struct LLADER .)
    ID              reduce using rule 122 (bloquestruct -> LLAIZQ lista_params_struct LLADER .)
    LET             reduce using rule 122 (bloquestruct -> LLAIZQ lista_params_struct LLADER .)
    CONSOLE         reduce using rule 122 (bloquestruct -> LLAIZQ lista_params_struct LLADER .)
    IF              reduce using rule 122 (bloquestruct -> LLAIZQ lista_params_struct LLADER .)
    WHILE           reduce using rule 122 (bloquestruct -> LLAIZQ lista_params_struct LLADER .)
    FOR             reduce using rule 122 (bloquestruct -> LLAIZQ lista_params_struct LLADER .)
    RETURN          reduce using rule 122 (bloquestruct -> LLAIZQ lista_params_struct LLADER .)
    BREAK           reduce using rule 122 (bloquestruct -> LLAIZQ lista_params_struct LLADER .)
    CONTINUE        reduce using rule 122 (bloquestruct -> LLAIZQ lista_params_struct LLADER .)
    INTERFACE       reduce using rule 122 (bloquestruct -> LLAIZQ lista_params_struct LLADER .)
    DECREMENTO      reduce using rule 122 (bloquestruct -> LLAIZQ lista_params_struct LLADER .)
    INCREMENTO      reduce using rule 122 (bloquestruct -> LLAIZQ lista_params_struct LLADER .)
    $end            reduce using rule 122 (bloquestruct -> LLAIZQ lista_params_struct LLADER .)
    LLADER          reduce using rule 122 (bloquestruct -> LLAIZQ lista_params_struct LLADER .)


state 254

    (123) lista_params_struct -> lista_params_struct param_struct .

    LLADER          reduce using rule 123 (lista_params_struct -> lista_params_struct param_struct .)
    ID              reduce using rule 123 (lista_params_struct -> lista_params_struct param_struct .)


state 255

    (125) param_struct -> ID DOSPUNTOS . tipo PTOYCOMA
    (68) tipo -> . NUMBER
    (69) tipo -> . STRING
    (70) tipo -> . BOOLEAN
    (71) tipo -> . ANY
    (72) tipo -> . NULL

    NUMBER          shift and go to state 165
    STRING          shift and go to state 166
    BOOLEAN         shift and go to state 167
    ANY             shift and go to state 168
    NULL            shift and go to state 169

    tipo                           shift and go to state 289

state 256

    (126) param_struct -> ID PTOYCOMA .

    LLADER          reduce using rule 126 (param_struct -> ID PTOYCOMA .)
    ID              reduce using rule 126 (param_struct -> ID PTOYCOMA .)


state 257

    (61) parametro -> ID DOSPUNTOS ID .

    PARDER          reduce using rule 61 (parametro -> ID DOSPUNTOS ID .)
    COMA            reduce using rule 61 (parametro -> ID DOSPUNTOS ID .)


state 258

    (60) parametro -> ID DOSPUNTOS tipo .
    (62) parametro -> ID DOSPUNTOS tipo . CORIZQ CORDER

    PARDER          reduce using rule 60 (parametro -> ID DOSPUNTOS tipo .)
    COMA            reduce using rule 60 (parametro -> ID DOSPUNTOS tipo .)
    CORIZQ          shift and go to state 290


state 259

    (51) funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .

    FUNCTION        reduce using rule 51 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .)
    ID              reduce using rule 51 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .)
    LET             reduce using rule 51 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .)
    CONSOLE         reduce using rule 51 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .)
    IF              reduce using rule 51 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .)
    WHILE           reduce using rule 51 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .)
    FOR             reduce using rule 51 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .)
    RETURN          reduce using rule 51 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .)
    BREAK           reduce using rule 51 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .)
    CONTINUE        reduce using rule 51 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .)
    INTERFACE       reduce using rule 51 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .)
    DECREMENTO      reduce using rule 51 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .)
    INCREMENTO      reduce using rule 51 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .)
    $end            reduce using rule 51 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER bloque .)


state 260

    (52) funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS . tipo bloque
    (56) funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS . ID bloque
    (57) funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS . tipo CORIZQ CORDER bloque
    (68) tipo -> . NUMBER
    (69) tipo -> . STRING
    (70) tipo -> . BOOLEAN
    (71) tipo -> . ANY
    (72) tipo -> . NULL

    ID              shift and go to state 291
    NUMBER          shift and go to state 165
    STRING          shift and go to state 166
    BOOLEAN         shift and go to state 167
    ANY             shift and go to state 168
    NULL            shift and go to state 169

    tipo                           shift and go to state 292

state 261

    (58) lista_parametros -> lista_parametros COMA parametro .

    PARDER          reduce using rule 58 (lista_parametros -> lista_parametros COMA parametro .)
    COMA            reduce using rule 58 (lista_parametros -> lista_parametros COMA parametro .)


state 262

    (55) funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS ID . bloque
    (9) bloque -> . LLAIZQ instruccion4 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 218

    bloque                         shift and go to state 293

state 263

    (54) funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS tipo . bloque
    (9) bloque -> . LLAIZQ instruccion4 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 218

    bloque                         shift and go to state 294

state 264

    (9) bloque -> LLAIZQ instruccion4 . LLADER
    (7) instruccion4 -> instruccion4 . instruccion2
    (5) instruccion2 -> . instruccion3 PTOYCOMA
    (6) instruccion2 -> . instruccion3
    (11) instruccion3 -> . declaracion
    (12) instruccion3 -> . asignacion
    (13) instruccion3 -> . impresion
    (14) instruccion3 -> . condicional
    (15) instruccion3 -> . ciclo_while
    (16) instruccion3 -> . ciclo_for
    (17) instruccion3 -> . ciclo_for_of
    (18) instruccion3 -> . llamada_funcion
    (19) instruccion3 -> . return
    (20) instruccion3 -> . break
    (21) instruccion3 -> . continue
    (22) instruccion3 -> . instanciar
    (23) instruccion3 -> . declaracionInterface
    (24) instruccion3 -> . declaracionArray
    (25) instruccion3 -> . asignacion_array
    (113) instruccion3 -> . ID PUNTO PUSH PARIZQ expresion PARDER
    (26) declaracion -> . LET ID IGUAL expresion
    (27) declaracion -> . LET ID
    (28) declaracion -> . LET ID DOSPUNTOS tipo IGUAL expresion
    (29) declaracion -> . LET ID DOSPUNTOS tipo
    (30) asignacion -> . ID IGUAL expresion
    (31) asignacion -> . dec
    (32) asignacion -> . inc
    (33) asignacion -> . asignacionInterface
    (38) impresion -> . CONSOLE PUNTO LOG PARIZQ expresion PARDER
    (39) impresion -> . CONSOLE PUNTO LOG PARIZQ lista_argumentos PARDER
    (40) condicional -> . IF PARIZQ expresion PARDER bloque
    (41) condicional -> . IF PARIZQ expresion PARDER bloque ELSE bloque
    (42) condicional -> . IF PARIZQ expresion PARDER bloque lista_elif
    (43) condicional -> . IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque
    (47) ciclo_while -> . WHILE PARIZQ expresion PARDER bloque
    (48) ciclo_for -> . FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (49) ciclo_for -> . FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque
    (50) ciclo_for_of -> . FOR PARIZQ LET ID OF expresion PARDER bloque
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (117) return -> . RETURN expresion
    (118) return -> . RETURN
    (119) break -> . BREAK
    (120) continue -> . CONTINUE
    (121) instanciar -> . INTERFACE ID bloquestruct
    (127) declaracionInterface -> . LET ID DOSPUNTOS ID IGUAL expresion_interface
    (135) declaracionArray -> . LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER
    (136) declaracionArray -> . LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER
    (137) declaracionArray -> . LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR
    (138) declaracionArray -> . LET ID DOSPUNTOS tipo CORIZQ CORDER
    (139) declaracionArray -> . LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER
    (140) declaracionArray -> . LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER
    (141) declaracionArray -> . LET ID IGUAL CORIZQ CORDER
    (142) declaracionArray -> . LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion
    (143) declaracionArray -> . LET ID IGUAL CORIZQ lista_exp CORDER
    (144) declaracionArray -> . LET ID DOSPUNTOS ID IGUAL CORIZQ CORDER
    (145) declaracionArray -> . LET ID DOSPUNTOS ID IGUAL CORIZQ lista_exp CORDER
    (146) declaracionArray -> . LET ID DOSPUNTOS ID CORIZQ CORDER
    (147) declaracionArray -> . LET ID DOSPUNTOS ID CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER
    (160) asignacion_array -> . ID lista_acceso_array IGUAL expresion
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (134) asignacionInterface -> . ID PUNTO ID IGUAL expresion

    LLADER          shift and go to state 295
    ID              shift and go to state 7
    LET             shift and go to state 23
    CONSOLE         shift and go to state 27
    IF              shift and go to state 28
    WHILE           shift and go to state 29
    FOR             shift and go to state 30
    RETURN          shift and go to state 31
    BREAK           shift and go to state 32
    CONTINUE        shift and go to state 33
    INTERFACE       shift and go to state 34
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36

    instruccion2                   shift and go to state 296
    instruccion3                   shift and go to state 5
    declaracion                    shift and go to state 8
    asignacion                     shift and go to state 9
    impresion                      shift and go to state 10
    condicional                    shift and go to state 11
    ciclo_while                    shift and go to state 12
    ciclo_for                      shift and go to state 13
    ciclo_for_of                   shift and go to state 14
    llamada_funcion                shift and go to state 15
    return                         shift and go to state 16
    break                          shift and go to state 17
    continue                       shift and go to state 18
    instanciar                     shift and go to state 19
    declaracionInterface           shift and go to state 20
    declaracionArray               shift and go to state 21
    asignacion_array               shift and go to state 22
    dec                            shift and go to state 24
    inc                            shift and go to state 25
    asignacionInterface            shift and go to state 26

state 265

    (10) bloque -> LLAIZQ LLADER .

    FUNCTION        reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    ID              reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    LET             reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    CONSOLE         reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    IF              reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    WHILE           reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    FOR             reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    RETURN          reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    BREAK           reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    CONTINUE        reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    INTERFACE       reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    DECREMENTO      reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    INCREMENTO      reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    $end            reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    ELSE            reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    PTOYCOMA        reduce using rule 10 (bloque -> LLAIZQ LLADER .)
    LLADER          reduce using rule 10 (bloque -> LLAIZQ LLADER .)


state 266

    (8) instruccion4 -> instruccion2 .

    LLADER          reduce using rule 8 (instruccion4 -> instruccion2 .)
    ID              reduce using rule 8 (instruccion4 -> instruccion2 .)
    LET             reduce using rule 8 (instruccion4 -> instruccion2 .)
    CONSOLE         reduce using rule 8 (instruccion4 -> instruccion2 .)
    IF              reduce using rule 8 (instruccion4 -> instruccion2 .)
    WHILE           reduce using rule 8 (instruccion4 -> instruccion2 .)
    FOR             reduce using rule 8 (instruccion4 -> instruccion2 .)
    RETURN          reduce using rule 8 (instruccion4 -> instruccion2 .)
    BREAK           reduce using rule 8 (instruccion4 -> instruccion2 .)
    CONTINUE        reduce using rule 8 (instruccion4 -> instruccion2 .)
    INTERFACE       reduce using rule 8 (instruccion4 -> instruccion2 .)
    DECREMENTO      reduce using rule 8 (instruccion4 -> instruccion2 .)
    INCREMENTO      reduce using rule 8 (instruccion4 -> instruccion2 .)


state 267

    (113) instruccion3 -> ID PUNTO PUSH PARIZQ expresion PARDER .

    PTOYCOMA        reduce using rule 113 (instruccion3 -> ID PUNTO PUSH PARIZQ expresion PARDER .)
    FUNCTION        reduce using rule 113 (instruccion3 -> ID PUNTO PUSH PARIZQ expresion PARDER .)
    ID              reduce using rule 113 (instruccion3 -> ID PUNTO PUSH PARIZQ expresion PARDER .)
    LET             reduce using rule 113 (instruccion3 -> ID PUNTO PUSH PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 113 (instruccion3 -> ID PUNTO PUSH PARIZQ expresion PARDER .)
    IF              reduce using rule 113 (instruccion3 -> ID PUNTO PUSH PARIZQ expresion PARDER .)
    WHILE           reduce using rule 113 (instruccion3 -> ID PUNTO PUSH PARIZQ expresion PARDER .)
    FOR             reduce using rule 113 (instruccion3 -> ID PUNTO PUSH PARIZQ expresion PARDER .)
    RETURN          reduce using rule 113 (instruccion3 -> ID PUNTO PUSH PARIZQ expresion PARDER .)
    BREAK           reduce using rule 113 (instruccion3 -> ID PUNTO PUSH PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 113 (instruccion3 -> ID PUNTO PUSH PARIZQ expresion PARDER .)
    INTERFACE       reduce using rule 113 (instruccion3 -> ID PUNTO PUSH PARIZQ expresion PARDER .)
    DECREMENTO      reduce using rule 113 (instruccion3 -> ID PUNTO PUSH PARIZQ expresion PARDER .)
    INCREMENTO      reduce using rule 113 (instruccion3 -> ID PUNTO PUSH PARIZQ expresion PARDER .)
    $end            reduce using rule 113 (instruccion3 -> ID PUNTO PUSH PARIZQ expresion PARDER .)
    LLADER          reduce using rule 113 (instruccion3 -> ID PUNTO PUSH PARIZQ expresion PARDER .)


state 268

    (143) declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .
    (151) arreglo -> CORIZQ lista_exp CORDER .

  ! reduce/reduce conflict for PTOYCOMA resolved using rule 143 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 143 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for ID resolved using rule 143 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for LET resolved using rule 143 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for CONSOLE resolved using rule 143 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for IF resolved using rule 143 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for WHILE resolved using rule 143 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for FOR resolved using rule 143 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for RETURN resolved using rule 143 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for BREAK resolved using rule 143 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 143 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for INTERFACE resolved using rule 143 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for DECREMENTO resolved using rule 143 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for INCREMENTO resolved using rule 143 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for $end resolved using rule 143 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for LLADER resolved using rule 143 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
    PTOYCOMA        reduce using rule 143 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
    FUNCTION        reduce using rule 143 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
    ID              reduce using rule 143 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
    LET             reduce using rule 143 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
    CONSOLE         reduce using rule 143 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
    IF              reduce using rule 143 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
    WHILE           reduce using rule 143 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
    FOR             reduce using rule 143 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
    RETURN          reduce using rule 143 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
    BREAK           reduce using rule 143 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
    CONTINUE        reduce using rule 143 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
    INTERFACE       reduce using rule 143 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
    DECREMENTO      reduce using rule 143 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
    INCREMENTO      reduce using rule 143 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
    $end            reduce using rule 143 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
    LLADER          reduce using rule 143 (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER .)
    MAS             reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    MENOS           reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    POR             reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    DIVIDIDO        reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    MODULO          reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    POTENCIA        reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    MAYOR           reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    MENOR           reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    MAYORIGUAL      reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    MENORIGUAL      reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    IGUALACION      reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    DISTINTO        reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    AND             reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    OR              reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)

  ! PTOYCOMA        [ reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! FUNCTION        [ reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! ID              [ reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! LET             [ reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! CONSOLE         [ reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! IF              [ reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! WHILE           [ reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! FOR             [ reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! RETURN          [ reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! BREAK           [ reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! CONTINUE        [ reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! INTERFACE       [ reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! DECREMENTO      [ reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! INCREMENTO      [ reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! $end            [ reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! LLADER          [ reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .) ]


state 269

    (127) declaracionInterface -> LET ID DOSPUNTOS ID IGUAL expresion_interface .

    PTOYCOMA        reduce using rule 127 (declaracionInterface -> LET ID DOSPUNTOS ID IGUAL expresion_interface .)
    FUNCTION        reduce using rule 127 (declaracionInterface -> LET ID DOSPUNTOS ID IGUAL expresion_interface .)
    ID              reduce using rule 127 (declaracionInterface -> LET ID DOSPUNTOS ID IGUAL expresion_interface .)
    LET             reduce using rule 127 (declaracionInterface -> LET ID DOSPUNTOS ID IGUAL expresion_interface .)
    CONSOLE         reduce using rule 127 (declaracionInterface -> LET ID DOSPUNTOS ID IGUAL expresion_interface .)
    IF              reduce using rule 127 (declaracionInterface -> LET ID DOSPUNTOS ID IGUAL expresion_interface .)
    WHILE           reduce using rule 127 (declaracionInterface -> LET ID DOSPUNTOS ID IGUAL expresion_interface .)
    FOR             reduce using rule 127 (declaracionInterface -> LET ID DOSPUNTOS ID IGUAL expresion_interface .)
    RETURN          reduce using rule 127 (declaracionInterface -> LET ID DOSPUNTOS ID IGUAL expresion_interface .)
    BREAK           reduce using rule 127 (declaracionInterface -> LET ID DOSPUNTOS ID IGUAL expresion_interface .)
    CONTINUE        reduce using rule 127 (declaracionInterface -> LET ID DOSPUNTOS ID IGUAL expresion_interface .)
    INTERFACE       reduce using rule 127 (declaracionInterface -> LET ID DOSPUNTOS ID IGUAL expresion_interface .)
    DECREMENTO      reduce using rule 127 (declaracionInterface -> LET ID DOSPUNTOS ID IGUAL expresion_interface .)
    INCREMENTO      reduce using rule 127 (declaracionInterface -> LET ID DOSPUNTOS ID IGUAL expresion_interface .)
    $end            reduce using rule 127 (declaracionInterface -> LET ID DOSPUNTOS ID IGUAL expresion_interface .)
    LLADER          reduce using rule 127 (declaracionInterface -> LET ID DOSPUNTOS ID IGUAL expresion_interface .)


state 270

    (144) declaracionArray -> LET ID DOSPUNTOS ID IGUAL CORIZQ . CORDER
    (145) declaracionArray -> LET ID DOSPUNTOS ID IGUAL CORIZQ . lista_exp CORDER
    (148) lista_exp -> . lista_exp COMA expresion
    (149) lista_exp -> . expresion
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    CORDER          shift and go to state 297
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    lista_exp                      shift and go to state 298
    expresion                      shift and go to state 147
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 271

    (146) declaracionArray -> LET ID DOSPUNTOS ID CORIZQ CORDER .
    (147) declaracionArray -> LET ID DOSPUNTOS ID CORIZQ CORDER . IGUAL CORIZQ lista_exp CORDER

    PTOYCOMA        reduce using rule 146 (declaracionArray -> LET ID DOSPUNTOS ID CORIZQ CORDER .)
    FUNCTION        reduce using rule 146 (declaracionArray -> LET ID DOSPUNTOS ID CORIZQ CORDER .)
    ID              reduce using rule 146 (declaracionArray -> LET ID DOSPUNTOS ID CORIZQ CORDER .)
    LET             reduce using rule 146 (declaracionArray -> LET ID DOSPUNTOS ID CORIZQ CORDER .)
    CONSOLE         reduce using rule 146 (declaracionArray -> LET ID DOSPUNTOS ID CORIZQ CORDER .)
    IF              reduce using rule 146 (declaracionArray -> LET ID DOSPUNTOS ID CORIZQ CORDER .)
    WHILE           reduce using rule 146 (declaracionArray -> LET ID DOSPUNTOS ID CORIZQ CORDER .)
    FOR             reduce using rule 146 (declaracionArray -> LET ID DOSPUNTOS ID CORIZQ CORDER .)
    RETURN          reduce using rule 146 (declaracionArray -> LET ID DOSPUNTOS ID CORIZQ CORDER .)
    BREAK           reduce using rule 146 (declaracionArray -> LET ID DOSPUNTOS ID CORIZQ CORDER .)
    CONTINUE        reduce using rule 146 (declaracionArray -> LET ID DOSPUNTOS ID CORIZQ CORDER .)
    INTERFACE       reduce using rule 146 (declaracionArray -> LET ID DOSPUNTOS ID CORIZQ CORDER .)
    DECREMENTO      reduce using rule 146 (declaracionArray -> LET ID DOSPUNTOS ID CORIZQ CORDER .)
    INCREMENTO      reduce using rule 146 (declaracionArray -> LET ID DOSPUNTOS ID CORIZQ CORDER .)
    $end            reduce using rule 146 (declaracionArray -> LET ID DOSPUNTOS ID CORIZQ CORDER .)
    LLADER          reduce using rule 146 (declaracionArray -> LET ID DOSPUNTOS ID CORIZQ CORDER .)
    IGUAL           shift and go to state 299


state 272

    (28) declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    PTOYCOMA        reduce using rule 28 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    FUNCTION        reduce using rule 28 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    ID              reduce using rule 28 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    LET             reduce using rule 28 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    CONSOLE         reduce using rule 28 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    IF              reduce using rule 28 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    WHILE           reduce using rule 28 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    FOR             reduce using rule 28 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    RETURN          reduce using rule 28 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    BREAK           reduce using rule 28 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    CONTINUE        reduce using rule 28 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    INTERFACE       reduce using rule 28 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    DECREMENTO      reduce using rule 28 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    INCREMENTO      reduce using rule 28 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    $end            reduce using rule 28 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    LLADER          reduce using rule 28 (declaracion -> LET ID DOSPUNTOS tipo IGUAL expresion .)
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POR             shift and go to state 115
    DIVIDIDO        shift and go to state 116
    MODULO          shift and go to state 117
    POTENCIA        shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYORIGUAL      shift and go to state 121
    MENORIGUAL      shift and go to state 122
    IGUALACION      shift and go to state 123
    DISTINTO        shift and go to state 124
    AND             shift and go to state 125
    OR              shift and go to state 126


state 273

    (138) declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER .
    (139) declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER . IGUAL CORIZQ lista_exp CORDER
    (140) declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER . IGUAL CORIZQ CORDER
    (142) declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER . IGUAL expresion

    PTOYCOMA        reduce using rule 138 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER .)
    FUNCTION        reduce using rule 138 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER .)
    ID              reduce using rule 138 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER .)
    LET             reduce using rule 138 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER .)
    CONSOLE         reduce using rule 138 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER .)
    IF              reduce using rule 138 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER .)
    WHILE           reduce using rule 138 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER .)
    FOR             reduce using rule 138 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER .)
    RETURN          reduce using rule 138 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER .)
    BREAK           reduce using rule 138 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER .)
    CONTINUE        reduce using rule 138 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER .)
    INTERFACE       reduce using rule 138 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER .)
    DECREMENTO      reduce using rule 138 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER .)
    INCREMENTO      reduce using rule 138 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER .)
    $end            reduce using rule 138 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER .)
    LLADER          reduce using rule 138 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER .)
    IGUAL           shift and go to state 300


state 274

    (135) declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo . MAYOR IGUAL CORIZQ lista_exp CORDER
    (136) declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo . MAYOR IGUAL CORIZQ CORDER
    (137) declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo . MAYOR

    MAYOR           shift and go to state 301


state 275

    (38) impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .

    PTOYCOMA        reduce using rule 38 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    FUNCTION        reduce using rule 38 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    ID              reduce using rule 38 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    LET             reduce using rule 38 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    CONSOLE         reduce using rule 38 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    IF              reduce using rule 38 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    WHILE           reduce using rule 38 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    FOR             reduce using rule 38 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    RETURN          reduce using rule 38 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    BREAK           reduce using rule 38 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 38 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    INTERFACE       reduce using rule 38 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    DECREMENTO      reduce using rule 38 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    INCREMENTO      reduce using rule 38 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    $end            reduce using rule 38 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)
    LLADER          reduce using rule 38 (impresion -> CONSOLE PUNTO LOG PARIZQ expresion PARDER .)


state 276

    (39) impresion -> CONSOLE PUNTO LOG PARIZQ lista_argumentos PARDER .

    PTOYCOMA        reduce using rule 39 (impresion -> CONSOLE PUNTO LOG PARIZQ lista_argumentos PARDER .)
    FUNCTION        reduce using rule 39 (impresion -> CONSOLE PUNTO LOG PARIZQ lista_argumentos PARDER .)
    ID              reduce using rule 39 (impresion -> CONSOLE PUNTO LOG PARIZQ lista_argumentos PARDER .)
    LET             reduce using rule 39 (impresion -> CONSOLE PUNTO LOG PARIZQ lista_argumentos PARDER .)
    CONSOLE         reduce using rule 39 (impresion -> CONSOLE PUNTO LOG PARIZQ lista_argumentos PARDER .)
    IF              reduce using rule 39 (impresion -> CONSOLE PUNTO LOG PARIZQ lista_argumentos PARDER .)
    WHILE           reduce using rule 39 (impresion -> CONSOLE PUNTO LOG PARIZQ lista_argumentos PARDER .)
    FOR             reduce using rule 39 (impresion -> CONSOLE PUNTO LOG PARIZQ lista_argumentos PARDER .)
    RETURN          reduce using rule 39 (impresion -> CONSOLE PUNTO LOG PARIZQ lista_argumentos PARDER .)
    BREAK           reduce using rule 39 (impresion -> CONSOLE PUNTO LOG PARIZQ lista_argumentos PARDER .)
    CONTINUE        reduce using rule 39 (impresion -> CONSOLE PUNTO LOG PARIZQ lista_argumentos PARDER .)
    INTERFACE       reduce using rule 39 (impresion -> CONSOLE PUNTO LOG PARIZQ lista_argumentos PARDER .)
    DECREMENTO      reduce using rule 39 (impresion -> CONSOLE PUNTO LOG PARIZQ lista_argumentos PARDER .)
    INCREMENTO      reduce using rule 39 (impresion -> CONSOLE PUNTO LOG PARIZQ lista_argumentos PARDER .)
    $end            reduce using rule 39 (impresion -> CONSOLE PUNTO LOG PARIZQ lista_argumentos PARDER .)
    LLADER          reduce using rule 39 (impresion -> CONSOLE PUNTO LOG PARIZQ lista_argumentos PARDER .)


state 277

    (41) condicional -> IF PARIZQ expresion PARDER bloque ELSE . bloque
    (46) elseif -> ELSE . IF PARIZQ expresion PARDER bloque
    (9) bloque -> . LLAIZQ instruccion4 LLADER
    (10) bloque -> . LLAIZQ LLADER

    IF              shift and go to state 302
    LLAIZQ          shift and go to state 218

    bloque                         shift and go to state 303

state 278

    (42) condicional -> IF PARIZQ expresion PARDER bloque lista_elif .
    (43) condicional -> IF PARIZQ expresion PARDER bloque lista_elif . ELSE bloque
    (44) lista_elif -> lista_elif . elseif
    (46) elseif -> . ELSE IF PARIZQ expresion PARDER bloque

    PTOYCOMA        reduce using rule 42 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif .)
    FUNCTION        reduce using rule 42 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif .)
    ID              reduce using rule 42 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif .)
    LET             reduce using rule 42 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif .)
    CONSOLE         reduce using rule 42 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif .)
    IF              reduce using rule 42 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif .)
    WHILE           reduce using rule 42 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif .)
    FOR             reduce using rule 42 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif .)
    RETURN          reduce using rule 42 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif .)
    BREAK           reduce using rule 42 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif .)
    CONTINUE        reduce using rule 42 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif .)
    INTERFACE       reduce using rule 42 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif .)
    DECREMENTO      reduce using rule 42 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif .)
    INCREMENTO      reduce using rule 42 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif .)
    $end            reduce using rule 42 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif .)
    LLADER          reduce using rule 42 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif .)
    ELSE            shift and go to state 304

    elseif                         shift and go to state 305

state 279

    (45) lista_elif -> elseif .

    ELSE            reduce using rule 45 (lista_elif -> elseif .)
    PTOYCOMA        reduce using rule 45 (lista_elif -> elseif .)
    FUNCTION        reduce using rule 45 (lista_elif -> elseif .)
    ID              reduce using rule 45 (lista_elif -> elseif .)
    LET             reduce using rule 45 (lista_elif -> elseif .)
    CONSOLE         reduce using rule 45 (lista_elif -> elseif .)
    IF              reduce using rule 45 (lista_elif -> elseif .)
    WHILE           reduce using rule 45 (lista_elif -> elseif .)
    FOR             reduce using rule 45 (lista_elif -> elseif .)
    RETURN          reduce using rule 45 (lista_elif -> elseif .)
    BREAK           reduce using rule 45 (lista_elif -> elseif .)
    CONTINUE        reduce using rule 45 (lista_elif -> elseif .)
    INTERFACE       reduce using rule 45 (lista_elif -> elseif .)
    DECREMENTO      reduce using rule 45 (lista_elif -> elseif .)
    INCREMENTO      reduce using rule 45 (lista_elif -> elseif .)
    $end            reduce using rule 45 (lista_elif -> elseif .)
    LLADER          reduce using rule 45 (lista_elif -> elseif .)


state 280

    (48) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA . asignacion PARDER bloque
    (30) asignacion -> . ID IGUAL expresion
    (31) asignacion -> . dec
    (32) asignacion -> . inc
    (33) asignacion -> . asignacionInterface
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (134) asignacionInterface -> . ID PUNTO ID IGUAL expresion

    ID              shift and go to state 112
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36

    asignacion                     shift and go to state 306
    dec                            shift and go to state 24
    inc                            shift and go to state 25
    asignacionInterface            shift and go to state 26

state 281

    (49) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA . asignacion PARDER bloque
    (30) asignacion -> . ID IGUAL expresion
    (31) asignacion -> . dec
    (32) asignacion -> . inc
    (33) asignacion -> . asignacionInterface
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (134) asignacionInterface -> . ID PUNTO ID IGUAL expresion

    ID              shift and go to state 112
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36

    asignacion                     shift and go to state 307
    dec                            shift and go to state 24
    inc                            shift and go to state 25
    asignacionInterface            shift and go to state 26

state 282

    (50) ciclo_for_of -> FOR PARIZQ LET ID OF expresion . PARDER bloque
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    PARDER          shift and go to state 308
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POR             shift and go to state 115
    DIVIDIDO        shift and go to state 116
    MODULO          shift and go to state 117
    POTENCIA        shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYORIGUAL      shift and go to state 121
    MENORIGUAL      shift and go to state 122
    IGUALACION      shift and go to state 123
    DISTINTO        shift and go to state 124
    AND             shift and go to state 125
    OR              shift and go to state 126


state 283

    (28) declaracion -> LET ID DOSPUNTOS tipo . IGUAL expresion
    (29) declaracion -> LET ID DOSPUNTOS tipo .

    IGUAL           shift and go to state 226
    PTOYCOMA        reduce using rule 29 (declaracion -> LET ID DOSPUNTOS tipo .)


state 284

    (114) casteo -> ID PUNTO TOSTRING PARIZQ PARDER .

    MAS             reduce using rule 114 (casteo -> ID PUNTO TOSTRING PARIZQ PARDER .)
    MENOS           reduce using rule 114 (casteo -> ID PUNTO TOSTRING PARIZQ PARDER .)
    POR             reduce using rule 114 (casteo -> ID PUNTO TOSTRING PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 114 (casteo -> ID PUNTO TOSTRING PARIZQ PARDER .)
    MODULO          reduce using rule 114 (casteo -> ID PUNTO TOSTRING PARIZQ PARDER .)
    POTENCIA        reduce using rule 114 (casteo -> ID PUNTO TOSTRING PARIZQ PARDER .)
    MAYOR           reduce using rule 114 (casteo -> ID PUNTO TOSTRING PARIZQ PARDER .)
    MENOR           reduce using rule 114 (casteo -> ID PUNTO TOSTRING PARIZQ PARDER .)
    MAYORIGUAL      reduce using rule 114 (casteo -> ID PUNTO TOSTRING PARIZQ PARDER .)
    MENORIGUAL      reduce using rule 114 (casteo -> ID PUNTO TOSTRING PARIZQ PARDER .)
    IGUALACION      reduce using rule 114 (casteo -> ID PUNTO TOSTRING PARIZQ PARDER .)
    DISTINTO        reduce using rule 114 (casteo -> ID PUNTO TOSTRING PARIZQ PARDER .)
    AND             reduce using rule 114 (casteo -> ID PUNTO TOSTRING PARIZQ PARDER .)
    OR              reduce using rule 114 (casteo -> ID PUNTO TOSTRING PARIZQ PARDER .)
    PTOYCOMA        reduce using rule 114 (casteo -> ID PUNTO TOSTRING PARIZQ PARDER .)
    FUNCTION        reduce using rule 114 (casteo -> ID PUNTO TOSTRING PARIZQ PARDER .)
    ID              reduce using rule 114 (casteo -> ID PUNTO TOSTRING PARIZQ PARDER .)
    LET             reduce using rule 114 (casteo -> ID PUNTO TOSTRING PARIZQ PARDER .)
    CONSOLE         reduce using rule 114 (casteo -> ID PUNTO TOSTRING PARIZQ PARDER .)
    IF              reduce using rule 114 (casteo -> ID PUNTO TOSTRING PARIZQ PARDER .)
    WHILE           reduce using rule 114 (casteo -> ID PUNTO TOSTRING PARIZQ PARDER .)
    FOR             reduce using rule 114 (casteo -> ID PUNTO TOSTRING PARIZQ PARDER .)
    RETURN          reduce using rule 114 (casteo -> ID PUNTO TOSTRING PARIZQ PARDER .)
    BREAK           reduce using rule 114 (casteo -> ID PUNTO TOSTRING PARIZQ PARDER .)
    CONTINUE        reduce using rule 114 (casteo -> ID PUNTO TOSTRING PARIZQ PARDER .)
    INTERFACE       reduce using rule 114 (casteo -> ID PUNTO TOSTRING PARIZQ PARDER .)
    DECREMENTO      reduce using rule 114 (casteo -> ID PUNTO TOSTRING PARIZQ PARDER .)
    INCREMENTO      reduce using rule 114 (casteo -> ID PUNTO TOSTRING PARIZQ PARDER .)
    $end            reduce using rule 114 (casteo -> ID PUNTO TOSTRING PARIZQ PARDER .)
    LLADER          reduce using rule 114 (casteo -> ID PUNTO TOSTRING PARIZQ PARDER .)
    PARDER          reduce using rule 114 (casteo -> ID PUNTO TOSTRING PARIZQ PARDER .)
    COMA            reduce using rule 114 (casteo -> ID PUNTO TOSTRING PARIZQ PARDER .)
    CORDER          reduce using rule 114 (casteo -> ID PUNTO TOSTRING PARIZQ PARDER .)


state 285

    (107) aproximacion -> TOFIXED PARIZQ expresion COMA expresion . PARDER
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    PARDER          shift and go to state 309
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POR             shift and go to state 115
    DIVIDIDO        shift and go to state 116
    MODULO          shift and go to state 117
    POTENCIA        shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYORIGUAL      shift and go to state 121
    MENORIGUAL      shift and go to state 122
    IGUALACION      shift and go to state 123
    DISTINTO        shift and go to state 124
    AND             shift and go to state 125
    OR              shift and go to state 126


state 286

    (108) exponencial -> TOEXPONENTIAL PARIZQ expresion COMA expresion . PARDER
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    PARDER          shift and go to state 310
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POR             shift and go to state 115
    DIVIDIDO        shift and go to state 116
    MODULO          shift and go to state 117
    POTENCIA        shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYORIGUAL      shift and go to state 121
    MENORIGUAL      shift and go to state 122
    IGUALACION      shift and go to state 123
    DISTINTO        shift and go to state 124
    AND             shift and go to state 125
    OR              shift and go to state 126


state 287

    (111) separador -> SPLIT PARIZQ expresion COMA expresion . PARDER
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    PARDER          shift and go to state 311
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POR             shift and go to state 115
    DIVIDIDO        shift and go to state 116
    MODULO          shift and go to state 117
    POTENCIA        shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYORIGUAL      shift and go to state 121
    MENORIGUAL      shift and go to state 122
    IGUALACION      shift and go to state 123
    DISTINTO        shift and go to state 124
    AND             shift and go to state 125
    OR              shift and go to state 126


state 288

    (112) concatenacion -> CONCAT PARIZQ expresion COMA expresion . PARDER
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    PARDER          shift and go to state 312
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POR             shift and go to state 115
    DIVIDIDO        shift and go to state 116
    MODULO          shift and go to state 117
    POTENCIA        shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYORIGUAL      shift and go to state 121
    MENORIGUAL      shift and go to state 122
    IGUALACION      shift and go to state 123
    DISTINTO        shift and go to state 124
    AND             shift and go to state 125
    OR              shift and go to state 126


state 289

    (125) param_struct -> ID DOSPUNTOS tipo . PTOYCOMA

    PTOYCOMA        shift and go to state 313


state 290

    (62) parametro -> ID DOSPUNTOS tipo CORIZQ . CORDER

    CORDER          shift and go to state 314


state 291

    (56) funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS ID . bloque
    (9) bloque -> . LLAIZQ instruccion4 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 218

    bloque                         shift and go to state 315

state 292

    (52) funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo . bloque
    (57) funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo . CORIZQ CORDER bloque
    (9) bloque -> . LLAIZQ instruccion4 LLADER
    (10) bloque -> . LLAIZQ LLADER

    CORIZQ          shift and go to state 317
    LLAIZQ          shift and go to state 218

    bloque                         shift and go to state 316

state 293

    (55) funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS ID bloque .

    FUNCTION        reduce using rule 55 (funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS ID bloque .)
    ID              reduce using rule 55 (funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS ID bloque .)
    LET             reduce using rule 55 (funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS ID bloque .)
    CONSOLE         reduce using rule 55 (funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS ID bloque .)
    IF              reduce using rule 55 (funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS ID bloque .)
    WHILE           reduce using rule 55 (funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS ID bloque .)
    FOR             reduce using rule 55 (funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS ID bloque .)
    RETURN          reduce using rule 55 (funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS ID bloque .)
    BREAK           reduce using rule 55 (funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS ID bloque .)
    CONTINUE        reduce using rule 55 (funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS ID bloque .)
    INTERFACE       reduce using rule 55 (funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS ID bloque .)
    DECREMENTO      reduce using rule 55 (funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS ID bloque .)
    INCREMENTO      reduce using rule 55 (funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS ID bloque .)
    $end            reduce using rule 55 (funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS ID bloque .)


state 294

    (54) funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS tipo bloque .

    FUNCTION        reduce using rule 54 (funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS tipo bloque .)
    ID              reduce using rule 54 (funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS tipo bloque .)
    LET             reduce using rule 54 (funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS tipo bloque .)
    CONSOLE         reduce using rule 54 (funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS tipo bloque .)
    IF              reduce using rule 54 (funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS tipo bloque .)
    WHILE           reduce using rule 54 (funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS tipo bloque .)
    FOR             reduce using rule 54 (funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS tipo bloque .)
    RETURN          reduce using rule 54 (funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS tipo bloque .)
    BREAK           reduce using rule 54 (funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS tipo bloque .)
    CONTINUE        reduce using rule 54 (funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS tipo bloque .)
    INTERFACE       reduce using rule 54 (funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS tipo bloque .)
    DECREMENTO      reduce using rule 54 (funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS tipo bloque .)
    INCREMENTO      reduce using rule 54 (funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS tipo bloque .)
    $end            reduce using rule 54 (funcion -> FUNCTION ID PARIZQ PARDER DOSPUNTOS tipo bloque .)


state 295

    (9) bloque -> LLAIZQ instruccion4 LLADER .

    FUNCTION        reduce using rule 9 (bloque -> LLAIZQ instruccion4 LLADER .)
    ID              reduce using rule 9 (bloque -> LLAIZQ instruccion4 LLADER .)
    LET             reduce using rule 9 (bloque -> LLAIZQ instruccion4 LLADER .)
    CONSOLE         reduce using rule 9 (bloque -> LLAIZQ instruccion4 LLADER .)
    IF              reduce using rule 9 (bloque -> LLAIZQ instruccion4 LLADER .)
    WHILE           reduce using rule 9 (bloque -> LLAIZQ instruccion4 LLADER .)
    FOR             reduce using rule 9 (bloque -> LLAIZQ instruccion4 LLADER .)
    RETURN          reduce using rule 9 (bloque -> LLAIZQ instruccion4 LLADER .)
    BREAK           reduce using rule 9 (bloque -> LLAIZQ instruccion4 LLADER .)
    CONTINUE        reduce using rule 9 (bloque -> LLAIZQ instruccion4 LLADER .)
    INTERFACE       reduce using rule 9 (bloque -> LLAIZQ instruccion4 LLADER .)
    DECREMENTO      reduce using rule 9 (bloque -> LLAIZQ instruccion4 LLADER .)
    INCREMENTO      reduce using rule 9 (bloque -> LLAIZQ instruccion4 LLADER .)
    $end            reduce using rule 9 (bloque -> LLAIZQ instruccion4 LLADER .)
    ELSE            reduce using rule 9 (bloque -> LLAIZQ instruccion4 LLADER .)
    PTOYCOMA        reduce using rule 9 (bloque -> LLAIZQ instruccion4 LLADER .)
    LLADER          reduce using rule 9 (bloque -> LLAIZQ instruccion4 LLADER .)


state 296

    (7) instruccion4 -> instruccion4 instruccion2 .

    LLADER          reduce using rule 7 (instruccion4 -> instruccion4 instruccion2 .)
    ID              reduce using rule 7 (instruccion4 -> instruccion4 instruccion2 .)
    LET             reduce using rule 7 (instruccion4 -> instruccion4 instruccion2 .)
    CONSOLE         reduce using rule 7 (instruccion4 -> instruccion4 instruccion2 .)
    IF              reduce using rule 7 (instruccion4 -> instruccion4 instruccion2 .)
    WHILE           reduce using rule 7 (instruccion4 -> instruccion4 instruccion2 .)
    FOR             reduce using rule 7 (instruccion4 -> instruccion4 instruccion2 .)
    RETURN          reduce using rule 7 (instruccion4 -> instruccion4 instruccion2 .)
    BREAK           reduce using rule 7 (instruccion4 -> instruccion4 instruccion2 .)
    CONTINUE        reduce using rule 7 (instruccion4 -> instruccion4 instruccion2 .)
    INTERFACE       reduce using rule 7 (instruccion4 -> instruccion4 instruccion2 .)
    DECREMENTO      reduce using rule 7 (instruccion4 -> instruccion4 instruccion2 .)
    INCREMENTO      reduce using rule 7 (instruccion4 -> instruccion4 instruccion2 .)


state 297

    (144) declaracionArray -> LET ID DOSPUNTOS ID IGUAL CORIZQ CORDER .

    PTOYCOMA        reduce using rule 144 (declaracionArray -> LET ID DOSPUNTOS ID IGUAL CORIZQ CORDER .)
    FUNCTION        reduce using rule 144 (declaracionArray -> LET ID DOSPUNTOS ID IGUAL CORIZQ CORDER .)
    ID              reduce using rule 144 (declaracionArray -> LET ID DOSPUNTOS ID IGUAL CORIZQ CORDER .)
    LET             reduce using rule 144 (declaracionArray -> LET ID DOSPUNTOS ID IGUAL CORIZQ CORDER .)
    CONSOLE         reduce using rule 144 (declaracionArray -> LET ID DOSPUNTOS ID IGUAL CORIZQ CORDER .)
    IF              reduce using rule 144 (declaracionArray -> LET ID DOSPUNTOS ID IGUAL CORIZQ CORDER .)
    WHILE           reduce using rule 144 (declaracionArray -> LET ID DOSPUNTOS ID IGUAL CORIZQ CORDER .)
    FOR             reduce using rule 144 (declaracionArray -> LET ID DOSPUNTOS ID IGUAL CORIZQ CORDER .)
    RETURN          reduce using rule 144 (declaracionArray -> LET ID DOSPUNTOS ID IGUAL CORIZQ CORDER .)
    BREAK           reduce using rule 144 (declaracionArray -> LET ID DOSPUNTOS ID IGUAL CORIZQ CORDER .)
    CONTINUE        reduce using rule 144 (declaracionArray -> LET ID DOSPUNTOS ID IGUAL CORIZQ CORDER .)
    INTERFACE       reduce using rule 144 (declaracionArray -> LET ID DOSPUNTOS ID IGUAL CORIZQ CORDER .)
    DECREMENTO      reduce using rule 144 (declaracionArray -> LET ID DOSPUNTOS ID IGUAL CORIZQ CORDER .)
    INCREMENTO      reduce using rule 144 (declaracionArray -> LET ID DOSPUNTOS ID IGUAL CORIZQ CORDER .)
    $end            reduce using rule 144 (declaracionArray -> LET ID DOSPUNTOS ID IGUAL CORIZQ CORDER .)
    LLADER          reduce using rule 144 (declaracionArray -> LET ID DOSPUNTOS ID IGUAL CORIZQ CORDER .)


state 298

    (145) declaracionArray -> LET ID DOSPUNTOS ID IGUAL CORIZQ lista_exp . CORDER
    (148) lista_exp -> lista_exp . COMA expresion

    CORDER          shift and go to state 318
    COMA            shift and go to state 209


state 299

    (147) declaracionArray -> LET ID DOSPUNTOS ID CORIZQ CORDER IGUAL . CORIZQ lista_exp CORDER

    CORIZQ          shift and go to state 319


state 300

    (139) declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL . CORIZQ lista_exp CORDER
    (140) declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL . CORIZQ CORDER
    (142) declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL . expresion
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    CORIZQ          shift and go to state 320
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89

    expresion                      shift and go to state 321
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 301

    (135) declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR . IGUAL CORIZQ lista_exp CORDER
    (136) declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR . IGUAL CORIZQ CORDER
    (137) declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR .

    IGUAL           shift and go to state 322
    PTOYCOMA        reduce using rule 137 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR .)
    FUNCTION        reduce using rule 137 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR .)
    ID              reduce using rule 137 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR .)
    LET             reduce using rule 137 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR .)
    CONSOLE         reduce using rule 137 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR .)
    IF              reduce using rule 137 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR .)
    WHILE           reduce using rule 137 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR .)
    FOR             reduce using rule 137 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR .)
    RETURN          reduce using rule 137 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR .)
    BREAK           reduce using rule 137 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR .)
    CONTINUE        reduce using rule 137 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR .)
    INTERFACE       reduce using rule 137 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR .)
    DECREMENTO      reduce using rule 137 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR .)
    INCREMENTO      reduce using rule 137 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR .)
    $end            reduce using rule 137 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR .)
    LLADER          reduce using rule 137 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR .)


state 302

    (46) elseif -> ELSE IF . PARIZQ expresion PARDER bloque

    PARIZQ          shift and go to state 323


state 303

    (41) condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .

    PTOYCOMA        reduce using rule 41 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    FUNCTION        reduce using rule 41 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    ID              reduce using rule 41 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    LET             reduce using rule 41 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    CONSOLE         reduce using rule 41 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    IF              reduce using rule 41 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    WHILE           reduce using rule 41 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    FOR             reduce using rule 41 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    RETURN          reduce using rule 41 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    BREAK           reduce using rule 41 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    CONTINUE        reduce using rule 41 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    INTERFACE       reduce using rule 41 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    DECREMENTO      reduce using rule 41 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    INCREMENTO      reduce using rule 41 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    $end            reduce using rule 41 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)
    LLADER          reduce using rule 41 (condicional -> IF PARIZQ expresion PARDER bloque ELSE bloque .)


state 304

    (43) condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE . bloque
    (46) elseif -> ELSE . IF PARIZQ expresion PARDER bloque
    (9) bloque -> . LLAIZQ instruccion4 LLADER
    (10) bloque -> . LLAIZQ LLADER

    IF              shift and go to state 302
    LLAIZQ          shift and go to state 218

    bloque                         shift and go to state 324

state 305

    (44) lista_elif -> lista_elif elseif .

    ELSE            reduce using rule 44 (lista_elif -> lista_elif elseif .)
    PTOYCOMA        reduce using rule 44 (lista_elif -> lista_elif elseif .)
    FUNCTION        reduce using rule 44 (lista_elif -> lista_elif elseif .)
    ID              reduce using rule 44 (lista_elif -> lista_elif elseif .)
    LET             reduce using rule 44 (lista_elif -> lista_elif elseif .)
    CONSOLE         reduce using rule 44 (lista_elif -> lista_elif elseif .)
    IF              reduce using rule 44 (lista_elif -> lista_elif elseif .)
    WHILE           reduce using rule 44 (lista_elif -> lista_elif elseif .)
    FOR             reduce using rule 44 (lista_elif -> lista_elif elseif .)
    RETURN          reduce using rule 44 (lista_elif -> lista_elif elseif .)
    BREAK           reduce using rule 44 (lista_elif -> lista_elif elseif .)
    CONTINUE        reduce using rule 44 (lista_elif -> lista_elif elseif .)
    INTERFACE       reduce using rule 44 (lista_elif -> lista_elif elseif .)
    DECREMENTO      reduce using rule 44 (lista_elif -> lista_elif elseif .)
    INCREMENTO      reduce using rule 44 (lista_elif -> lista_elif elseif .)
    $end            reduce using rule 44 (lista_elif -> lista_elif elseif .)
    LLADER          reduce using rule 44 (lista_elif -> lista_elif elseif .)


state 306

    (48) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion . PARDER bloque

    PARDER          shift and go to state 325


state 307

    (49) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion . PARDER bloque

    PARDER          shift and go to state 326


state 308

    (50) ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER . bloque
    (9) bloque -> . LLAIZQ instruccion4 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 218

    bloque                         shift and go to state 327

state 309

    (107) aproximacion -> TOFIXED PARIZQ expresion COMA expresion PARDER .

    MAS             reduce using rule 107 (aproximacion -> TOFIXED PARIZQ expresion COMA expresion PARDER .)
    MENOS           reduce using rule 107 (aproximacion -> TOFIXED PARIZQ expresion COMA expresion PARDER .)
    POR             reduce using rule 107 (aproximacion -> TOFIXED PARIZQ expresion COMA expresion PARDER .)
    DIVIDIDO        reduce using rule 107 (aproximacion -> TOFIXED PARIZQ expresion COMA expresion PARDER .)
    MODULO          reduce using rule 107 (aproximacion -> TOFIXED PARIZQ expresion COMA expresion PARDER .)
    POTENCIA        reduce using rule 107 (aproximacion -> TOFIXED PARIZQ expresion COMA expresion PARDER .)
    MAYOR           reduce using rule 107 (aproximacion -> TOFIXED PARIZQ expresion COMA expresion PARDER .)
    MENOR           reduce using rule 107 (aproximacion -> TOFIXED PARIZQ expresion COMA expresion PARDER .)
    MAYORIGUAL      reduce using rule 107 (aproximacion -> TOFIXED PARIZQ expresion COMA expresion PARDER .)
    MENORIGUAL      reduce using rule 107 (aproximacion -> TOFIXED PARIZQ expresion COMA expresion PARDER .)
    IGUALACION      reduce using rule 107 (aproximacion -> TOFIXED PARIZQ expresion COMA expresion PARDER .)
    DISTINTO        reduce using rule 107 (aproximacion -> TOFIXED PARIZQ expresion COMA expresion PARDER .)
    AND             reduce using rule 107 (aproximacion -> TOFIXED PARIZQ expresion COMA expresion PARDER .)
    OR              reduce using rule 107 (aproximacion -> TOFIXED PARIZQ expresion COMA expresion PARDER .)
    PTOYCOMA        reduce using rule 107 (aproximacion -> TOFIXED PARIZQ expresion COMA expresion PARDER .)
    FUNCTION        reduce using rule 107 (aproximacion -> TOFIXED PARIZQ expresion COMA expresion PARDER .)
    ID              reduce using rule 107 (aproximacion -> TOFIXED PARIZQ expresion COMA expresion PARDER .)
    LET             reduce using rule 107 (aproximacion -> TOFIXED PARIZQ expresion COMA expresion PARDER .)
    CONSOLE         reduce using rule 107 (aproximacion -> TOFIXED PARIZQ expresion COMA expresion PARDER .)
    IF              reduce using rule 107 (aproximacion -> TOFIXED PARIZQ expresion COMA expresion PARDER .)
    WHILE           reduce using rule 107 (aproximacion -> TOFIXED PARIZQ expresion COMA expresion PARDER .)
    FOR             reduce using rule 107 (aproximacion -> TOFIXED PARIZQ expresion COMA expresion PARDER .)
    RETURN          reduce using rule 107 (aproximacion -> TOFIXED PARIZQ expresion COMA expresion PARDER .)
    BREAK           reduce using rule 107 (aproximacion -> TOFIXED PARIZQ expresion COMA expresion PARDER .)
    CONTINUE        reduce using rule 107 (aproximacion -> TOFIXED PARIZQ expresion COMA expresion PARDER .)
    INTERFACE       reduce using rule 107 (aproximacion -> TOFIXED PARIZQ expresion COMA expresion PARDER .)
    DECREMENTO      reduce using rule 107 (aproximacion -> TOFIXED PARIZQ expresion COMA expresion PARDER .)
    INCREMENTO      reduce using rule 107 (aproximacion -> TOFIXED PARIZQ expresion COMA expresion PARDER .)
    $end            reduce using rule 107 (aproximacion -> TOFIXED PARIZQ expresion COMA expresion PARDER .)
    LLADER          reduce using rule 107 (aproximacion -> TOFIXED PARIZQ expresion COMA expresion PARDER .)
    PARDER          reduce using rule 107 (aproximacion -> TOFIXED PARIZQ expresion COMA expresion PARDER .)
    COMA            reduce using rule 107 (aproximacion -> TOFIXED PARIZQ expresion COMA expresion PARDER .)
    CORDER          reduce using rule 107 (aproximacion -> TOFIXED PARIZQ expresion COMA expresion PARDER .)


state 310

    (108) exponencial -> TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER .

    MAS             reduce using rule 108 (exponencial -> TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER .)
    MENOS           reduce using rule 108 (exponencial -> TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER .)
    POR             reduce using rule 108 (exponencial -> TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER .)
    DIVIDIDO        reduce using rule 108 (exponencial -> TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER .)
    MODULO          reduce using rule 108 (exponencial -> TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER .)
    POTENCIA        reduce using rule 108 (exponencial -> TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER .)
    MAYOR           reduce using rule 108 (exponencial -> TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER .)
    MENOR           reduce using rule 108 (exponencial -> TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER .)
    MAYORIGUAL      reduce using rule 108 (exponencial -> TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER .)
    MENORIGUAL      reduce using rule 108 (exponencial -> TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER .)
    IGUALACION      reduce using rule 108 (exponencial -> TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER .)
    DISTINTO        reduce using rule 108 (exponencial -> TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER .)
    AND             reduce using rule 108 (exponencial -> TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER .)
    OR              reduce using rule 108 (exponencial -> TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER .)
    PTOYCOMA        reduce using rule 108 (exponencial -> TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER .)
    FUNCTION        reduce using rule 108 (exponencial -> TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER .)
    ID              reduce using rule 108 (exponencial -> TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER .)
    LET             reduce using rule 108 (exponencial -> TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER .)
    CONSOLE         reduce using rule 108 (exponencial -> TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER .)
    IF              reduce using rule 108 (exponencial -> TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER .)
    WHILE           reduce using rule 108 (exponencial -> TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER .)
    FOR             reduce using rule 108 (exponencial -> TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER .)
    RETURN          reduce using rule 108 (exponencial -> TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER .)
    BREAK           reduce using rule 108 (exponencial -> TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER .)
    CONTINUE        reduce using rule 108 (exponencial -> TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER .)
    INTERFACE       reduce using rule 108 (exponencial -> TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER .)
    DECREMENTO      reduce using rule 108 (exponencial -> TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER .)
    INCREMENTO      reduce using rule 108 (exponencial -> TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER .)
    $end            reduce using rule 108 (exponencial -> TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER .)
    LLADER          reduce using rule 108 (exponencial -> TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER .)
    PARDER          reduce using rule 108 (exponencial -> TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER .)
    COMA            reduce using rule 108 (exponencial -> TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER .)
    CORDER          reduce using rule 108 (exponencial -> TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER .)


state 311

    (111) separador -> SPLIT PARIZQ expresion COMA expresion PARDER .

    MAS             reduce using rule 111 (separador -> SPLIT PARIZQ expresion COMA expresion PARDER .)
    MENOS           reduce using rule 111 (separador -> SPLIT PARIZQ expresion COMA expresion PARDER .)
    POR             reduce using rule 111 (separador -> SPLIT PARIZQ expresion COMA expresion PARDER .)
    DIVIDIDO        reduce using rule 111 (separador -> SPLIT PARIZQ expresion COMA expresion PARDER .)
    MODULO          reduce using rule 111 (separador -> SPLIT PARIZQ expresion COMA expresion PARDER .)
    POTENCIA        reduce using rule 111 (separador -> SPLIT PARIZQ expresion COMA expresion PARDER .)
    MAYOR           reduce using rule 111 (separador -> SPLIT PARIZQ expresion COMA expresion PARDER .)
    MENOR           reduce using rule 111 (separador -> SPLIT PARIZQ expresion COMA expresion PARDER .)
    MAYORIGUAL      reduce using rule 111 (separador -> SPLIT PARIZQ expresion COMA expresion PARDER .)
    MENORIGUAL      reduce using rule 111 (separador -> SPLIT PARIZQ expresion COMA expresion PARDER .)
    IGUALACION      reduce using rule 111 (separador -> SPLIT PARIZQ expresion COMA expresion PARDER .)
    DISTINTO        reduce using rule 111 (separador -> SPLIT PARIZQ expresion COMA expresion PARDER .)
    AND             reduce using rule 111 (separador -> SPLIT PARIZQ expresion COMA expresion PARDER .)
    OR              reduce using rule 111 (separador -> SPLIT PARIZQ expresion COMA expresion PARDER .)
    PTOYCOMA        reduce using rule 111 (separador -> SPLIT PARIZQ expresion COMA expresion PARDER .)
    FUNCTION        reduce using rule 111 (separador -> SPLIT PARIZQ expresion COMA expresion PARDER .)
    ID              reduce using rule 111 (separador -> SPLIT PARIZQ expresion COMA expresion PARDER .)
    LET             reduce using rule 111 (separador -> SPLIT PARIZQ expresion COMA expresion PARDER .)
    CONSOLE         reduce using rule 111 (separador -> SPLIT PARIZQ expresion COMA expresion PARDER .)
    IF              reduce using rule 111 (separador -> SPLIT PARIZQ expresion COMA expresion PARDER .)
    WHILE           reduce using rule 111 (separador -> SPLIT PARIZQ expresion COMA expresion PARDER .)
    FOR             reduce using rule 111 (separador -> SPLIT PARIZQ expresion COMA expresion PARDER .)
    RETURN          reduce using rule 111 (separador -> SPLIT PARIZQ expresion COMA expresion PARDER .)
    BREAK           reduce using rule 111 (separador -> SPLIT PARIZQ expresion COMA expresion PARDER .)
    CONTINUE        reduce using rule 111 (separador -> SPLIT PARIZQ expresion COMA expresion PARDER .)
    INTERFACE       reduce using rule 111 (separador -> SPLIT PARIZQ expresion COMA expresion PARDER .)
    DECREMENTO      reduce using rule 111 (separador -> SPLIT PARIZQ expresion COMA expresion PARDER .)
    INCREMENTO      reduce using rule 111 (separador -> SPLIT PARIZQ expresion COMA expresion PARDER .)
    $end            reduce using rule 111 (separador -> SPLIT PARIZQ expresion COMA expresion PARDER .)
    LLADER          reduce using rule 111 (separador -> SPLIT PARIZQ expresion COMA expresion PARDER .)
    PARDER          reduce using rule 111 (separador -> SPLIT PARIZQ expresion COMA expresion PARDER .)
    COMA            reduce using rule 111 (separador -> SPLIT PARIZQ expresion COMA expresion PARDER .)
    CORDER          reduce using rule 111 (separador -> SPLIT PARIZQ expresion COMA expresion PARDER .)


state 312

    (112) concatenacion -> CONCAT PARIZQ expresion COMA expresion PARDER .

    MAS             reduce using rule 112 (concatenacion -> CONCAT PARIZQ expresion COMA expresion PARDER .)
    MENOS           reduce using rule 112 (concatenacion -> CONCAT PARIZQ expresion COMA expresion PARDER .)
    POR             reduce using rule 112 (concatenacion -> CONCAT PARIZQ expresion COMA expresion PARDER .)
    DIVIDIDO        reduce using rule 112 (concatenacion -> CONCAT PARIZQ expresion COMA expresion PARDER .)
    MODULO          reduce using rule 112 (concatenacion -> CONCAT PARIZQ expresion COMA expresion PARDER .)
    POTENCIA        reduce using rule 112 (concatenacion -> CONCAT PARIZQ expresion COMA expresion PARDER .)
    MAYOR           reduce using rule 112 (concatenacion -> CONCAT PARIZQ expresion COMA expresion PARDER .)
    MENOR           reduce using rule 112 (concatenacion -> CONCAT PARIZQ expresion COMA expresion PARDER .)
    MAYORIGUAL      reduce using rule 112 (concatenacion -> CONCAT PARIZQ expresion COMA expresion PARDER .)
    MENORIGUAL      reduce using rule 112 (concatenacion -> CONCAT PARIZQ expresion COMA expresion PARDER .)
    IGUALACION      reduce using rule 112 (concatenacion -> CONCAT PARIZQ expresion COMA expresion PARDER .)
    DISTINTO        reduce using rule 112 (concatenacion -> CONCAT PARIZQ expresion COMA expresion PARDER .)
    AND             reduce using rule 112 (concatenacion -> CONCAT PARIZQ expresion COMA expresion PARDER .)
    OR              reduce using rule 112 (concatenacion -> CONCAT PARIZQ expresion COMA expresion PARDER .)
    PTOYCOMA        reduce using rule 112 (concatenacion -> CONCAT PARIZQ expresion COMA expresion PARDER .)
    FUNCTION        reduce using rule 112 (concatenacion -> CONCAT PARIZQ expresion COMA expresion PARDER .)
    ID              reduce using rule 112 (concatenacion -> CONCAT PARIZQ expresion COMA expresion PARDER .)
    LET             reduce using rule 112 (concatenacion -> CONCAT PARIZQ expresion COMA expresion PARDER .)
    CONSOLE         reduce using rule 112 (concatenacion -> CONCAT PARIZQ expresion COMA expresion PARDER .)
    IF              reduce using rule 112 (concatenacion -> CONCAT PARIZQ expresion COMA expresion PARDER .)
    WHILE           reduce using rule 112 (concatenacion -> CONCAT PARIZQ expresion COMA expresion PARDER .)
    FOR             reduce using rule 112 (concatenacion -> CONCAT PARIZQ expresion COMA expresion PARDER .)
    RETURN          reduce using rule 112 (concatenacion -> CONCAT PARIZQ expresion COMA expresion PARDER .)
    BREAK           reduce using rule 112 (concatenacion -> CONCAT PARIZQ expresion COMA expresion PARDER .)
    CONTINUE        reduce using rule 112 (concatenacion -> CONCAT PARIZQ expresion COMA expresion PARDER .)
    INTERFACE       reduce using rule 112 (concatenacion -> CONCAT PARIZQ expresion COMA expresion PARDER .)
    DECREMENTO      reduce using rule 112 (concatenacion -> CONCAT PARIZQ expresion COMA expresion PARDER .)
    INCREMENTO      reduce using rule 112 (concatenacion -> CONCAT PARIZQ expresion COMA expresion PARDER .)
    $end            reduce using rule 112 (concatenacion -> CONCAT PARIZQ expresion COMA expresion PARDER .)
    LLADER          reduce using rule 112 (concatenacion -> CONCAT PARIZQ expresion COMA expresion PARDER .)
    PARDER          reduce using rule 112 (concatenacion -> CONCAT PARIZQ expresion COMA expresion PARDER .)
    COMA            reduce using rule 112 (concatenacion -> CONCAT PARIZQ expresion COMA expresion PARDER .)
    CORDER          reduce using rule 112 (concatenacion -> CONCAT PARIZQ expresion COMA expresion PARDER .)


state 313

    (125) param_struct -> ID DOSPUNTOS tipo PTOYCOMA .

    LLADER          reduce using rule 125 (param_struct -> ID DOSPUNTOS tipo PTOYCOMA .)
    ID              reduce using rule 125 (param_struct -> ID DOSPUNTOS tipo PTOYCOMA .)


state 314

    (62) parametro -> ID DOSPUNTOS tipo CORIZQ CORDER .

    PARDER          reduce using rule 62 (parametro -> ID DOSPUNTOS tipo CORIZQ CORDER .)
    COMA            reduce using rule 62 (parametro -> ID DOSPUNTOS tipo CORIZQ CORDER .)


state 315

    (56) funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS ID bloque .

    FUNCTION        reduce using rule 56 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS ID bloque .)
    ID              reduce using rule 56 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS ID bloque .)
    LET             reduce using rule 56 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS ID bloque .)
    CONSOLE         reduce using rule 56 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS ID bloque .)
    IF              reduce using rule 56 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS ID bloque .)
    WHILE           reduce using rule 56 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS ID bloque .)
    FOR             reduce using rule 56 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS ID bloque .)
    RETURN          reduce using rule 56 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS ID bloque .)
    BREAK           reduce using rule 56 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS ID bloque .)
    CONTINUE        reduce using rule 56 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS ID bloque .)
    INTERFACE       reduce using rule 56 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS ID bloque .)
    DECREMENTO      reduce using rule 56 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS ID bloque .)
    INCREMENTO      reduce using rule 56 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS ID bloque .)
    $end            reduce using rule 56 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS ID bloque .)


state 316

    (52) funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .

    FUNCTION        reduce using rule 52 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .)
    ID              reduce using rule 52 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .)
    LET             reduce using rule 52 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .)
    CONSOLE         reduce using rule 52 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .)
    IF              reduce using rule 52 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .)
    WHILE           reduce using rule 52 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .)
    FOR             reduce using rule 52 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .)
    RETURN          reduce using rule 52 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .)
    BREAK           reduce using rule 52 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .)
    CONTINUE        reduce using rule 52 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .)
    INTERFACE       reduce using rule 52 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .)
    DECREMENTO      reduce using rule 52 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .)
    INCREMENTO      reduce using rule 52 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .)
    $end            reduce using rule 52 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo bloque .)


state 317

    (57) funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo CORIZQ . CORDER bloque

    CORDER          shift and go to state 328


state 318

    (145) declaracionArray -> LET ID DOSPUNTOS ID IGUAL CORIZQ lista_exp CORDER .

    PTOYCOMA        reduce using rule 145 (declaracionArray -> LET ID DOSPUNTOS ID IGUAL CORIZQ lista_exp CORDER .)
    FUNCTION        reduce using rule 145 (declaracionArray -> LET ID DOSPUNTOS ID IGUAL CORIZQ lista_exp CORDER .)
    ID              reduce using rule 145 (declaracionArray -> LET ID DOSPUNTOS ID IGUAL CORIZQ lista_exp CORDER .)
    LET             reduce using rule 145 (declaracionArray -> LET ID DOSPUNTOS ID IGUAL CORIZQ lista_exp CORDER .)
    CONSOLE         reduce using rule 145 (declaracionArray -> LET ID DOSPUNTOS ID IGUAL CORIZQ lista_exp CORDER .)
    IF              reduce using rule 145 (declaracionArray -> LET ID DOSPUNTOS ID IGUAL CORIZQ lista_exp CORDER .)
    WHILE           reduce using rule 145 (declaracionArray -> LET ID DOSPUNTOS ID IGUAL CORIZQ lista_exp CORDER .)
    FOR             reduce using rule 145 (declaracionArray -> LET ID DOSPUNTOS ID IGUAL CORIZQ lista_exp CORDER .)
    RETURN          reduce using rule 145 (declaracionArray -> LET ID DOSPUNTOS ID IGUAL CORIZQ lista_exp CORDER .)
    BREAK           reduce using rule 145 (declaracionArray -> LET ID DOSPUNTOS ID IGUAL CORIZQ lista_exp CORDER .)
    CONTINUE        reduce using rule 145 (declaracionArray -> LET ID DOSPUNTOS ID IGUAL CORIZQ lista_exp CORDER .)
    INTERFACE       reduce using rule 145 (declaracionArray -> LET ID DOSPUNTOS ID IGUAL CORIZQ lista_exp CORDER .)
    DECREMENTO      reduce using rule 145 (declaracionArray -> LET ID DOSPUNTOS ID IGUAL CORIZQ lista_exp CORDER .)
    INCREMENTO      reduce using rule 145 (declaracionArray -> LET ID DOSPUNTOS ID IGUAL CORIZQ lista_exp CORDER .)
    $end            reduce using rule 145 (declaracionArray -> LET ID DOSPUNTOS ID IGUAL CORIZQ lista_exp CORDER .)
    LLADER          reduce using rule 145 (declaracionArray -> LET ID DOSPUNTOS ID IGUAL CORIZQ lista_exp CORDER .)


state 319

    (147) declaracionArray -> LET ID DOSPUNTOS ID CORIZQ CORDER IGUAL CORIZQ . lista_exp CORDER
    (148) lista_exp -> . lista_exp COMA expresion
    (149) lista_exp -> . expresion
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    lista_exp                      shift and go to state 329
    expresion                      shift and go to state 147
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 320

    (139) declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ . lista_exp CORDER
    (140) declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ . CORDER
    (151) arreglo -> CORIZQ . lista_exp CORDER
    (152) arreglo -> CORIZQ . CORDER
    (148) lista_exp -> . lista_exp COMA expresion
    (149) lista_exp -> . expresion
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    CORDER          shift and go to state 330
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    lista_exp                      shift and go to state 331
    expresion                      shift and go to state 147
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 321

    (142) declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion .
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    PTOYCOMA        reduce using rule 142 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion .)
    FUNCTION        reduce using rule 142 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion .)
    ID              reduce using rule 142 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion .)
    LET             reduce using rule 142 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion .)
    CONSOLE         reduce using rule 142 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion .)
    IF              reduce using rule 142 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion .)
    WHILE           reduce using rule 142 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion .)
    FOR             reduce using rule 142 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion .)
    RETURN          reduce using rule 142 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion .)
    BREAK           reduce using rule 142 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion .)
    CONTINUE        reduce using rule 142 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion .)
    INTERFACE       reduce using rule 142 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion .)
    DECREMENTO      reduce using rule 142 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion .)
    INCREMENTO      reduce using rule 142 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion .)
    $end            reduce using rule 142 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion .)
    LLADER          reduce using rule 142 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL expresion .)
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POR             shift and go to state 115
    DIVIDIDO        shift and go to state 116
    MODULO          shift and go to state 117
    POTENCIA        shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYORIGUAL      shift and go to state 121
    MENORIGUAL      shift and go to state 122
    IGUALACION      shift and go to state 123
    DISTINTO        shift and go to state 124
    AND             shift and go to state 125
    OR              shift and go to state 126


state 322

    (135) declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL . CORIZQ lista_exp CORDER
    (136) declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL . CORIZQ CORDER

    CORIZQ          shift and go to state 332


state 323

    (46) elseif -> ELSE IF PARIZQ . expresion PARDER bloque
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    expresion                      shift and go to state 333
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 324

    (43) condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .

    PTOYCOMA        reduce using rule 43 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    FUNCTION        reduce using rule 43 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    ID              reduce using rule 43 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    LET             reduce using rule 43 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    CONSOLE         reduce using rule 43 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    IF              reduce using rule 43 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    WHILE           reduce using rule 43 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    FOR             reduce using rule 43 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    RETURN          reduce using rule 43 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    BREAK           reduce using rule 43 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    CONTINUE        reduce using rule 43 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    INTERFACE       reduce using rule 43 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    DECREMENTO      reduce using rule 43 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    INCREMENTO      reduce using rule 43 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    $end            reduce using rule 43 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)
    LLADER          reduce using rule 43 (condicional -> IF PARIZQ expresion PARDER bloque lista_elif ELSE bloque .)


state 325

    (48) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER . bloque
    (9) bloque -> . LLAIZQ instruccion4 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 218

    bloque                         shift and go to state 334

state 326

    (49) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER . bloque
    (9) bloque -> . LLAIZQ instruccion4 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 218

    bloque                         shift and go to state 335

state 327

    (50) ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .

    PTOYCOMA        reduce using rule 50 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    FUNCTION        reduce using rule 50 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    ID              reduce using rule 50 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    LET             reduce using rule 50 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    CONSOLE         reduce using rule 50 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    IF              reduce using rule 50 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    WHILE           reduce using rule 50 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    FOR             reduce using rule 50 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    RETURN          reduce using rule 50 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    BREAK           reduce using rule 50 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    CONTINUE        reduce using rule 50 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    INTERFACE       reduce using rule 50 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    DECREMENTO      reduce using rule 50 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    INCREMENTO      reduce using rule 50 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    $end            reduce using rule 50 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)
    LLADER          reduce using rule 50 (ciclo_for_of -> FOR PARIZQ LET ID OF expresion PARDER bloque .)


state 328

    (57) funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo CORIZQ CORDER . bloque
    (9) bloque -> . LLAIZQ instruccion4 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 218

    bloque                         shift and go to state 336

state 329

    (147) declaracionArray -> LET ID DOSPUNTOS ID CORIZQ CORDER IGUAL CORIZQ lista_exp . CORDER
    (148) lista_exp -> lista_exp . COMA expresion

    CORDER          shift and go to state 337
    COMA            shift and go to state 209


state 330

    (140) declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .
    (152) arreglo -> CORIZQ CORDER .

  ! reduce/reduce conflict for PTOYCOMA resolved using rule 140 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 140 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for ID resolved using rule 140 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for LET resolved using rule 140 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for CONSOLE resolved using rule 140 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for IF resolved using rule 140 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for WHILE resolved using rule 140 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for FOR resolved using rule 140 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for RETURN resolved using rule 140 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for BREAK resolved using rule 140 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 140 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for INTERFACE resolved using rule 140 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for DECREMENTO resolved using rule 140 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for INCREMENTO resolved using rule 140 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for $end resolved using rule 140 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
  ! reduce/reduce conflict for LLADER resolved using rule 140 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
    PTOYCOMA        reduce using rule 140 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
    FUNCTION        reduce using rule 140 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
    ID              reduce using rule 140 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
    LET             reduce using rule 140 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
    CONSOLE         reduce using rule 140 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
    IF              reduce using rule 140 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
    WHILE           reduce using rule 140 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
    FOR             reduce using rule 140 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
    RETURN          reduce using rule 140 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
    BREAK           reduce using rule 140 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
    CONTINUE        reduce using rule 140 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
    INTERFACE       reduce using rule 140 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
    DECREMENTO      reduce using rule 140 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
    INCREMENTO      reduce using rule 140 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
    $end            reduce using rule 140 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
    LLADER          reduce using rule 140 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER .)
    MAS             reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    MENOS           reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    POR             reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    DIVIDIDO        reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    MODULO          reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    POTENCIA        reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    MAYOR           reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    MENOR           reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    MAYORIGUAL      reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    MENORIGUAL      reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    IGUALACION      reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    DISTINTO        reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    AND             reduce using rule 152 (arreglo -> CORIZQ CORDER .)
    OR              reduce using rule 152 (arreglo -> CORIZQ CORDER .)

  ! PTOYCOMA        [ reduce using rule 152 (arreglo -> CORIZQ CORDER .) ]
  ! FUNCTION        [ reduce using rule 152 (arreglo -> CORIZQ CORDER .) ]
  ! ID              [ reduce using rule 152 (arreglo -> CORIZQ CORDER .) ]
  ! LET             [ reduce using rule 152 (arreglo -> CORIZQ CORDER .) ]
  ! CONSOLE         [ reduce using rule 152 (arreglo -> CORIZQ CORDER .) ]
  ! IF              [ reduce using rule 152 (arreglo -> CORIZQ CORDER .) ]
  ! WHILE           [ reduce using rule 152 (arreglo -> CORIZQ CORDER .) ]
  ! FOR             [ reduce using rule 152 (arreglo -> CORIZQ CORDER .) ]
  ! RETURN          [ reduce using rule 152 (arreglo -> CORIZQ CORDER .) ]
  ! BREAK           [ reduce using rule 152 (arreglo -> CORIZQ CORDER .) ]
  ! CONTINUE        [ reduce using rule 152 (arreglo -> CORIZQ CORDER .) ]
  ! INTERFACE       [ reduce using rule 152 (arreglo -> CORIZQ CORDER .) ]
  ! DECREMENTO      [ reduce using rule 152 (arreglo -> CORIZQ CORDER .) ]
  ! INCREMENTO      [ reduce using rule 152 (arreglo -> CORIZQ CORDER .) ]
  ! $end            [ reduce using rule 152 (arreglo -> CORIZQ CORDER .) ]
  ! LLADER          [ reduce using rule 152 (arreglo -> CORIZQ CORDER .) ]


state 331

    (139) declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp . CORDER
    (151) arreglo -> CORIZQ lista_exp . CORDER
    (148) lista_exp -> lista_exp . COMA expresion

    CORDER          shift and go to state 338
    COMA            shift and go to state 209


state 332

    (135) declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ . lista_exp CORDER
    (136) declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ . CORDER
    (148) lista_exp -> . lista_exp COMA expresion
    (149) lista_exp -> . expresion
    (63) expresion -> . llamada_funcion
    (73) expresion -> . expresion MAS expresion
    (74) expresion -> . expresion MENOS expresion
    (75) expresion -> . expresion POR expresion
    (76) expresion -> . expresion DIVIDIDO expresion
    (77) expresion -> . expresion MODULO expresion
    (78) expresion -> . expresion POTENCIA expresion
    (79) expresion -> . MENOS expresion
    (80) expresion -> . expresion MAYOR expresion
    (81) expresion -> . expresion MENOR expresion
    (82) expresion -> . expresion MAYORIGUAL expresion
    (83) expresion -> . expresion MENORIGUAL expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DISTINTO expresion
    (86) expresion -> . expresion AND expresion
    (87) expresion -> . expresion OR expresion
    (88) expresion -> . NOT expresion
    (89) expresion -> . dec
    (90) expresion -> . inc
    (91) expresion -> . casteo
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . CADENA
    (96) expresion -> . NULL
    (97) expresion -> . booleano
    (98) expresion -> . ID
    (101) expresion -> . aproximacion
    (102) expresion -> . exponencial
    (103) expresion -> . separador
    (104) expresion -> . concatenacion
    (105) expresion -> . to_mayusculas
    (106) expresion -> . to_minusculas
    (129) expresion -> . expresion_interface
    (133) expresion -> . ID PUNTO ID
    (150) expresion -> . arreglo
    (153) expresion -> . acceso_array
    (155) expresion -> . acceso_array_interface
    (161) expresion -> . TYPEOF PARIZQ expresion PARDER
    (162) expresion -> . LENGTH PARIZQ expresion PARDER
    (64) llamada_funcion -> . ID PARIZQ lista_argumentos PARDER
    (65) llamada_funcion -> . ID PARIZQ PARDER
    (34) dec -> . ID DECREMENTO
    (35) dec -> . DECREMENTO ID
    (36) inc -> . ID INCREMENTO
    (37) inc -> . INCREMENTO ID
    (114) casteo -> . ID PUNTO TOSTRING PARIZQ PARDER
    (115) casteo -> . CAST_STRING PARIZQ expresion PARDER
    (116) casteo -> . CAST_NUMBER PARIZQ expresion PARDER
    (99) booleano -> . TRUE
    (100) booleano -> . FALSE
    (107) aproximacion -> . TOFIXED PARIZQ expresion COMA expresion PARDER
    (108) exponencial -> . TOEXPONENTIAL PARIZQ expresion COMA expresion PARDER
    (111) separador -> . SPLIT PARIZQ expresion COMA expresion PARDER
    (112) concatenacion -> . CONCAT PARIZQ expresion COMA expresion PARDER
    (109) to_mayusculas -> . TOUPPERCASE PARIZQ expresion PARDER
    (110) to_minusculas -> . TOLOWERCASE PARIZQ expresion PARDER
    (128) expresion_interface -> . LLAIZQ lista_d LLADER
    (151) arreglo -> . CORIZQ lista_exp CORDER
    (152) arreglo -> . CORIZQ CORDER
    (154) acceso_array -> . ID lista_acceso_array
    (156) acceso_array_interface -> . ID lista_acceso_array PUNTO ID

    CORDER          shift and go to state 340
    MENOS           shift and go to state 55
    NOT             shift and go to state 56
    PARIZQ          shift and go to state 60
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 66
    TYPEOF          shift and go to state 77
    LENGTH          shift and go to state 78
    DECREMENTO      shift and go to state 35
    INCREMENTO      shift and go to state 36
    CAST_STRING     shift and go to state 79
    CAST_NUMBER     shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    TOFIXED         shift and go to state 83
    TOEXPONENTIAL   shift and go to state 84
    SPLIT           shift and go to state 85
    CONCAT          shift and go to state 86
    TOUPPERCASE     shift and go to state 87
    TOLOWERCASE     shift and go to state 88
    LLAIZQ          shift and go to state 89
    CORIZQ          shift and go to state 90

    lista_exp                      shift and go to state 339
    expresion                      shift and go to state 147
    llamada_funcion                shift and go to state 54
    dec                            shift and go to state 57
    inc                            shift and go to state 58
    casteo                         shift and go to state 59
    booleano                       shift and go to state 65
    aproximacion                   shift and go to state 67
    exponencial                    shift and go to state 68
    separador                      shift and go to state 69
    concatenacion                  shift and go to state 70
    to_mayusculas                  shift and go to state 71
    to_minusculas                  shift and go to state 72
    expresion_interface            shift and go to state 73
    arreglo                        shift and go to state 74
    acceso_array                   shift and go to state 75
    acceso_array_interface         shift and go to state 76

state 333

    (46) elseif -> ELSE IF PARIZQ expresion . PARDER bloque
    (73) expresion -> expresion . MAS expresion
    (74) expresion -> expresion . MENOS expresion
    (75) expresion -> expresion . POR expresion
    (76) expresion -> expresion . DIVIDIDO expresion
    (77) expresion -> expresion . MODULO expresion
    (78) expresion -> expresion . POTENCIA expresion
    (80) expresion -> expresion . MAYOR expresion
    (81) expresion -> expresion . MENOR expresion
    (82) expresion -> expresion . MAYORIGUAL expresion
    (83) expresion -> expresion . MENORIGUAL expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DISTINTO expresion
    (86) expresion -> expresion . AND expresion
    (87) expresion -> expresion . OR expresion

    PARDER          shift and go to state 341
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POR             shift and go to state 115
    DIVIDIDO        shift and go to state 116
    MODULO          shift and go to state 117
    POTENCIA        shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYORIGUAL      shift and go to state 121
    MENORIGUAL      shift and go to state 122
    IGUALACION      shift and go to state 123
    DISTINTO        shift and go to state 124
    AND             shift and go to state 125
    OR              shift and go to state 126


state 334

    (48) ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .

    PTOYCOMA        reduce using rule 48 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    FUNCTION        reduce using rule 48 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    ID              reduce using rule 48 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    LET             reduce using rule 48 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    CONSOLE         reduce using rule 48 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    IF              reduce using rule 48 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    WHILE           reduce using rule 48 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    FOR             reduce using rule 48 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    RETURN          reduce using rule 48 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    BREAK           reduce using rule 48 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    CONTINUE        reduce using rule 48 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    INTERFACE       reduce using rule 48 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    DECREMENTO      reduce using rule 48 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    INCREMENTO      reduce using rule 48 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    $end            reduce using rule 48 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    LLADER          reduce using rule 48 (ciclo_for -> FOR PARIZQ declaracion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)


state 335

    (49) ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .

    PTOYCOMA        reduce using rule 49 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    FUNCTION        reduce using rule 49 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    ID              reduce using rule 49 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    LET             reduce using rule 49 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    CONSOLE         reduce using rule 49 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    IF              reduce using rule 49 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    WHILE           reduce using rule 49 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    FOR             reduce using rule 49 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    RETURN          reduce using rule 49 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    BREAK           reduce using rule 49 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    CONTINUE        reduce using rule 49 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    INTERFACE       reduce using rule 49 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    DECREMENTO      reduce using rule 49 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    INCREMENTO      reduce using rule 49 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    $end            reduce using rule 49 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)
    LLADER          reduce using rule 49 (ciclo_for -> FOR PARIZQ asignacion PTOYCOMA expresion PTOYCOMA asignacion PARDER bloque .)


state 336

    (57) funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo CORIZQ CORDER bloque .

    FUNCTION        reduce using rule 57 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo CORIZQ CORDER bloque .)
    ID              reduce using rule 57 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo CORIZQ CORDER bloque .)
    LET             reduce using rule 57 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo CORIZQ CORDER bloque .)
    CONSOLE         reduce using rule 57 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo CORIZQ CORDER bloque .)
    IF              reduce using rule 57 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo CORIZQ CORDER bloque .)
    WHILE           reduce using rule 57 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo CORIZQ CORDER bloque .)
    FOR             reduce using rule 57 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo CORIZQ CORDER bloque .)
    RETURN          reduce using rule 57 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo CORIZQ CORDER bloque .)
    BREAK           reduce using rule 57 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo CORIZQ CORDER bloque .)
    CONTINUE        reduce using rule 57 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo CORIZQ CORDER bloque .)
    INTERFACE       reduce using rule 57 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo CORIZQ CORDER bloque .)
    DECREMENTO      reduce using rule 57 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo CORIZQ CORDER bloque .)
    INCREMENTO      reduce using rule 57 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo CORIZQ CORDER bloque .)
    $end            reduce using rule 57 (funcion -> FUNCTION ID PARIZQ lista_parametros PARDER DOSPUNTOS tipo CORIZQ CORDER bloque .)


state 337

    (147) declaracionArray -> LET ID DOSPUNTOS ID CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .

    PTOYCOMA        reduce using rule 147 (declaracionArray -> LET ID DOSPUNTOS ID CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    FUNCTION        reduce using rule 147 (declaracionArray -> LET ID DOSPUNTOS ID CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    ID              reduce using rule 147 (declaracionArray -> LET ID DOSPUNTOS ID CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    LET             reduce using rule 147 (declaracionArray -> LET ID DOSPUNTOS ID CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    CONSOLE         reduce using rule 147 (declaracionArray -> LET ID DOSPUNTOS ID CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    IF              reduce using rule 147 (declaracionArray -> LET ID DOSPUNTOS ID CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    WHILE           reduce using rule 147 (declaracionArray -> LET ID DOSPUNTOS ID CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    FOR             reduce using rule 147 (declaracionArray -> LET ID DOSPUNTOS ID CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    RETURN          reduce using rule 147 (declaracionArray -> LET ID DOSPUNTOS ID CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    BREAK           reduce using rule 147 (declaracionArray -> LET ID DOSPUNTOS ID CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    CONTINUE        reduce using rule 147 (declaracionArray -> LET ID DOSPUNTOS ID CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    INTERFACE       reduce using rule 147 (declaracionArray -> LET ID DOSPUNTOS ID CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    DECREMENTO      reduce using rule 147 (declaracionArray -> LET ID DOSPUNTOS ID CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    INCREMENTO      reduce using rule 147 (declaracionArray -> LET ID DOSPUNTOS ID CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    $end            reduce using rule 147 (declaracionArray -> LET ID DOSPUNTOS ID CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    LLADER          reduce using rule 147 (declaracionArray -> LET ID DOSPUNTOS ID CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)


state 338

    (139) declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .
    (151) arreglo -> CORIZQ lista_exp CORDER .

  ! reduce/reduce conflict for PTOYCOMA resolved using rule 139 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 139 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for ID resolved using rule 139 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for LET resolved using rule 139 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for CONSOLE resolved using rule 139 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for IF resolved using rule 139 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for WHILE resolved using rule 139 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for FOR resolved using rule 139 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for RETURN resolved using rule 139 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for BREAK resolved using rule 139 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 139 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for INTERFACE resolved using rule 139 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for DECREMENTO resolved using rule 139 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for INCREMENTO resolved using rule 139 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for $end resolved using rule 139 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
  ! reduce/reduce conflict for LLADER resolved using rule 139 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    PTOYCOMA        reduce using rule 139 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    FUNCTION        reduce using rule 139 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    ID              reduce using rule 139 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    LET             reduce using rule 139 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    CONSOLE         reduce using rule 139 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    IF              reduce using rule 139 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    WHILE           reduce using rule 139 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    FOR             reduce using rule 139 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    RETURN          reduce using rule 139 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    BREAK           reduce using rule 139 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    CONTINUE        reduce using rule 139 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    INTERFACE       reduce using rule 139 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    DECREMENTO      reduce using rule 139 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    INCREMENTO      reduce using rule 139 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    $end            reduce using rule 139 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    LLADER          reduce using rule 139 (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER .)
    MAS             reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    MENOS           reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    POR             reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    DIVIDIDO        reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    MODULO          reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    POTENCIA        reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    MAYOR           reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    MENOR           reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    MAYORIGUAL      reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    MENORIGUAL      reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    IGUALACION      reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    DISTINTO        reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    AND             reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)
    OR              reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .)

  ! PTOYCOMA        [ reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! FUNCTION        [ reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! ID              [ reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! LET             [ reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! CONSOLE         [ reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! IF              [ reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! WHILE           [ reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! FOR             [ reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! RETURN          [ reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! BREAK           [ reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! CONTINUE        [ reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! INTERFACE       [ reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! DECREMENTO      [ reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! INCREMENTO      [ reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! $end            [ reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .) ]
  ! LLADER          [ reduce using rule 151 (arreglo -> CORIZQ lista_exp CORDER .) ]


state 339

    (135) declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp . CORDER
    (148) lista_exp -> lista_exp . COMA expresion

    CORDER          shift and go to state 342
    COMA            shift and go to state 209


state 340

    (136) declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER .

    PTOYCOMA        reduce using rule 136 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER .)
    FUNCTION        reduce using rule 136 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER .)
    ID              reduce using rule 136 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER .)
    LET             reduce using rule 136 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER .)
    CONSOLE         reduce using rule 136 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER .)
    IF              reduce using rule 136 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER .)
    WHILE           reduce using rule 136 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER .)
    FOR             reduce using rule 136 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER .)
    RETURN          reduce using rule 136 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER .)
    BREAK           reduce using rule 136 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER .)
    CONTINUE        reduce using rule 136 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER .)
    INTERFACE       reduce using rule 136 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER .)
    DECREMENTO      reduce using rule 136 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER .)
    INCREMENTO      reduce using rule 136 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER .)
    $end            reduce using rule 136 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER .)
    LLADER          reduce using rule 136 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ CORDER .)


state 341

    (46) elseif -> ELSE IF PARIZQ expresion PARDER . bloque
    (9) bloque -> . LLAIZQ instruccion4 LLADER
    (10) bloque -> . LLAIZQ LLADER

    LLAIZQ          shift and go to state 218

    bloque                         shift and go to state 343

state 342

    (135) declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER .

    PTOYCOMA        reduce using rule 135 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER .)
    FUNCTION        reduce using rule 135 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER .)
    ID              reduce using rule 135 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER .)
    LET             reduce using rule 135 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER .)
    CONSOLE         reduce using rule 135 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER .)
    IF              reduce using rule 135 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER .)
    WHILE           reduce using rule 135 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER .)
    FOR             reduce using rule 135 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER .)
    RETURN          reduce using rule 135 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER .)
    BREAK           reduce using rule 135 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER .)
    CONTINUE        reduce using rule 135 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER .)
    INTERFACE       reduce using rule 135 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER .)
    DECREMENTO      reduce using rule 135 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER .)
    INCREMENTO      reduce using rule 135 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER .)
    $end            reduce using rule 135 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER .)
    LLADER          reduce using rule 135 (declaracionArray -> LET ID DOSPUNTOS ARRAY MENOR tipo MAYOR IGUAL CORIZQ lista_exp CORDER .)


state 343

    (46) elseif -> ELSE IF PARIZQ expresion PARDER bloque .

    ELSE            reduce using rule 46 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    PTOYCOMA        reduce using rule 46 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    FUNCTION        reduce using rule 46 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    ID              reduce using rule 46 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    LET             reduce using rule 46 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    CONSOLE         reduce using rule 46 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    IF              reduce using rule 46 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    WHILE           reduce using rule 46 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    FOR             reduce using rule 46 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    RETURN          reduce using rule 46 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    BREAK           reduce using rule 46 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    CONTINUE        reduce using rule 46 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    INTERFACE       reduce using rule 46 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    DECREMENTO      reduce using rule 46 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    INCREMENTO      reduce using rule 46 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    $end            reduce using rule 46 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)
    LLADER          reduce using rule 46 (elseif -> ELSE IF PARIZQ expresion PARDER bloque .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 31 resolved as shift
WARNING: shift/reduce conflict for DECREMENTO in state 31 resolved as shift
WARNING: shift/reduce conflict for INCREMENTO in state 31 resolved as shift
WARNING: shift/reduce conflict for DECREMENTO in state 66 resolved as shift
WARNING: shift/reduce conflict for INCREMENTO in state 66 resolved as shift
WARNING: shift/reduce conflict for PARDER in state 229 resolved as shift
WARNING: reduce/reduce conflict in state 222 resolved using rule (declaracionArray -> LET ID IGUAL CORIZQ CORDER)
WARNING: rejected rule (arreglo -> CORIZQ CORDER) in state 222
WARNING: reduce/reduce conflict in state 268 resolved using rule (declaracionArray -> LET ID IGUAL CORIZQ lista_exp CORDER)
WARNING: rejected rule (arreglo -> CORIZQ lista_exp CORDER) in state 268
WARNING: reduce/reduce conflict in state 330 resolved using rule (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ CORDER)
WARNING: rejected rule (arreglo -> CORIZQ CORDER) in state 330
WARNING: reduce/reduce conflict in state 338 resolved using rule (declaracionArray -> LET ID DOSPUNTOS tipo CORIZQ CORDER IGUAL CORIZQ lista_exp CORDER)
WARNING: rejected rule (arreglo -> CORIZQ lista_exp CORDER) in state 338
